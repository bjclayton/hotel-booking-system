2025-04-01 00:19:12.667 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-01 00:19:13.132 -04:00 [DBG] Hosting starting
2025-04-01 00:19:13.252 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-01 00:19:13.345 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-04-01 00:19:13.745 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-04-01 00:19:14.128 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-04-01 00:19:14.162 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-01 00:19:14.169 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-04-01 00:19:14.200 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-01 00:19:14.821 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-01 00:19:14.832 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-01 00:19:14.841 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-04-01 00:19:14.849 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-04-01 00:19:15.163 -04:00 [INF] Now listening on: http://localhost:5004
2025-04-01 00:19:15.169 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-04-01 00:19:15.170 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-04-01 00:19:15.172 -04:00 [INF] Hosting environment: Development
2025-04-01 00:19:15.181 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-04-01 00:19:15.184 -04:00 [DBG] Hosting started
2025-04-01 00:20:00.878 -04:00 [DBG] Connection id "0HNBGQHS3EORA" accepted.
2025-04-01 00:20:00.909 -04:00 [DBG] Connection id "0HNBGQHS3EORA" started.
2025-04-01 00:20:01.102 -04:00 [DBG] Connection id "0HNBGQHS3EORB" accepted.
2025-04-01 00:20:01.351 -04:00 [DBG] Connection id "0HNBGQHS3EORB" started.
2025-04-01 00:20:02.216 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-04-01 00:20:02.233 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-04-01 00:20:02.389 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-01 00:20:02.392 -04:00 [DBG] Request did not match any endpoints
2025-04-01 00:20:03.079 -04:00 [DBG] Connection id "0HNBGQHS3EORA" completed keep alive response.
2025-04-01 00:20:03.084 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 871.7804ms
2025-04-01 00:20:05.630 -04:00 [DBG] Connection id "0HNBGQHS3EORA" received FIN.
2025-04-01 00:20:05.633 -04:00 [DBG] Connection id "0HNBGQHS3EORB" received FIN.
2025-04-01 00:20:05.636 -04:00 [DBG] Connection id "0HNBGQHS3EORB" disconnecting.
2025-04-01 00:20:05.637 -04:00 [DBG] Connection id "0HNBGQHS3EORA" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-01 00:20:05.640 -04:00 [DBG] Connection id "0HNBGQHS3EORB" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-01 00:20:05.649 -04:00 [DBG] Connection id "0HNBGQHS3EORA" disconnecting.
2025-04-01 00:20:05.653 -04:00 [DBG] Connection id "0HNBGQHS3EORA" stopped.
2025-04-01 00:20:05.665 -04:00 [DBG] Connection id "0HNBGQHS3EORB" stopped.
2025-04-01 00:20:16.633 -04:00 [DBG] Connection id "0HNBGQHS3EORC" accepted.
2025-04-01 00:20:16.640 -04:00 [DBG] Connection id "0HNBGQHS3EORC" started.
2025-04-01 00:20:16.654 -04:00 [DBG] Connection id "0HNBGQHS3EORC" bad request data: "Detected a TLS handshake to an endpoint that does not have TLS enabled."
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Detected a TLS handshake to an endpoint that does not have TLS enabled.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.GetUnknownMethodLength(ReadOnlySpan`1 span)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, ReadOnlySpan`1 requestLine)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TakeStartLine(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.ParseRequest(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TryParseRequest(ReadResult result, Boolean& endConnection)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync[TContext](IHttpApplication`1 application)
2025-04-01 00:20:16.733 -04:00 [DBG] Connection id "0HNBGQHS3EORC" disconnecting.
2025-04-01 00:20:16.734 -04:00 [DBG] Connection id "0HNBGQHS3EORC" stopped.
2025-04-01 00:20:16.734 -04:00 [DBG] Connection id "0HNBGQHS3EORC" received FIN.
2025-04-01 00:20:16.735 -04:00 [DBG] Connection id "0HNBGQHS3EORD" accepted.
2025-04-01 00:20:16.735 -04:00 [DBG] Connection id "0HNBGQHS3EORC" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-01 00:20:16.744 -04:00 [DBG] Connection id "0HNBGQHS3EORD" started.
2025-04-01 00:20:16.750 -04:00 [DBG] Connection id "0HNBGQHS3EORD" bad request data: "Detected a TLS handshake to an endpoint that does not have TLS enabled."
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Detected a TLS handshake to an endpoint that does not have TLS enabled.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.GetUnknownMethodLength(ReadOnlySpan`1 span)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, ReadOnlySpan`1 requestLine)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TakeStartLine(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.ParseRequest(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TryParseRequest(ReadResult result, Boolean& endConnection)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync[TContext](IHttpApplication`1 application)
2025-04-01 00:20:16.760 -04:00 [DBG] Connection id "0HNBGQHS3EORD" disconnecting.
2025-04-01 00:20:16.764 -04:00 [DBG] Connection id "0HNBGQHS3EORD" stopped.
2025-04-01 00:20:16.766 -04:00 [DBG] Connection id "0HNBGQHS3EORD" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-01 00:20:16.766 -04:00 [DBG] Connection id "0HNBGQHS3EORD" received FIN.
2025-04-01 00:20:41.403 -04:00 [DBG] Connection id "0HNBGQHS3EORE" accepted.
2025-04-01 00:20:41.408 -04:00 [DBG] Connection id "0HNBGQHS3EORE" started.
2025-04-01 00:20:41.453 -04:00 [DBG] Connection id "0HNBGQHS3EORE" bad request data: "Detected a TLS handshake to an endpoint that does not have TLS enabled."
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Detected a TLS handshake to an endpoint that does not have TLS enabled.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.GetUnknownMethodLength(ReadOnlySpan`1 span)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, ReadOnlySpan`1 requestLine)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TakeStartLine(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.ParseRequest(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TryParseRequest(ReadResult result, Boolean& endConnection)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync[TContext](IHttpApplication`1 application)
2025-04-01 00:20:41.534 -04:00 [DBG] Connection id "0HNBGQHS3EORE" disconnecting.
2025-04-01 00:20:41.538 -04:00 [DBG] Connection id "0HNBGQHS3EORE" received FIN.
2025-04-01 00:20:41.538 -04:00 [DBG] Connection id "0HNBGQHS3EORF" accepted.
2025-04-01 00:20:41.549 -04:00 [DBG] Connection id "0HNBGQHS3EORE" stopped.
2025-04-01 00:20:41.551 -04:00 [DBG] Connection id "0HNBGQHS3EORF" started.
2025-04-01 00:20:41.552 -04:00 [DBG] Connection id "0HNBGQHS3EORE" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-01 00:20:41.555 -04:00 [DBG] Connection id "0HNBGQHS3EORF" bad request data: "Detected a TLS handshake to an endpoint that does not have TLS enabled."
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Detected a TLS handshake to an endpoint that does not have TLS enabled.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.GetUnknownMethodLength(ReadOnlySpan`1 span)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, ReadOnlySpan`1 requestLine)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TakeStartLine(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.ParseRequest(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TryParseRequest(ReadResult result, Boolean& endConnection)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync[TContext](IHttpApplication`1 application)
2025-04-01 00:20:41.565 -04:00 [DBG] Connection id "0HNBGQHS3EORF" disconnecting.
2025-04-01 00:20:41.566 -04:00 [DBG] Connection id "0HNBGQHS3EORF" stopped.
2025-04-01 00:20:41.566 -04:00 [DBG] Connection id "0HNBGQHS3EORF" received FIN.
2025-04-01 00:20:41.568 -04:00 [DBG] Connection id "0HNBGQHS3EORF" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-01 00:20:42.436 -04:00 [DBG] Connection id "0HNBGQHS3EORG" accepted.
2025-04-01 00:20:42.441 -04:00 [DBG] Connection id "0HNBGQHS3EORG" started.
2025-04-01 00:20:42.447 -04:00 [DBG] Connection id "0HNBGQHS3EORG" bad request data: "Detected a TLS handshake to an endpoint that does not have TLS enabled."
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Detected a TLS handshake to an endpoint that does not have TLS enabled.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.GetUnknownMethodLength(ReadOnlySpan`1 span)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, ReadOnlySpan`1 requestLine)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TakeStartLine(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.ParseRequest(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TryParseRequest(ReadResult result, Boolean& endConnection)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync[TContext](IHttpApplication`1 application)
2025-04-01 00:20:42.455 -04:00 [DBG] Connection id "0HNBGQHS3EORG" disconnecting.
2025-04-01 00:20:42.457 -04:00 [DBG] Connection id "0HNBGQHS3EORG" stopped.
2025-04-01 00:20:42.462 -04:00 [DBG] Connection id "0HNBGQHS3EORH" accepted.
2025-04-01 00:20:42.465 -04:00 [DBG] Connection id "0HNBGQHS3EORG" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-01 00:20:42.466 -04:00 [DBG] Connection id "0HNBGQHS3EORH" started.
2025-04-01 00:20:42.470 -04:00 [DBG] Connection id "0HNBGQHS3EORH" bad request data: "Detected a TLS handshake to an endpoint that does not have TLS enabled."
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Detected a TLS handshake to an endpoint that does not have TLS enabled.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.GetUnknownMethodLength(ReadOnlySpan`1 span)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, ReadOnlySpan`1 requestLine)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TakeStartLine(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.ParseRequest(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TryParseRequest(ReadResult result, Boolean& endConnection)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync[TContext](IHttpApplication`1 application)
2025-04-01 00:20:42.481 -04:00 [DBG] Connection id "0HNBGQHS3EORH" disconnecting.
2025-04-01 00:20:42.483 -04:00 [DBG] Connection id "0HNBGQHS3EORH" stopped.
2025-04-01 00:20:42.485 -04:00 [DBG] Connection id "0HNBGQHS3EORH" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-01 00:20:42.482 -04:00 [DBG] Connection id "0HNBGQHS3EORH" received FIN.
2025-04-01 00:20:43.406 -04:00 [DBG] Connection id "0HNBGQHS3EORI" accepted.
2025-04-01 00:20:43.410 -04:00 [DBG] Connection id "0HNBGQHS3EORI" started.
2025-04-01 00:20:43.412 -04:00 [DBG] Connection id "0HNBGQHS3EORI" bad request data: "Detected a TLS handshake to an endpoint that does not have TLS enabled."
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Detected a TLS handshake to an endpoint that does not have TLS enabled.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.GetUnknownMethodLength(ReadOnlySpan`1 span)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, ReadOnlySpan`1 requestLine)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TakeStartLine(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.ParseRequest(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TryParseRequest(ReadResult result, Boolean& endConnection)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync[TContext](IHttpApplication`1 application)
2025-04-01 00:20:43.418 -04:00 [DBG] Connection id "0HNBGQHS3EORI" disconnecting.
2025-04-01 00:20:43.420 -04:00 [DBG] Connection id "0HNBGQHS3EORI" stopped.
2025-04-01 00:20:43.420 -04:00 [DBG] Connection id "0HNBGQHS3EORI" received FIN.
2025-04-01 00:20:43.421 -04:00 [DBG] Connection id "0HNBGQHS3EORJ" accepted.
2025-04-01 00:20:43.422 -04:00 [DBG] Connection id "0HNBGQHS3EORI" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-01 00:20:43.424 -04:00 [DBG] Connection id "0HNBGQHS3EORJ" started.
2025-04-01 00:20:43.430 -04:00 [DBG] Connection id "0HNBGQHS3EORJ" bad request data: "Detected a TLS handshake to an endpoint that does not have TLS enabled."
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Detected a TLS handshake to an endpoint that does not have TLS enabled.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.GetUnknownMethodLength(ReadOnlySpan`1 span)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, ReadOnlySpan`1 requestLine)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TakeStartLine(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.ParseRequest(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TryParseRequest(ReadResult result, Boolean& endConnection)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync[TContext](IHttpApplication`1 application)
2025-04-01 00:20:43.436 -04:00 [DBG] Connection id "0HNBGQHS3EORJ" disconnecting.
2025-04-01 00:20:43.438 -04:00 [DBG] Connection id "0HNBGQHS3EORJ" stopped.
2025-04-01 00:20:43.439 -04:00 [DBG] Connection id "0HNBGQHS3EORJ" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-01 00:21:25.815 -04:00 [DBG] Connection id "0HNBGQHS3EORK" accepted.
2025-04-01 00:21:25.817 -04:00 [DBG] Connection id "0HNBGQHS3EORK" started.
2025-04-01 00:21:25.820 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 62
2025-04-01 00:21:25.848 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-04-01 00:21:25.854 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-04-01 00:21:25.876 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-01 00:21:25.902 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-01 00:21:25.910 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-01 00:21:25.935 -04:00 [INF] CORS policy execution failed.
2025-04-01 00:21:25.937 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-01 00:21:25.954 -04:00 [WRN] Failed to determine the https port for redirect.
2025-04-01 00:21:26.036 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-04-01 00:21:26.043 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-01 00:21:26.134 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-04-01 00:21:26.139 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-01 00:21:26.142 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-01 00:21:26.146 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-01 00:21:26.150 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-01 00:21:26.152 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-01 00:21:26.156 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-01 00:21:27.087 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-01 00:21:27.153 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-01 00:21:27.160 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-01 00:21:27.166 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-04-01 00:21:27.171 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-01 00:21:27.221 -04:00 [DBG] Connection id "0HNBGQHS3EORK", Request id "0HNBGQHS3EORK:00000001": started reading request body.
2025-04-01 00:21:27.223 -04:00 [DBG] Connection id "0HNBGQHS3EORK", Request id "0HNBGQHS3EORK:00000001": done reading request body.
2025-04-01 00:21:27.242 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-04-01 00:21:27.244 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-01 00:21:27.248 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-01 00:21:27.251 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-01 00:21:27.265 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-01 00:21:27.618 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-01 00:21:27.682 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-01 00:21:27.929 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-01 00:21:28.014 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-01 00:21:28.105 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-01 00:21:28.109 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-01 00:21:28.125 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-01 00:21:28.219 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-04-01 00:21:28.222 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-04-01 00:21:28.224 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-04-01 00:21:28.227 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-04-01 00:21:28.233 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-04-01 00:21:28.418 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-01 00:21:28.420 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-01 00:21:28.422 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-01 00:21:28.587 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-01 00:21:28.725 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-04-01 00:21:28.821 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-04-01 00:21:29.387 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-01 00:21:29.621 -04:00 [DBG] Creating DbConnection.
2025-04-01 00:21:29.708 -04:00 [DBG] Created DbConnection. (71ms).
2025-04-01 00:21:29.716 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:21:30.134 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:21:30.140 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-01 00:21:30.156 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (8ms).
2025-04-01 00:21:30.171 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (30ms).
2025-04-01 00:21:30.187 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-01 00:21:30.334 -04:00 [INF] Executed DbCommand (153ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-01 00:21:30.427 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-01 00:21:30.523 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-01 00:21:30.565 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:21:30.582 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 234ms reading results.
2025-04-01 00:21:30.592 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:21:30.603 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (11ms).
2025-04-01 00:21:30.749 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-04-01 00:21:30.769 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-01 00:21:30.777 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:21:30.782 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:21:30.785 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-01 00:21:30.786 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-01 00:21:30.789 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-01 00:21:30.791 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-01 00:21:30.801 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-01 00:21:30.809 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:21:30.819 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 13ms reading results.
2025-04-01 00:21:30.822 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:21:30.825 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-01 00:21:30.854 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-04-01 00:21:30.887 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-01 00:21:30.892 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:21:30.898 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:21:30.903 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-01 00:21:30.904 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-01 00:21:30.906 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-01 00:21:30.908 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-01 00:21:30.922 -04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-01 00:21:30.927 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:21:30.933 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-04-01 00:21:30.936 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:21:30.939 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-01 00:21:30.957 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:21:30.960 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:21:30.964 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-01 00:21:30.965 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-01 00:21:30.967 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-01 00:21:30.970 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-01 00:21:30.974 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-01 00:21:30.981 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:21:30.983 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-01 00:21:30.986 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:21:30.988 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-01 00:21:31.044 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-01 00:21:31.050 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-01 00:21:31.052 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-01 00:21:31.053 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-01 00:21:31.055 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-01 00:21:31.058 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType7`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-01 00:21:31.144 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 4985.1224ms
2025-04-01 00:21:31.151 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-01 00:21:31.155 -04:00 [DBG] Connection id "0HNBGQHS3EORK" completed keep alive response.
2025-04-01 00:21:31.185 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-01 00:21:31.193 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:21:31.712 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (518ms).
2025-04-01 00:21:31.804 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 5965.3016ms
2025-04-01 00:22:34.975 -04:00 [DBG] Connection id "0HNBGQHS3EORL" accepted.
2025-04-01 00:22:35.075 -04:00 [DBG] Connection id "0HNBGQHS3EORL" started.
2025-04-01 00:22:35.102 -04:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - null null
2025-04-01 00:22:35.147 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-04-01 00:22:35.190 -04:00 [DBG] Request matched endpoint '405 HTTP Method Not Supported'
2025-04-01 00:22:35.204 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-01 00:22:35.208 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-04-01 00:22:35.221 -04:00 [INF] CORS policy execution successful.
2025-04-01 00:22:35.222 -04:00 [DBG] The request is a preflight request.
2025-04-01 00:22:35.226 -04:00 [DBG] Connection id "0HNBGQHS3EORL" completed keep alive response.
2025-04-01 00:22:35.228 -04:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - 204 null null 126.1749ms
2025-04-01 00:22:35.236 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 53
2025-04-01 00:22:35.240 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-04-01 00:22:35.245 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-04-01 00:22:35.258 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-01 00:22:35.260 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-01 00:22:35.262 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-04-01 00:22:35.278 -04:00 [INF] CORS policy execution successful.
2025-04-01 00:22:35.282 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-04-01 00:22:35.284 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-01 00:22:35.287 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-04-01 00:22:35.296 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-01 00:22:35.306 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-01 00:22:35.313 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-01 00:22:35.321 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-01 00:22:35.327 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-01 00:22:35.341 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-01 00:22:35.381 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-01 00:22:35.387 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-01 00:22:35.404 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-04-01 00:22:35.410 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-01 00:22:35.422 -04:00 [DBG] Connection id "0HNBGQHS3EORL", Request id "0HNBGQHS3EORL:00000002": started reading request body.
2025-04-01 00:22:35.425 -04:00 [DBG] Connection id "0HNBGQHS3EORL", Request id "0HNBGQHS3EORL:00000002": done reading request body.
2025-04-01 00:22:35.486 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-04-01 00:22:35.488 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-01 00:22:35.497 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-01 00:22:35.504 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-01 00:22:35.507 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-01 00:22:35.656 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-01 00:22:35.663 -04:00 [DBG] Creating DbConnection.
2025-04-01 00:22:35.665 -04:00 [DBG] Created DbConnection. (1ms).
2025-04-01 00:22:35.667 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:22:35.670 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:22:35.673 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-01 00:22:35.675 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-01 00:22:35.677 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-01 00:22:35.680 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-01 00:22:35.690 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-01 00:22:35.704 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-01 00:22:35.708 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-01 00:22:35.711 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:22:35.716 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 15ms reading results.
2025-04-01 00:22:35.720 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:22:35.722 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-01 00:22:35.902 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:22:35.904 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:22:35.906 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-01 00:22:35.908 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-01 00:22:35.911 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-01 00:22:35.913 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-01 00:22:35.920 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-01 00:22:35.924 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:22:35.927 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-01 00:22:35.930 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:22:35.933 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-01 00:22:35.937 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:22:35.941 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:22:35.944 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-01 00:22:35.946 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-01 00:22:35.949 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-01 00:22:35.952 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-01 00:22:35.957 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-01 00:22:35.964 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:22:35.968 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-04-01 00:22:35.971 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:22:35.974 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-01 00:22:35.979 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:22:35.984 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:22:35.987 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-01 00:22:35.988 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-01 00:22:35.991 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-01 00:22:35.993 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-01 00:22:36.003 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-01 00:22:36.009 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:22:36.012 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-01 00:22:36.021 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:22:36.026 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-04-01 00:22:36.037 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-01 00:22:36.043 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-01 00:22:36.044 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-01 00:22:36.046 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-01 00:22:36.051 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-01 00:22:36.053 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType7`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-01 00:22:36.056 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 715.5858ms
2025-04-01 00:22:36.062 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-01 00:22:36.064 -04:00 [DBG] Connection id "0HNBGQHS3EORL" completed keep alive response.
2025-04-01 00:22:36.070 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-01 00:22:36.074 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-01 00:22:36.120 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (46ms).
2025-04-01 00:22:36.146 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 909.1881ms
2025-04-01 00:23:42.163 -04:00 [DBG] Connection id "0HNBGQHS3EORK" disconnecting.
2025-04-01 00:23:42.166 -04:00 [DBG] Connection id "0HNBGQHS3EORK" stopped.
2025-04-01 00:23:42.168 -04:00 [DBG] Connection id "0HNBGQHS3EORK" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-01 00:24:20.960 -04:00 [DBG] Connection id "0HNBGQHS3EORL" received FIN.
2025-04-01 00:24:20.963 -04:00 [DBG] Connection id "0HNBGQHS3EORL" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-01 00:24:20.966 -04:00 [DBG] Connection id "0HNBGQHS3EORL" disconnecting.
2025-04-01 00:24:20.971 -04:00 [DBG] Connection id "0HNBGQHS3EORL" stopped.
2025-04-01 01:25:19.283 -04:00 [DBG] Connection id "0HNBGQHS3EORM" accepted.
2025-04-01 01:25:19.308 -04:00 [DBG] Connection id "0HNBGQHS3EORM" started.
2025-04-01 01:25:19.313 -04:00 [DBG] Connection id "0HNBGQHS3EORN" accepted.
2025-04-01 01:25:19.317 -04:00 [DBG] Connection id "0HNBGQHS3EORN" started.
2025-04-01 01:25:19.344 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-04-01 01:25:19.363 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-04-01 01:25:19.370 -04:00 [DBG] Request did not match any endpoints
2025-04-01 01:25:19.712 -04:00 [DBG] Connection id "0HNBGQHS3EORM" completed keep alive response.
2025-04-01 01:25:19.716 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 375.563ms
2025-04-01 01:25:19.778 -04:00 [DBG] Connection id "0HNBGQHS3EORO" accepted.
2025-04-01 01:25:19.781 -04:00 [DBG] Connection id "0HNBGQHS3EORO" started.
2025-04-01 01:25:19.778 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui.css - null null
2025-04-01 01:25:19.788 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui-bundle.js - null null
2025-04-01 01:25:19.797 -04:00 [DBG] No candidates found for the request path '/swagger/swagger-ui-bundle.js'
2025-04-01 01:25:19.798 -04:00 [DBG] Request did not match any endpoints
2025-04-01 01:25:19.794 -04:00 [DBG] No candidates found for the request path '/swagger/swagger-ui.css'
2025-04-01 01:25:19.789 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.css - null null
2025-04-01 01:25:19.792 -04:00 [DBG] Connection id "0HNBGQHS3EORP" accepted.
2025-04-01 01:25:19.806 -04:00 [DBG] Request did not match any endpoints
2025-04-01 01:25:19.814 -04:00 [DBG] No candidates found for the request path '/swagger/index.css'
2025-04-01 01:25:19.819 -04:00 [DBG] Connection id "0HNBGQHS3EORQ" accepted.
2025-04-01 01:25:19.819 -04:00 [DBG] Connection id "0HNBGQHS3EORP" started.
2025-04-01 01:25:19.823 -04:00 [DBG] Request did not match any endpoints
2025-04-01 01:25:19.826 -04:00 [DBG] Connection id "0HNBGQHS3EORQ" started.
2025-04-01 01:25:19.826 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui-standalone-preset.js - null null
2025-04-01 01:25:19.838 -04:00 [DBG] No candidates found for the request path '/swagger/swagger-ui-standalone-preset.js'
2025-04-01 01:25:19.841 -04:00 [DBG] Request did not match any endpoints
2025-04-01 01:25:19.830 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-04-01 01:25:19.859 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-04-01 01:25:19.864 -04:00 [DBG] Request did not match any endpoints
2025-04-01 01:25:19.881 -04:00 [INF] The file /index.css was not modified
2025-04-01 01:25:19.883 -04:00 [INF] The file /swagger-ui.css was not modified
2025-04-01 01:25:19.939 -04:00 [DBG] Handled. Status code: 304 File: /swagger-ui.css
2025-04-01 01:25:19.883 -04:00 [INF] The file /swagger-ui-bundle.js was not modified
2025-04-01 01:25:19.898 -04:00 [DBG] Connection id "0HNBGQHS3EORQ" completed keep alive response.
2025-04-01 01:25:19.938 -04:00 [DBG] Handled. Status code: 304 File: /index.css
2025-04-01 01:25:19.883 -04:00 [INF] The file /swagger-ui-standalone-preset.js was not modified
2025-04-01 01:25:19.951 -04:00 [DBG] Handled. Status code: 304 File: /swagger-ui-standalone-preset.js
2025-04-01 01:25:19.944 -04:00 [DBG] Connection id "0HNBGQHS3EORM" completed keep alive response.
2025-04-01 01:25:19.945 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 114.7238ms
2025-04-01 01:25:19.948 -04:00 [DBG] Connection id "0HNBGQHS3EORN" completed keep alive response.
2025-04-01 01:25:19.943 -04:00 [DBG] Handled. Status code: 304 File: /swagger-ui-bundle.js
2025-04-01 01:25:19.957 -04:00 [DBG] Connection id "0HNBGQHS3EORP" completed keep alive response.
2025-04-01 01:25:19.958 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui.css - 304 null text/css 179.2224ms
2025-04-01 01:25:20.000 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.css - 304 null text/css 210.1095ms
2025-04-01 01:25:20.003 -04:00 [DBG] Connection id "0HNBGQHS3EORO" completed keep alive response.
2025-04-01 01:25:20.004 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui-standalone-preset.js - 304 null text/javascript 177.7251ms
2025-04-01 01:25:20.023 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui-bundle.js - 304 null text/javascript 235.0979ms
2025-04-01 01:25:20.513 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-04-01 01:25:20.534 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/favicon-32x32.png - null null
2025-04-01 01:25:20.758 -04:00 [DBG] No candidates found for the request path '/swagger/favicon-32x32.png'
2025-04-01 01:25:20.760 -04:00 [DBG] Request did not match any endpoints
2025-04-01 01:25:20.756 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-01 01:25:20.762 -04:00 [INF] The file /favicon-32x32.png was not modified
2025-04-01 01:25:20.764 -04:00 [DBG] Handled. Status code: 304 File: /favicon-32x32.png
2025-04-01 01:25:20.767 -04:00 [DBG] Connection id "0HNBGQHS3EORO" completed keep alive response.
2025-04-01 01:25:20.773 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/favicon-32x32.png - 304 null image/png 238.7478ms
2025-04-01 01:25:20.763 -04:00 [DBG] Request did not match any endpoints
2025-04-01 01:25:21.020 -04:00 [DBG] Connection id "0HNBGQHS3EORN" completed keep alive response.
2025-04-01 01:25:21.022 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 509.7618ms
2025-04-01 01:25:27.087 -04:00 [DBG] Connection id "0HNBGQHS3EORQ" received FIN.
2025-04-01 01:25:27.087 -04:00 [DBG] Connection id "0HNBGQHS3EORP" received FIN.
2025-04-01 01:25:27.087 -04:00 [DBG] Connection id "0HNBGQHS3EORM" received FIN.
2025-04-01 01:25:27.087 -04:00 [DBG] Connection id "0HNBGQHS3EORO" received FIN.
2025-04-01 01:25:27.087 -04:00 [DBG] Connection id "0HNBGQHS3EORN" received FIN.
2025-04-01 01:25:27.091 -04:00 [DBG] Connection id "0HNBGQHS3EORP" disconnecting.
2025-04-01 01:25:27.092 -04:00 [DBG] Connection id "0HNBGQHS3EORQ" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-01 01:25:27.092 -04:00 [DBG] Connection id "0HNBGQHS3EORM" disconnecting.
2025-04-01 01:25:27.095 -04:00 [DBG] Connection id "0HNBGQHS3EORO" disconnecting.
2025-04-01 01:25:27.097 -04:00 [DBG] Connection id "0HNBGQHS3EORP" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-01 01:25:27.105 -04:00 [DBG] Connection id "0HNBGQHS3EORQ" disconnecting.
2025-04-01 01:25:27.109 -04:00 [DBG] Connection id "0HNBGQHS3EORM" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-01 01:25:27.110 -04:00 [DBG] Connection id "0HNBGQHS3EORO" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-01 01:25:27.113 -04:00 [DBG] Connection id "0HNBGQHS3EORN" disconnecting.
2025-04-01 01:25:27.115 -04:00 [DBG] Connection id "0HNBGQHS3EORP" stopped.
2025-04-01 01:25:27.118 -04:00 [DBG] Connection id "0HNBGQHS3EORQ" stopped.
2025-04-01 01:25:27.124 -04:00 [DBG] Connection id "0HNBGQHS3EORN" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-01 01:25:27.125 -04:00 [DBG] Connection id "0HNBGQHS3EORO" stopped.
2025-04-01 01:25:27.125 -04:00 [DBG] Connection id "0HNBGQHS3EORM" stopped.
2025-04-01 01:25:27.129 -04:00 [DBG] Connection id "0HNBGQHS3EORN" stopped.
2025-04-02 07:45:19.844 -04:00 [WRN] As of ""2025-04-02T11:45:14.5429138+00:00"", the heartbeat has been running for ""00:00:02.0007702"" which is longer than ""00:00:01"". This could be caused by thread pool starvation.
2025-04-02 08:27:56.667 -04:00 [WRN] As of ""2025-04-02T12:27:51.4088832+00:00"", the heartbeat has been running for ""00:25:40.3305939"" which is longer than ""00:00:01"". This could be caused by thread pool starvation.
2025-04-02 12:42:32.644 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 12:42:33.992 -04:00 [DBG] Hosting starting
2025-04-02 12:42:34.077 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 12:42:34.107 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-04-02 12:42:34.229 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-04-02 12:42:34.275 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-04-02 12:42:34.289 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 12:42:34.295 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-04-02 12:42:34.308 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 12:42:34.358 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 12:42:34.372 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 12:42:34.389 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-04-02 12:42:34.392 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-04-02 12:42:34.679 -04:00 [INF] Now listening on: http://localhost:5004
2025-04-02 12:42:34.685 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-04-02 12:42:34.687 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-04-02 12:42:34.689 -04:00 [INF] Hosting environment: Development
2025-04-02 12:42:34.690 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-04-02 12:42:34.692 -04:00 [DBG] Hosting started
2025-04-02 12:43:16.661 -04:00 [DBG] Connection id "0HNBI0LRSJMCV" accepted.
2025-04-02 12:43:16.667 -04:00 [DBG] Connection id "0HNBI0LRSJMCV" started.
2025-04-02 12:43:16.670 -04:00 [DBG] Connection id "0HNBI0LRSJMD0" accepted.
2025-04-02 12:43:16.674 -04:00 [DBG] Connection id "0HNBI0LRSJMD0" started.
2025-04-02 12:43:16.740 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-04-02 12:43:16.747 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-04-02 12:43:16.811 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-04-02 12:43:16.814 -04:00 [DBG] Request did not match any endpoints
2025-04-02 12:43:16.961 -04:00 [DBG] Connection id "0HNBI0LRSJMCV" completed keep alive response.
2025-04-02 12:43:16.967 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 226.4745ms
2025-04-02 12:43:17.047 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-04-02 12:43:17.060 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-04-02 12:43:17.062 -04:00 [DBG] Request did not match any endpoints
2025-04-02 12:43:17.076 -04:00 [DBG] Connection id "0HNBI0LRSJMCV" completed keep alive response.
2025-04-02 12:43:17.088 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 31.5158ms
2025-04-02 12:43:17.178 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-04-02 12:43:17.182 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 12:43:17.186 -04:00 [DBG] Request did not match any endpoints
2025-04-02 12:43:17.569 -04:00 [DBG] Connection id "0HNBI0LRSJMCV" completed keep alive response.
2025-04-02 12:43:17.593 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 415.5358ms
2025-04-02 12:44:17.836 -04:00 [DBG] Connection id "0HNBI0LRSJMD0" received FIN.
2025-04-02 12:44:17.837 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/register - application/json 138
2025-04-02 12:44:17.848 -04:00 [DBG] Connection id "0HNBI0LRSJMD0" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-02 12:44:17.859 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/register'
2025-04-02 12:44:17.867 -04:00 [DBG] Connection id "0HNBI0LRSJMD0" disconnecting.
2025-04-02 12:44:17.877 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/register' is valid for the request path '/api/auth/register'
2025-04-02 12:44:17.883 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-02 12:44:17.883 -04:00 [DBG] Connection id "0HNBI0LRSJMD0" stopped.
2025-04-02 12:44:17.898 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 12:44:17.903 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-02 12:44:17.911 -04:00 [INF] CORS policy execution failed.
2025-04-02 12:44:17.913 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-02 12:44:17.917 -04:00 [WRN] Failed to determine the https port for redirect.
2025-04-02 12:44:17.981 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-04-02 12:44:17.988 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-02 12:44:18.023 -04:00 [INF] Route matched with {action = "Register", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RegisterAsync(HotelBookingPlatform.Domain.Helpers.RegisterModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-04-02 12:44:18.029 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 12:44:18.032 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-02 12:44:18.043 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 12:44:18.055 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-02 12:44:18.058 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 12:44:18.069 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-02 12:44:18.799 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 12:44:18.861 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-02 12:44:18.873 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-04-02 12:44:18.876 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' using the name '' in request data ...
2025-04-02 12:44:18.881 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 12:44:18.914 -04:00 [DBG] Connection id "0HNBI0LRSJMCV", Request id "0HNBI0LRSJMCV:00000004": started reading request body.
2025-04-02 12:44:18.916 -04:00 [DBG] Connection id "0HNBI0LRSJMCV", Request id "0HNBI0LRSJMCV:00000004": done reading request body.
2025-04-02 12:44:18.934 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'
2025-04-02 12:44:18.939 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-02 12:44:18.942 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-02 12:44:18.944 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-04-02 12:44:18.957 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-02 12:44:19.290 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-02 12:44:19.347 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-02 12:44:19.499 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-02 12:44:19.546 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-02 12:44:19.612 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-02 12:44:19.616 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-02 12:44:19.630 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-02 12:44:19.739 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-04-02 12:44:19.742 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-04-02 12:44:19.744 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-04-02 12:44:19.748 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-04-02 12:44:19.751 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-04-02 12:44:19.923 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-02 12:44:19.925 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-02 12:44:19.927 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-02 12:44:20.156 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-02 12:44:20.251 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-04-02 12:44:20.332 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-04-02 12:44:20.802 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 12:44:20.931 -04:00 [DBG] Creating DbConnection.
2025-04-02 12:44:20.982 -04:00 [DBG] Created DbConnection. (49ms).
2025-04-02 12:44:20.992 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:21.333 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:21.343 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:44:21.355 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-04-02 12:44:21.363 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (20ms).
2025-04-02 12:44:21.375 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 12:44:21.467 -04:00 [INF] Executed DbCommand (97ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 12:44:21.479 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:21.493 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 14ms reading results.
2025-04-02 12:44:21.500 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:21.510 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-04-02 12:44:21.633 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-04-02 12:44:21.639 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-04-02 12:44:21.671 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 12:44:21.701 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:21.706 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:21.709 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:44:21.712 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-02 12:44:21.714 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-02 12:44:21.717 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 12:44:21.733 -04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 12:44:21.745 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:21.747 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-02 12:44:21.750 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:21.756 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-04-02 12:44:21.981 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:44:21.999 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-02 12:44:22.017 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-02 12:44:22.077 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-02 12:44:22.272 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:22.326 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:22.356 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:44:22.358 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-02 12:44:22.361 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-02 12:44:22.365 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-04-02 12:44:22.447 -04:00 [INF] Executed DbCommand (82ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-04-02 12:44:22.504 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:22.508 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 17ms reading results.
2025-04-02 12:44:22.513 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:22.522 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-04-02 12:44:22.558 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:44:22.584 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-04-02 12:44:22.626 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-04-02 12:44:22.650 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 12:44:22.717 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:22.731 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:22.772 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:44:22.850 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (78ms).
2025-04-02 12:44:22.871 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (99ms).
2025-04-02 12:44:22.879 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-04-02 12:44:22.910 -04:00 [INF] Executed DbCommand (31ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-04-02 12:44:22.949 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:44:22.981 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:22.990 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 74ms reading results.
2025-04-02 12:44:22.993 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:22.995 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 12:44:23.012 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-04-02 12:44:23.027 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 12:44:23.042 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.045 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.048 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:44:23.049 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 12:44:23.056 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-04-02 12:44:23.058 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-04-02 12:44:23.062 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-04-02 12:44:23.071 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.073 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-02 12:44:23.076 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.094 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (18ms).
2025-04-02 12:44:23.166 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .FirstOrDefault(e => EF.Property<string>(e, "UserId") == __p_0 && EF.Property<string>(e, "RoleId") == __p_1)'
2025-04-02 12:44:23.192 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<string>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<string>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<string> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<string> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<string>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<string>.UserId, IdentityUserRole<string>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetString(0), 
                        (object)dataReader.GetString(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<string>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]: 
                            {
                                return 
                                {
                                    IdentityUserRole<string> instance;
                                    instance = new IdentityUserRole<string>();
                                    instance.<UserId>k__BackingField = dataReader.GetString(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetString(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityUserRole<string>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 12:44:23.256 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.258 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.282 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:44:23.284 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-02 12:44:23.290 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-04-02 12:44:23.292 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-04-02 12:44:23.314 -04:00 [INF] Executed DbCommand (22ms) [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-04-02 12:44:23.323 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.326 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-02 12:44:23.328 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.331 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 12:44:23.348 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.351 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.357 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:44:23.360 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-02 12:44:23.362 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-02 12:44:23.364 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-04-02 12:44:23.372 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-04-02 12:44:23.381 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.382 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-04-02 12:44:23.387 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.389 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-02 12:44:23.413 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityUserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:44:23.418 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.422 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.426 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:44:23.429 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-04-02 12:44:23.432 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-04-02 12:44:23.437 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 12:44:23.445 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 12:44:23.465 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.470 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 11ms reading results.
2025-04-02 12:44:23.474 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.476 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 12:44:23.484 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:44:23.492 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-02 12:44:23.494 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-02 12:44:23.509 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-02 12:44:23.543 -04:00 [DBG] Executing 2 update commands as a batch.
2025-04-02 12:44:23.563 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.565 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.572 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-04-02 12:44:23.580 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-04-02 12:44:23.584 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:44:23.589 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-04-02 12:44:23.592 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-04-02 12:44:23.593 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-04-02 12:44:23.613 -04:00 [INF] Executed DbCommand (20ms) [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-04-02 12:44:23.678 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.691 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 14ms reading results.
2025-04-02 12:44:23.712 -04:00 [DBG] Committing transaction.
2025-04-02 12:44:23.745 -04:00 [DBG] Committed transaction.
2025-04-02 12:44:23.749 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.757 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-04-02 12:44:23.776 -04:00 [DBG] Disposing transaction.
2025-04-02 12:44:23.817 -04:00 [DBG] An entity of type 'IdentityUserRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:44:23.832 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:44:23.842 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-04-02 12:44:23.884 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-04-02 12:44:23.917 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 12:44:23.940 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.942 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:23.947 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:44:23.954 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-04-02 12:44:23.981 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (34ms).
2025-04-02 12:44:24.203 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-02 12:44:24.227 -04:00 [INF] Executed DbCommand (25ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-02 12:44:24.233 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:24.236 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-04-02 12:44:24.241 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:24.244 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 12:44:24.267 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-04-02 12:44:24.297 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 12:44:24.310 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:24.313 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:24.315 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:44:24.317 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 12:44:24.321 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-04-02 12:44:24.326 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-02 12:44:24.332 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-02 12:44:24.341 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:24.343 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-02 12:44:24.346 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:24.348 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-02 12:44:24.367 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:24.374 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:24.378 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:44:24.380 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 12:44:24.383 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-02 12:44:24.390 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 12:44:24.411 -04:00 [INF] Executed DbCommand (22ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 12:44:24.438 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:24.440 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-02 12:44:24.443 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:24.445 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-02 12:44:24.449 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:44:24.453 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-02 12:44:24.458 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-02 12:44:24.473 -04:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LocalUser.RefreshTokens'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:44:24.496 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'RefreshToken.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:44:24.549 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:44:24.557 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-02 12:44:24.575 -04:00 [DBG] Executing 2 update commands as a batch.
2025-04-02 12:44:24.577 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:24.579 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:24.582 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-04-02 12:44:24.583 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-04-02 12:44:24.590 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:44:24.592 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-02 12:44:24.595 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-02 12:44:24.597 -04:00 [DBG] Executing DbCommand [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-04-02 12:44:24.616 -04:00 [INF] Executed DbCommand (18ms) [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-04-02 12:44:24.661 -04:00 [DBG] The foreign key property 'RefreshToken.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 12:44:24.678 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:24.682 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 52ms reading results.
2025-04-02 12:44:24.684 -04:00 [DBG] Committing transaction.
2025-04-02 12:44:24.696 -04:00 [DBG] Committed transaction.
2025-04-02 12:44:24.697 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:24.700 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 12:44:24.709 -04:00 [DBG] Disposing transaction.
2025-04-02 12:44:24.712 -04:00 [DBG] An entity of type 'RefreshToken' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:44:24.725 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:44:24.729 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-04-02 12:44:24.817 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 12:44:24.828 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-02 12:44:24.829 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 12:44:24.830 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 12:44:24.832 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 12:44:24.835 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 12:44:24.914 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API) in 6845.1147ms
2025-04-02 12:44:24.916 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-02 12:44:24.923 -04:00 [DBG] Connection id "0HNBI0LRSJMCV" completed keep alive response.
2025-04-02 12:44:24.931 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-02 12:44:24.977 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:44:25.109 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (131ms).
2025-04-02 12:44:25.312 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/register - 200 null application/json; charset=utf-8 7474.5916ms
2025-04-02 12:45:15.977 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 71
2025-04-02 12:45:15.997 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-04-02 12:45:15.999 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-04-02 12:45:16.014 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-02 12:45:16.046 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 12:45:16.050 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-02 12:45:16.052 -04:00 [INF] CORS policy execution failed.
2025-04-02 12:45:16.053 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-02 12:45:16.062 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-04-02 12:45:16.064 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-02 12:45:16.082 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-04-02 12:45:16.085 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 12:45:16.094 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-02 12:45:16.097 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 12:45:16.100 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-02 12:45:16.103 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 12:45:16.110 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-02 12:45:16.127 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-02 12:45:16.135 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-02 12:45:16.141 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-04-02 12:45:16.145 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 12:45:16.153 -04:00 [DBG] Connection id "0HNBI0LRSJMCV", Request id "0HNBI0LRSJMCV:00000005": started reading request body.
2025-04-02 12:45:16.158 -04:00 [DBG] Connection id "0HNBI0LRSJMCV", Request id "0HNBI0LRSJMCV:00000005": done reading request body.
2025-04-02 12:45:16.161 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-04-02 12:45:16.163 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-02 12:45:16.173 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-02 12:45:16.176 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-02 12:45:16.180 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-02 12:45:16.286 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-02 12:45:16.295 -04:00 [DBG] Creating DbConnection.
2025-04-02 12:45:16.297 -04:00 [DBG] Created DbConnection. (1ms).
2025-04-02 12:45:16.298 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:45:16.303 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:45:16.307 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:45:16.309 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-02 12:45:16.311 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-02 12:45:16.313 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 12:45:16.325 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 12:45:16.331 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:45:16.348 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:45:16.351 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:45:16.357 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 26ms reading results.
2025-04-02 12:45:16.361 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:45:16.362 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-02 12:45:16.467 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:45:16.469 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:45:16.473 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:45:16.475 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 12:45:16.477 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-02 12:45:16.478 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-02 12:45:16.484 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-02 12:45:16.490 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:45:16.491 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-04-02 12:45:16.510 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:45:16.513 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (18ms).
2025-04-02 12:45:16.525 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:45:16.546 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:45:16.572 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:45:16.574 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 12:45:16.592 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (19ms).
2025-04-02 12:45:16.618 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-02 12:45:16.642 -04:00 [INF] Executed DbCommand (23ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-02 12:45:16.651 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:45:16.653 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-02 12:45:16.660 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:45:16.663 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 12:45:16.667 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:45:16.670 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:45:16.716 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:45:16.718 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-02 12:45:16.723 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-04-02 12:45:16.736 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-02 12:45:16.747 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-02 12:45:16.757 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:45:16.759 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-02 12:45:16.763 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:45:16.774 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (10ms).
2025-04-02 12:45:16.779 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 12:45:16.784 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-02 12:45:16.792 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 12:45:16.794 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 12:45:16.796 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 12:45:16.800 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 12:45:16.803 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 693.5594ms
2025-04-02 12:45:16.810 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-02 12:45:16.815 -04:00 [DBG] Connection id "0HNBI0LRSJMCV" completed keep alive response.
2025-04-02 12:45:16.824 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-02 12:45:16.833 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:45:16.874 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (40ms).
2025-04-02 12:45:17.298 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 1321.6165ms
2025-04-02 12:45:30.663 -04:00 [DBG] Connection id "0HNBI0LRSJMCV" received FIN.
2025-04-02 12:45:30.669 -04:00 [DBG] Connection id "0HNBI0LRSJMCV" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-02 12:45:30.686 -04:00 [DBG] Connection id "0HNBI0LRSJMCV" disconnecting.
2025-04-02 12:45:30.698 -04:00 [DBG] Connection id "0HNBI0LRSJMCV" stopped.
2025-04-02 12:47:55.681 -04:00 [DBG] Connection id "0HNBI0LRSJMD1" accepted.
2025-04-02 12:47:55.685 -04:00 [DBG] Connection id "0HNBI0LRSJMD1" started.
2025-04-02 12:47:55.689 -04:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - null null
2025-04-02 12:47:55.693 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-04-02 12:47:55.698 -04:00 [DBG] Request matched endpoint '405 HTTP Method Not Supported'
2025-04-02 12:47:55.700 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 12:47:55.703 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-04-02 12:47:55.705 -04:00 [INF] CORS policy execution successful.
2025-04-02 12:47:55.707 -04:00 [DBG] The request is a preflight request.
2025-04-02 12:47:55.715 -04:00 [DBG] Connection id "0HNBI0LRSJMD1" completed keep alive response.
2025-04-02 12:47:55.718 -04:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - 204 null null 28.6196ms
2025-04-02 12:47:55.723 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 53
2025-04-02 12:47:55.733 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-04-02 12:47:55.735 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-04-02 12:47:55.739 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-02 12:47:55.741 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 12:47:55.742 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-04-02 12:47:55.744 -04:00 [INF] CORS policy execution successful.
2025-04-02 12:47:55.755 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-04-02 12:47:55.757 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-02 12:47:55.759 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-04-02 12:47:55.768 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 12:47:55.770 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-02 12:47:55.774 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 12:47:55.780 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-02 12:47:55.785 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 12:47:55.788 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-02 12:47:55.818 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-02 12:47:55.821 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-02 12:47:55.824 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-04-02 12:47:55.827 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 12:47:55.832 -04:00 [DBG] Connection id "0HNBI0LRSJMD1", Request id "0HNBI0LRSJMD1:00000002": started reading request body.
2025-04-02 12:47:55.834 -04:00 [DBG] Connection id "0HNBI0LRSJMD1", Request id "0HNBI0LRSJMD1:00000002": done reading request body.
2025-04-02 12:47:55.836 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-04-02 12:47:55.838 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-02 12:47:55.842 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-02 12:47:55.844 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-02 12:47:55.850 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-02 12:47:55.870 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-02 12:47:55.876 -04:00 [DBG] Creating DbConnection.
2025-04-02 12:47:55.877 -04:00 [DBG] Created DbConnection. (1ms).
2025-04-02 12:47:55.881 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:47:55.883 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:47:55.887 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:47:55.889 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-02 12:47:55.891 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-02 12:47:55.893 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 12:47:55.920 -04:00 [INF] Executed DbCommand (27ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 12:47:55.924 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:47:55.929 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:47:55.932 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:47:55.934 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-04-02 12:47:55.936 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:47:55.938 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-02 12:47:56.056 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:47:56.058 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:47:56.060 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:47:56.063 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-02 12:47:56.065 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-02 12:47:56.067 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-02 12:47:56.073 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-02 12:47:56.077 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:47:56.080 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-02 12:47:56.082 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:47:56.084 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-02 12:47:56.088 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:47:56.090 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:47:56.092 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:47:56.098 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-04-02 12:47:56.100 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-04-02 12:47:56.102 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-02 12:47:56.110 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-02 12:47:56.116 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:47:56.118 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-04-02 12:47:56.122 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:47:56.123 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-02 12:47:56.127 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:47:56.132 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:47:56.134 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:47:56.135 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 12:47:56.138 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-02 12:47:56.139 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-02 12:47:56.147 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-02 12:47:56.152 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:47:56.154 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-04-02 12:47:56.156 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:47:56.158 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 12:47:56.171 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 12:47:56.177 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-02 12:47:56.185 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 12:47:56.187 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 12:47:56.189 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 12:47:56.198 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 12:47:56.203 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 415.683ms
2025-04-02 12:47:56.207 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-02 12:47:56.209 -04:00 [DBG] Connection id "0HNBI0LRSJMD1" completed keep alive response.
2025-04-02 12:47:56.298 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-02 12:47:56.332 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:47:56.337 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-04-02 12:47:56.347 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 624.2955ms
2025-04-02 12:48:28.753 -04:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - null null
2025-04-02 12:48:28.759 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-04-02 12:48:28.768 -04:00 [DBG] Request matched endpoint '405 HTTP Method Not Supported'
2025-04-02 12:48:28.772 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 12:48:28.773 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-04-02 12:48:28.777 -04:00 [INF] CORS policy execution successful.
2025-04-02 12:48:28.779 -04:00 [DBG] The request is a preflight request.
2025-04-02 12:48:28.788 -04:00 [DBG] Connection id "0HNBI0LRSJMD1" completed keep alive response.
2025-04-02 12:48:28.793 -04:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - 204 null null 39.7232ms
2025-04-02 12:48:28.810 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 62
2025-04-02 12:48:28.819 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-04-02 12:48:28.821 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-04-02 12:48:28.832 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-02 12:48:28.870 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 12:48:28.885 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-04-02 12:48:28.887 -04:00 [INF] CORS policy execution successful.
2025-04-02 12:48:28.917 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-04-02 12:48:28.938 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-02 12:48:28.940 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-04-02 12:48:28.965 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 12:48:28.968 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-02 12:48:28.971 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 12:48:28.978 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-02 12:48:28.980 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 12:48:28.983 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-02 12:48:28.988 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-02 12:48:28.990 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-02 12:48:28.993 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-04-02 12:48:28.995 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 12:48:28.998 -04:00 [DBG] Connection id "0HNBI0LRSJMD1", Request id "0HNBI0LRSJMD1:00000004": started reading request body.
2025-04-02 12:48:29.000 -04:00 [DBG] Connection id "0HNBI0LRSJMD1", Request id "0HNBI0LRSJMD1:00000004": done reading request body.
2025-04-02 12:48:29.003 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-04-02 12:48:29.007 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-02 12:48:29.023 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-02 12:48:29.031 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-02 12:48:29.034 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-02 12:48:29.038 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-02 12:48:29.046 -04:00 [DBG] Creating DbConnection.
2025-04-02 12:48:29.049 -04:00 [DBG] Created DbConnection. (2ms).
2025-04-02 12:48:29.052 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:48:29.057 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:48:29.060 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:48:29.065 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-04-02 12:48:29.091 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (31ms).
2025-04-02 12:48:29.094 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 12:48:29.111 -04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 12:48:29.119 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:48:29.122 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 12:48:29.126 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:48:29.128 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-04-02 12:48:29.136 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:48:29.139 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-02 12:48:29.238 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:48:29.240 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:48:29.242 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:48:29.244 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 12:48:29.246 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-02 12:48:29.248 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-02 12:48:29.255 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-02 12:48:29.258 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:48:29.261 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-02 12:48:29.264 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:48:29.267 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-02 12:48:29.271 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:48:29.274 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:48:29.276 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:48:29.278 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 12:48:29.280 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-02 12:48:29.283 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-02 12:48:29.289 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-02 12:48:29.298 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:48:29.300 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-02 12:48:29.303 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:48:29.307 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-02 12:48:29.311 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:48:29.314 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:48:29.316 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:48:29.318 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-02 12:48:29.321 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-02 12:48:29.323 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-02 12:48:29.332 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-02 12:48:29.336 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:48:29.338 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-04-02 12:48:29.343 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:48:29.346 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-02 12:48:29.349 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 12:48:29.363 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-02 12:48:29.368 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 12:48:29.370 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 12:48:29.373 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 12:48:29.377 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 12:48:29.381 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 398.4507ms
2025-04-02 12:48:29.384 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-02 12:48:29.386 -04:00 [DBG] Connection id "0HNBI0LRSJMD1" completed keep alive response.
2025-04-02 12:48:29.408 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-02 12:48:29.455 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:48:29.468 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (13ms).
2025-04-02 12:48:29.539 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 728.7628ms
2025-04-02 12:49:06.412 -04:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - null null
2025-04-02 12:49:06.438 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-04-02 12:49:06.441 -04:00 [DBG] Request matched endpoint '405 HTTP Method Not Supported'
2025-04-02 12:49:06.443 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 12:49:06.444 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-04-02 12:49:06.452 -04:00 [INF] CORS policy execution successful.
2025-04-02 12:49:06.454 -04:00 [DBG] The request is a preflight request.
2025-04-02 12:49:06.456 -04:00 [DBG] Connection id "0HNBI0LRSJMD1" completed keep alive response.
2025-04-02 12:49:06.473 -04:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - 204 null null 61.4585ms
2025-04-02 12:49:06.488 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 59
2025-04-02 12:49:06.493 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-04-02 12:49:06.495 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-04-02 12:49:06.500 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-02 12:49:06.507 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 12:49:06.508 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-04-02 12:49:06.510 -04:00 [INF] CORS policy execution successful.
2025-04-02 12:49:06.511 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-04-02 12:49:06.513 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-02 12:49:06.520 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-04-02 12:49:06.523 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 12:49:06.526 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-02 12:49:06.529 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 12:49:06.537 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-02 12:49:06.539 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 12:49:06.546 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-02 12:49:06.552 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-02 12:49:06.554 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-02 12:49:06.556 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-04-02 12:49:06.562 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 12:49:06.567 -04:00 [DBG] Connection id "0HNBI0LRSJMD1", Request id "0HNBI0LRSJMD1:00000006": started reading request body.
2025-04-02 12:49:06.569 -04:00 [DBG] Connection id "0HNBI0LRSJMD1", Request id "0HNBI0LRSJMD1:00000006": done reading request body.
2025-04-02 12:49:06.571 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-04-02 12:49:06.573 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-02 12:49:06.575 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-02 12:49:06.577 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-02 12:49:06.579 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-02 12:49:06.589 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-02 12:49:06.592 -04:00 [DBG] Creating DbConnection.
2025-04-02 12:49:06.593 -04:00 [DBG] Created DbConnection. (1ms).
2025-04-02 12:49:06.596 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:49:06.598 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:49:06.600 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 12:49:06.602 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 12:49:06.603 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-04-02 12:49:06.605 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 12:49:06.616 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 12:49:06.628 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:49:06.642 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 14ms reading results.
2025-04-02 12:49:06.649 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:49:06.658 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-04-02 12:49:06.668 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 122.4298ms
2025-04-02 12:49:06.673 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-02 12:49:06.801 -04:00 [DBG] Connection id "0HNBI0LRSJMD1" completed keep alive response.
2025-04-02 12:49:06.811 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-02 12:49:06.814 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 12:49:06.841 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (27ms).
2025-04-02 12:49:06.843 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 500 null application/json 355.0651ms
2025-04-02 12:50:41.110 -04:00 [DBG] Connection id "0HNBI0LRSJMD1" received FIN.
2025-04-02 12:50:41.112 -04:00 [DBG] Connection id "0HNBI0LRSJMD1" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-02 12:50:41.120 -04:00 [DBG] Connection id "0HNBI0LRSJMD1" disconnecting.
2025-04-02 12:50:41.163 -04:00 [DBG] Connection id "0HNBI0LRSJMD1" stopped.
2025-04-02 12:59:02.071 -04:00 [DBG] Connection id "0HNBI0LRSJMD2" accepted.
2025-04-02 12:59:02.073 -04:00 [DBG] Connection id "0HNBI0LRSJMD2" started.
2025-04-02 12:59:02.078 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Guest - application/json 108
2025-04-02 12:59:02.087 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Guest'
2025-04-02 12:59:02.093 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.GuestController.CreateGuest (HotelBookingPlatform.API)' with route pattern 'api/Guest' is valid for the request path '/api/Guest'
2025-04-02 12:59:02.115 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.GuestController.CreateGuest (HotelBookingPlatform.API)'
2025-04-02 12:59:02.121 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 12:59:02.123 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-02 12:59:02.132 -04:00 [INF] CORS policy execution failed.
2025-04-02 12:59:02.165 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-02 12:59:02.240 -04:00 [INF] Failed to validate the token.
System.ArgumentException: IDX14102: Unable to decode the header '[PII of type 'Microsoft.IdentityModel.Logging.SecurityArtifact' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' as Base64Url encoded string.
 ---> System.FormatException: IDX10400: Unable to decode: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' as Base64url encoded string.
   at Microsoft.IdentityModel.Tokens.Base64UrlEncoding.ValidateAndGetOutputSize(ReadOnlySpan`1 strSpan, Int32 offset, Int32 length)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.CreateClaimSet(ReadOnlySpan`1 strSpan, Int32 startIndex, Int32 length, Boolean createHeaderClaimSet)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)
2025-04-02 12:59:02.266 -04:00 [INF] Bearer was not authenticated. Failure message: IDX14102: Unable to decode the header '[PII of type 'Microsoft.IdentityModel.Logging.SecurityArtifact' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' as Base64Url encoded string.
2025-04-02 12:59:02.285 -04:00 [DBG] Policy authentication schemes  did not succeed
2025-04-02 12:59:02.313 -04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin|Staff)
2025-04-02 12:59:02.331 -04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-04-02 12:59:02.333 -04:00 [DBG] Connection id "0HNBI0LRSJMD2" completed keep alive response.
2025-04-02 12:59:02.337 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Guest - 401 0 null 259.0671ms
2025-04-02 12:59:02.349 -04:00 [DBG] Connection id "0HNBI0LRSJMD2", Request id "0HNBI0LRSJMD2:00000001": started reading request body.
2025-04-02 12:59:02.353 -04:00 [DBG] Connection id "0HNBI0LRSJMD2", Request id "0HNBI0LRSJMD2:00000001": done reading request body.
2025-04-02 13:00:11.988 -04:00 [DBG] Connection id "0HNBI0LRSJMD2" received FIN.
2025-04-02 13:00:11.990 -04:00 [DBG] Connection id "0HNBI0LRSJMD2" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-02 13:00:11.992 -04:00 [DBG] Connection id "0HNBI0LRSJMD2" disconnecting.
2025-04-02 13:00:11.993 -04:00 [DBG] Connection id "0HNBI0LRSJMD2" stopped.
2025-04-02 13:06:37.341 -04:00 [DBG] Connection id "0HNBI0LRSJMD3" accepted.
2025-04-02 13:06:37.343 -04:00 [DBG] Connection id "0HNBI0LRSJMD3" started.
2025-04-02 13:06:37.345 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Guest - application/json 107
2025-04-02 13:06:37.400 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Guest'
2025-04-02 13:06:37.402 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.GuestController.CreateGuest (HotelBookingPlatform.API)' with route pattern 'api/Guest' is valid for the request path '/api/Guest'
2025-04-02 13:06:37.404 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.GuestController.CreateGuest (HotelBookingPlatform.API)'
2025-04-02 13:06:37.406 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 13:06:37.407 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-02 13:06:37.409 -04:00 [INF] CORS policy execution failed.
2025-04-02 13:06:37.411 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-02 13:06:37.556 -04:00 [DBG] Successfully validated the token.
2025-04-02 13:06:37.558 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 13:06:37.566 -04:00 [DBG] Authorization was successful.
2025-04-02 13:06:37.569 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.GuestController.CreateGuest (HotelBookingPlatform.API)'
2025-04-02 13:06:37.588 -04:00 [INF] Route matched with {action = "CreateGuest", controller = "Guest"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[HotelBookingPlatform.Domain.DTOs.Guest.GuestResponse]] CreateGuest(HotelBookingPlatform.Domain.DTOs.Guest.GuestRequest) on controller HotelBookingPlatform.API.Controllers.GuestController (HotelBookingPlatform.API).
2025-04-02 13:06:37.592 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 13:06:37.594 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-02 13:06:37.598 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 13:06:37.601 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-02 13:06:37.605 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 13:06:37.610 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.GuestController (HotelBookingPlatform.API)
2025-04-02 13:06:37.625 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.GuestController (HotelBookingPlatform.API)
2025-04-02 13:06:37.635 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Guest.GuestRequest' ...
2025-04-02 13:06:37.641 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Guest.GuestRequest' using the name '' in request data ...
2025-04-02 13:06:37.644 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 13:06:37.651 -04:00 [DBG] Connection id "0HNBI0LRSJMD3", Request id "0HNBI0LRSJMD3:00000001": started reading request body.
2025-04-02 13:06:37.658 -04:00 [DBG] Connection id "0HNBI0LRSJMD3", Request id "0HNBI0LRSJMD3:00000001": done reading request body.
2025-04-02 13:06:37.664 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Guest.GuestRequest'
2025-04-02 13:06:37.666 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Guest.GuestRequest'.
2025-04-02 13:06:37.669 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Guest.GuestRequest'.
2025-04-02 13:06:37.671 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Guest.GuestRequest' ...
2025-04-02 13:06:37.680 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Guest.GuestRequest'.
2025-04-02 13:06:37.696 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-02 13:06:37.708 -04:00 [DBG] Compiling query expression: 
'DbSet<Guest>()
    .FirstOrDefault(g => g.CIN == __request_CIN_0)'
2025-04-02 13:06:37.757 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Guest>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Guest>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Guest.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Guest.CIN (string) Required, 1], [Property: Guest.Email (string) Required, 2], [Property: Guest.FirstName (string) Required MaxLength(50), 3], [Property: Guest.LastName (string) Required MaxLength(50), 4] }
            SELECT TOP(1) g.Id, g.CIN, g.Email, g.FirstName, g.LastName
            FROM Guests AS g
            WHERE g.CIN == @__request_CIN_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Guest.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Guest.CIN (string) Required, 1], [Property: Guest.Email (string) Required, 2], [Property: Guest.FirstName (string) Required MaxLength(50), 3], [Property: Guest.LastName (string) Required MaxLength(50), 4] }
            SELECT TOP(1) g.Id, g.CIN, g.Email, g.FirstName, g.LastName
            FROM Guests AS g
            WHERE g.CIN == @__request_CIN_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Guest entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Guest instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Guest);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Guest.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Guest").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Guest)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Guest | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Guest")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Guest | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Guest")]: 
                            {
                                return 
                                {
                                    Guest instance;
                                    instance = new Guest();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<CIN>k__BackingField = dataReader.GetString(1);
                                    instance.<Email>k__BackingField = dataReader.GetString(2);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(3);
                                    instance.<LastName>k__BackingField = dataReader.GetString(4);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Guest | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Guest")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Guest)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 13:06:37.770 -04:00 [DBG] Creating DbConnection.
2025-04-02 13:06:37.772 -04:00 [DBG] Created DbConnection. (1ms).
2025-04-02 13:06:37.773 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:06:37.849 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:06:37.852 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 13:06:37.853 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 13:06:37.855 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-02 13:06:37.857 -04:00 [DBG] Executing DbCommand [Parameters=[@__request_CIN_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT g."Id", g."CIN", g."Email", g."FirstName", g."LastName"
FROM "Guests" AS g
WHERE g."CIN" = @__request_CIN_0
LIMIT 1
2025-04-02 13:06:37.876 -04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__request_CIN_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT g."Id", g."CIN", g."Email", g."FirstName", g."LastName"
FROM "Guests" AS g
WHERE g."CIN" = @__request_CIN_0
LIMIT 1
2025-04-02 13:06:37.882 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:06:37.884 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-02 13:06:37.887 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:06:37.889 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 13:06:37.936 -04:00 [DBG] Context 'AppDbContext' started tracking 'Guest' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 13:06:37.939 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-02 13:06:37.940 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-02 13:06:37.948 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-02 13:06:37.964 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:06:37.966 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:06:37.969 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 13:06:37.970 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 13:06:37.972 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-02 13:06:37.974 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?', @p3='?', @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Guests" ("Id", "CIN", "Email", "FirstName", "LastName")
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 13:06:37.992 -04:00 [INF] Executed DbCommand (19ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?', @p3='?', @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Guests" ("Id", "CIN", "Email", "FirstName", "LastName")
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 13:06:37.997 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:06:37.999 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-02 13:06:38.002 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:06:38.004 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-02 13:06:38.007 -04:00 [DBG] An entity of type 'Guest' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 13:06:38.010 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-04-02 13:06:38.016 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 13:06:38.024 -04:00 [DBG] Attempting to select an output formatter based on Accept header '["text/plain"]'.
2025-04-02 13:06:38.029 -04:00 [DBG] Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
2025-04-02 13:06:38.031 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 13:06:38.033 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 13:06:38.034 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 13:06:38.036 -04:00 [INF] Executing CreatedAtActionResult, writing value of type 'HotelBookingPlatform.Domain.DTOs.Guest.GuestResponse'.
2025-04-02 13:06:38.093 -04:00 [DBG] Found the endpoints ["HotelBookingPlatform.API.Controllers.GuestController.GetGuest (HotelBookingPlatform.API)"] for address (id=[b5666bd2-9869-4d46-b747-ce354caf4538],action=[GetGuest],controller=[Guest])
2025-04-02 13:06:38.108 -04:00 [DBG] Successfully processed template api/Guest/{id} for HotelBookingPlatform.API.Controllers.GuestController.GetGuest (HotelBookingPlatform.API) resulting in /api/Guest/b5666bd2-9869-4d46-b747-ce354caf4538 and 
2025-04-02 13:06:38.160 -04:00 [DBG] Link generation succeeded for endpoints ["HotelBookingPlatform.API.Controllers.GuestController.GetGuest (HotelBookingPlatform.API)"] with result /api/Guest/b5666bd2-9869-4d46-b747-ce354caf4538
2025-04-02 13:06:38.231 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.GuestController.CreateGuest (HotelBookingPlatform.API) in 622.6229ms
2025-04-02 13:06:38.252 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.GuestController.CreateGuest (HotelBookingPlatform.API)'
2025-04-02 13:06:38.259 -04:00 [DBG] Connection id "0HNBI0LRSJMD3" completed keep alive response.
2025-04-02 13:06:38.263 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-02 13:06:38.270 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:06:38.279 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-04-02 13:06:38.283 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Guest - 201 null application/json; charset=utf-8 938.2421ms
2025-04-02 13:07:27.591 -04:00 [DBG] Connection id "0HNBI0LRSJMD3" received FIN.
2025-04-02 13:07:27.594 -04:00 [DBG] Connection id "0HNBI0LRSJMD3" disconnecting.
2025-04-02 13:07:27.596 -04:00 [DBG] Connection id "0HNBI0LRSJMD3" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-02 13:07:27.605 -04:00 [DBG] Connection id "0HNBI0LRSJMD3" stopped.
2025-04-02 13:29:15.370 -04:00 [DBG] Connection id "0HNBI0LRSJMD4" accepted.
2025-04-02 13:29:15.384 -04:00 [DBG] Connection id "0HNBI0LRSJMD4" started.
2025-04-02 13:29:15.388 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Guest - null null
2025-04-02 13:29:15.396 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Guest'
2025-04-02 13:29:15.399 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.GuestController.GetGuests (HotelBookingPlatform.API)' with route pattern 'api/Guest' is valid for the request path '/api/Guest'
2025-04-02 13:29:15.402 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.GuestController.GetGuests (HotelBookingPlatform.API)'
2025-04-02 13:29:15.414 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 13:29:15.432 -04:00 [DBG] Successfully validated the token.
2025-04-02 13:29:15.438 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 13:29:15.463 -04:00 [DBG] Authorization was successful.
2025-04-02 13:29:15.465 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.GuestController.GetGuests (HotelBookingPlatform.API)'
2025-04-02 13:29:15.485 -04:00 [INF] Route matched with {action = "GetGuests", controller = "Guest"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[HotelBookingPlatform.Domain.DTOs.Guest.GuestResponse]]] GetGuests() on controller HotelBookingPlatform.API.Controllers.GuestController (HotelBookingPlatform.API).
2025-04-02 13:29:15.488 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 13:29:15.494 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-02 13:29:15.497 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 13:29:15.501 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-02 13:29:15.503 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 13:29:15.505 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.GuestController (HotelBookingPlatform.API)
2025-04-02 13:29:15.514 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.GuestController (HotelBookingPlatform.API)
2025-04-02 13:29:15.535 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-02 13:29:15.572 -04:00 [DBG] Compiling query expression: 
'DbSet<Guest>()
    .Select(g => new GuestResponse{ 
        Id = g.Id, 
        FirstName = g.FirstName, 
        LastName = g.LastName, 
        CIN = g.CIN, 
        Email = g.Email 
    }
    )'
2025-04-02 13:29:15.610 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<GuestResponse>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            Id -> 0
            FirstName -> 1
            LastName -> 2
            CIN -> 3
            Email -> 4
        SELECT g.Id, g.FirstName, g.LastName, g.CIN, g.Email
        FROM Guests AS g) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            Id -> 0
            FirstName -> 1
            LastName -> 2
            CIN -> 3
            Email -> 4
        SELECT g.Id, g.FirstName, g.LastName, g.CIN, g.Email
        FROM Guests AS g, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Guid? value1;
        string value2;
        string value3;
        string value4;
        string value5;
        value1 = (Guid?)dataReader.GetGuid(0);
        value2 = dataReader.GetString(1);
        value3 = dataReader.GetString(2);
        value4 = dataReader.GetString(3);
        value5 = dataReader.GetString(4);
        return new GuestResponse{ 
            Id = (Guid)value1, 
            FirstName = value2, 
            LastName = value3, 
            CIN = value4, 
            Email = value5 
        }
        ;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 13:29:15.617 -04:00 [DBG] Creating DbConnection.
2025-04-02 13:29:15.618 -04:00 [DBG] Created DbConnection. (1ms).
2025-04-02 13:29:15.620 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:29:15.704 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:29:15.747 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 13:29:15.749 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-02 13:29:15.755 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-04-02 13:29:15.766 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT g."Id", g."FirstName", g."LastName", g."CIN", g."Email"
FROM "Guests" AS g
2025-04-02 13:29:15.808 -04:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT g."Id", g."FirstName", g."LastName", g."CIN", g."Email"
FROM "Guests" AS g
2025-04-02 13:29:15.827 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:29:15.829 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 16ms reading results.
2025-04-02 13:29:15.835 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:29:15.844 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-04-02 13:29:15.862 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 13:29:15.866 -04:00 [DBG] Attempting to select an output formatter based on Accept header '["text/plain"]'.
2025-04-02 13:29:15.869 -04:00 [DBG] Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
2025-04-02 13:29:15.871 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 13:29:15.875 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 13:29:15.884 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 13:29:15.887 -04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[HotelBookingPlatform.Domain.DTOs.Guest.GuestResponse, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 13:29:15.898 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.GuestController.GetGuests (HotelBookingPlatform.API) in 392.4002ms
2025-04-02 13:29:15.900 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.GuestController.GetGuests (HotelBookingPlatform.API)'
2025-04-02 13:29:15.902 -04:00 [DBG] Connection id "0HNBI0LRSJMD4" completed keep alive response.
2025-04-02 13:29:15.905 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-02 13:29:15.913 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:29:15.916 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 13:29:15.919 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Guest - 200 null application/json; charset=utf-8 531.1847ms
2025-04-02 13:30:12.406 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Guest/b5666bd2-9869-4d46-b747-ce354caf4538 - null null
2025-04-02 13:30:12.412 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Guest/b5666bd2-9869-4d46-b747-ce354caf4538'
2025-04-02 13:30:12.414 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.GuestController.GetGuest (HotelBookingPlatform.API)' with route pattern 'api/Guest/{id}' is valid for the request path '/api/Guest/b5666bd2-9869-4d46-b747-ce354caf4538'
2025-04-02 13:30:12.453 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.GuestController.GetGuest (HotelBookingPlatform.API)'
2025-04-02 13:30:12.455 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 13:30:12.457 -04:00 [DBG] Successfully validated the token.
2025-04-02 13:30:12.461 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 13:30:12.463 -04:00 [DBG] Authorization was successful.
2025-04-02 13:30:12.465 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.GuestController.GetGuest (HotelBookingPlatform.API)'
2025-04-02 13:30:12.483 -04:00 [INF] Route matched with {action = "GetGuest", controller = "Guest"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[HotelBookingPlatform.Domain.DTOs.Guest.GuestResponse]] GetGuest(System.Guid) on controller HotelBookingPlatform.API.Controllers.GuestController (HotelBookingPlatform.API).
2025-04-02 13:30:12.487 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 13:30:12.490 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-02 13:30:12.495 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 13:30:12.500 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-02 13:30:12.502 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 13:30:12.505 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.GuestController (HotelBookingPlatform.API)
2025-04-02 13:30:12.507 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.GuestController (HotelBookingPlatform.API)
2025-04-02 13:30:12.513 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Guid' ...
2025-04-02 13:30:12.518 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Guid' using the name 'id' in request data ...
2025-04-02 13:30:12.523 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Guid'.
2025-04-02 13:30:12.528 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Guid'.
2025-04-02 13:30:12.530 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Guid' ...
2025-04-02 13:30:12.535 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Guid'.
2025-04-02 13:30:12.538 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-02 13:30:12.552 -04:00 [DBG] Compiling query expression: 
'DbSet<Guest>()
    .FirstOrDefault(e => object.Equals(
        objA: EF.Property<object>(e, "Id"), 
        objB: __p_0))'
2025-04-02 13:30:12.572 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Guest>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Guest>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Guest.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Guest.CIN (string) Required, 1], [Property: Guest.Email (string) Required, 2], [Property: Guest.FirstName (string) Required MaxLength(50), 3], [Property: Guest.LastName (string) Required MaxLength(50), 4] }
            SELECT TOP(1) g.Id, g.CIN, g.Email, g.FirstName, g.LastName
            FROM Guests AS g
            WHERE g.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Guest.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Guest.CIN (string) Required, 1], [Property: Guest.Email (string) Required, 2], [Property: Guest.FirstName (string) Required MaxLength(50), 3], [Property: Guest.LastName (string) Required MaxLength(50), 4] }
            SELECT TOP(1) g.Id, g.CIN, g.Email, g.FirstName, g.LastName
            FROM Guests AS g
            WHERE g.Id == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Guest entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Guest instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Guest);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Guest.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Guest").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Guest)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Guest | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Guest")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Guest | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Guest")]: 
                            {
                                return 
                                {
                                    Guest instance;
                                    instance = new Guest();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<CIN>k__BackingField = dataReader.GetString(1);
                                    instance.<Email>k__BackingField = dataReader.GetString(2);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(3);
                                    instance.<LastName>k__BackingField = dataReader.GetString(4);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Guest | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Guest")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Guest)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 13:30:12.585 -04:00 [DBG] Creating DbConnection.
2025-04-02 13:30:12.586 -04:00 [DBG] Created DbConnection. (1ms).
2025-04-02 13:30:12.589 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:30:12.591 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:30:12.596 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 13:30:12.598 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-02 13:30:12.600 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-02 13:30:12.602 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT g."Id", g."CIN", g."Email", g."FirstName", g."LastName"
FROM "Guests" AS g
WHERE g."Id" = @__p_0
LIMIT 1
2025-04-02 13:30:12.622 -04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT g."Id", g."CIN", g."Email", g."FirstName", g."LastName"
FROM "Guests" AS g
WHERE g."Id" = @__p_0
LIMIT 1
2025-04-02 13:30:12.633 -04:00 [DBG] Context 'AppDbContext' started tracking 'Guest' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 13:30:12.635 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:30:12.637 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-04-02 13:30:12.640 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:30:12.645 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-04-02 13:30:12.649 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 13:30:12.654 -04:00 [DBG] Attempting to select an output formatter based on Accept header '["text/plain"]'.
2025-04-02 13:30:12.656 -04:00 [DBG] Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
2025-04-02 13:30:12.661 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 13:30:12.662 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 13:30:12.664 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 13:30:12.666 -04:00 [INF] Executing OkObjectResult, writing value of type 'HotelBookingPlatform.Domain.DTOs.Guest.GuestResponse'.
2025-04-02 13:30:12.668 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.GuestController.GetGuest (HotelBookingPlatform.API) in 163.6696ms
2025-04-02 13:30:12.671 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.GuestController.GetGuest (HotelBookingPlatform.API)'
2025-04-02 13:30:12.673 -04:00 [DBG] Connection id "0HNBI0LRSJMD4" completed keep alive response.
2025-04-02 13:30:12.679 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-02 13:30:12.681 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 13:30:12.684 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 13:30:12.689 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Guest/b5666bd2-9869-4d46-b747-ce354caf4538 - 200 null application/json; charset=utf-8 283.0759ms
2025-04-02 13:31:14.986 -04:00 [DBG] Connection id "0HNBI0LRSJMD4" received FIN.
2025-04-02 13:31:15.202 -04:00 [DBG] Connection id "0HNBI0LRSJMD4" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-02 13:31:15.264 -04:00 [DBG] Connection id "0HNBI0LRSJMD4" disconnecting.
2025-04-02 13:31:15.453 -04:00 [DBG] Connection id "0HNBI0LRSJMD4" stopped.
2025-04-02 14:53:23.902 -04:00 [DBG] Connection id "0HNBI0LRSJMD5" accepted.
2025-04-02 14:53:23.925 -04:00 [DBG] Connection id "0HNBI0LRSJMD5" started.
2025-04-02 14:53:23.957 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City/1/hotels - null null
2025-04-02 14:53:23.975 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/1/hotels'
2025-04-02 14:53:23.979 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/1/hotels'
2025-04-02 14:53:23.986 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-02 14:53:24.006 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 14:53:24.055 -04:00 [DBG] Successfully validated the token.
2025-04-02 14:53:24.058 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:53:24.062 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-02 14:53:24.209 -04:00 [INF] Route matched with {action = "GetHotelsForCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotelsForCity(Int32) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-04-02 14:53:24.212 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:53:24.215 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:53:24.221 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-04-02 14:53:24.225 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:53:24.227 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:53:24.232 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-02 14:53:24.872 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-02 14:53:24.876 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-04-02 14:53:24.881 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-04-02 14:53:24.888 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-02 14:53:24.890 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-02 14:53:24.892 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-04-02 14:53:24.897 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-04-02 14:53:24.941 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-02 14:53:24.982 -04:00 [DBG] Compiling query expression: 
'DbSet<Hotel>()
    .Where(h => h.CityID == __cityId_0)
    .Include(h => h.Owner)'
2025-04-02 14:53:25.035 -04:00 [DBG] Including navigation: 'Hotel.Owner'.
2025-04-02 14:53:25.102 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Hotel>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
            1 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: Owner.Email (string) Required, 9], [Property: Owner.FirstName (string) Required MaxLength(50), 10], [Property: Owner.LastName (string) Required MaxLength(50), 11], [Property: Owner.PhoneNumber (string) Required, 12] }
        SELECT h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
        FROM Hotels AS h
        INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
        WHERE h.CityID == @__cityId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
            1 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: Owner.Email (string) Required, 9], [Property: Owner.FirstName (string) Required MaxLength(50), 10], [Property: Owner.LastName (string) Required MaxLength(50), 11], [Property: Owner.PhoneNumber (string) Required, 12] }
        SELECT h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
        FROM Hotels AS h
        INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
        WHERE h.CityID == @__cityId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Hotel entity;
        Owner entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Hotel instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Hotel);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Hotel)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                        {
                            return 
                            {
                                Hotel instance;
                                instance = new Hotel();
                                instance.<HotelId>k__BackingField = dataReader.GetInt32(0);
                                instance.<CityID>k__BackingField = dataReader.GetInt32(1);
                                instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                instance.<Name>k__BackingField = dataReader.GetString(4);
                                instance.<OwnerID>k__BackingField = dataReader.GetInt32(5);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(6);
                                instance.<StarRating>k__BackingField = dataReader.GetInt32(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Hotel)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Owner instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Owner);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Owner.OwnerID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(8) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Owner)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                        {
                            return 
                            {
                                Owner instance;
                                instance = new Owner();
                                instance.<OwnerID>k__BackingField = dataReader.GetInt32(8);
                                instance.<Email>k__BackingField = dataReader.GetString(9);
                                instance.<FirstName>k__BackingField = dataReader.GetString(10);
                                instance.<LastName>k__BackingField = dataReader.GetString(11);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Owner)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, Owner>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Hotel.Owner (Owner) ToPrincipal Owner Inverse: Hotels | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Owner")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Owner.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: Owner | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels")], 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                namelessParameter{8}.<Owner>k__BackingField = namelessParameter{9};
                return [LIFTABLE Constant: ClrICollectionAccessor<Owner, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                    entity: namelessParameter{9}, 
                    value: namelessParameter{8}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 14:53:25.132 -04:00 [DBG] Creating DbConnection.
2025-04-02 14:53:25.138 -04:00 [DBG] Created DbConnection. (5ms).
2025-04-02 14:53:25.141 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:53:25.208 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:53:25.211 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:53:25.213 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 14:53:25.219 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-04-02 14:53:25.221 -04:00 [DBG] Executing DbCommand [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-04-02 14:53:25.308 -04:00 [INF] Executed DbCommand (86ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-04-02 14:53:25.312 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:53:25.314 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-02 14:53:25.320 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:53:25.324 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-02 14:53:25.344 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API) in 1113.2764ms
2025-04-02 14:53:25.347 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-02 14:53:25.377 -04:00 [DBG] Connection id "0HNBI0LRSJMD5" completed keep alive response.
2025-04-02 14:53:25.380 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-02 14:53:25.382 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:53:25.390 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-04-02 14:53:25.392 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City/1/hotels - 400 null application/json 1436.8802ms
2025-04-02 14:53:37.328 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City/3/hotels - null null
2025-04-02 14:53:37.333 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/3/hotels'
2025-04-02 14:53:37.339 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/3/hotels'
2025-04-02 14:53:37.342 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-02 14:53:37.349 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 14:53:37.357 -04:00 [DBG] Successfully validated the token.
2025-04-02 14:53:37.360 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:53:37.362 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-02 14:53:37.364 -04:00 [INF] Route matched with {action = "GetHotelsForCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotelsForCity(Int32) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-04-02 14:53:37.379 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:53:37.390 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:53:37.392 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-04-02 14:53:37.397 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:53:37.407 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:53:37.410 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-02 14:53:37.416 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-02 14:53:37.419 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-04-02 14:53:37.421 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-04-02 14:53:37.427 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-02 14:53:37.430 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-02 14:53:37.432 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-04-02 14:53:37.437 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-04-02 14:53:37.440 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-02 14:53:37.447 -04:00 [DBG] Creating DbConnection.
2025-04-02 14:53:37.448 -04:00 [DBG] Created DbConnection. (1ms).
2025-04-02 14:53:37.452 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:53:37.454 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:53:37.456 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:53:37.461 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-04-02 14:53:37.463 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-04-02 14:53:37.469 -04:00 [DBG] Executing DbCommand [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-04-02 14:53:37.553 -04:00 [INF] Executed DbCommand (87ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-04-02 14:53:37.760 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:53:37.835 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:53:37.841 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:53:37.855 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:53:37.857 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 186ms reading results.
2025-04-02 14:53:37.860 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:53:37.862 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-02 14:53:37.905 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:53:37.910 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-02 14:53:37.912 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:53:37.918 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:53:37.921 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:53:37.924 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.Hotel.HotelBasicResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-02 14:53:37.953 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API) in 543.2057ms
2025-04-02 14:53:37.956 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-02 14:53:37.959 -04:00 [DBG] Connection id "0HNBI0LRSJMD5" completed keep alive response.
2025-04-02 14:53:37.965 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-02 14:53:37.976 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:53:37.979 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 14:53:37.982 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City/3/hotels - 200 null application/json; charset=utf-8 654.2999ms
2025-04-02 14:54:12.725 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Hotel/3 - null null
2025-04-02 14:54:12.729 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Hotel/3'
2025-04-02 14:54:12.732 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)' with route pattern 'api/Hotel/{id}' is valid for the request path '/api/Hotel/3'
2025-04-02 14:54:12.776 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-04-02 14:54:12.778 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 14:54:12.779 -04:00 [DBG] Successfully validated the token.
2025-04-02 14:54:12.780 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:54:12.782 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-04-02 14:54:12.795 -04:00 [INF] Route matched with {action = "GetHotel", controller = "Hotel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotel(Int32) on controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API).
2025-04-02 14:54:12.798 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:54:12.800 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:54:12.804 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-04-02 14:54:12.808 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:54:12.811 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:54:12.815 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-04-02 14:54:12.827 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-04-02 14:54:12.829 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 14:54:12.831 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 14:54:12.833 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:54:12.839 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:54:12.841 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 14:54:12.843 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 14:54:12.861 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-02 14:54:12.875 -04:00 [DBG] Compiling query expression: 
'DbSet<Hotel>()
    .Include(h => h.City)
    .Include(h => h.Owner)
    .Include(h => h.Reviews)
    .AsSplitQuery()
    .FirstOrDefault(h => h.HotelId == __id_0)'
2025-04-02 14:54:12.880 -04:00 [DBG] Including navigation: 'Hotel.City'.
2025-04-02 14:54:12.884 -04:00 [DBG] Including navigation: 'Hotel.Owner'.
2025-04-02 14:54:12.889 -04:00 [DBG] Including navigation: 'Hotel.Reviews'.
2025-04-02 14:54:12.973 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Hotel>(
    asyncEnumerable: SplitQueryingEnumerable.Create<Hotel>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
                1 -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: City.Country (string) Required, 9], [Property: City.CreatedAtUtc (DateTime) Required, 10], [Property: City.Description (string) Required, 11], [Property: City.Name (string) Required, 12], [Property: City.PostOffice (string) Required, 13], [Property: City.VisitCount (int) Required, 14] }
                2 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: Owner.Email (string) Required, 16], [Property: Owner.FirstName (string) Required MaxLength(50), 17], [Property: Owner.LastName (string) Required MaxLength(50), 18], [Property: Owner.PhoneNumber (string) Required, 19] }
                3 -> 0
                4 -> 8
                5 -> 15
            SELECT TOP(1) h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Hotels AS h
            INNER JOIN Cities AS c ON h.CityID == c.CityID
            INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
            WHERE h.HotelId == @__id_0
            ORDER BY h.HotelId ASC, c.CityID ASC, o.OwnerID ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
                1 -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: City.Country (string) Required, 9], [Property: City.CreatedAtUtc (DateTime) Required, 10], [Property: City.Description (string) Required, 11], [Property: City.Name (string) Required, 12], [Property: City.PostOffice (string) Required, 13], [Property: City.VisitCount (int) Required, 14] }
                2 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: Owner.Email (string) Required, 16], [Property: Owner.FirstName (string) Required MaxLength(50), 17], [Property: Owner.LastName (string) Required MaxLength(50), 18], [Property: Owner.PhoneNumber (string) Required, 19] }
                3 -> 0
                4 -> 8
                5 -> 15
            SELECT TOP(1) h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Hotels AS h
            INNER JOIN Cities AS c ON h.CityID == c.CityID
            INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
            WHERE h.HotelId == @__id_0
            ORDER BY h.HotelId ASC, c.CityID ASC, o.OwnerID ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object> } | Resolver: namelessParameter{0} => new ReaderColumn[]
        { 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("HotelId"), 
                (dataReader, indexMap) => dataReader.GetInt32(0)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CityID"), 
                (dataReader, indexMap) => dataReader.GetInt32(1)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CreatedAtUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(2)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Description"), 
                (dataReader, indexMap) => (object)dataReader.GetString(3)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Name"), 
                (dataReader, indexMap) => (object)dataReader.GetString(4)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("OwnerID"), 
                (dataReader, indexMap) => dataReader.GetInt32(5)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(6)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("StarRating"), 
                (dataReader, indexMap) => dataReader.GetInt32(7)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("CityID"), 
                (dataReader, indexMap) => dataReader.GetInt32(8)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Country"), 
                (dataReader, indexMap) => (object)dataReader.GetString(9)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("CreatedAtUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(10)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Description"), 
                (dataReader, indexMap) => (object)dataReader.GetString(11)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Name"), 
                (dataReader, indexMap) => (object)dataReader.GetString(12)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("PostOffice"), 
                (dataReader, indexMap) => (object)dataReader.GetString(13)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("VisitCount"), 
                (dataReader, indexMap) => dataReader.GetInt32(14)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("OwnerID"), 
                (dataReader, indexMap) => dataReader.GetInt32(15)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("Email"), 
                (dataReader, indexMap) => (object)dataReader.GetString(16)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("FirstName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(17)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("LastName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(18)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(19)
            ) 
        }], 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => resultContext.Values == null ? 
        {
            Hotel entity;
            City entity;
            Owner entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Hotel instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Hotel);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Hotel)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                            {
                                return 
                                {
                                    Hotel instance;
                                    instance = new Hotel();
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(0);
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(3) ? default(string) : (string)dataReader.GetFieldValue<object>(3);
                                    instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(4);
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(5);
                                    instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                    instance.<StarRating>k__BackingField = dataReader.GetInt32(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Hotel)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                City instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(City);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: City.CityID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(8) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (City)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]: 
                            {
                                return 
                                {
                                    City instance;
                                    instance = new City();
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Country>k__BackingField = (string)dataReader.GetFieldValue<object>(9);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(10);
                                    instance.<Description>k__BackingField = (string)dataReader.GetFieldValue<object>(11);
                                    instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(12);
                                    instance.<PostOffice>k__BackingField = (string)dataReader.GetFieldValue<object>(13);
                                    instance.<VisitCount>k__BackingField = dataReader.GetInt32(14);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(City)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                Owner instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(Owner);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Owner.OwnerID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(15) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (Owner)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                            {
                                return 
                                {
                                    Owner instance;
                                    instance = new Owner();
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(15);
                                    instance.<Email>k__BackingField = (string)dataReader.GetFieldValue<object>(16);
                                    instance.<FirstName>k__BackingField = (string)dataReader.GetFieldValue<object>(17);
                                    instance.<LastName>k__BackingField = (string)dataReader.GetFieldValue<object>(18);
                                    instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(19);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Owner)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, City>(
                queryContext: queryContext, 
                entity: (Hotel)(resultContext.Values[0]), 
                relatedEntity: (City)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Hotel.City (City) ToPrincipal City Inverse: Hotels | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("City")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: City.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: City | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindNavigation("Hotels")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<City>k__BackingField = namelessParameter{13};
                    return [LIFTABLE Constant: ClrICollectionAccessor<City, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                        entity: namelessParameter{13}, 
                        value: namelessParameter{12}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, Owner>(
                queryContext: queryContext, 
                entity: (Hotel)(resultContext.Values[0]), 
                relatedEntity: (Owner)(resultContext.Values[2]), 
                navigation: [LIFTABLE Constant: Navigation: Hotel.Owner (Owner) ToPrincipal Owner Inverse: Hotels | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Owner")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Owner.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: Owner | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels")], 
                fixup: (namelessParameter{17}, namelessParameter{18}) => 
                {
                    namelessParameter{17}.<Owner>k__BackingField = namelessParameter{18};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Owner, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                        entity: namelessParameter{18}, 
                        value: namelessParameter{17}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeSplitIncludeCollection<Hotel, Hotel>(
                collectionId: 0, 
                queryContext: queryContext, 
                parentDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Hotel)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(0), 
                    (object)(int?)dataReader.GetInt32(8), 
                    (object)(int?)dataReader.GetInt32(15) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Hotel.Reviews (ICollection<Review>) Collection ToDependent Review Inverse: Hotel | Resolver: namelessParameter{20} => namelessParameter{20}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<Review>, Review> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
            return } : (Hotel)(resultContext.Values[0]), 
        relatedDataLoaders: null, 
        relatedDataLoadersAsync: (queryContext, executionStrategy, resultCoordinator) => ShaperProcessingExpressionVisitor.TaskAwaiter(new Func<Task>[]{ () => ShaperProcessingExpressionVisitor.PopulateSplitIncludeCollectionAsync<Hotel, Review>(
            collectionId: 0, 
            queryContext: (RelationalQueryContext)queryContext, 
            executionStrategy: executionStrategy, 
            relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
                Client Projections:
                    0 -> Dictionary<IProperty, int> { [Property: Review.ReviewID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Review.Content (string) Required, 1], [Property: Review.CreatedAtUtc (DateTime) Required, 2], [Property: Review.HotelId (int) Required FK Index, 3], [Property: Review.ModifiedAtUtc (DateTime?), 4], [Property: Review.Rating (int) Required, 5], [Property: Review.UserId (string) Required FK Index, 6] }
                    1 -> 7
                    2 -> 8
                    3 -> 9
                SELECT r.ReviewID, r.Content, r.CreatedAtUtc, r.HotelId, r.ModifiedAtUtc, r.Rating, r.UserId, s.HotelId, s.CityID, s.OwnerID
                FROM 
                (
                    SELECT TOP(1) h.HotelId, c.CityID, o.OwnerID
                    FROM Hotels AS h
                    INNER JOIN Cities AS c ON h.CityID == c.CityID
                    INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
                    WHERE h.HotelId == @__id_0
                ) AS s
                INNER JOIN Reviews AS r ON s.HotelId == r.HotelId
                ORDER BY s.HotelId ASC, s.CityID ASC, s.OwnerID ASC) | Resolver: c => new RelationalCommandCache(
                c.Dependencies.MemoryCache, 
                c.RelationalDependencies.QuerySqlGeneratorFactory, 
                c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
                Client Projections:
                    0 -> Dictionary<IProperty, int> { [Property: Review.ReviewID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Review.Content (string) Required, 1], [Property: Review.CreatedAtUtc (DateTime) Required, 2], [Property: Review.HotelId (int) Required FK Index, 3], [Property: Review.ModifiedAtUtc (DateTime?), 4], [Property: Review.Rating (int) Required, 5], [Property: Review.UserId (string) Required FK Index, 6] }
                    1 -> 7
                    2 -> 8
                    3 -> 9
                SELECT r.ReviewID, r.Content, r.CreatedAtUtc, r.HotelId, r.ModifiedAtUtc, r.Rating, r.UserId, s.HotelId, s.CityID, s.OwnerID
                FROM 
                (
                    SELECT TOP(1) h.HotelId, c.CityID, o.OwnerID
                    FROM Hotels AS h
                    INNER JOIN Cities AS c ON h.CityID == c.CityID
                    INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
                    WHERE h.HotelId == @__id_0
                ) AS s
                INNER JOIN Reviews AS r ON s.HotelId == r.HotelId
                ORDER BY s.HotelId ASC, s.CityID ASC, s.OwnerID ASC, 
                False, 
                new HashSet<string>(
                    new string[]{ }, 
                    StringComparer.Ordinal
                )
            )].GetRelationalCommandTemplate(parameters), 
            readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<DateTime>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int> } | Resolver: namelessParameter{22} => new ReaderColumn[]
            { 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("ReviewID"), 
                    (dataReader, indexMap) => dataReader.GetInt32(0)
                ), 
                new ReaderColumn<object>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("Content"), 
                    (dataReader, indexMap) => (object)dataReader.GetString(1)
                ), 
                new ReaderColumn<DateTime>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("CreatedAtUtc"), 
                    (dataReader, indexMap) => dataReader.GetDateTime(2)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("HotelId"), 
                    (dataReader, indexMap) => dataReader.GetInt32(3)
                ), 
                new ReaderColumn<DateTime>(
                    True, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("ModifiedAtUtc"), 
                    (dataReader, indexMap) => dataReader.GetDateTime(4)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("Rating"), 
                    (dataReader, indexMap) => dataReader.GetInt32(5)
                ), 
                new ReaderColumn<object>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("UserId"), 
                    (dataReader, indexMap) => (object)dataReader.GetString(6)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(7)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(8)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(9)
                ) 
            }], 
            detailedErrorsEnabled: False, 
            resultCoordinator: resultCoordinator, 
            childIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(int?)dataReader.GetInt32(7), 
                (object)(int?)dataReader.GetInt32(8), 
                (object)(int?)dataReader.GetInt32(9) 
            }], 
            identifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
            }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Review entity;
                entity = 
                {
                    MaterializationContext materializationContext4;
                    IEntityType entityType4;
                    Review instance4;
                    InternalEntityEntry entry4;
                    bool hasNullKey4;
                    materializationContext4 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance4 = default(Review);
                    entry4 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Review.ReviewID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey4);
                    !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                    {
                        entityType4 = entry4.EntityType;
                        return instance4 = (Review)entry4.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot4;
                        shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType4 = [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")];
                        instance4 = switch (entityType4)
                        {
                            case [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{24} => namelessParameter{24}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")]: 
                                {
                                    return 
                                    {
                                        Review instance;
                                        instance = new Review();
                                        instance.<ReviewID>k__BackingField = dataReader.GetInt32(0);
                                        instance.<Content>k__BackingField = (string)dataReader.GetFieldValue<object>(1);
                                        instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<HotelId>k__BackingField = dataReader.GetInt32(3);
                                        instance.<ModifiedAtUtc>k__BackingField = dataReader.IsDBNull(4) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(4);
                                        instance.<Rating>k__BackingField = dataReader.GetInt32(5);
                                        instance.<UserId>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext4.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{25} => namelessParameter{25}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Review)
                        }
                        ;
                        entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType4, 
                            entity: instance4, 
                            snapshot: shadowSnapshot4);
                        return instance4;
                    } : default(void);
                    return instance4;
                };
                return entity;
            }, 
            relatedDataLoaders: null, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Review.Hotel (Hotel) ToPrincipal Hotel Inverse: Reviews | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindNavigation("Hotel")], 
            fixup: (namelessParameter{27}, namelessParameter{28}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<Review>, Review> | Resolver: namelessParameter{29} => namelessParameter{29}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews").GetCollectionAccessor()].Add(
                    entity: namelessParameter{27}, 
                    value: namelessParameter{28}, 
                    forMaterialization: True);
                return namelessParameter{28}.<Hotel>k__BackingField = namelessParameter{27};
            }, 
            trackingQuery: True) }), 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:54:13.039 -04:00 [DBG] Creating DbConnection.
2025-04-02 14:54:13.041 -04:00 [DBG] Created DbConnection. (1ms).
2025-04-02 14:54:13.042 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:54:13.046 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:54:13.048 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:54:13.050 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 14:54:13.054 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-02 14:54:13.056 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-04-02 14:54:13.075 -04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-04-02 14:54:13.112 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:54:13.116 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-04-02 14:54:13.122 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:54:13.124 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 14:54:13.128 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API) in 313.0508ms
2025-04-02 14:54:13.131 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-04-02 14:54:13.162 -04:00 [DBG] Connection id "0HNBI0LRSJMD5" completed keep alive response.
2025-04-02 14:54:13.164 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-02 14:54:13.166 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:54:13.173 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-04-02 14:54:13.176 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Hotel/3 - 404 null application/json 451.1768ms
2025-04-02 14:54:13.225 -04:00 [DBG] Connection id "0HNBI0LRSJMD5" received FIN.
2025-04-02 14:54:13.229 -04:00 [DBG] Connection id "0HNBI0LRSJMD5" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-02 14:54:13.231 -04:00 [DBG] Connection id "0HNBI0LRSJMD5" disconnecting.
2025-04-02 14:54:13.236 -04:00 [DBG] Connection id "0HNBI0LRSJMD5" stopped.
2025-04-02 14:54:23.143 -04:00 [DBG] Connection id "0HNBI0LRSJMD6" accepted.
2025-04-02 14:54:23.145 -04:00 [DBG] Connection id "0HNBI0LRSJMD6" started.
2025-04-02 14:54:23.147 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Hotel/2 - null null
2025-04-02 14:54:23.151 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Hotel/2'
2025-04-02 14:54:23.379 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)' with route pattern 'api/Hotel/{id}' is valid for the request path '/api/Hotel/2'
2025-04-02 14:54:23.551 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-04-02 14:54:23.574 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 14:54:23.575 -04:00 [DBG] Successfully validated the token.
2025-04-02 14:54:23.581 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:54:23.583 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-04-02 14:54:23.592 -04:00 [INF] Route matched with {action = "GetHotel", controller = "Hotel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotel(Int32) on controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API).
2025-04-02 14:54:23.598 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:54:23.600 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:54:23.605 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-04-02 14:54:23.611 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:54:23.613 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:54:23.615 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-04-02 14:54:23.625 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-04-02 14:54:23.631 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 14:54:23.634 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 14:54:23.645 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:54:23.647 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:54:23.653 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 14:54:23.656 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 14:54:23.661 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-02 14:54:23.667 -04:00 [DBG] Creating DbConnection.
2025-04-02 14:54:23.678 -04:00 [DBG] Created DbConnection. (10ms).
2025-04-02 14:54:23.681 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:54:23.690 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:54:23.696 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:54:23.699 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-02 14:54:23.701 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-02 14:54:23.713 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-04-02 14:54:23.729 -04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-04-02 14:54:23.761 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:54:23.781 -04:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:54:23.789 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:54:23.871 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:54:23.873 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:54:23.984 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:54:23.998 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (13ms).
2025-04-02 14:54:24.001 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (17ms).
2025-04-02 14:54:24.011 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-04-02 14:54:24.060 -04:00 [INF] Executed DbCommand (49ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-04-02 14:54:24.074 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:54:24.076 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 318ms reading results.
2025-04-02 14:54:24.081 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:54:24.084 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 18ms reading results.
2025-04-02 14:54:24.091 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:54:24.093 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 14:54:24.117 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:54:24.126 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-02 14:54:24.127 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:54:24.129 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:54:24.130 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:54:24.134 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Hotel.HotelResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 14:54:24.198 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API) in 582.965ms
2025-04-02 14:54:24.211 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-04-02 14:54:24.232 -04:00 [DBG] Connection id "0HNBI0LRSJMD6" completed keep alive response.
2025-04-02 14:54:24.290 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-02 14:54:24.367 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:54:24.397 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (29ms).
2025-04-02 14:54:24.409 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Hotel/2 - 200 null application/json; charset=utf-8 1261.9895ms
2025-04-02 14:54:33.254 -04:00 [DBG] Connection id "0HNBI0LRSJMD6" received FIN.
2025-04-02 14:54:33.275 -04:00 [DBG] Connection id "0HNBI0LRSJMD6" disconnecting.
2025-04-02 14:54:33.285 -04:00 [DBG] Connection id "0HNBI0LRSJMD6" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-02 14:54:33.301 -04:00 [DBG] Connection id "0HNBI0LRSJMD6" stopped.
2025-04-02 14:55:42.944 -04:00 [DBG] Connection id "0HNBI0LRSJMD7" accepted.
2025-04-02 14:55:42.948 -04:00 [DBG] Connection id "0HNBI0LRSJMD7" started.
2025-04-02 14:55:42.950 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Hotel/2/rooms - null null
2025-04-02 14:55:43.004 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Hotel/2/rooms'
2025-04-02 14:55:43.048 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetRoomsByHotelIdAsync (HotelBookingPlatform.API)' with route pattern 'api/Hotel/{hotelId}/rooms' is valid for the request path '/api/Hotel/2/rooms'
2025-04-02 14:55:43.102 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetRoomsByHotelIdAsync (HotelBookingPlatform.API)'
2025-04-02 14:55:43.113 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 14:55:43.132 -04:00 [DBG] Successfully validated the token.
2025-04-02 14:55:43.134 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:55:43.136 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetRoomsByHotelIdAsync (HotelBookingPlatform.API)'
2025-04-02 14:55:43.148 -04:00 [INF] Route matched with {action = "GetRoomsByHotelId", controller = "Hotel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRoomsByHotelIdAsync(Int32) on controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API).
2025-04-02 14:55:43.152 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:55:43.154 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:55:43.161 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:55:43.165 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:55:43.167 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:55:43.170 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-04-02 14:55:43.186 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-04-02 14:55:43.189 -04:00 [DBG] Attempting to bind parameter 'hotelId' of type 'System.Int32' ...
2025-04-02 14:55:43.194 -04:00 [DBG] Attempting to bind parameter 'hotelId' of type 'System.Int32' using the name 'hotelId' in request data ...
2025-04-02 14:55:43.198 -04:00 [DBG] Done attempting to bind parameter 'hotelId' of type 'System.Int32'.
2025-04-02 14:55:43.200 -04:00 [DBG] Done attempting to bind parameter 'hotelId' of type 'System.Int32'.
2025-04-02 14:55:43.202 -04:00 [DBG] Attempting to validate the bound parameter 'hotelId' of type 'System.Int32' ...
2025-04-02 14:55:43.211 -04:00 [DBG] Done attempting to validate the bound parameter 'hotelId' of type 'System.Int32'.
2025-04-02 14:55:43.218 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-02 14:55:43.229 -04:00 [DBG] Creating DbConnection.
2025-04-02 14:55:43.230 -04:00 [DBG] Created DbConnection. (1ms).
2025-04-02 14:55:43.232 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:55:43.234 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:55:43.237 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:55:43.243 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-04-02 14:55:43.252 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (14ms).
2025-04-02 14:55:43.254 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-04-02 14:55:43.263 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:55:43.270 -04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-04-02 14:55:43.277 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-02 14:55:43.281 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:55:43.281 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:55:43.282 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:55:43.284 -04:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:55:43.285 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:55:43.288 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:55:43.294 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Threading.Tasks.Task`1[[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.Room.RoomResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-02 14:55:43.296 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:55:43.300 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:55:43.303 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:55:43.312 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (8ms).
2025-04-02 14:55:43.315 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (12ms).
2025-04-02 14:55:43.317 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-04-02 14:55:43.327 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-04-02 14:55:43.332 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:55:43.334 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 53ms reading results.
2025-04-02 14:55:43.341 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:55:43.344 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 12ms reading results.
2025-04-02 14:55:43.347 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:55:43.349 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-02 14:55:43.359 -04:00 [DBG] Compiling query expression: 
'DbSet<Hotel>()
    .Include(h => h.RoomClasses)
    .ThenInclude(rc => rc.Rooms)
    .AsSplitQuery()
    .FirstOrDefault(h => h.HotelId == __hotelId_0)'
2025-04-02 14:55:43.369 -04:00 [DBG] Including navigation: 'Hotel.RoomClasses'.
2025-04-02 14:55:43.374 -04:00 [DBG] Including navigation: 'RoomClass.Rooms'.
2025-04-02 14:55:43.441 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Hotel>(
    asyncEnumerable: SplitQueryingEnumerable.Create<Hotel>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
                1 -> 0
            SELECT TOP(1) h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating
            FROM Hotels AS h
            WHERE h.HotelId == @__hotelId_0
            ORDER BY h.HotelId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
                1 -> 0
            SELECT TOP(1) h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating
            FROM Hotels AS h
            WHERE h.HotelId == @__hotelId_0
            ORDER BY h.HotelId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int> } | Resolver: namelessParameter{0} => new ReaderColumn[]
        { 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("HotelId"), 
                (dataReader, indexMap) => dataReader.GetInt32(0)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CityID"), 
                (dataReader, indexMap) => dataReader.GetInt32(1)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CreatedAtUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(2)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Description"), 
                (dataReader, indexMap) => (object)dataReader.GetString(3)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Name"), 
                (dataReader, indexMap) => (object)dataReader.GetString(4)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("OwnerID"), 
                (dataReader, indexMap) => dataReader.GetInt32(5)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(6)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("StarRating"), 
                (dataReader, indexMap) => dataReader.GetInt32(7)
            ) 
        }], 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => resultContext.Values == null ? 
        {
            Hotel entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Hotel instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Hotel);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Hotel)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                            {
                                return 
                                {
                                    Hotel instance;
                                    instance = new Hotel();
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(0);
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(3) ? default(string) : (string)dataReader.GetFieldValue<object>(3);
                                    instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(4);
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(5);
                                    instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                    instance.<StarRating>k__BackingField = dataReader.GetInt32(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Hotel)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            resultContext.Values = new object[]{ entity };
            ShaperProcessingExpressionVisitor.InitializeSplitIncludeCollection<Hotel, Hotel>(
                collectionId: 0, 
                queryContext: queryContext, 
                parentDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Hotel)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                navigation: [LIFTABLE Constant: Navigation: Hotel.RoomClasses (ICollection<RoomClass>) Collection ToDependent RoomClass Inverse: Hotel | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("RoomClasses")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<RoomClass>, RoomClass> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("RoomClasses").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
            return } : (Hotel)(resultContext.Values[0]), 
        relatedDataLoaders: null, 
        relatedDataLoadersAsync: (queryContext, executionStrategy, resultCoordinator) => ShaperProcessingExpressionVisitor.TaskAwaiter(new Func<Task>[]{ () => ShaperProcessingExpressionVisitor.PopulateSplitIncludeCollectionAsync<Hotel, RoomClass>(
            collectionId: 0, 
            queryContext: (RelationalQueryContext)queryContext, 
            executionStrategy: executionStrategy, 
            relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
                Client Projections:
                    0 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 1], [Property: RoomClass.Description (string) MaxLength(500), 2], [Property: RoomClass.HotelId (int) Required FK Index, 3], [Property: RoomClass.Name (string) Required, 4], [Property: RoomClass.RoomType (RoomType) Required, 5] }
                    1 -> 6
                    2 -> 0
                SELECT r.RoomClassID, r.CreatedAtUtc, r.Description, r.HotelId, r.Name, r.RoomType, h0.HotelId
                FROM 
                (
                    SELECT TOP(1) h.HotelId
                    FROM Hotels AS h
                    WHERE h.HotelId == @__hotelId_0
                ) AS h0
                INNER JOIN RoomClasses AS r ON h0.HotelId == r.HotelId
                ORDER BY h0.HotelId ASC, r.RoomClassID ASC) | Resolver: c => new RelationalCommandCache(
                c.Dependencies.MemoryCache, 
                c.RelationalDependencies.QuerySqlGeneratorFactory, 
                c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
                Client Projections:
                    0 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 1], [Property: RoomClass.Description (string) MaxLength(500), 2], [Property: RoomClass.HotelId (int) Required FK Index, 3], [Property: RoomClass.Name (string) Required, 4], [Property: RoomClass.RoomType (RoomType) Required, 5] }
                    1 -> 6
                    2 -> 0
                SELECT r.RoomClassID, r.CreatedAtUtc, r.Description, r.HotelId, r.Name, r.RoomType, h0.HotelId
                FROM 
                (
                    SELECT TOP(1) h.HotelId
                    FROM Hotels AS h
                    WHERE h.HotelId == @__hotelId_0
                ) AS h0
                INNER JOIN RoomClasses AS r ON h0.HotelId == r.HotelId
                ORDER BY h0.HotelId ASC, r.RoomClassID ASC, 
                False, 
                new HashSet<string>(
                    new string[]{ }, 
                    StringComparer.Ordinal
                )
            )].GetRelationalCommandTemplate(parameters), 
            readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int> } | Resolver: namelessParameter{6} => new ReaderColumn[]
            { 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("RoomClassID"), 
                    (dataReader, indexMap) => dataReader.GetInt32(0)
                ), 
                new ReaderColumn<DateTime>(
                    False, 
                    null, 
                    namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("CreatedAtUtc"), 
                    (dataReader, indexMap) => dataReader.GetDateTime(1)
                ), 
                new ReaderColumn<object>(
                    True, 
                    null, 
                    namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("Description"), 
                    (dataReader, indexMap) => (object)dataReader.GetString(2)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("HotelId"), 
                    (dataReader, indexMap) => dataReader.GetInt32(3)
                ), 
                new ReaderColumn<object>(
                    False, 
                    null, 
                    namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("Name"), 
                    (dataReader, indexMap) => (object)dataReader.GetString(4)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("RoomType"), 
                    (dataReader, indexMap) => dataReader.GetInt32(5)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(6)
                ) 
            }], 
            detailedErrorsEnabled: False, 
            resultCoordinator: resultCoordinator, 
            childIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(6) }], 
            identifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => resultContext.Values == null ? 
            {
                RoomClass entity;
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    RoomClass instance2;
                    InternalEntityEntry entry2;
                    bool hasNullKey2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(RoomClass);
                    entry2 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: RoomClass.RoomClassID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey2);
                    !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                    {
                        entityType2 = entry2.EntityType;
                        return instance2 = (RoomClass)entry2.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]: 
                                {
                                    return 
                                    {
                                        RoomClass instance;
                                        instance = new RoomClass();
                                        instance.<RoomClassID>k__BackingField = dataReader.GetInt32(0);
                                        instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(1);
                                        instance.<Description>k__BackingField = dataReader.IsDBNull(2) ? default(string) : (string)dataReader.GetFieldValue<object>(2);
                                        instance.<HotelId>k__BackingField = dataReader.GetInt32(3);
                                        instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(4);
                                        instance.<RoomType>k__BackingField = Invoke(((EnumToNumberConverter<RoomType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: RoomClass.RoomType (RoomType) Required | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("RoomType")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(RoomClass)
                        }
                        ;
                        entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType2, 
                            entity: instance2, 
                            snapshot: shadowSnapshot2);
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeSplitIncludeCollection<RoomClass, RoomClass>(
                    collectionId: 1, 
                    queryContext: queryContext, 
                    parentDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (RoomClass)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(int?)dataReader.GetInt32(6), 
                        (object)(int?)dataReader.GetInt32(0) 
                    }], 
                    navigation: [LIFTABLE Constant: Navigation: RoomClass.Rooms (ICollection<Room>) Collection ToDependent Room Inverse: RoomClass | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<RoomClass, ICollection<Room>, Room> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
                return } : (RoomClass)(resultContext.Values[0]), 
            relatedDataLoaders: (queryContext, executionStrategy, resultCoordinator) => ShaperProcessingExpressionVisitor.TaskAwaiter(new Func<Task>[]{ () => ShaperProcessingExpressionVisitor.PopulateSplitIncludeCollectionAsync<RoomClass, Room>(
                collectionId: 1, 
                queryContext: (RelationalQueryContext)queryContext, 
                executionStrategy: executionStrategy, 
                relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
                        1 -> 7
                        2 -> 8
                    SELECT r0.RoomID, r0.AdultsCapacity, r0.ChildrenCapacity, r0.CreatedAtUtc, r0.Number, r0.PricePerNight, r0.RoomClassID, h0.HotelId, r.RoomClassID
                    FROM 
                    (
                        SELECT TOP(1) h.HotelId
                        FROM Hotels AS h
                        WHERE h.HotelId == @__hotelId_0
                    ) AS h0
                    INNER JOIN RoomClasses AS r ON h0.HotelId == r.HotelId
                    INNER JOIN Rooms AS r0 ON r.RoomClassID == r0.RoomClassID
                    ORDER BY h0.HotelId ASC, r.RoomClassID ASC) | Resolver: c => new RelationalCommandCache(
                    c.Dependencies.MemoryCache, 
                    c.RelationalDependencies.QuerySqlGeneratorFactory, 
                    c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
                        1 -> 7
                        2 -> 8
                    SELECT r0.RoomID, r0.AdultsCapacity, r0.ChildrenCapacity, r0.CreatedAtUtc, r0.Number, r0.PricePerNight, r0.RoomClassID, h0.HotelId, r.RoomClassID
                    FROM 
                    (
                        SELECT TOP(1) h.HotelId
                        FROM Hotels AS h
                        WHERE h.HotelId == @__hotelId_0
                    ) AS h0
                    INNER JOIN RoomClasses AS r ON h0.HotelId == r.HotelId
                    INNER JOIN Rooms AS r0 ON r.RoomClassID == r0.RoomClassID
                    ORDER BY h0.HotelId ASC, r.RoomClassID ASC, 
                    False, 
                    new HashSet<string>(
                        new string[]{ }, 
                        StringComparer.Ordinal
                    )
                )].GetRelationalCommandTemplate(parameters), 
                readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<decimal>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int> } | Resolver: namelessParameter{13} => new ReaderColumn[]
                { 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{13}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("RoomID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(0)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{13}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("AdultsCapacity"), 
                        (dataReader, indexMap) => dataReader.GetInt32(1)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{13}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("ChildrenCapacity"), 
                        (dataReader, indexMap) => dataReader.GetInt32(2)
                    ), 
                    new ReaderColumn<DateTime>(
                        False, 
                        null, 
                        namelessParameter{13}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("CreatedAtUtc"), 
                        (dataReader, indexMap) => dataReader.GetDateTime(3)
                    ), 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        namelessParameter{13}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("Number"), 
                        (dataReader, indexMap) => (object)dataReader.GetString(4)
                    ), 
                    new ReaderColumn<decimal>(
                        False, 
                        null, 
                        namelessParameter{13}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("PricePerNight"), 
                        (dataReader, indexMap) => dataReader.GetDecimal(5)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{13}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("RoomClassID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(6)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(7)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(8)
                    ) 
                }], 
                detailedErrorsEnabled: False, 
                resultCoordinator: resultCoordinator, 
                childIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(7), 
                    (object)(int?)dataReader.GetInt32(8) 
                }], 
                identifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Room entity;
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Room instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Room);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Room.RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindPrimaryKey()], 
                            keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                            throwOnNullKey: True, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Room)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]: 
                                    {
                                        return 
                                        {
                                            Room instance;
                                            instance = new Room();
                                            instance.<RoomID>k__BackingField = dataReader.GetInt32(0);
                                            instance.<AdultsCapacity>k__BackingField = dataReader.GetInt32(1);
                                            instance.<ChildrenCapacity>k__BackingField = dataReader.GetInt32(2);
                                            instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(3);
                                            instance.<Number>k__BackingField = (string)dataReader.GetFieldValue<object>(4);
                                            instance.<PricePerNight>k__BackingField = dataReader.GetDecimal(5);
                                            instance.<RoomClassID>k__BackingField = dataReader.GetInt32(6);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Room)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    return entity;
                }, 
                relatedDataLoaders: null, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Room.RoomClass (RoomClass) ToPrincipal RoomClass Inverse: Rooms | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindNavigation("RoomClass")], 
                fixup: (namelessParameter{18}, namelessParameter{19}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<RoomClass, ICollection<Room>, Room> | Resolver: namelessParameter{20} => namelessParameter{20}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms").GetCollectionAccessor()].Add(
                        entity: namelessParameter{18}, 
                        value: namelessParameter{19}, 
                        forMaterialization: True);
                    return namelessParameter{19}.<RoomClass>k__BackingField = namelessParameter{18};
                }, 
                trackingQuery: True) }), 
            inverseNavigation: [LIFTABLE Constant: Navigation: RoomClass.Hotel (Hotel) ToPrincipal Hotel Inverse: RoomClasses | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Hotel")], 
            fixup: (namelessParameter{22}, namelessParameter{23}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<RoomClass>, RoomClass> | Resolver: namelessParameter{24} => namelessParameter{24}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("RoomClasses").GetCollectionAccessor()].Add(
                    entity: namelessParameter{22}, 
                    value: namelessParameter{23}, 
                    forMaterialization: True);
                return namelessParameter{23}.<Hotel>k__BackingField = namelessParameter{22};
            }, 
            trackingQuery: True) }), 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:55:43.486 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:55:43.488 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:55:43.495 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:55:43.497 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 14:55:43.498 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-02 14:55:43.500 -04:00 [DBG] Executing DbCommand [Parameters=[@__hotelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating"
FROM "Hotels" AS h
WHERE h."HotelId" = @__hotelId_0
ORDER BY h."HotelId"
LIMIT 1
2025-04-02 14:55:43.508 -04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__hotelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating"
FROM "Hotels" AS h
WHERE h."HotelId" = @__hotelId_0
ORDER BY h."HotelId"
LIMIT 1
2025-04-02 14:55:43.520 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:55:43.526 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-04-02 14:55:43.529 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-04-02 14:55:43.531 -04:00 [DBG] Executing DbCommand [Parameters=[@__hotelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomClassID", r."CreatedAtUtc", r."Description", r."HotelId", r."Name", r."RoomType", h0."HotelId"
FROM (
    SELECT h."HotelId"
    FROM "Hotels" AS h
    WHERE h."HotelId" = @__hotelId_0
    LIMIT 1
) AS h0
INNER JOIN "RoomClasses" AS r ON h0."HotelId" = r."HotelId"
ORDER BY h0."HotelId", r."RoomClassID"
2025-04-02 14:55:43.545 -04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__hotelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomClassID", r."CreatedAtUtc", r."Description", r."HotelId", r."Name", r."RoomType", h0."HotelId"
FROM (
    SELECT h."HotelId"
    FROM "Hotels" AS h
    WHERE h."HotelId" = @__hotelId_0
    LIMIT 1
) AS h0
INNER JOIN "RoomClasses" AS r ON h0."HotelId" = r."HotelId"
ORDER BY h0."HotelId", r."RoomClassID"
2025-04-02 14:55:43.579 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:55:43.602 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:55:43.603 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 14:55:43.609 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-04-02 14:55:43.611 -04:00 [DBG] Executing DbCommand [Parameters=[@__hotelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r0."RoomID", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID", h0."HotelId", r."RoomClassID"
FROM (
    SELECT h."HotelId"
    FROM "Hotels" AS h
    WHERE h."HotelId" = @__hotelId_0
    LIMIT 1
) AS h0
INNER JOIN "RoomClasses" AS r ON h0."HotelId" = r."HotelId"
INNER JOIN "Rooms" AS r0 ON r."RoomClassID" = r0."RoomClassID"
ORDER BY h0."HotelId", r."RoomClassID"
2025-04-02 14:55:43.620 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__hotelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r0."RoomID", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID", h0."HotelId", r."RoomClassID"
FROM (
    SELECT h."HotelId"
    FROM "Hotels" AS h
    WHERE h."HotelId" = @__hotelId_0
    LIMIT 1
) AS h0
INNER JOIN "RoomClasses" AS r ON h0."HotelId" = r."HotelId"
INNER JOIN "Rooms" AS r0 ON r."RoomClassID" = r0."RoomClassID"
ORDER BY h0."HotelId", r."RoomClassID"
2025-04-02 14:55:43.664 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:55:43.687 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:55:43.694 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:55:43.696 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 184ms reading results.
2025-04-02 14:55:43.699 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:55:43.701 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 151ms reading results.
2025-04-02 14:55:43.704 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:55:43.709 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 65ms reading results.
2025-04-02 14:55:43.712 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:55:43.714 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 14:55:43.737 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.HotelController.GetRoomsByHotelIdAsync (HotelBookingPlatform.API) in 567.8602ms
2025-04-02 14:55:43.742 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetRoomsByHotelIdAsync (HotelBookingPlatform.API)'
2025-04-02 14:55:43.744 -04:00 [DBG] Connection id "0HNBI0LRSJMD7" completed keep alive response.
2025-04-02 14:55:43.748 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-02 14:55:43.749 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:55:43.752 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-02 14:55:43.761 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Hotel/2/rooms - 200 null application/json; charset=utf-8 810.9995ms
2025-04-02 14:56:43.032 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Booking/create - application/json 258
2025-04-02 14:56:43.049 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/create'
2025-04-02 14:56:43.051 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/create' is valid for the request path '/api/Booking/create'
2025-04-02 14:56:43.080 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-04-02 14:56:43.084 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 14:56:43.086 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-02 14:56:43.089 -04:00 [INF] CORS policy execution failed.
2025-04-02 14:56:43.095 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-02 14:56:43.102 -04:00 [DBG] Successfully validated the token.
2025-04-02 14:56:43.104 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:56:43.107 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-04-02 14:56:43.119 -04:00 [INF] Route matched with {action = "CreateBooking", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateBooking(HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-04-02 14:56:43.123 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:56:43.154 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:56:43.157 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-04-02 14:56:43.186 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:56:43.212 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:56:43.220 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-04-02 14:56:43.238 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-04-02 14:56:43.255 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-04-02 14:56:43.282 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' using the name '' in request data ...
2025-04-02 14:56:43.285 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 14:56:43.300 -04:00 [DBG] Connection id "0HNBI0LRSJMD7", Request id "0HNBI0LRSJMD7:00000002": started reading request body.
2025-04-02 14:56:43.302 -04:00 [DBG] Connection id "0HNBI0LRSJMD7", Request id "0HNBI0LRSJMD7:00000002": done reading request body.
2025-04-02 14:56:43.332 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'
2025-04-02 14:56:43.352 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-04-02 14:56:43.370 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-04-02 14:56:43.396 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-04-02 14:56:43.453 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-04-02 14:56:43.483 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-02 14:56:43.494 -04:00 [DBG] Creating DbConnection.
2025-04-02 14:56:43.497 -04:00 [DBG] Created DbConnection. (2ms).
2025-04-02 14:56:43.500 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.513 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.524 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:56:43.528 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-04-02 14:56:43.531 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-04-02 14:56:43.533 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 14:56:43.555 -04:00 [INF] Executed DbCommand (23ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-02 14:56:43.565 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:56:43.573 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:56:43.579 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.581 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 18ms reading results.
2025-04-02 14:56:43.585 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.587 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-02 14:56:43.596 -04:00 [DBG] Compiling query expression: 
'DbSet<Room>()
    .Include(r => r.RoomClass)
    .FirstOrDefault(r => r.RoomID == __id_0)'
2025-04-02 14:56:43.600 -04:00 [DBG] Including navigation: 'Room.RoomClass'.
2025-04-02 14:56:43.616 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Room>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Room>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
                1 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 8], [Property: RoomClass.Description (string) MaxLength(500), 9], [Property: RoomClass.HotelId (int) Required FK Index, 10], [Property: RoomClass.Name (string) Required, 11], [Property: RoomClass.RoomType (RoomType) Required, 12] }
            SELECT TOP(1) r.RoomID, r.AdultsCapacity, r.ChildrenCapacity, r.CreatedAtUtc, r.Number, r.PricePerNight, r.RoomClassID, r0.RoomClassID, r0.CreatedAtUtc, r0.Description, r0.HotelId, r0.Name, r0.RoomType
            FROM Rooms AS r
            INNER JOIN RoomClasses AS r0 ON r.RoomClassID == r0.RoomClassID
            WHERE r.RoomID == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
                1 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 8], [Property: RoomClass.Description (string) MaxLength(500), 9], [Property: RoomClass.HotelId (int) Required FK Index, 10], [Property: RoomClass.Name (string) Required, 11], [Property: RoomClass.RoomType (RoomType) Required, 12] }
            SELECT TOP(1) r.RoomID, r.AdultsCapacity, r.ChildrenCapacity, r.CreatedAtUtc, r.Number, r.PricePerNight, r.RoomClassID, r0.RoomClassID, r0.CreatedAtUtc, r0.Description, r0.HotelId, r0.Name, r0.RoomType
            FROM Rooms AS r
            INNER JOIN RoomClasses AS r0 ON r.RoomClassID == r0.RoomClassID
            WHERE r.RoomID == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Room entity;
            RoomClass entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Room instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Room);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Room.RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Room)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]: 
                            {
                                return 
                                {
                                    Room instance;
                                    instance = new Room();
                                    instance.<RoomID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AdultsCapacity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ChildrenCapacity>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<Number>k__BackingField = dataReader.GetString(4);
                                    instance.<PricePerNight>k__BackingField = dataReader.GetDecimal(5);
                                    instance.<RoomClassID>k__BackingField = dataReader.GetInt32(6);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Room)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                RoomClass instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(RoomClass);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: RoomClass.RoomClassID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(7) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (RoomClass)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]: 
                            {
                                return 
                                {
                                    RoomClass instance;
                                    instance = new RoomClass();
                                    instance.<RoomClassID>k__BackingField = dataReader.GetInt32(7);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(8);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(10);
                                    instance.<Name>k__BackingField = dataReader.GetString(11);
                                    instance.<RoomType>k__BackingField = Invoke(((EnumToNumberConverter<RoomType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: RoomClass.RoomType (RoomType) Required | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("RoomType")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(12));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(RoomClass)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Room, Room, RoomClass>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Room.RoomClass (RoomClass) ToPrincipal RoomClass Inverse: Rooms | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindNavigation("RoomClass")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: RoomClass.Rooms (ICollection<Room>) Collection ToDependent Room Inverse: RoomClass | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms")], 
                fixup: (namelessParameter{9}, namelessParameter{10}) => 
                {
                    namelessParameter{9}.<RoomClass>k__BackingField = namelessParameter{10};
                    return [LIFTABLE Constant: ClrICollectionAccessor<RoomClass, ICollection<Room>, Room> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:56:43.635 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.638 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.640 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:56:43.644 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-04-02 14:56:43.646 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-02 14:56:43.648 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-04-02 14:56:43.653 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-04-02 14:56:43.660 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:56:43.663 -04:00 [DBG] The navigation 'Room.RoomClass' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:56:43.666 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:56:43.668 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.670 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 11ms reading results.
2025-04-02 14:56:43.672 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.677 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-02 14:56:43.683 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.685 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.687 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:56:43.688 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 14:56:43.690 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-02 14:56:43.696 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-04-02 14:56:43.701 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-04-02 14:56:43.704 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.706 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-04-02 14:56:43.710 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.713 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 14:56:43.721 -04:00 [DBG] Compiling query expression: 
'DbSet<Discount>()
    .Where(d => d.RoomID == __roomId_0 && d.StartDateUtc <= __checkOutDate_1 && d.EndDateUtc >= __checkInDate_2 && DateTime.UtcNow >= d.StartDateUtc && DateTime.UtcNow <= d.EndDateUtc)
    .FirstOrDefault()'
2025-04-02 14:56:43.746 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Discount>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Discount>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Discount.DiscountID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Discount.CreatedAtUtc (DateTime) Required, 1], [Property: Discount.EndDateUtc (DateTime) Required, 2], [Property: Discount.IsActive (bool) Required, 3], [Property: Discount.Percentage (decimal) Required, 4], [Property: Discount.RoomClassID (no field, int?) Shadow FK Index, 5], [Property: Discount.RoomID (int) Required FK Index, 6], [Property: Discount.StartDateUtc (DateTime) Required, 7] }
            SELECT TOP(1) d.DiscountID, d.CreatedAtUtc, d.EndDateUtc, d.IsActive, d.Percentage, d.RoomClassID, d.RoomID, d.StartDateUtc
            FROM Discounts AS d
            WHERE ((((d.RoomID == @__roomId_0) && (d.StartDateUtc <= @__checkOutDate_1)) && (d.EndDateUtc >= @__checkInDate_2)) && (now() >= d.StartDateUtc)) && (now() <= d.EndDateUtc)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Discount.DiscountID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Discount.CreatedAtUtc (DateTime) Required, 1], [Property: Discount.EndDateUtc (DateTime) Required, 2], [Property: Discount.IsActive (bool) Required, 3], [Property: Discount.Percentage (decimal) Required, 4], [Property: Discount.RoomClassID (no field, int?) Shadow FK Index, 5], [Property: Discount.RoomID (int) Required FK Index, 6], [Property: Discount.StartDateUtc (DateTime) Required, 7] }
            SELECT TOP(1) d.DiscountID, d.CreatedAtUtc, d.EndDateUtc, d.IsActive, d.Percentage, d.RoomClassID, d.RoomID, d.StartDateUtc
            FROM Discounts AS d
            WHERE ((((d.RoomID == @__roomId_0) && (d.StartDateUtc <= @__checkOutDate_1)) && (d.EndDateUtc >= @__checkInDate_2)) && (now() >= d.StartDateUtc)) && (now() <= d.EndDateUtc), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Discount entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Discount instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Discount);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Discount.DiscountID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Discount").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Discount)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Discount | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Discount")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Discount | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Discount")]: 
                            {
                                shadowSnapshot1 = (ISnapshot)new Snapshot<int?>(dataReader.IsDBNull(5) ? default(int?) : (int?)dataReader.GetInt32(5));
                                return 
                                {
                                    Discount instance;
                                    instance = new Discount();
                                    instance.<DiscountID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EndDateUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<IsActive>k__BackingField = dataReader.GetBoolean(3);
                                    instance.<Percentage>k__BackingField = dataReader.GetDecimal(4);
                                    instance.<RoomID>k__BackingField = dataReader.GetInt32(6);
                                    instance.<StartDateUtc>k__BackingField = dataReader.GetDateTime(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Discount | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Discount")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Discount)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:56:43.768 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.770 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.772 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:56:43.774 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 14:56:43.778 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-02 14:56:43.780 -04:00 [DBG] Executing DbCommand [Parameters=[@__roomId_0='?' (DbType = Int32), @__checkOutDate_1='?' (DbType = DateTime), @__checkInDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT d."DiscountID", d."CreatedAtUtc", d."EndDateUtc", d."IsActive", d."Percentage", d."RoomClassID", d."RoomID", d."StartDateUtc"
FROM "Discounts" AS d
WHERE d."RoomID" = @__roomId_0 AND d."StartDateUtc" <= @__checkOutDate_1 AND d."EndDateUtc" >= @__checkInDate_2 AND now() >= d."StartDateUtc" AND now() <= d."EndDateUtc"
LIMIT 1
2025-04-02 14:56:43.794 -04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__roomId_0='?' (DbType = Int32), @__checkOutDate_1='?' (DbType = DateTime), @__checkInDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT d."DiscountID", d."CreatedAtUtc", d."EndDateUtc", d."IsActive", d."Percentage", d."RoomClassID", d."RoomID", d."StartDateUtc"
FROM "Discounts" AS d
WHERE d."RoomID" = @__roomId_0 AND d."StartDateUtc" <= @__checkOutDate_1 AND d."EndDateUtc" >= @__checkInDate_2 AND now() >= d."StartDateUtc" AND now() <= d."EndDateUtc"
LIMIT 1
2025-04-02 14:56:43.797 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.799 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-04-02 14:56:43.802 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.804 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 14:56:43.811 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.813 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.815 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:56:43.816 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 14:56:43.818 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-02 14:56:43.822 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-04-02 14:56:43.830 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-04-02 14:56:43.836 -04:00 [DBG] The navigation 'RoomClass.Hotel' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:56:43.838 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:56:43.840 -04:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:56:43.845 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:56:43.848 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:56:43.851 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:56:43.853 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:56:43.855 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 14:56:43.856 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-02 14:56:43.860 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-04-02 14:56:43.865 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-04-02 14:56:43.870 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.872 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 36ms reading results.
2025-04-02 14:56:43.877 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.880 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-04-02 14:56:43.884 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.888 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-02 14:56:43.897 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.902 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.904 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:56:43.905 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 14:56:43.907 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-02 14:56:43.912 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-04-02 14:56:43.917 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-04-02 14:56:43.921 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.923 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-04-02 14:56:43.928 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:43.930 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 14:56:43.968 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Booking.BookingID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:56:44.024 -04:00 [DBG] Context 'AppDbContext' started tracking 'Booking' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:56:44.040 -04:00 [DBG] Context 'AppDbContext' started tracking 'BookingRoom' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:56:44.049 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-02 14:56:44.050 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-02 14:56:44.106 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-02 14:56:44.130 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:44.132 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:44.134 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:56:44.137 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:56:44.139 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:56:44.140 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 14:56:44.147 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-04-02 14:56:44.149 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Decimal), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?', @p6='?' (DbType = Guid), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Decimal), @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Bookings" ("AfterDiscountedPrice", "BookingDateUtc", "CheckInDateUtc", "CheckOutDateUtc", "ConfirmationNumber", "CreatedById", "GuestId", "HotelId", "PaymentMethod", "Status", "TotalPrice", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11)
RETURNING "BookingID";
2025-04-02 14:56:44.193 -04:00 [INF] Executed DbCommand (44ms) [Parameters=[@p0='?' (DbType = Decimal), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?', @p6='?' (DbType = Guid), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Decimal), @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Bookings" ("AfterDiscountedPrice", "BookingDateUtc", "CheckInDateUtc", "CheckOutDateUtc", "ConfirmationNumber", "CreatedById", "GuestId", "HotelId", "PaymentMethod", "Status", "TotalPrice", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11)
RETURNING "BookingID";
2025-04-02 14:56:44.200 -04:00 [DBG] The foreign key property 'Booking.BookingID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 14:56:44.207 -04:00 [DBG] The foreign key property 'BookingRoom.BookingID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 14:56:44.213 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:44.215 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 18ms reading results.
2025-04-02 14:56:44.220 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:56:44.222 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-02 14:56:44.223 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-02 14:56:44.226 -04:00 [DBG] Executing DbCommand [Parameters=[@p12='?' (DbType = Int32), @p13='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "BookingRoom" ("BookingID", "RoomID")
VALUES (@p12, @p13);
2025-04-02 14:56:44.238 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@p12='?' (DbType = Int32), @p13='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "BookingRoom" ("BookingID", "RoomID")
VALUES (@p12, @p13);
2025-04-02 14:56:44.242 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:44.244 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-02 14:56:44.249 -04:00 [DBG] Committing transaction.
2025-04-02 14:56:44.255 -04:00 [DBG] Committed transaction.
2025-04-02 14:56:44.257 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:44.259 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-02 14:56:44.262 -04:00 [DBG] Disposing transaction.
2025-04-02 14:56:44.265 -04:00 [DBG] An entity of type 'Booking' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:56:44.269 -04:00 [DBG] An entity of type 'BookingRoom' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:56:44.272 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-04-02 14:56:44.277 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-02 14:56:44.278 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-02 14:56:44.280 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-02 14:56:44.282 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 0 entities written to the database.
2025-04-02 14:56:44.295 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:56:44.299 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-02 14:56:44.300 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:56:44.302 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:56:44.303 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:56:44.305 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Booking.BookingDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 14:56:44.322 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API) in 1102.4891ms
2025-04-02 14:56:44.327 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-04-02 14:56:44.329 -04:00 [DBG] Connection id "0HNBI0LRSJMD7" completed keep alive response.
2025-04-02 14:56:44.331 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-02 14:56:44.333 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-02 14:56:44.336 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-02 14:56:44.339 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Booking/create - 200 null application/json; charset=utf-8 1306.7893ms
2025-04-02 14:57:13.489 -04:00 [DBG] Connection id "0HNBI0LRSJMD7" received FIN.
2025-04-02 14:57:13.495 -04:00 [DBG] Connection id "0HNBI0LRSJMD7" disconnecting.
2025-04-02 14:57:13.498 -04:00 [DBG] Connection id "0HNBI0LRSJMD7" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-02 14:57:13.503 -04:00 [DBG] Connection id "0HNBI0LRSJMD7" stopped.
2025-04-02 14:57:37.858 -04:00 [DBG] Connection id "0HNBI0LRSJMD8" accepted.
2025-04-02 14:57:37.859 -04:00 [DBG] Connection id "0HNBI0LRSJMD8" started.
2025-04-02 14:57:37.862 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Booking/create - application/json 258
2025-04-02 14:57:37.919 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/create'
2025-04-02 14:57:37.922 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/create' is valid for the request path '/api/Booking/create'
2025-04-02 14:57:37.925 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-04-02 14:57:37.927 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-02 14:57:37.936 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-02 14:57:37.940 -04:00 [INF] CORS policy execution failed.
2025-04-02 14:57:37.942 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-02 14:57:37.948 -04:00 [DBG] Successfully validated the token.
2025-04-02 14:57:37.950 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:57:37.951 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-04-02 14:57:37.953 -04:00 [INF] Route matched with {action = "CreateBooking", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateBooking(HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-04-02 14:57:37.959 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:57:37.966 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:57:37.968 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-04-02 14:57:37.972 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:57:37.975 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:57:37.999 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-04-02 14:57:38.004 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-04-02 14:57:38.025 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-04-02 14:57:38.042 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' using the name '' in request data ...
2025-04-02 14:57:38.055 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 14:57:38.057 -04:00 [DBG] Connection id "0HNBI0LRSJMD8", Request id "0HNBI0LRSJMD8:00000001": started reading request body.
2025-04-02 14:57:38.074 -04:00 [DBG] Connection id "0HNBI0LRSJMD8", Request id "0HNBI0LRSJMD8:00000001": done reading request body.
2025-04-02 14:57:38.116 -04:00 [DBG] JSON input formatter threw an exception: 'C' is an invalid start of a value. Path: $.paymentMethod | LineNumber: 7 | BytePositionInLine: 19.
2025-04-02 14:57:38.118 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-04-02 14:57:38.134 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-04-02 14:57:38.136 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-04-02 14:57:38.147 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-04-02 14:57:38.151 -04:00 [DBG] The request has model state errors, returning an error response.
2025-04-02 14:57:38.162 -04:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-04-02 14:57:38.165 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:57:38.193 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-02 14:57:38.199 -04:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-04-02 14:57:38.202 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-04-02 14:57:38.204 -04:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-04-02 14:57:38.257 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API) in 258.62ms
2025-04-02 14:57:38.259 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-04-02 14:57:38.264 -04:00 [DBG] Connection id "0HNBI0LRSJMD8" completed keep alive response.
2025-04-02 14:57:38.270 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Booking/create - 400 null application/problem+json; charset=utf-8 407.8612ms
2025-04-02 14:58:53.619 -04:00 [DBG] Connection id "0HNBI0LRSJMD8" received FIN.
2025-04-02 14:58:53.650 -04:00 [DBG] Connection id "0HNBI0LRSJMD8" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-02 14:58:53.655 -04:00 [DBG] Connection id "0HNBI0LRSJMD8" disconnecting.
2025-04-02 14:58:53.658 -04:00 [DBG] Connection id "0HNBI0LRSJMD8" stopped.
2025-04-03 07:09:09.046 -04:00 [WRN] As of ""2025-04-03T11:09:07.4879099+00:00"", the heartbeat has been running for ""00:00:01.9235218"" which is longer than ""00:00:01"". This could be caused by thread pool starvation.
2025-04-09 12:14:05.498 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-09 12:14:05.963 -04:00 [DBG] Hosting starting
2025-04-09 12:14:06.015 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-09 12:14:06.035 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-04-09 12:14:06.101 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-04-09 12:14:06.121 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-04-09 12:14:06.132 -04:00 [DBG] Key {e823be8a-c8ba-474a-8dae-32f6009b36bd} is no longer under consideration as default key because it is expired, revoked, or cannot be deciphered.
2025-04-09 12:14:06.152 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-09 12:14:06.161 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-04-09 12:14:06.172 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-09 12:14:06.185 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-09 12:14:06.195 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-09 12:14:06.207 -04:00 [DBG] Repository contains no viable default key. Caller should generate a key with immediate activation.
2025-04-09 12:14:06.209 -04:00 [DBG] Policy resolution states that a new key should be added to the key ring.
2025-04-09 12:14:06.216 -04:00 [INF] Creating key {f49e2f57-a336-4a02-9bd7-34e9429d6980} with creation date 2025-04-09 16:14:06Z, activation date 2025-04-09 16:14:06Z, and expiration date 2025-07-08 16:14:06Z.
2025-04-09 12:14:06.229 -04:00 [DBG] Descriptor deserializer type for key {f49e2f57-a336-4a02-9bd7-34e9429d6980} is 'Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'.
2025-04-09 12:14:06.232 -04:00 [DBG] No key escrow sink found. Not writing key {f49e2f57-a336-4a02-9bd7-34e9429d6980} to escrow.
2025-04-09 12:14:06.251 -04:00 [DBG] Encrypting to Windows DPAPI for current user account (DESKTOP-QIQ2QBT\plais).
2025-04-09 12:14:06.262 -04:00 [INF] Writing data to file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-f49e2f57-a336-4a02-9bd7-34e9429d6980.xml'.
2025-04-09 12:14:06.268 -04:00 [DBG] Key cache expiration token triggered by 'CreateNewKey' operation.
2025-04-09 12:14:06.271 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-04-09 12:14:06.275 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-f49e2f57-a336-4a02-9bd7-34e9429d6980.xml'.
2025-04-09 12:14:06.302 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-04-09 12:14:06.307 -04:00 [DBG] Found key {f49e2f57-a336-4a02-9bd7-34e9429d6980}.
2025-04-09 12:14:06.309 -04:00 [DBG] Considering key {f49e2f57-a336-4a02-9bd7-34e9429d6980} with expiration date 2025-07-08 16:14:06Z as default key.
2025-04-09 12:14:06.312 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-09 12:14:06.315 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-04-09 12:14:06.318 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-09 12:14:06.322 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-09 12:14:06.331 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-09 12:14:06.334 -04:00 [DBG] Using key {f49e2f57-a336-4a02-9bd7-34e9429d6980} as the default key.
2025-04-09 12:14:06.338 -04:00 [DBG] Key ring with default key {f49e2f57-a336-4a02-9bd7-34e9429d6980} was loaded during application startup.
2025-04-09 12:14:06.481 -04:00 [INF] Now listening on: http://localhost:5004
2025-04-09 12:14:06.482 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-04-09 12:14:06.484 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-04-09 12:14:06.485 -04:00 [INF] Hosting environment: Development
2025-04-09 12:14:06.486 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-04-09 12:14:06.487 -04:00 [DBG] Hosting started
2025-04-09 12:14:20.842 -04:00 [DBG] Connection id "0HNBNG6B0QIEN" accepted.
2025-04-09 12:14:20.845 -04:00 [DBG] Connection id "0HNBNG6B0QIEN" started.
2025-04-09 12:14:21.323 -04:00 [DBG] Connection id "0HNBNG6B0QIEO" accepted.
2025-04-09 12:14:21.558 -04:00 [DBG] Connection id "0HNBNG6B0QIEO" started.
2025-04-09 12:14:21.867 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-04-09 12:14:21.978 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-04-09 12:14:22.126 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-09 12:14:22.128 -04:00 [DBG] Request did not match any endpoints
2025-04-09 12:14:23.107 -04:00 [DBG] Connection id "0HNBNG6B0QIEN" completed keep alive response.
2025-04-09 12:14:23.113 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 1249.687ms
2025-04-09 12:14:27.295 -04:00 [DBG] Connection id "0HNBNG6B0QIEO" received FIN.
2025-04-09 12:14:27.295 -04:00 [DBG] Connection id "0HNBNG6B0QIEN" received FIN.
2025-04-09 12:14:27.300 -04:00 [DBG] Connection id "0HNBNG6B0QIEO" disconnecting.
2025-04-09 12:14:27.300 -04:00 [DBG] Connection id "0HNBNG6B0QIEN" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-09 12:14:27.302 -04:00 [DBG] Connection id "0HNBNG6B0QIEO" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-09 12:14:27.305 -04:00 [DBG] Connection id "0HNBNG6B0QIEN" disconnecting.
2025-04-09 12:14:27.308 -04:00 [DBG] Connection id "0HNBNG6B0QIEN" stopped.
2025-04-09 12:14:27.309 -04:00 [DBG] Connection id "0HNBNG6B0QIEO" stopped.
2025-04-09 12:15:15.855 -04:00 [DBG] Connection id "0HNBNG6B0QIEP" accepted.
2025-04-09 12:15:15.858 -04:00 [DBG] Connection id "0HNBNG6B0QIEP" started.
2025-04-09 12:15:15.860 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 62
2025-04-09 12:15:15.897 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-04-09 12:15:15.914 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-04-09 12:15:15.926 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-09 12:15:15.942 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-09 12:15:15.960 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-09 12:15:15.962 -04:00 [INF] CORS policy execution failed.
2025-04-09 12:15:15.964 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-09 12:15:15.977 -04:00 [WRN] Failed to determine the https port for redirect.
2025-04-09 12:15:16.042 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-04-09 12:15:16.045 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-09 12:15:16.091 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-04-09 12:15:16.095 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-09 12:15:16.098 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-09 12:15:16.104 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-09 12:15:16.110 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-09 12:15:16.114 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-09 12:15:16.123 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-09 12:15:16.880 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-09 12:15:16.988 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-09 12:15:17.000 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-09 12:15:17.006 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-04-09 12:15:17.012 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-09 12:15:17.088 -04:00 [DBG] Connection id "0HNBNG6B0QIEP", Request id "0HNBNG6B0QIEP:00000001": started reading request body.
2025-04-09 12:15:17.091 -04:00 [DBG] Connection id "0HNBNG6B0QIEP", Request id "0HNBNG6B0QIEP:00000001": done reading request body.
2025-04-09 12:15:17.122 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-04-09 12:15:17.124 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-09 12:15:17.126 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-09 12:15:17.128 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-09 12:15:17.153 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-09 12:15:17.628 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-09 12:15:17.696 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-09 12:15:17.951 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-09 12:15:17.997 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-09 12:15:18.072 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-09 12:15:18.076 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-09 12:15:18.096 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-09 12:15:18.194 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-04-09 12:15:18.197 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-04-09 12:15:18.203 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-04-09 12:15:18.207 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-04-09 12:15:18.209 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-04-09 12:15:18.542 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-09 12:15:18.544 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-09 12:15:18.546 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-09 12:15:18.731 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-09 12:15:18.859 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-04-09 12:15:18.928 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-04-09 12:15:19.450 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-09 12:15:19.580 -04:00 [DBG] Creating DbConnection.
2025-04-09 12:15:19.641 -04:00 [DBG] Created DbConnection. (61ms).
2025-04-09 12:15:19.647 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:19.959 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:19.973 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-09 12:15:19.996 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (17ms).
2025-04-09 12:15:20.008 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (35ms).
2025-04-09 12:15:20.031 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-09 12:15:20.172 -04:00 [INF] Executed DbCommand (150ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-09 12:15:20.256 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-09 12:15:20.343 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-09 12:15:20.378 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.394 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 213ms reading results.
2025-04-09 12:15:20.402 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.410 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-04-09 12:15:20.543 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-04-09 12:15:20.559 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-09 12:15:20.570 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.573 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.575 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-09 12:15:20.577 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-09 12:15:20.579 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-09 12:15:20.581 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-09 12:15:20.592 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-09 12:15:20.597 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.602 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-04-09 12:15:20.604 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.607 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-09 12:15:20.622 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-04-09 12:15:20.645 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-09 12:15:20.653 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.656 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.658 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-09 12:15:20.659 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-09 12:15:20.661 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-09 12:15:20.663 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-09 12:15:20.677 -04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-09 12:15:20.680 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.682 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-09 12:15:20.685 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.687 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-09 12:15:20.706 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.707 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.709 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-09 12:15:20.710 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-09 12:15:20.715 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-09 12:15:20.718 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-09 12:15:20.723 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-09 12:15:20.727 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.730 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-04-09 12:15:20.733 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.736 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-09 12:15:20.808 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-04-09 12:15:20.810 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-04-09 12:15:20.844 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-09 12:15:20.872 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.875 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.877 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-09 12:15:20.878 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-09 12:15:20.885 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-04-09 12:15:20.887 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-09 12:15:20.894 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-09 12:15:20.906 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.911 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 10ms reading results.
2025-04-09 12:15:20.915 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:20.919 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-09 12:15:20.959 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-09 12:15:20.968 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-09 12:15:20.975 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-09 12:15:21.012 -04:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LocalUser.RefreshTokens'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-09 12:15:21.042 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'RefreshToken.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-09 12:15:21.055 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-09 12:15:21.078 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-09 12:15:21.203 -04:00 [DBG] Executing 2 update commands as a batch.
2025-04-09 12:15:21.207 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:21.209 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:21.212 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-04-09 12:15:21.219 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-04-09 12:15:21.226 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-09 12:15:21.228 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-09 12:15:21.232 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-09 12:15:21.236 -04:00 [DBG] Executing DbCommand [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-04-09 12:15:21.258 -04:00 [INF] Executed DbCommand (22ms) [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-04-09 12:15:21.278 -04:00 [DBG] The foreign key property 'RefreshToken.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-09 12:15:21.291 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:21.293 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 31ms reading results.
2025-04-09 12:15:21.301 -04:00 [DBG] Committing transaction.
2025-04-09 12:15:21.313 -04:00 [DBG] Committed transaction.
2025-04-09 12:15:21.317 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:21.321 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-09 12:15:21.331 -04:00 [DBG] Disposing transaction.
2025-04-09 12:15:21.342 -04:00 [DBG] An entity of type 'RefreshToken' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-09 12:15:21.347 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-09 12:15:21.355 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-04-09 12:15:21.374 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-09 12:15:21.379 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-09 12:15:21.381 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-09 12:15:21.382 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-09 12:15:21.387 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-09 12:15:21.392 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-09 12:15:21.482 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 5358.2516ms
2025-04-09 12:15:21.486 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-09 12:15:21.490 -04:00 [DBG] Connection id "0HNBNG6B0QIEP" completed keep alive response.
2025-04-09 12:15:21.495 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-09 12:15:21.509 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:15:21.516 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-04-09 12:15:21.521 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 5660.5208ms
2025-04-09 12:15:27.370 -04:00 [DBG] Connection id "0HNBNG6B0QIEP" received FIN.
2025-04-09 12:15:27.376 -04:00 [DBG] Connection id "0HNBNG6B0QIEP" disconnecting.
2025-04-09 12:15:27.379 -04:00 [DBG] Connection id "0HNBNG6B0QIEP" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-09 12:15:27.381 -04:00 [DBG] Connection id "0HNBNG6B0QIEP" stopped.
2025-04-09 12:16:05.374 -04:00 [DBG] Connection id "0HNBNG6B0QIEQ" accepted.
2025-04-09 12:16:05.392 -04:00 [DBG] Connection id "0HNBNG6B0QIEQ" started.
2025-04-09 12:16:05.462 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Booking/1 - null null
2025-04-09 12:16:05.474 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/1'
2025-04-09 12:16:05.477 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/{id}' is valid for the request path '/api/Booking/1'
2025-04-09 12:16:05.493 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)'
2025-04-09 12:16:05.497 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-09 12:16:05.679 -04:00 [DBG] Successfully validated the token.
2025-04-09 12:16:05.707 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-09 12:16:05.766 -04:00 [DBG] Authorization was successful.
2025-04-09 12:16:05.844 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)'
2025-04-09 12:16:05.895 -04:00 [INF] Route matched with {action = "GetBooking", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBooking(Int32) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-04-09 12:16:05.900 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-09 12:16:05.907 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-09 12:16:05.910 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-04-09 12:16:05.922 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-09 12:16:05.925 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-09 12:16:05.945 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-04-09 12:16:06.132 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-04-09 12:16:06.136 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-09 12:16:06.141 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-09 12:16:06.148 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-09 12:16:06.151 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-09 12:16:06.160 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-09 12:16:06.163 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-09 12:16:06.257 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-09 12:16:06.264 -04:00 [DBG] Compiling query expression: 
'DbSet<Booking>()
    .Include(b => b.Hotel)
    .Include(b => b.Rooms)
    .Include(b => b.User)
    .AsSplitQuery()
    .FirstOrDefault(b => b.BookingID == __id_0)'
2025-04-09 12:16:06.280 -04:00 [DBG] Including navigation: 'Booking.Hotel'.
2025-04-09 12:16:06.284 -04:00 [DBG] Including navigation: 'Booking.Rooms'.
2025-04-09 12:16:06.294 -04:00 [DBG] Including navigation: 'Booking.User'.
2025-04-09 12:16:06.297 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-04-09 12:16:06.416 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Booking>(
    asyncEnumerable: SplitQueryingEnumerable.Create<Booking>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Booking.BookingID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Booking.AfterDiscountedPrice (decimal) Required, 1], [Property: Booking.BookingDateUtc (DateTime) Required, 2], [Property: Booking.CheckInDateUtc (DateTime) Required, 3], [Property: Booking.CheckOutDateUtc (DateTime) Required, 4], [Property: Booking.ConfirmationNumber (string) Required Index MaxLength(50), 5], [Property: Booking.CreatedById (string) FK Index, 6], [Property: Booking.GuestId (Guid?) FK Index, 7], [Property: Booking.HotelId (int) Required FK Index, 8], [Property: Booking.PaymentMethod (PaymentMethod) Required, 9], [Property: Booking.Status (BookingStatus) Required, 10], [Property: Booking.TotalPrice (decimal) Required, 11], [Property: Booking.UserId (string) Required FK Index, 12] }
                1 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Hotel.CityID (int) Required FK Index, 14], [Property: Hotel.CreatedAtUtc (DateTime) Required, 15], [Property: Hotel.Description (string) MaxLength(500), 16], [Property: Hotel.Name (string) Required MaxLength(100), 17], [Property: Hotel.OwnerID (int) Required FK Index, 18], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 19], [Property: Hotel.StarRating (int) Required, 20] }
                2 -> 0
                3 -> 13
                4 -> 21
                5 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 21], [Property: LocalUser.AccessFailedCount (int) Required, 22], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 23], [Property: LocalUser.Email (string) MaxLength(256), 24], [Property: LocalUser.EmailConfirmed (bool) Required, 25], [Property: LocalUser.FirstName (string) Required, 26], [Property: LocalUser.LastName (string) Required, 27], [Property: LocalUser.LockoutEnabled (bool) Required, 28], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 29], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 30], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 31], [Property: LocalUser.PasswordHash (string), 32], [Property: LocalUser.PhoneNumber (string), 33], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 34], [Property: LocalUser.SecurityStamp (string), 35], [Property: LocalUser.TwoFactorEnabled (bool) Required, 36], [Property: LocalUser.UserName (string) MaxLength(256), 37] }
            SELECT TOP(1) b.BookingID, b.AfterDiscountedPrice, b.BookingDateUtc, b.CheckInDateUtc, b.CheckOutDateUtc, b.ConfirmationNumber, b.CreatedById, b.GuestId, b.HotelId, b.PaymentMethod, b.Status, b.TotalPrice, b.UserId, h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM Bookings AS b
            INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
            INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
            WHERE b.BookingID == @__id_0
            ORDER BY b.BookingID ASC, h.HotelId ASC, a.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Booking.BookingID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Booking.AfterDiscountedPrice (decimal) Required, 1], [Property: Booking.BookingDateUtc (DateTime) Required, 2], [Property: Booking.CheckInDateUtc (DateTime) Required, 3], [Property: Booking.CheckOutDateUtc (DateTime) Required, 4], [Property: Booking.ConfirmationNumber (string) Required Index MaxLength(50), 5], [Property: Booking.CreatedById (string) FK Index, 6], [Property: Booking.GuestId (Guid?) FK Index, 7], [Property: Booking.HotelId (int) Required FK Index, 8], [Property: Booking.PaymentMethod (PaymentMethod) Required, 9], [Property: Booking.Status (BookingStatus) Required, 10], [Property: Booking.TotalPrice (decimal) Required, 11], [Property: Booking.UserId (string) Required FK Index, 12] }
                1 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Hotel.CityID (int) Required FK Index, 14], [Property: Hotel.CreatedAtUtc (DateTime) Required, 15], [Property: Hotel.Description (string) MaxLength(500), 16], [Property: Hotel.Name (string) Required MaxLength(100), 17], [Property: Hotel.OwnerID (int) Required FK Index, 18], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 19], [Property: Hotel.StarRating (int) Required, 20] }
                2 -> 0
                3 -> 13
                4 -> 21
                5 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 21], [Property: LocalUser.AccessFailedCount (int) Required, 22], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 23], [Property: LocalUser.Email (string) MaxLength(256), 24], [Property: LocalUser.EmailConfirmed (bool) Required, 25], [Property: LocalUser.FirstName (string) Required, 26], [Property: LocalUser.LastName (string) Required, 27], [Property: LocalUser.LockoutEnabled (bool) Required, 28], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 29], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 30], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 31], [Property: LocalUser.PasswordHash (string), 32], [Property: LocalUser.PhoneNumber (string), 33], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 34], [Property: LocalUser.SecurityStamp (string), 35], [Property: LocalUser.TwoFactorEnabled (bool) Required, 36], [Property: LocalUser.UserName (string) MaxLength(256), 37] }
            SELECT TOP(1) b.BookingID, b.AfterDiscountedPrice, b.BookingDateUtc, b.CheckInDateUtc, b.CheckOutDateUtc, b.ConfirmationNumber, b.CreatedById, b.GuestId, b.HotelId, b.PaymentMethod, b.Status, b.TotalPrice, b.UserId, h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM Bookings AS b
            INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
            INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
            WHERE b.BookingID == @__id_0
            ORDER BY b.BookingID ASC, h.HotelId ASC, a.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<decimal>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<Guid>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<decimal>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<DateTimeOffset>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<object> } | Resolver: namelessParameter{0} => new ReaderColumn[]
        { 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("BookingID"), 
                (dataReader, indexMap) => dataReader.GetInt32(0)
            ), 
            new ReaderColumn<decimal>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("AfterDiscountedPrice"), 
                (dataReader, indexMap) => dataReader.GetDecimal(1)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("BookingDateUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(2)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("CheckInDateUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(3)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("CheckOutDateUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(4)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("ConfirmationNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(5)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("CreatedById"), 
                (dataReader, indexMap) => (object)dataReader.GetString(6)
            ), 
            new ReaderColumn<Guid>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("GuestId"), 
                (dataReader, indexMap) => dataReader.GetGuid(7)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("HotelId"), 
                (dataReader, indexMap) => dataReader.GetInt32(8)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("PaymentMethod"), 
                (dataReader, indexMap) => dataReader.GetInt32(9)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("Status"), 
                (dataReader, indexMap) => dataReader.GetInt32(10)
            ), 
            new ReaderColumn<decimal>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("TotalPrice"), 
                (dataReader, indexMap) => dataReader.GetDecimal(11)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("UserId"), 
                (dataReader, indexMap) => (object)dataReader.GetString(12)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("HotelId"), 
                (dataReader, indexMap) => dataReader.GetInt32(13)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CityID"), 
                (dataReader, indexMap) => dataReader.GetInt32(14)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CreatedAtUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(15)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Description"), 
                (dataReader, indexMap) => (object)dataReader.GetString(16)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Name"), 
                (dataReader, indexMap) => (object)dataReader.GetString(17)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("OwnerID"), 
                (dataReader, indexMap) => dataReader.GetInt32(18)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(19)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("StarRating"), 
                (dataReader, indexMap) => dataReader.GetInt32(20)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                default(IPropertyBase), 
                (dataReader, indexMap) => (object)dataReader.GetString(21)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("AccessFailedCount"), 
                (dataReader, indexMap) => dataReader.GetInt32(22)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("ConcurrencyStamp"), 
                (dataReader, indexMap) => (object)dataReader.GetString(23)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("Email"), 
                (dataReader, indexMap) => (object)dataReader.GetString(24)
            ), 
            new ReaderColumn<bool>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("EmailConfirmed"), 
                (dataReader, indexMap) => dataReader.GetBoolean(25)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("FirstName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(26)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("LastName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(27)
            ), 
            new ReaderColumn<bool>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("LockoutEnabled"), 
                (dataReader, indexMap) => dataReader.GetBoolean(28)
            ), 
            new ReaderColumn<DateTimeOffset>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("LockoutEnd"), 
                (dataReader, indexMap) => dataReader.GetFieldValue<DateTimeOffset>(29)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("NormalizedEmail"), 
                (dataReader, indexMap) => (object)dataReader.GetString(30)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("NormalizedUserName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(31)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("PasswordHash"), 
                (dataReader, indexMap) => (object)dataReader.GetString(32)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(33)
            ), 
            new ReaderColumn<bool>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("PhoneNumberConfirmed"), 
                (dataReader, indexMap) => dataReader.GetBoolean(34)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("SecurityStamp"), 
                (dataReader, indexMap) => (object)dataReader.GetString(35)
            ), 
            new ReaderColumn<bool>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("TwoFactorEnabled"), 
                (dataReader, indexMap) => dataReader.GetBoolean(36)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("UserName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(37)
            ) 
        }], 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => resultContext.Values == null ? 
        {
            Booking entity;
            Hotel entity;
            LocalUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Booking instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Booking);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Booking.BookingID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Booking)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Booking | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Booking | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking")]: 
                            {
                                return 
                                {
                                    Booking instance;
                                    instance = new Booking();
                                    instance.<BookingID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AfterDiscountedPrice>k__BackingField = dataReader.GetDecimal(1);
                                    instance.<BookingDateUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CheckInDateUtc>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CheckOutDateUtc>k__BackingField = dataReader.GetDateTime(4);
                                    instance.<ConfirmationNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(5);
                                    instance.<CreatedById>k__BackingField = dataReader.IsDBNull(6) ? default(string) : (string)dataReader.GetFieldValue<object>(6);
                                    instance.<GuestId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(8);
                                    instance.<PaymentMethod>k__BackingField = Invoke(((EnumToNumberConverter<PaymentMethod, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Booking.PaymentMethod (PaymentMethod) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("PaymentMethod")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(9));
                                    instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookingStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Booking.Status (BookingStatus) Required | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(10));
                                    instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(11);
                                    instance.<UserId>k__BackingField = (string)dataReader.GetFieldValue<object>(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Booking | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Booking)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Hotel instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Hotel);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(13) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Hotel)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                            {
                                return 
                                {
                                    Hotel instance;
                                    instance = new Hotel();
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(13);
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(14);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(15);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(16) ? default(string) : (string)dataReader.GetFieldValue<object>(16);
                                    instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(17);
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(18);
                                    instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(19);
                                    instance.<StarRating>k__BackingField = dataReader.GetInt32(20);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Hotel)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext5;
                IEntityType entityType5;
                LocalUser instance5;
                InternalEntityEntry entry5;
                bool hasNullKey5;
                materializationContext5 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance5 = default(LocalUser);
                entry5 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)(string)dataReader.GetFieldValue<object>(21) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey5);
                !(hasNullKey5) ? entry5 != default(InternalEntityEntry) ? 
                {
                    entityType5 = entry5.EntityType;
                    return instance5 = (LocalUser)entry5.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot5;
                    shadowSnapshot5 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType5 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                    instance5 = switch (entityType5)
                    {
                        case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                            {
                                return 
                                {
                                    LocalUser instance;
                                    instance = new LocalUser();
                                    instance.<Id>k__BackingField = (string)dataReader.GetFieldValue<object>(21);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(22);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(23) ? default(string) : (string)dataReader.GetFieldValue<object>(23);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(24) ? default(string) : (string)dataReader.GetFieldValue<object>(24);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(25);
                                    instance.<FirstName>k__BackingField = (string)dataReader.GetFieldValue<object>(26);
                                    instance.<LastName>k__BackingField = (string)dataReader.GetFieldValue<object>(27);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(28);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(29) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(29);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(30) ? default(string) : (string)dataReader.GetFieldValue<object>(30);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(31) ? default(string) : (string)dataReader.GetFieldValue<object>(31);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(32) ? default(string) : (string)dataReader.GetFieldValue<object>(32);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(33) ? default(string) : (string)dataReader.GetFieldValue<object>(33);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(34);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(35) ? default(string) : (string)dataReader.GetFieldValue<object>(35);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(36);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(37) ? default(string) : (string)dataReader.GetFieldValue<object>(37);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext5.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(LocalUser)
                    }
                    ;
                    entry5 = entityType5 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType5, 
                        entity: instance5, 
                        snapshot: shadowSnapshot5);
                    return instance5;
                } : default(void);
                return instance5;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Booking, Booking, Hotel>(
                queryContext: queryContext, 
                entity: (Booking)(resultContext.Values[0]), 
                relatedEntity: (Hotel)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Booking.Hotel (Hotel) ToPrincipal Hotel Inverse: Bookings | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindNavigation("Hotel")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Hotel.Bookings (ICollection<Booking>) Collection ToDependent Booking Inverse: Hotel | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Bookings")], 
                fixup: (namelessParameter{14}, namelessParameter{15}) => 
                {
                    namelessParameter{14}.<Hotel>k__BackingField = namelessParameter{15};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<Booking>, Booking> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Bookings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{15}, 
                        value: namelessParameter{14}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeSplitIncludeCollection<Booking, Booking>(
                collectionId: 0, 
                queryContext: queryContext, 
                parentDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Booking)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(0), 
                    (object)(int?)dataReader.GetInt32(13), 
                    (string)dataReader.GetFieldValue<object>(21) 
                }], 
                navigation: [LIFTABLE Constant: SkipNavigation: Booking.Rooms (ICollection<Room>) CollectionRoom Inverse: Bookings | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindSkipNavigation("Rooms")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Booking, ICollection<Room>, Room> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindSkipNavigation("Rooms").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
            ShaperProcessingExpressionVisitor.InitializeSplitIncludeCollection<LocalUser, LocalUser>(
                collectionId: 1, 
                queryContext: queryContext, 
                parentDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (LocalUser)(resultContext.Values[2]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(0), 
                    (object)(int?)dataReader.GetInt32(13), 
                    (string)dataReader.GetFieldValue<object>(21) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{20} => namelessParameter{20}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Booking, Booking, LocalUser>(
                queryContext: queryContext, 
                entity: (Booking)(resultContext.Values[0]), 
                relatedEntity: (LocalUser)(resultContext.Values[2]), 
                navigation: [LIFTABLE Constant: Navigation: Booking.User (LocalUser) ToPrincipal LocalUser Inverse: Bookings | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindNavigation("User")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: LocalUser.Bookings (ICollection<Booking>) Collection ToDependent Booking Inverse: User | Resolver: namelessParameter{22} => namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("Bookings")], 
                fixup: (namelessParameter{23}, namelessParameter{24}) => 
                {
                    namelessParameter{23}.<User>k__BackingField = namelessParameter{24};
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, ICollection<Booking>, Booking> | Resolver: namelessParameter{25} => namelessParameter{25}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("Bookings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{24}, 
                        value: namelessParameter{23}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return } : (Booking)(resultContext.Values[0]), 
        relatedDataLoaders: null, 
        relatedDataLoadersAsync: (queryContext, executionStrategy, resultCoordinator) => ShaperProcessingExpressionVisitor.TaskAwaiter(new Func<Task>[]
        { 
            () => ShaperProcessingExpressionVisitor.PopulateSplitIncludeCollectionAsync<Booking, Room>(
                collectionId: 0, 
                queryContext: (RelationalQueryContext)queryContext, 
                executionStrategy: executionStrategy, 
                relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: BookingRoom (Dictionary<string, object>).BookingID (no field, int) Indexer Required PK FK AfterSave:Throw, 0], [Property: BookingRoom (Dictionary<string, object>).RoomID (no field, int) Indexer Required PK FK Index AfterSave:Throw, 1] }
                        1 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 2], [Property: Room.AdultsCapacity (int) Required, 3], [Property: Room.ChildrenCapacity (int) Required, 4], [Property: Room.CreatedAtUtc (DateTime) Required, 5], [Property: Room.Number (string) Required MaxLength(50), 6], [Property: Room.PricePerNight (decimal) Required, 7], [Property: Room.RoomClassID (int) Required FK Index, 8] }
                        2 -> 9
                        3 -> 10
                        4 -> 11
                    SELECT s0.BookingID, s0.RoomID, s0.RoomID0, s0.AdultsCapacity, s0.ChildrenCapacity, s0.CreatedAtUtc, s0.Number, s0.PricePerNight, s0.RoomClassID, s.BookingID, s.HotelId, s.Id
                    FROM 
                    (
                        SELECT TOP(1) b.BookingID, h.HotelId, a.Id
                        FROM Bookings AS b
                        INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
                        INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
                        WHERE b.BookingID == @__id_0
                    ) AS s
                    INNER JOIN 
                    (
                        SELECT b0.BookingID, b0.RoomID, r0.RoomID AS RoomID0, r0.AdultsCapacity, r0.ChildrenCapacity, r0.CreatedAtUtc, r0.Number, r0.PricePerNight, r0.RoomClassID
                        FROM BookingRoom AS b0
                        INNER JOIN Rooms AS r0 ON b0.RoomID == r0.RoomID
                    ) AS s0 ON s.BookingID == s0.BookingID
                    ORDER BY s.BookingID ASC, s.HotelId ASC, s.Id ASC) | Resolver: c => new RelationalCommandCache(
                    c.Dependencies.MemoryCache, 
                    c.RelationalDependencies.QuerySqlGeneratorFactory, 
                    c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: BookingRoom (Dictionary<string, object>).BookingID (no field, int) Indexer Required PK FK AfterSave:Throw, 0], [Property: BookingRoom (Dictionary<string, object>).RoomID (no field, int) Indexer Required PK FK Index AfterSave:Throw, 1] }
                        1 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 2], [Property: Room.AdultsCapacity (int) Required, 3], [Property: Room.ChildrenCapacity (int) Required, 4], [Property: Room.CreatedAtUtc (DateTime) Required, 5], [Property: Room.Number (string) Required MaxLength(50), 6], [Property: Room.PricePerNight (decimal) Required, 7], [Property: Room.RoomClassID (int) Required FK Index, 8] }
                        2 -> 9
                        3 -> 10
                        4 -> 11
                    SELECT s0.BookingID, s0.RoomID, s0.RoomID0, s0.AdultsCapacity, s0.ChildrenCapacity, s0.CreatedAtUtc, s0.Number, s0.PricePerNight, s0.RoomClassID, s.BookingID, s.HotelId, s.Id
                    FROM 
                    (
                        SELECT TOP(1) b.BookingID, h.HotelId, a.Id
                        FROM Bookings AS b
                        INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
                        INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
                        WHERE b.BookingID == @__id_0
                    ) AS s
                    INNER JOIN 
                    (
                        SELECT b0.BookingID, b0.RoomID, r0.RoomID AS RoomID0, r0.AdultsCapacity, r0.ChildrenCapacity, r0.CreatedAtUtc, r0.Number, r0.PricePerNight, r0.RoomClassID
                        FROM BookingRoom AS b0
                        INNER JOIN Rooms AS r0 ON b0.RoomID == r0.RoomID
                    ) AS s0 ON s.BookingID == s0.BookingID
                    ORDER BY s.BookingID ASC, s.HotelId ASC, s.Id ASC, 
                    False, 
                    new HashSet<string>(
                        new string[]{ }, 
                        StringComparer.Ordinal
                    )
                )].GetRelationalCommandTemplate(parameters), 
                readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<decimal>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object> } | Resolver: namelessParameter{26} => new ReaderColumn[]
                { 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("BookingRoom").FindProperty("BookingID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(0)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("BookingRoom").FindProperty("RoomID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(1)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("RoomID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(2)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("AdultsCapacity"), 
                        (dataReader, indexMap) => dataReader.GetInt32(3)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("ChildrenCapacity"), 
                        (dataReader, indexMap) => dataReader.GetInt32(4)
                    ), 
                    new ReaderColumn<DateTime>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("CreatedAtUtc"), 
                        (dataReader, indexMap) => dataReader.GetDateTime(5)
                    ), 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("Number"), 
                        (dataReader, indexMap) => (object)dataReader.GetString(6)
                    ), 
                    new ReaderColumn<decimal>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("PricePerNight"), 
                        (dataReader, indexMap) => dataReader.GetDecimal(7)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("RoomClassID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(8)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(9)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(10)
                    ), 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => (object)dataReader.GetString(11)
                    ) 
                }], 
                detailedErrorsEnabled: False, 
                resultCoordinator: resultCoordinator, 
                childIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(9), 
                    (object)(int?)dataReader.GetInt32(10), 
                    (string)dataReader.GetFieldValue<object>(11) 
                }], 
                identifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Dictionary<string, object> entity;
                    Room entity;
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Dictionary<string, object> instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Dictionary<string, object>);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: BookingRoom (Dictionary<string, object>).BookingID, BookingRoom (Dictionary<string, object>).RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("BookingRoom").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                (object)dataReader.GetInt32(0), 
                                (object)dataReader.GetInt32(1) 
                            }, 
                            throwOnNullKey: True, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Dictionary<string, object>)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: BookingRoom (Dictionary<string, object>) CLR Type: Dictionary<string, object> | Resolver: namelessParameter{27} => namelessParameter{27}.Dependencies.Model.FindEntityType("BookingRoom")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: BookingRoom (Dictionary<string, object>) CLR Type: Dictionary<string, object> | Resolver: namelessParameter{28} => namelessParameter{28}.Dependencies.Model.FindEntityType("BookingRoom")]: 
                                    {
                                        return 
                                        {
                                            Dictionary<string, object> instance;
                                            instance = new Dictionary<string, object>();
                                            instance["BookingID"] = (object)dataReader.GetInt32(0);
                                            instance["RoomID"] = (object)dataReader.GetInt32(1);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: BookingRoom (Dictionary<string, object>) CLR Type: Dictionary<string, object> | Resolver: namelessParameter{29} => namelessParameter{29}.Dependencies.Model.FindEntityType("BookingRoom")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Dictionary<string, object>)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    entity = 
                    {
                        MaterializationContext materializationContext4;
                        IEntityType entityType4;
                        Room instance4;
                        InternalEntityEntry entry4;
                        bool hasNullKey4;
                        materializationContext4 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance4 = default(Room);
                        entry4 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Room.RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindPrimaryKey()], 
                            keyValues: new object[]{ (object)dataReader.GetInt32(2) }, 
                            throwOnNullKey: True, 
                            hasNullKey: hasNullKey4);
                        !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                        {
                            entityType4 = entry4.EntityType;
                            return instance4 = (Room)entry4.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot4;
                            shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType4 = [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{30} => namelessParameter{30}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")];
                            instance4 = switch (entityType4)
                            {
                                case [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{31} => namelessParameter{31}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]: 
                                    {
                                        return 
                                        {
                                            Room instance;
                                            instance = new Room();
                                            instance.<RoomID>k__BackingField = dataReader.GetInt32(2);
                                            instance.<AdultsCapacity>k__BackingField = dataReader.GetInt32(3);
                                            instance.<ChildrenCapacity>k__BackingField = dataReader.GetInt32(4);
                                            instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(5);
                                            instance.<Number>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                            instance.<PricePerNight>k__BackingField = dataReader.GetDecimal(7);
                                            instance.<RoomClassID>k__BackingField = dataReader.GetInt32(8);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext4.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{32} => namelessParameter{32}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Room)
                            }
                            ;
                            entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType4, 
                                entity: instance4, 
                                snapshot: shadowSnapshot4);
                            return instance4;
                        } : default(void);
                        return instance4;
                    };
                    return NavigationExpandingExpressionVisitor.FetchJoinEntity<Dictionary<string, object>, Room>(
                        joinEntity: entity, 
                        targetEntity: entity);
                }, 
                relatedDataLoaders: null, 
                inverseNavigation: [LIFTABLE Constant: SkipNavigation: Room.Bookings (ICollection<Booking>) CollectionBooking Inverse: Rooms | Resolver: namelessParameter{33} => namelessParameter{33}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindSkipNavigation("Bookings")], 
                fixup: (namelessParameter{34}, namelessParameter{35}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Booking, ICollection<Room>, Room> | Resolver: namelessParameter{36} => namelessParameter{36}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindSkipNavigation("Rooms").GetCollectionAccessor()].Add(
                        entity: namelessParameter{34}, 
                        value: namelessParameter{35}, 
                        forMaterialization: True);
                    return [LIFTABLE Constant: ClrICollectionAccessor<Room, ICollection<Booking>, Booking> | Resolver: namelessParameter{37} => namelessParameter{37}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindSkipNavigation("Bookings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{35}, 
                        value: namelessParameter{34}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True), 
            () => ShaperProcessingExpressionVisitor.PopulateSplitIncludeCollectionAsync<LocalUser, RefreshToken>(
                collectionId: 1, 
                queryContext: (RelationalQueryContext)queryContext, 
                executionStrategy: executionStrategy, 
                relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 0], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 1], [Property: RefreshToken.CreatedOn (DateTime) Required, 2], [Property: RefreshToken.ExpiresOn (DateTime) Required, 3], [Property: RefreshToken.RevokedOn (DateTime?), 4], [Property: RefreshToken.Token (string) Required, 5] }
                        1 -> 6
                        2 -> 7
                        3 -> 8
                    SELECT r1.LocalUserId, r1.Id, r1.CreatedOn, r1.ExpiresOn, r1.RevokedOn, r1.Token, s1.BookingID, s1.HotelId, s1.Id
                    FROM 
                    (
                        SELECT TOP(1) b.BookingID, h.HotelId, a.Id
                        FROM Bookings AS b
                        INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
                        INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
                        WHERE b.BookingID == @__id_0
                    ) AS s1
                    INNER JOIN RefreshToken AS r1 ON s1.Id == r1.LocalUserId
                    ORDER BY s1.BookingID ASC, s1.HotelId ASC, s1.Id ASC) | Resolver: c => new RelationalCommandCache(
                    c.Dependencies.MemoryCache, 
                    c.RelationalDependencies.QuerySqlGeneratorFactory, 
                    c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 0], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 1], [Property: RefreshToken.CreatedOn (DateTime) Required, 2], [Property: RefreshToken.ExpiresOn (DateTime) Required, 3], [Property: RefreshToken.RevokedOn (DateTime?), 4], [Property: RefreshToken.Token (string) Required, 5] }
                        1 -> 6
                        2 -> 7
                        3 -> 8
                    SELECT r1.LocalUserId, r1.Id, r1.CreatedOn, r1.ExpiresOn, r1.RevokedOn, r1.Token, s1.BookingID, s1.HotelId, s1.Id
                    FROM 
                    (
                        SELECT TOP(1) b.BookingID, h.HotelId, a.Id
                        FROM Bookings AS b
                        INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
                        INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
                        WHERE b.BookingID == @__id_0
                    ) AS s1
                    INNER JOIN RefreshToken AS r1 ON s1.Id == r1.LocalUserId
                    ORDER BY s1.BookingID ASC, s1.HotelId ASC, s1.Id ASC, 
                    False, 
                    new HashSet<string>(
                        new string[]{ }, 
                        StringComparer.Ordinal
                    )
                )].GetRelationalCommandTemplate(parameters), 
                readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object> } | Resolver: namelessParameter{38} => new ReaderColumn[]
                { 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("LocalUserId"), 
                        (dataReader, indexMap) => (object)dataReader.GetString(0)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("Id"), 
                        (dataReader, indexMap) => dataReader.GetInt32(1)
                    ), 
                    new ReaderColumn<DateTime>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("CreatedOn"), 
                        (dataReader, indexMap) => dataReader.GetDateTime(2)
                    ), 
                    new ReaderColumn<DateTime>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("ExpiresOn"), 
                        (dataReader, indexMap) => dataReader.GetDateTime(3)
                    ), 
                    new ReaderColumn<DateTime>(
                        True, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("RevokedOn"), 
                        (dataReader, indexMap) => dataReader.GetDateTime(4)
                    ), 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("Token"), 
                        (dataReader, indexMap) => (object)dataReader.GetString(5)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(6)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(7)
                    ), 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => (object)dataReader.GetString(8)
                    ) 
                }], 
                detailedErrorsEnabled: False, 
                resultCoordinator: resultCoordinator, 
                childIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(6), 
                    (object)(int?)dataReader.GetInt32(7), 
                    (string)dataReader.GetFieldValue<object>(8) 
                }], 
                identifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext6;
                        IEntityType entityType6;
                        RefreshToken instance6;
                        InternalEntityEntry entry6;
                        bool hasNullKey6;
                        materializationContext6 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance6 = default(RefreshToken);
                        entry6 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                (object)(string)dataReader.GetFieldValue<object>(0), 
                                (object)dataReader.GetInt32(1) 
                            }, 
                            throwOnNullKey: True, 
                            hasNullKey: hasNullKey6);
                        !(hasNullKey6) ? entry6 != default(InternalEntityEntry) ? 
                        {
                            entityType6 = entry6.EntityType;
                            return instance6 = (RefreshToken)entry6.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot6;
                            shadowSnapshot6 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType6 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{39} => namelessParameter{39}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance6 = switch (entityType6)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{40} => namelessParameter{40}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot6 = (ISnapshot)new Snapshot<string, int>(
                                            (string)dataReader.GetFieldValue<object>(0), 
                                            dataReader.GetInt32(1)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.GetDateTime(2);
                                            instance.<ExpiresOn>k__BackingField = dataReader.GetDateTime(3);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(4) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(4);
                                            instance.<Token>k__BackingField = (string)dataReader.GetFieldValue<object>(5);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext6.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{41} => namelessParameter{41}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry6 = entityType6 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType6, 
                                entity: instance6, 
                                snapshot: shadowSnapshot6);
                            return instance6;
                        } : default(void);
                        return instance6;
                    };
                    return entity;
                }, 
                relatedDataLoaders: null, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{42}, namelessParameter{43}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{44} => namelessParameter{44}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{42}, 
                        value: namelessParameter{43}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True) 
        }), 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-09 12:16:06.586 -04:00 [DBG] Creating DbConnection.
2025-04-09 12:16:06.590 -04:00 [DBG] Created DbConnection. (4ms).
2025-04-09 12:16:06.592 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:16:06.594 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:16:06.595 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-09 12:16:06.598 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-09 12:16:06.601 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-09 12:16:06.607 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."BookingID", b."AfterDiscountedPrice", b."BookingDateUtc", b."CheckInDateUtc", b."CheckOutDateUtc", b."ConfirmationNumber", b."CreatedById", b."GuestId", b."HotelId", b."PaymentMethod", b."Status", b."TotalPrice", b."UserId", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "Bookings" AS b
INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
WHERE b."BookingID" = @__id_0
ORDER BY b."BookingID", h."HotelId", a."Id"
LIMIT 1
2025-04-09 12:16:06.628 -04:00 [INF] Executed DbCommand (21ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."BookingID", b."AfterDiscountedPrice", b."BookingDateUtc", b."CheckInDateUtc", b."CheckOutDateUtc", b."ConfirmationNumber", b."CreatedById", b."GuestId", b."HotelId", b."PaymentMethod", b."Status", b."TotalPrice", b."UserId", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "Bookings" AS b
INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
WHERE b."BookingID" = @__id_0
ORDER BY b."BookingID", h."HotelId", a."Id"
LIMIT 1
2025-04-09 12:16:06.679 -04:00 [DBG] Context 'AppDbContext' started tracking 'Booking' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-09 12:16:06.733 -04:00 [DBG] The navigation 'Booking.Hotel' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-09 12:16:06.746 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-09 12:16:06.798 -04:00 [DBG] The navigation 'Booking.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-09 12:16:06.872 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-09 12:16:06.911 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-09 12:16:06.912 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-09 12:16:06.914 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-09 12:16:06.916 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s0."BookingID", s0."RoomID", s0."RoomID0", s0."AdultsCapacity", s0."ChildrenCapacity", s0."CreatedAtUtc", s0."Number", s0."PricePerNight", s0."RoomClassID", s."BookingID", s."HotelId", s."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s
INNER JOIN (
    SELECT b0."BookingID", b0."RoomID", r0."RoomID" AS "RoomID0", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID"
    FROM "BookingRoom" AS b0
    INNER JOIN "Rooms" AS r0 ON b0."RoomID" = r0."RoomID"
) AS s0 ON s."BookingID" = s0."BookingID"
ORDER BY s."BookingID", s."HotelId", s."Id"
2025-04-09 12:16:06.932 -04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s0."BookingID", s0."RoomID", s0."RoomID0", s0."AdultsCapacity", s0."ChildrenCapacity", s0."CreatedAtUtc", s0."Number", s0."PricePerNight", s0."RoomClassID", s."BookingID", s."HotelId", s."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s
INNER JOIN (
    SELECT b0."BookingID", b0."RoomID", r0."RoomID" AS "RoomID0", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID"
    FROM "BookingRoom" AS b0
    INNER JOIN "Rooms" AS r0 ON b0."RoomID" = r0."RoomID"
) AS s0 ON s."BookingID" = s0."BookingID"
ORDER BY s."BookingID", s."HotelId", s."Id"
2025-04-09 12:16:06.956 -04:00 [DBG] Context 'AppDbContext' started tracking 'BookingRoom' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-09 12:16:06.982 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-09 12:16:07.008 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-09 12:16:07.011 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-09 12:16:07.012 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-09 12:16:07.014 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r1."LocalUserId", r1."Id", r1."CreatedOn", r1."ExpiresOn", r1."RevokedOn", r1."Token", s1."BookingID", s1."HotelId", s1."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s1
INNER JOIN "RefreshToken" AS r1 ON s1."Id" = r1."LocalUserId"
ORDER BY s1."BookingID", s1."HotelId", s1."Id"
2025-04-09 12:16:07.023 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r1."LocalUserId", r1."Id", r1."CreatedOn", r1."ExpiresOn", r1."RevokedOn", r1."Token", s1."BookingID", s1."HotelId", s1."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s1
INNER JOIN "RefreshToken" AS r1 ON s1."Id" = r1."LocalUserId"
ORDER BY s1."BookingID", s1."HotelId", s1."Id"
2025-04-09 12:16:07.091 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-09 12:16:07.098 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:16:07.109 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 446ms reading results.
2025-04-09 12:16:07.113 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:16:07.126 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 183ms reading results.
2025-04-09 12:16:07.149 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:16:07.151 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 60ms reading results.
2025-04-09 12:16:07.158 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:16:07.160 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-09 12:16:07.170 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .AsNoTracking()
    .FirstOrDefault(user => user.Id == __userId_0)'
2025-04-09 12:16:07.174 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-04-09 12:16:07.217 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.Id == @__userId_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.Id == @__userId_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    (object)dataReader.GetString(0) != null ? 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: NoTracking, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        return instance1;
                    } : 
                    {
                        object[] keyValues1;
                        keyValues1 = new object[]{ (object)dataReader.GetString(0) };
                        return ShapedQueryCompilingExpressionVisitor.CreateNullKeyValueInNoTrackingQuery(
                            entityType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")], 
                            properties: [LIFTABLE Constant: List<RuntimeProperty> { Property: LocalUser.Id (string) Required PK AfterSave:Throw } | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey().Properties], 
                            keyValues: keyValues1);
                    };
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: False, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17) != null && dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) != null ? 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: NoTracking, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{9}, namelessParameter{10}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{10}, 
                        forMaterialization: True);
                }, 
                trackingQuery: False);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-09 12:16:07.317 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:16:07.321 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:16:07.325 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-09 12:16:07.327 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-09 12:16:07.329 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-09 12:16:07.332 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__userId_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-09 12:16:07.363 -04:00 [INF] Executed DbCommand (31ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__userId_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-09 12:16:07.397 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:16:07.398 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 18ms reading results.
2025-04-09 12:16:07.400 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:16:07.404 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-09 12:16:07.439 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-09 12:16:07.445 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-09 12:16:07.446 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-09 12:16:07.447 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-09 12:16:07.449 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-09 12:16:07.451 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Booking.BookingDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-09 12:16:07.506 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API) in 1559.9967ms
2025-04-09 12:16:07.513 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)'
2025-04-09 12:16:07.517 -04:00 [DBG] Connection id "0HNBNG6B0QIEQ" completed keep alive response.
2025-04-09 12:16:07.524 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-09 12:16:07.529 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-09 12:16:07.541 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (12ms).
2025-04-09 12:16:07.544 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Booking/1 - 200 null application/json; charset=utf-8 2081.553ms
2025-04-09 12:16:17.436 -04:00 [DBG] Connection id "0HNBNG6B0QIEQ" received FIN.
2025-04-09 12:16:17.439 -04:00 [DBG] Connection id "0HNBNG6B0QIEQ" disconnecting.
2025-04-09 12:16:17.440 -04:00 [DBG] Connection id "0HNBNG6B0QIEQ" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-09 12:16:17.451 -04:00 [DBG] Connection id "0HNBNG6B0QIEQ" stopped.
2025-04-19 23:24:58.495 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-19 23:24:58.796 -04:00 [DBG] Hosting starting
2025-04-19 23:24:58.857 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-19 23:24:58.895 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-04-19 23:24:59.091 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-f49e2f57-a336-4a02-9bd7-34e9429d6980.xml'.
2025-04-19 23:24:59.225 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-04-19 23:24:59.297 -04:00 [DBG] Found key {f49e2f57-a336-4a02-9bd7-34e9429d6980}.
2025-04-19 23:24:59.349 -04:00 [DBG] Considering key {f49e2f57-a336-4a02-9bd7-34e9429d6980} with expiration date 2025-07-08 16:14:06Z as default key.
2025-04-19 23:24:59.608 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-19 23:24:59.618 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-04-19 23:24:59.646 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-19 23:24:59.661 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-19 23:24:59.680 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-19 23:24:59.692 -04:00 [DBG] Using key {f49e2f57-a336-4a02-9bd7-34e9429d6980} as the default key.
2025-04-19 23:24:59.696 -04:00 [DBG] Key ring with default key {f49e2f57-a336-4a02-9bd7-34e9429d6980} was loaded during application startup.
2025-04-19 23:24:59.854 -04:00 [INF] Now listening on: http://localhost:5004
2025-04-19 23:24:59.855 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-04-19 23:24:59.857 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-04-19 23:24:59.858 -04:00 [INF] Hosting environment: Development
2025-04-19 23:24:59.861 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-04-19 23:24:59.862 -04:00 [DBG] Hosting started
2025-04-19 23:25:27.961 -04:00 [DBG] Connection id "0HNBVNBVK1M04" accepted.
2025-04-19 23:25:27.982 -04:00 [DBG] Connection id "0HNBVNBVK1M05" accepted.
2025-04-19 23:25:28.003 -04:00 [DBG] Connection id "0HNBVNBVK1M04" started.
2025-04-19 23:25:28.021 -04:00 [DBG] Connection id "0HNBVNBVK1M05" started.
2025-04-19 23:25:28.366 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-04-19 23:25:28.393 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-04-19 23:25:28.521 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-04-19 23:25:28.525 -04:00 [DBG] Request did not match any endpoints
2025-04-19 23:25:28.903 -04:00 [DBG] Connection id "0HNBVNBVK1M04" completed keep alive response.
2025-04-19 23:25:28.999 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 562.8057ms
2025-04-19 23:25:29.042 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui.css - null null
2025-04-19 23:25:29.045 -04:00 [DBG] Connection id "0HNBVNBVK1M06" accepted.
2025-04-19 23:25:29.099 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.css - null null
2025-04-19 23:25:29.175 -04:00 [DBG] No candidates found for the request path '/swagger/index.css'
2025-04-19 23:25:29.146 -04:00 [DBG] Connection id "0HNBVNBVK1M07" accepted.
2025-04-19 23:25:29.172 -04:00 [DBG] Connection id "0HNBVNBVK1M06" started.
2025-04-19 23:25:29.114 -04:00 [DBG] No candidates found for the request path '/swagger/swagger-ui.css'
2025-04-19 23:25:29.178 -04:00 [DBG] Request did not match any endpoints
2025-04-19 23:25:29.191 -04:00 [DBG] Connection id "0HNBVNBVK1M08" accepted.
2025-04-19 23:25:29.206 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui-bundle.js - null null
2025-04-19 23:25:29.233 -04:00 [DBG] No candidates found for the request path '/swagger/swagger-ui-bundle.js'
2025-04-19 23:25:29.237 -04:00 [DBG] Request did not match any endpoints
2025-04-19 23:25:29.215 -04:00 [DBG] Connection id "0HNBVNBVK1M08" started.
2025-04-19 23:25:29.209 -04:00 [DBG] Request did not match any endpoints
2025-04-19 23:25:29.212 -04:00 [DBG] Connection id "0HNBVNBVK1M07" started.
2025-04-19 23:25:29.244 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-04-19 23:25:29.248 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui-standalone-preset.js - null null
2025-04-19 23:25:29.288 -04:00 [DBG] No candidates found for the request path '/swagger/swagger-ui-standalone-preset.js'
2025-04-19 23:25:29.291 -04:00 [DBG] Request did not match any endpoints
2025-04-19 23:25:29.273 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-04-19 23:25:29.302 -04:00 [DBG] Request did not match any endpoints
2025-04-19 23:25:29.308 -04:00 [DBG] Connection id "0HNBVNBVK1M08" completed keep alive response.
2025-04-19 23:25:29.311 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 66.1317ms
2025-04-19 23:25:29.494 -04:00 [INF] The file /swagger-ui-bundle.js was not modified
2025-04-19 23:25:29.495 -04:00 [INF] The file /index.css was not modified
2025-04-19 23:25:29.532 -04:00 [DBG] Handled. Status code: 304 File: /index.css
2025-04-19 23:25:29.495 -04:00 [INF] The file /swagger-ui-standalone-preset.js was not modified
2025-04-19 23:25:29.548 -04:00 [DBG] Connection id "0HNBVNBVK1M04" completed keep alive response.
2025-04-19 23:25:29.495 -04:00 [INF] The file /swagger-ui.css was not modified
2025-04-19 23:25:29.548 -04:00 [DBG] Handled. Status code: 304 File: /swagger-ui-standalone-preset.js
2025-04-19 23:25:29.531 -04:00 [DBG] Handled. Status code: 304 File: /swagger-ui-bundle.js
2025-04-19 23:25:29.551 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.css - 304 null text/css 452.65ms
2025-04-19 23:25:29.558 -04:00 [DBG] Handled. Status code: 304 File: /swagger-ui.css
2025-04-19 23:25:29.561 -04:00 [DBG] Connection id "0HNBVNBVK1M07" completed keep alive response.
2025-04-19 23:25:29.565 -04:00 [DBG] Connection id "0HNBVNBVK1M06" completed keep alive response.
2025-04-19 23:25:29.628 -04:00 [DBG] Connection id "0HNBVNBVK1M05" completed keep alive response.
2025-04-19 23:25:29.630 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui-standalone-preset.js - 304 null text/javascript 381.9692ms
2025-04-19 23:25:29.631 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui-bundle.js - 304 null text/javascript 425.2728ms
2025-04-19 23:25:29.633 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui.css - 304 null text/css 591.7832ms
2025-04-19 23:25:30.172 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-04-19 23:25:30.172 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/favicon-32x32.png - null null
2025-04-19 23:25:30.177 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-19 23:25:30.182 -04:00 [DBG] No candidates found for the request path '/swagger/favicon-32x32.png'
2025-04-19 23:25:30.197 -04:00 [DBG] Request did not match any endpoints
2025-04-19 23:25:30.195 -04:00 [DBG] Request did not match any endpoints
2025-04-19 23:25:30.232 -04:00 [INF] The file /favicon-32x32.png was not modified
2025-04-19 23:25:30.263 -04:00 [DBG] Handled. Status code: 304 File: /favicon-32x32.png
2025-04-19 23:25:30.282 -04:00 [DBG] Connection id "0HNBVNBVK1M06" completed keep alive response.
2025-04-19 23:25:30.284 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/favicon-32x32.png - 304 null image/png 112.1426ms
2025-04-19 23:25:30.772 -04:00 [DBG] Connection id "0HNBVNBVK1M08" received FIN.
2025-04-19 23:25:30.778 -04:00 [DBG] Connection id "0HNBVNBVK1M04" received FIN.
2025-04-19 23:25:30.796 -04:00 [DBG] Connection id "0HNBVNBVK1M07" received FIN.
2025-04-19 23:25:30.812 -04:00 [DBG] Connection id "0HNBVNBVK1M06" received FIN.
2025-04-19 23:25:31.516 -04:00 [DBG] Connection id "0HNBVNBVK1M08" disconnecting.
2025-04-19 23:25:32.083 -04:00 [DBG] Connection id "0HNBVNBVK1M04" disconnecting.
2025-04-19 23:25:32.306 -04:00 [DBG] Connection id "0HNBVNBVK1M08" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-19 23:25:32.673 -04:00 [DBG] Connection id "0HNBVNBVK1M04" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-19 23:25:32.760 -04:00 [DBG] Connection id "0HNBVNBVK1M07" disconnecting.
2025-04-19 23:25:32.761 -04:00 [DBG] Connection id "0HNBVNBVK1M08" stopped.
2025-04-19 23:25:33.414 -04:00 [DBG] Connection id "0HNBVNBVK1M04" stopped.
2025-04-19 23:25:33.500 -04:00 [DBG] Connection id "0HNBVNBVK1M07" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-19 23:25:33.525 -04:00 [DBG] Connection id "0HNBVNBVK1M06" disconnecting.
2025-04-19 23:25:33.527 -04:00 [DBG] Connection id "0HNBVNBVK1M06" stopped.
2025-04-19 23:25:33.528 -04:00 [DBG] Connection id "0HNBVNBVK1M07" stopped.
2025-04-19 23:25:33.529 -04:00 [DBG] Connection id "0HNBVNBVK1M06" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-19 23:25:33.676 -04:00 [DBG] Connection id "0HNBVNBVK1M05" completed keep alive response.
2025-04-19 23:25:34.973 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 4801.4843ms
2025-04-19 23:27:45.711 -04:00 [DBG] Connection id "0HNBVNBVK1M05" disconnecting.
2025-04-19 23:27:45.715 -04:00 [DBG] Connection id "0HNBVNBVK1M05" stopped.
2025-04-19 23:27:45.717 -04:00 [DBG] Connection id "0HNBVNBVK1M05" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-19 23:28:19.373 -04:00 [DBG] Connection id "0HNBVNBVK1M09" accepted.
2025-04-19 23:28:20.495 -04:00 [DBG] Connection id "0HNBVNBVK1M0A" accepted.
2025-04-19 23:28:20.511 -04:00 [DBG] Connection id "0HNBVNBVK1M09" started.
2025-04-19 23:28:21.068 -04:00 [DBG] Connection id "0HNBVNBVK1M0A" started.
2025-04-19 23:28:22.367 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-04-19 23:28:23.922 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-19 23:28:24.059 -04:00 [DBG] Request did not match any endpoints
2025-04-19 23:28:24.249 -04:00 [DBG] Connection id "0HNBVNBVK1M09" completed keep alive response.
2025-04-19 23:28:24.332 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 1964.7426ms
2025-04-19 23:28:29.226 -04:00 [DBG] Connection id "0HNBVNBVK1M0A" received FIN.
2025-04-19 23:28:29.226 -04:00 [DBG] Connection id "0HNBVNBVK1M09" received FIN.
2025-04-19 23:28:29.232 -04:00 [DBG] Connection id "0HNBVNBVK1M0A" disconnecting.
2025-04-19 23:28:29.233 -04:00 [DBG] Connection id "0HNBVNBVK1M09" disconnecting.
2025-04-19 23:28:29.237 -04:00 [DBG] Connection id "0HNBVNBVK1M0A" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-19 23:28:29.239 -04:00 [DBG] Connection id "0HNBVNBVK1M09" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-19 23:28:29.246 -04:00 [DBG] Connection id "0HNBVNBVK1M0A" stopped.
2025-04-19 23:28:29.251 -04:00 [DBG] Connection id "0HNBVNBVK1M09" stopped.
2025-04-19 23:29:38.031 -04:00 [DBG] Connection id "0HNBVNBVK1M0B" accepted.
2025-04-19 23:29:38.041 -04:00 [DBG] Connection id "0HNBVNBVK1M0B" started.
2025-04-19 23:29:38.123 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/register - application/json 121
2025-04-19 23:29:38.144 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/register'
2025-04-19 23:29:38.157 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/register' is valid for the request path '/api/auth/register'
2025-04-19 23:29:38.161 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-19 23:29:38.174 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-19 23:29:38.185 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-19 23:29:38.187 -04:00 [INF] CORS policy execution failed.
2025-04-19 23:29:38.189 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-19 23:29:38.215 -04:00 [WRN] Failed to determine the https port for redirect.
2025-04-19 23:29:38.330 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-04-19 23:29:38.354 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-19 23:29:38.440 -04:00 [INF] Route matched with {action = "Register", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RegisterAsync(HotelBookingPlatform.Domain.Helpers.RegisterModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-04-19 23:29:38.446 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-19 23:29:38.467 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-19 23:29:38.488 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-19 23:29:38.503 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-19 23:29:38.510 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-19 23:29:38.527 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-19 23:29:41.294 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-19 23:29:41.419 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-19 23:29:41.433 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-04-19 23:29:41.439 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' using the name '' in request data ...
2025-04-19 23:29:41.443 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-19 23:29:41.477 -04:00 [DBG] Connection id "0HNBVNBVK1M0B", Request id "0HNBVNBVK1M0B:00000001": started reading request body.
2025-04-19 23:29:41.480 -04:00 [DBG] Connection id "0HNBVNBVK1M0B", Request id "0HNBVNBVK1M0B:00000001": done reading request body.
2025-04-19 23:29:41.507 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'
2025-04-19 23:29:41.508 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-19 23:29:41.511 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-19 23:29:41.513 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-04-19 23:29:41.546 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-19 23:29:42.251 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-19 23:29:42.371 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-19 23:29:42.687 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-19 23:29:42.757 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-19 23:29:42.862 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-19 23:29:42.870 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-19 23:29:42.904 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-19 23:29:43.118 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-04-19 23:29:43.123 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-04-19 23:29:43.127 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-04-19 23:29:43.137 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-04-19 23:29:43.259 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-04-19 23:29:43.692 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-19 23:29:43.695 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-19 23:29:43.703 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-19 23:29:44.158 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-19 23:29:44.402 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-04-19 23:29:44.501 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-04-19 23:29:45.135 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-19 23:29:45.285 -04:00 [DBG] Creating DbConnection.
2025-04-19 23:29:45.351 -04:00 [DBG] Created DbConnection. (64ms).
2025-04-19 23:29:45.357 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:29:46.018 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:29:46.024 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:29:46.059 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (13ms).
2025-04-19 23:29:46.076 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (52ms).
2025-04-19 23:29:46.093 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-19 23:29:46.255 -04:00 [INF] Executed DbCommand (166ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-19 23:29:46.278 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:29:46.306 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 33ms reading results.
2025-04-19 23:29:46.317 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:29:46.333 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (16ms).
2025-04-19 23:29:46.586 -04:00 [DBG] User validation failed: InvalidUserName.
2025-04-19 23:29:46.608 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API) in 8077.1768ms
2025-04-19 23:29:46.611 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-19 23:29:46.753 -04:00 [DBG] Connection id "0HNBVNBVK1M0B" completed keep alive response.
2025-04-19 23:29:46.761 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-19 23:29:46.786 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:29:46.793 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-04-19 23:29:46.805 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/register - 400 null application/json 8682.0221ms
2025-04-19 23:30:14.932 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/register - application/json 130
2025-04-19 23:30:15.141 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/register'
2025-04-19 23:30:15.145 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/register' is valid for the request path '/api/auth/register'
2025-04-19 23:30:15.178 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-19 23:30:15.207 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-19 23:30:15.210 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-19 23:30:15.212 -04:00 [INF] CORS policy execution failed.
2025-04-19 23:30:15.222 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-19 23:30:15.261 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-04-19 23:30:15.291 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-19 23:30:15.321 -04:00 [INF] Route matched with {action = "Register", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RegisterAsync(HotelBookingPlatform.Domain.Helpers.RegisterModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-04-19 23:30:15.356 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-19 23:30:15.363 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-19 23:30:15.374 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-19 23:30:15.385 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-19 23:30:15.393 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-19 23:30:15.401 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-19 23:30:15.425 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-19 23:30:15.563 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-04-19 23:30:15.623 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' using the name '' in request data ...
2025-04-19 23:30:15.712 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-19 23:30:15.740 -04:00 [DBG] Connection id "0HNBVNBVK1M0B", Request id "0HNBVNBVK1M0B:00000002": started reading request body.
2025-04-19 23:30:15.743 -04:00 [DBG] Connection id "0HNBVNBVK1M0B", Request id "0HNBVNBVK1M0B:00000002": done reading request body.
2025-04-19 23:30:15.789 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'
2025-04-19 23:30:15.793 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-19 23:30:15.805 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-19 23:30:15.822 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-04-19 23:30:15.828 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-19 23:30:16.261 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-19 23:30:16.297 -04:00 [DBG] Creating DbConnection.
2025-04-19 23:30:16.307 -04:00 [DBG] Created DbConnection. (8ms).
2025-04-19 23:30:16.313 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:16.328 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:16.457 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:30:16.459 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-19 23:30:16.470 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (12ms).
2025-04-19 23:30:16.473 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-19 23:30:16.510 -04:00 [INF] Executed DbCommand (34ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-19 23:30:17.073 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:17.095 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 23ms reading results.
2025-04-19 23:30:17.201 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:17.471 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (269ms).
2025-04-19 23:30:17.768 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-04-19 23:30:17.771 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-04-19 23:30:17.835 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-19 23:30:18.018 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:18.020 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:18.021 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:30:18.023 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-19 23:30:18.043 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (22ms).
2025-04-19 23:30:18.045 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-19 23:30:18.059 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-19 23:30:18.087 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:18.096 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-04-19 23:30:18.147 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:18.154 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-04-19 23:30:18.670 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-19 23:30:18.678 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-19 23:30:18.691 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-19 23:30:18.745 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-19 23:30:18.911 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:18.934 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:18.945 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:30:18.956 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (11ms).
2025-04-19 23:30:18.990 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (45ms).
2025-04-19 23:30:18.996 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-04-19 23:30:19.072 -04:00 [INF] Executed DbCommand (76ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-04-19 23:30:19.102 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:19.129 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 39ms reading results.
2025-04-19 23:30:19.147 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:19.151 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-19 23:30:19.192 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-19 23:30:19.197 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-04-19 23:30:19.222 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-04-19 23:30:19.278 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-19 23:30:19.309 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:19.352 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:19.354 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:30:19.356 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-19 23:30:19.359 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-19 23:30:19.376 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-04-19 23:30:19.401 -04:00 [INF] Executed DbCommand (25ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-04-19 23:30:19.439 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-19 23:30:19.463 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:19.471 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 66ms reading results.
2025-04-19 23:30:19.474 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:19.484 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (10ms).
2025-04-19 23:30:19.506 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-04-19 23:30:19.558 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-19 23:30:20.207 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:20.286 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:20.288 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:30:20.294 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-04-19 23:30:20.381 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (92ms).
2025-04-19 23:30:20.391 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-04-19 23:30:20.408 -04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-04-19 23:30:20.414 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:20.425 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 13ms reading results.
2025-04-19 23:30:20.436 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:20.438 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-19 23:30:20.480 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .FirstOrDefault(e => EF.Property<string>(e, "UserId") == __p_0 && EF.Property<string>(e, "RoleId") == __p_1)'
2025-04-19 23:30:20.512 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<string>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<string>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<string> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<string> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<string>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<string>.UserId, IdentityUserRole<string>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetString(0), 
                        (object)dataReader.GetString(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<string>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]: 
                            {
                                return 
                                {
                                    IdentityUserRole<string> instance;
                                    instance = new IdentityUserRole<string>();
                                    instance.<UserId>k__BackingField = dataReader.GetString(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetString(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityUserRole<string>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-19 23:30:20.651 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:20.843 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:20.995 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:30:21.103 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (107ms).
2025-04-19 23:30:21.225 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (229ms).
2025-04-19 23:30:21.227 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-04-19 23:30:21.279 -04:00 [INF] Executed DbCommand (52ms) [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-04-19 23:30:21.618 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:21.742 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 127ms reading results.
2025-04-19 23:30:21.745 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:21.748 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-19 23:30:21.758 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:21.775 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:21.781 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:30:21.791 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (10ms).
2025-04-19 23:30:21.807 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (26ms).
2025-04-19 23:30:21.810 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-04-19 23:30:21.824 -04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-04-19 23:30:21.830 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:21.839 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 10ms reading results.
2025-04-19 23:30:21.873 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:21.889 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (16ms).
2025-04-19 23:30:21.929 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityUserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-19 23:30:21.996 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:21.997 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:22.004 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:30:22.008 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-04-19 23:30:22.011 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-04-19 23:30:22.014 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-19 23:30:22.024 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-19 23:30:22.086 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:22.103 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 73ms reading results.
2025-04-19 23:30:22.214 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:22.223 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-04-19 23:30:22.243 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-19 23:30:22.357 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-19 23:30:22.413 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-19 23:30:22.429 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-19 23:30:22.533 -04:00 [DBG] Executing 2 update commands as a batch.
2025-04-19 23:30:22.605 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:22.609 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:22.613 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-04-19 23:30:22.624 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-04-19 23:30:22.626 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:30:22.629 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-04-19 23:30:22.635 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-04-19 23:30:22.637 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-04-19 23:30:22.684 -04:00 [INF] Executed DbCommand (47ms) [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-04-19 23:30:22.691 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:22.693 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-19 23:30:22.704 -04:00 [DBG] Committing transaction.
2025-04-19 23:30:22.727 -04:00 [DBG] Committed transaction.
2025-04-19 23:30:22.739 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:22.741 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-19 23:30:22.747 -04:00 [DBG] Disposing transaction.
2025-04-19 23:30:22.754 -04:00 [DBG] An entity of type 'IdentityUserRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-19 23:30:22.770 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-19 23:30:22.778 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-04-19 23:30:22.818 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-04-19 23:30:22.845 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-19 23:30:22.871 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:22.873 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:22.877 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:30:22.879 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-19 23:30:22.881 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-19 23:30:22.888 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-19 23:30:22.911 -04:00 [INF] Executed DbCommand (22ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-19 23:30:22.940 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:22.943 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 12ms reading results.
2025-04-19 23:30:22.954 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:22.975 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (20ms).
2025-04-19 23:30:23.019 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-04-19 23:30:23.054 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-19 23:30:23.062 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:23.073 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:23.078 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:30:23.081 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-19 23:30:23.087 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-04-19 23:30:23.089 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-19 23:30:23.095 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-19 23:30:23.112 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:23.125 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 14ms reading results.
2025-04-19 23:30:23.129 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:23.143 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (14ms).
2025-04-19 23:30:23.176 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:23.178 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:23.181 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:30:23.185 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-04-19 23:30:23.187 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-19 23:30:23.188 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-19 23:30:23.194 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-19 23:30:23.221 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:23.225 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-04-19 23:30:23.227 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:23.230 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-19 23:30:23.238 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-19 23:30:23.244 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-19 23:30:23.246 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-19 23:30:23.259 -04:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LocalUser.RefreshTokens'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-19 23:30:23.294 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'RefreshToken.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-19 23:30:23.345 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-19 23:30:23.348 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-19 23:30:23.372 -04:00 [DBG] Executing 2 update commands as a batch.
2025-04-19 23:30:23.373 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:23.379 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:23.381 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-04-19 23:30:23.385 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-04-19 23:30:23.386 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:30:23.388 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-19 23:30:23.392 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-19 23:30:23.398 -04:00 [DBG] Executing DbCommand [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-04-19 23:30:23.436 -04:00 [INF] Executed DbCommand (39ms) [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-04-19 23:30:23.462 -04:00 [DBG] The foreign key property 'RefreshToken.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-19 23:30:23.477 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:23.480 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 38ms reading results.
2025-04-19 23:30:23.485 -04:00 [DBG] Committing transaction.
2025-04-19 23:30:23.494 -04:00 [DBG] Committed transaction.
2025-04-19 23:30:23.496 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:23.498 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-19 23:30:23.502 -04:00 [DBG] Disposing transaction.
2025-04-19 23:30:23.505 -04:00 [DBG] An entity of type 'RefreshToken' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-19 23:30:23.508 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-19 23:30:23.512 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-04-19 23:30:23.626 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-19 23:30:23.631 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-19 23:30:23.634 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-19 23:30:23.635 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-19 23:30:23.638 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-19 23:30:23.640 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-19 23:30:23.717 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API) in 8316.1789ms
2025-04-19 23:30:23.719 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-19 23:30:23.721 -04:00 [DBG] Connection id "0HNBVNBVK1M0B" completed keep alive response.
2025-04-19 23:30:23.725 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-19 23:30:23.759 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:30:23.761 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-19 23:30:23.776 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/register - 200 null application/json; charset=utf-8 8844.17ms
2025-04-19 23:30:35.892 -04:00 [DBG] Connection id "0HNBVNBVK1M0B" received FIN.
2025-04-19 23:30:35.894 -04:00 [DBG] Connection id "0HNBVNBVK1M0B" disconnecting.
2025-04-19 23:30:35.900 -04:00 [DBG] Connection id "0HNBVNBVK1M0B" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-19 23:30:35.903 -04:00 [DBG] Connection id "0HNBVNBVK1M0B" stopped.
2025-04-19 23:33:00.293 -04:00 [DBG] Connection id "0HNBVNBVK1M0C" accepted.
2025-04-19 23:33:00.669 -04:00 [DBG] Connection id "0HNBVNBVK1M0C" started.
2025-04-19 23:33:28.297 -04:00 [DBG] Connection id "0HNBVNBVK1M0D" accepted.
2025-04-19 23:33:28.301 -04:00 [DBG] Connection id "0HNBVNBVK1M0D" started.
2025-04-19 23:33:28.303 -04:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - null null
2025-04-19 23:33:28.337 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-04-19 23:33:28.377 -04:00 [DBG] Request matched endpoint '405 HTTP Method Not Supported'
2025-04-19 23:33:28.400 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-19 23:33:28.416 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-04-19 23:33:28.423 -04:00 [INF] CORS policy execution successful.
2025-04-19 23:33:28.431 -04:00 [DBG] The request is a preflight request.
2025-04-19 23:33:28.434 -04:00 [DBG] Connection id "0HNBVNBVK1M0D" completed keep alive response.
2025-04-19 23:33:28.439 -04:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - 204 null null 135.205ms
2025-04-19 23:33:28.448 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 53
2025-04-19 23:33:28.453 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-04-19 23:33:28.454 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-04-19 23:33:28.455 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-19 23:33:28.461 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-19 23:33:28.462 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-04-19 23:33:28.464 -04:00 [INF] CORS policy execution successful.
2025-04-19 23:33:28.469 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-04-19 23:33:28.471 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-19 23:33:28.483 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-04-19 23:33:28.496 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-19 23:33:28.498 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-19 23:33:28.500 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-19 23:33:28.503 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-19 23:33:28.506 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-19 23:33:28.512 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-19 23:33:28.550 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-19 23:33:28.552 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-19 23:33:28.554 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-04-19 23:33:28.559 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-19 23:33:28.565 -04:00 [DBG] Connection id "0HNBVNBVK1M0D", Request id "0HNBVNBVK1M0D:00000002": started reading request body.
2025-04-19 23:33:28.569 -04:00 [DBG] Connection id "0HNBVNBVK1M0D", Request id "0HNBVNBVK1M0D:00000002": done reading request body.
2025-04-19 23:33:28.572 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-04-19 23:33:28.575 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-19 23:33:28.578 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-19 23:33:28.583 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-19 23:33:28.585 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-19 23:33:28.655 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-19 23:33:28.795 -04:00 [DBG] Creating DbConnection.
2025-04-19 23:33:28.796 -04:00 [DBG] Created DbConnection. (1ms).
2025-04-19 23:33:28.798 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:28.800 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:28.802 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:33:28.806 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-04-19 23:33:28.813 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-04-19 23:33:28.814 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-19 23:33:28.823 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-19 23:33:28.828 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:28.831 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-19 23:33:28.833 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:28.835 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-19 23:33:28.876 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 363.7313ms
2025-04-19 23:33:28.895 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-19 23:33:28.901 -04:00 [DBG] Connection id "0HNBVNBVK1M0D" completed keep alive response.
2025-04-19 23:33:28.953 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-19 23:33:28.962 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:29.017 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (54ms).
2025-04-19 23:33:29.057 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 500 null application/json 607.8851ms
2025-04-19 23:33:58.954 -04:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - null null
2025-04-19 23:33:59.047 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-04-19 23:33:59.048 -04:00 [DBG] Request matched endpoint '405 HTTP Method Not Supported'
2025-04-19 23:33:59.106 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-19 23:33:59.115 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-04-19 23:33:59.119 -04:00 [INF] CORS policy execution successful.
2025-04-19 23:33:59.123 -04:00 [DBG] The request is a preflight request.
2025-04-19 23:33:59.212 -04:00 [DBG] Connection id "0HNBVNBVK1M0D" completed keep alive response.
2025-04-19 23:33:59.250 -04:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - 204 null null 296.3751ms
2025-04-19 23:33:59.255 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 57
2025-04-19 23:33:59.262 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-04-19 23:33:59.264 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-04-19 23:33:59.266 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-19 23:33:59.269 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-19 23:33:59.270 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-04-19 23:33:59.272 -04:00 [INF] CORS policy execution successful.
2025-04-19 23:33:59.273 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-04-19 23:33:59.280 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-19 23:33:59.282 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-04-19 23:33:59.286 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-19 23:33:59.290 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-19 23:33:59.295 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-19 23:33:59.298 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-19 23:33:59.302 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-19 23:33:59.317 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-19 23:33:59.327 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-19 23:33:59.334 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-19 23:33:59.341 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-04-19 23:33:59.352 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-19 23:33:59.354 -04:00 [DBG] Connection id "0HNBVNBVK1M0D", Request id "0HNBVNBVK1M0D:00000004": started reading request body.
2025-04-19 23:33:59.359 -04:00 [DBG] Connection id "0HNBVNBVK1M0D", Request id "0HNBVNBVK1M0D:00000004": done reading request body.
2025-04-19 23:33:59.371 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-04-19 23:33:59.381 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-19 23:33:59.383 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-19 23:33:59.386 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-19 23:33:59.388 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-19 23:33:59.392 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-19 23:33:59.397 -04:00 [DBG] Creating DbConnection.
2025-04-19 23:33:59.398 -04:00 [DBG] Created DbConnection. (1ms).
2025-04-19 23:33:59.400 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:59.405 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:59.411 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:33:59.412 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-19 23:33:59.429 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (18ms).
2025-04-19 23:33:59.431 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-19 23:33:59.449 -04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-19 23:33:59.469 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-19 23:33:59.480 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-19 23:33:59.483 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:59.485 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 17ms reading results.
2025-04-19 23:33:59.487 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:59.489 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-19 23:33:59.627 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:59.629 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:59.631 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:33:59.633 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-19 23:33:59.635 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-19 23:33:59.636 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-19 23:33:59.643 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-19 23:33:59.648 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:59.651 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-04-19 23:33:59.654 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:59.659 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-19 23:33:59.664 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:59.669 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:59.671 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:33:59.672 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-19 23:33:59.674 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-19 23:33:59.677 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-19 23:33:59.684 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-19 23:33:59.695 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:59.698 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-19 23:33:59.700 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:59.702 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-19 23:33:59.708 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:59.719 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:59.728 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-19 23:33:59.730 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-19 23:33:59.735 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-04-19 23:33:59.738 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-19 23:33:59.749 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-19 23:33:59.757 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:59.764 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-04-19 23:33:59.802 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:33:59.804 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-19 23:33:59.819 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-19 23:33:59.830 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-19 23:33:59.831 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-19 23:33:59.832 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-19 23:33:59.839 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-19 23:33:59.845 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-19 23:33:59.849 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 531.6188ms
2025-04-19 23:33:59.854 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-19 23:33:59.860 -04:00 [DBG] Connection id "0HNBVNBVK1M0D" completed keep alive response.
2025-04-19 23:34:00.277 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-19 23:34:00.363 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-19 23:34:00.481 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (117ms).
2025-04-19 23:34:00.517 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 1261.2839ms
2025-04-19 23:35:12.710 -04:00 [DBG] Connection id "0HNBVNBVK1M0C" disconnecting.
2025-04-19 23:35:12.720 -04:00 [DBG] Connection id "0HNBVNBVK1M0C" stopped.
2025-04-19 23:35:12.734 -04:00 [DBG] Connection id "0HNBVNBVK1M0C" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-19 23:36:01.129 -04:00 [DBG] Connection id "0HNBVNBVK1M0D" received FIN.
2025-04-19 23:36:01.134 -04:00 [DBG] Connection id "0HNBVNBVK1M0D" disconnecting.
2025-04-19 23:36:01.136 -04:00 [DBG] Connection id "0HNBVNBVK1M0D" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-19 23:36:01.158 -04:00 [DBG] Connection id "0HNBVNBVK1M0D" stopped.
2025-04-20 15:31:22.325 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-20 15:31:22.657 -04:00 [DBG] Hosting starting
2025-04-20 15:31:22.712 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-20 15:31:22.737 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-04-20 15:31:22.855 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-f49e2f57-a336-4a02-9bd7-34e9429d6980.xml'.
2025-04-20 15:31:22.917 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-04-20 15:31:22.931 -04:00 [DBG] Found key {f49e2f57-a336-4a02-9bd7-34e9429d6980}.
2025-04-20 15:31:23.012 -04:00 [DBG] Considering key {f49e2f57-a336-4a02-9bd7-34e9429d6980} with expiration date 2025-07-08 16:14:06Z as default key.
2025-04-20 15:31:23.057 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-20 15:31:23.073 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-04-20 15:31:23.079 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-20 15:31:23.097 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-20 15:31:23.108 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-20 15:31:23.121 -04:00 [DBG] Using key {f49e2f57-a336-4a02-9bd7-34e9429d6980} as the default key.
2025-04-20 15:31:23.125 -04:00 [DBG] Key ring with default key {f49e2f57-a336-4a02-9bd7-34e9429d6980} was loaded during application startup.
2025-04-20 15:31:23.281 -04:00 [INF] Now listening on: http://localhost:5004
2025-04-20 15:31:23.283 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-04-20 15:31:23.285 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-04-20 15:31:23.287 -04:00 [INF] Hosting environment: Development
2025-04-20 15:31:23.291 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-04-20 15:31:23.293 -04:00 [DBG] Hosting started
2025-04-20 15:31:36.551 -04:00 [DBG] Connection id "0HNC087RJKCDN" accepted.
2025-04-20 15:31:36.556 -04:00 [DBG] Connection id "0HNC087RJKCDN" started.
2025-04-20 15:31:36.794 -04:00 [DBG] Connection id "0HNC087RJKCDO" accepted.
2025-04-20 15:31:37.221 -04:00 [DBG] Connection id "0HNC087RJKCDO" started.
2025-04-20 15:31:37.926 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-04-20 15:31:37.938 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-04-20 15:31:38.054 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-20 15:31:38.057 -04:00 [DBG] Request did not match any endpoints
2025-04-20 15:31:39.153 -04:00 [DBG] Connection id "0HNC087RJKCDN" completed keep alive response.
2025-04-20 15:31:39.162 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 1239.5947ms
2025-04-20 15:31:40.741 -04:00 [DBG] Connection id "0HNC087RJKCDO" received FIN.
2025-04-20 15:31:40.741 -04:00 [DBG] Connection id "0HNC087RJKCDN" received FIN.
2025-04-20 15:31:40.748 -04:00 [DBG] Connection id "0HNC087RJKCDN" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-20 15:31:40.749 -04:00 [DBG] Connection id "0HNC087RJKCDO" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-20 15:31:40.754 -04:00 [DBG] Connection id "0HNC087RJKCDN" disconnecting.
2025-04-20 15:31:40.760 -04:00 [DBG] Connection id "0HNC087RJKCDO" disconnecting.
2025-04-20 15:31:40.767 -04:00 [DBG] Connection id "0HNC087RJKCDN" stopped.
2025-04-20 15:31:40.770 -04:00 [DBG] Connection id "0HNC087RJKCDO" stopped.
2025-04-20 15:35:01.803 -04:00 [DBG] Connection id "0HNC087RJKCDP" accepted.
2025-04-20 15:35:01.806 -04:00 [DBG] Connection id "0HNC087RJKCDP" started.
2025-04-20 15:35:01.815 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/register - application/json 124
2025-04-20 15:35:01.868 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/register'
2025-04-20 15:35:01.902 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/register' is valid for the request path '/api/auth/register'
2025-04-20 15:35:01.913 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-20 15:35:01.929 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-20 15:35:01.936 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-20 15:35:01.946 -04:00 [INF] CORS policy execution failed.
2025-04-20 15:35:01.949 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-20 15:35:01.970 -04:00 [WRN] Failed to determine the https port for redirect.
2025-04-20 15:35:02.068 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-04-20 15:35:02.078 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-20 15:35:02.145 -04:00 [INF] Route matched with {action = "Register", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RegisterAsync(HotelBookingPlatform.Domain.Helpers.RegisterModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-04-20 15:35:02.154 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-20 15:35:02.161 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-20 15:35:02.168 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-20 15:35:02.176 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-20 15:35:02.180 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-20 15:35:02.195 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-20 15:35:03.713 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-20 15:35:03.841 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-20 15:35:03.870 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-04-20 15:35:03.898 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' using the name '' in request data ...
2025-04-20 15:35:03.912 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-20 15:35:04.076 -04:00 [DBG] Connection id "0HNC087RJKCDP", Request id "0HNC087RJKCDP:00000001": started reading request body.
2025-04-20 15:35:04.080 -04:00 [DBG] Connection id "0HNC087RJKCDP", Request id "0HNC087RJKCDP:00000001": done reading request body.
2025-04-20 15:35:04.128 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'
2025-04-20 15:35:04.131 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-20 15:35:04.133 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-20 15:35:04.147 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-04-20 15:35:04.179 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-20 15:35:05.161 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-20 15:35:05.285 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-20 15:35:05.617 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-20 15:35:05.743 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-20 15:35:05.897 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-20 15:35:05.913 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-20 15:35:05.941 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-20 15:35:06.212 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-04-20 15:35:06.221 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-04-20 15:35:06.228 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-04-20 15:35:06.233 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-04-20 15:35:06.242 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-04-20 15:35:06.581 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-20 15:35:06.586 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-20 15:35:06.591 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-20 15:35:06.880 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-20 15:35:07.033 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-04-20 15:35:07.179 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-04-20 15:35:08.399 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-20 15:35:08.614 -04:00 [DBG] Creating DbConnection.
2025-04-20 15:35:08.750 -04:00 [DBG] Created DbConnection. (131ms).
2025-04-20 15:35:08.763 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:09.252 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:09.279 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-20 15:35:09.320 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (30ms).
2025-04-20 15:35:09.348 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (77ms).
2025-04-20 15:35:09.371 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-20 15:35:09.635 -04:00 [INF] Executed DbCommand (267ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-20 15:35:09.662 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:09.750 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 87ms reading results.
2025-04-20 15:35:09.770 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:09.786 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (19ms).
2025-04-20 15:35:10.238 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-04-20 15:35:10.248 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-04-20 15:35:10.318 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-20 15:35:10.391 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:10.401 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:10.405 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-20 15:35:10.410 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-04-20 15:35:10.414 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-04-20 15:35:10.419 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-20 15:35:10.443 -04:00 [INF] Executed DbCommand (24ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-20 15:35:10.451 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:10.460 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-04-20 15:35:10.465 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:10.470 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-20 15:35:10.742 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-20 15:35:10.754 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-20 15:35:10.770 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-20 15:35:10.868 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-20 15:35:11.027 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:11.032 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:11.047 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-20 15:35:11.052 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-04-20 15:35:11.060 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (12ms).
2025-04-20 15:35:11.065 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-04-20 15:35:11.142 -04:00 [INF] Executed DbCommand (78ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-04-20 15:35:11.164 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:11.168 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 18ms reading results.
2025-04-20 15:35:11.177 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:11.181 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-20 15:35:11.213 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-20 15:35:11.226 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-04-20 15:35:11.249 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-04-20 15:35:11.270 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-20 15:35:11.295 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:11.300 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:11.304 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-20 15:35:11.308 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-04-20 15:35:11.311 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-04-20 15:35:11.315 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-04-20 15:35:11.335 -04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-04-20 15:35:11.385 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-20 15:35:11.417 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:11.422 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 75ms reading results.
2025-04-20 15:35:11.428 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:11.432 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-20 15:35:11.464 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-04-20 15:35:11.494 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-20 15:35:11.513 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:11.519 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:11.525 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-20 15:35:11.533 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-04-20 15:35:11.536 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (11ms).
2025-04-20 15:35:11.544 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-04-20 15:35:11.554 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-04-20 15:35:11.565 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:11.569 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-04-20 15:35:11.577 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:11.585 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-04-20 15:35:11.635 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .FirstOrDefault(e => EF.Property<string>(e, "UserId") == __p_0 && EF.Property<string>(e, "RoleId") == __p_1)'
2025-04-20 15:35:11.677 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<string>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<string>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<string> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<string> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<string>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<string>.UserId, IdentityUserRole<string>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetString(0), 
                        (object)dataReader.GetString(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<string>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]: 
                            {
                                return 
                                {
                                    IdentityUserRole<string> instance;
                                    instance = new IdentityUserRole<string>();
                                    instance.<UserId>k__BackingField = dataReader.GetString(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetString(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityUserRole<string>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-20 15:35:11.715 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:11.767 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:11.837 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-20 15:35:11.915 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (77ms).
2025-04-20 15:35:11.995 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (157ms).
2025-04-20 15:35:12.037 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-04-20 15:35:12.051 -04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-04-20 15:35:12.064 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:12.069 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-04-20 15:35:12.076 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:12.081 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-20 15:35:12.108 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:12.112 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:12.115 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-20 15:35:12.119 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-04-20 15:35:12.127 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (11ms).
2025-04-20 15:35:12.130 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-04-20 15:35:12.145 -04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-04-20 15:35:12.153 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:12.159 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-04-20 15:35:12.165 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:12.169 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-20 15:35:12.215 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityUserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-20 15:35:12.226 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:12.229 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:12.235 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-20 15:35:12.242 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-04-20 15:35:12.247 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (11ms).
2025-04-20 15:35:12.251 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-20 15:35:12.266 -04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-20 15:35:12.299 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:12.305 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 22ms reading results.
2025-04-20 15:35:12.316 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:12.325 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-04-20 15:35:12.338 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-20 15:35:12.347 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-20 15:35:12.359 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-20 15:35:12.371 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-20 15:35:12.435 -04:00 [DBG] Executing 2 update commands as a batch.
2025-04-20 15:35:12.444 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:12.462 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:12.470 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-04-20 15:35:12.495 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-04-20 15:35:12.500 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-20 15:35:12.505 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-04-20 15:35:12.517 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (16ms).
2025-04-20 15:35:12.521 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-04-20 15:35:12.554 -04:00 [INF] Executed DbCommand (33ms) [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-04-20 15:35:12.569 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:12.583 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 14ms reading results.
2025-04-20 15:35:12.595 -04:00 [DBG] Committing transaction.
2025-04-20 15:35:12.618 -04:00 [DBG] Committed transaction.
2025-04-20 15:35:12.636 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:12.644 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-04-20 15:35:12.650 -04:00 [DBG] Disposing transaction.
2025-04-20 15:35:12.660 -04:00 [DBG] An entity of type 'IdentityUserRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-20 15:35:12.669 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-20 15:35:12.681 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-04-20 15:35:12.719 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-04-20 15:35:12.768 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-20 15:35:13.268 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:13.285 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:13.294 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-20 15:35:13.296 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-20 15:35:13.298 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-20 15:35:13.315 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-20 15:35:13.331 -04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-20 15:35:13.346 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:13.353 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-04-20 15:35:13.362 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:13.367 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-20 15:35:13.407 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-04-20 15:35:13.454 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-20 15:35:13.498 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:13.552 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:13.567 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-20 15:35:13.572 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-04-20 15:35:13.577 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-04-20 15:35:13.580 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-20 15:35:13.600 -04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-20 15:35:13.613 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:13.617 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-04-20 15:35:13.632 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:13.637 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-04-20 15:35:13.671 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:13.679 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:13.683 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-20 15:35:13.697 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (14ms).
2025-04-20 15:35:13.703 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (20ms).
2025-04-20 15:35:13.705 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-20 15:35:13.720 -04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-20 15:35:13.735 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:13.744 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-04-20 15:35:13.749 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:13.755 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-04-20 15:35:13.768 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-20 15:35:13.781 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-20 15:35:13.784 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-20 15:35:13.807 -04:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LocalUser.RefreshTokens'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-20 15:35:13.852 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'RefreshToken.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-20 15:35:13.930 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-20 15:35:13.938 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-20 15:35:14.235 -04:00 [DBG] Executing 2 update commands as a batch.
2025-04-20 15:35:14.595 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:14.718 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:14.750 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-04-20 15:35:14.804 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-04-20 15:35:14.855 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-20 15:35:14.881 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (26ms).
2025-04-20 15:35:14.899 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (44ms).
2025-04-20 15:35:14.915 -04:00 [DBG] Executing DbCommand [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-04-20 15:35:15.221 -04:00 [INF] Executed DbCommand (306ms) [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-04-20 15:35:15.722 -04:00 [DBG] The foreign key property 'RefreshToken.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-20 15:35:15.753 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:15.761 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 69ms reading results.
2025-04-20 15:35:15.781 -04:00 [DBG] Committing transaction.
2025-04-20 15:35:15.797 -04:00 [DBG] Committed transaction.
2025-04-20 15:35:15.804 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:15.812 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-04-20 15:35:15.819 -04:00 [DBG] Disposing transaction.
2025-04-20 15:35:15.831 -04:00 [DBG] An entity of type 'RefreshToken' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-20 15:35:15.847 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-20 15:35:15.970 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-04-20 15:35:16.133 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-20 15:35:16.189 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-20 15:35:16.285 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-20 15:35:16.454 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-20 15:35:16.538 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-20 15:35:16.564 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-20 15:35:16.848 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API) in 14653.0517ms
2025-04-20 15:35:17.155 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-20 15:35:17.172 -04:00 [DBG] Connection id "0HNC087RJKCDP" completed keep alive response.
2025-04-20 15:35:17.199 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-20 15:35:17.286 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-20 15:35:17.309 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (17ms).
2025-04-20 15:35:17.321 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/register - 200 null application/json; charset=utf-8 15505.1903ms
2025-04-20 15:37:27.511 -04:00 [DBG] Connection id "0HNC087RJKCDP" disconnecting.
2025-04-20 15:37:27.514 -04:00 [DBG] Connection id "0HNC087RJKCDP" stopped.
2025-04-20 15:37:27.519 -04:00 [DBG] Connection id "0HNC087RJKCDP" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-29 21:32:36.866 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-29 21:32:37.253 -04:00 [DBG] Hosting starting
2025-04-29 21:32:37.310 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-29 21:32:37.331 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-04-29 21:32:37.424 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-f49e2f57-a336-4a02-9bd7-34e9429d6980.xml'.
2025-04-29 21:32:37.460 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-04-29 21:32:37.470 -04:00 [DBG] Found key {f49e2f57-a336-4a02-9bd7-34e9429d6980}.
2025-04-29 21:32:37.482 -04:00 [DBG] Considering key {f49e2f57-a336-4a02-9bd7-34e9429d6980} with expiration date 2025-07-08 16:14:06Z as default key.
2025-04-29 21:32:37.493 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-29 21:32:37.507 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-04-29 21:32:37.511 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-29 21:32:37.526 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-29 21:32:37.532 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-29 21:32:37.544 -04:00 [DBG] Using key {f49e2f57-a336-4a02-9bd7-34e9429d6980} as the default key.
2025-04-29 21:32:37.547 -04:00 [DBG] Key ring with default key {f49e2f57-a336-4a02-9bd7-34e9429d6980} was loaded during application startup.
2025-04-29 21:32:37.712 -04:00 [INF] Now listening on: http://localhost:5004
2025-04-29 21:32:37.717 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-04-29 21:32:37.719 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-04-29 21:32:37.721 -04:00 [INF] Hosting environment: Development
2025-04-29 21:32:37.723 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-04-29 21:32:37.727 -04:00 [DBG] Hosting started
2025-04-29 21:38:10.670 -04:00 [DBG] Connection id "0HNC7GUL73F5G" accepted.
2025-04-29 21:38:10.679 -04:00 [DBG] Connection id "0HNC7GUL73F5G" started.
2025-04-29 21:38:10.680 -04:00 [DBG] Connection id "0HNC7GUL73F5H" accepted.
2025-04-29 21:38:10.683 -04:00 [DBG] Connection id "0HNC7GUL73F5H" started.
2025-04-29 21:38:11.187 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-04-29 21:38:11.197 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-04-29 21:38:11.298 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-29 21:38:11.302 -04:00 [DBG] Request did not match any endpoints
2025-04-29 21:38:11.758 -04:00 [DBG] Connection id "0HNC7GUL73F5G" completed keep alive response.
2025-04-29 21:38:11.763 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 578.4481ms
2025-04-29 21:40:22.307 -04:00 [DBG] Connection id "0HNC7GUL73F5H" disconnecting.
2025-04-29 21:40:22.310 -04:00 [DBG] Connection id "0HNC7GUL73F5H" stopped.
2025-04-29 21:40:22.318 -04:00 [DBG] Connection id "0HNC7GUL73F5H" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-29 21:40:23.311 -04:00 [DBG] Connection id "0HNC7GUL73F5G" disconnecting.
2025-04-29 21:40:23.314 -04:00 [DBG] Connection id "0HNC7GUL73F5G" stopped.
2025-04-29 21:40:23.315 -04:00 [DBG] Connection id "0HNC7GUL73F5G" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-30 08:58:26.667 -04:00 [INF] Application is shutting down...
2025-04-30 08:58:26.692 -04:00 [DBG] Hosting stopping
2025-04-30 08:58:26.831 -04:00 [DBG] Hosting stopped
2025-04-30 21:53:37.905 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-30 21:53:38.294 -04:00 [DBG] Hosting starting
2025-04-30 21:53:38.370 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-30 21:53:38.484 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-04-30 21:53:38.610 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-f49e2f57-a336-4a02-9bd7-34e9429d6980.xml'.
2025-04-30 21:53:38.729 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-04-30 21:53:38.762 -04:00 [DBG] Found key {f49e2f57-a336-4a02-9bd7-34e9429d6980}.
2025-04-30 21:53:38.851 -04:00 [DBG] Considering key {f49e2f57-a336-4a02-9bd7-34e9429d6980} with expiration date 2025-07-08 16:14:06Z as default key.
2025-04-30 21:53:39.301 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-30 21:53:39.321 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-04-30 21:53:39.339 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-30 21:53:39.599 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-30 21:53:39.606 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-30 21:53:39.621 -04:00 [DBG] Using key {f49e2f57-a336-4a02-9bd7-34e9429d6980} as the default key.
2025-04-30 21:53:39.626 -04:00 [DBG] Key ring with default key {f49e2f57-a336-4a02-9bd7-34e9429d6980} was loaded during application startup.
2025-04-30 21:53:40.244 -04:00 [INF] Now listening on: http://localhost:5004
2025-04-30 21:53:40.248 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-04-30 21:53:40.252 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-04-30 21:53:40.256 -04:00 [INF] Hosting environment: Development
2025-04-30 21:53:40.261 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-04-30 21:53:40.284 -04:00 [DBG] Hosting started
2025-04-30 21:56:07.824 -04:00 [DBG] Connection id "0HNC8ADBEH024" accepted.
2025-04-30 21:56:07.837 -04:00 [DBG] Connection id "0HNC8ADBEH025" accepted.
2025-04-30 21:56:07.838 -04:00 [DBG] Connection id "0HNC8ADBEH024" started.
2025-04-30 21:56:07.841 -04:00 [DBG] Connection id "0HNC8ADBEH025" started.
2025-04-30 21:56:07.944 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-04-30 21:56:07.953 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-04-30 21:56:08.025 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-04-30 21:56:08.028 -04:00 [DBG] Request did not match any endpoints
2025-04-30 21:56:08.251 -04:00 [DBG] Connection id "0HNC8ADBEH024" completed keep alive response.
2025-04-30 21:56:08.256 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 314.33ms
2025-04-30 21:56:08.313 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-04-30 21:56:08.325 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-04-30 21:56:08.346 -04:00 [DBG] Request did not match any endpoints
2025-04-30 21:56:08.360 -04:00 [DBG] Connection id "0HNC8ADBEH024" completed keep alive response.
2025-04-30 21:56:08.373 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 59.7061ms
2025-04-30 21:56:08.740 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-04-30 21:56:09.096 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-30 21:56:09.098 -04:00 [DBG] Request did not match any endpoints
2025-04-30 21:56:09.973 -04:00 [DBG] Connection id "0HNC8ADBEH024" completed keep alive response.
2025-04-30 21:56:09.976 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 1236.4487ms
2025-04-30 21:56:14.517 -04:00 [DBG] Connection id "0HNC8ADBEH025" received FIN.
2025-04-30 21:56:14.517 -04:00 [DBG] Connection id "0HNC8ADBEH024" received FIN.
2025-04-30 21:56:14.525 -04:00 [DBG] Connection id "0HNC8ADBEH025" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-30 21:56:14.525 -04:00 [DBG] Connection id "0HNC8ADBEH024" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-30 21:56:14.531 -04:00 [DBG] Connection id "0HNC8ADBEH025" disconnecting.
2025-04-30 21:56:14.534 -04:00 [DBG] Connection id "0HNC8ADBEH024" disconnecting.
2025-04-30 21:56:14.541 -04:00 [DBG] Connection id "0HNC8ADBEH025" stopped.
2025-04-30 21:56:14.541 -04:00 [DBG] Connection id "0HNC8ADBEH024" stopped.
2025-04-30 22:00:16.952 -04:00 [DBG] Connection id "0HNC8ADBEH026" accepted.
2025-04-30 22:00:16.955 -04:00 [DBG] Connection id "0HNC8ADBEH026" started.
2025-04-30 22:00:16.961 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 58
2025-04-30 22:00:16.999 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-04-30 22:00:17.026 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-04-30 22:00:17.036 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-30 22:00:17.051 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-30 22:00:17.058 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-30 22:00:17.062 -04:00 [INF] CORS policy execution failed.
2025-04-30 22:00:17.066 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-30 22:00:17.081 -04:00 [WRN] Failed to determine the https port for redirect.
2025-04-30 22:00:17.240 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-04-30 22:00:17.254 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-30 22:00:17.350 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-04-30 22:00:17.359 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-30 22:00:17.365 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-30 22:00:17.370 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-30 22:00:17.374 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-30 22:00:17.382 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-30 22:00:17.401 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-30 22:00:18.966 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-30 22:00:19.091 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-30 22:00:19.104 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-30 22:00:19.118 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-04-30 22:00:19.169 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-30 22:00:19.397 -04:00 [DBG] Connection id "0HNC8ADBEH026", Request id "0HNC8ADBEH026:00000001": started reading request body.
2025-04-30 22:00:19.417 -04:00 [DBG] Connection id "0HNC8ADBEH026", Request id "0HNC8ADBEH026:00000001": done reading request body.
2025-04-30 22:00:19.522 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-04-30 22:00:19.526 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-30 22:00:19.531 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-30 22:00:19.534 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-30 22:00:19.560 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-30 22:00:20.360 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-30 22:00:20.521 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-30 22:00:20.935 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-30 22:00:21.101 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-30 22:00:21.272 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-30 22:00:21.284 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-30 22:00:21.315 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-04-30 22:00:21.535 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-04-30 22:00:21.556 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-04-30 22:00:21.565 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-04-30 22:00:21.572 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-04-30 22:00:21.581 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-04-30 22:00:22.004 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-30 22:00:22.008 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-30 22:00:22.015 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-04-30 22:00:22.360 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-30 22:00:22.546 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-04-30 22:00:22.686 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-04-30 22:00:23.542 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-30 22:00:23.878 -04:00 [DBG] Creating DbConnection.
2025-04-30 22:00:24.036 -04:00 [DBG] Created DbConnection. (146ms).
2025-04-30 22:00:24.072 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:00:25.287 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:00:25.302 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:00:25.337 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (19ms).
2025-04-30 22:00:25.357 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (55ms).
2025-04-30 22:00:25.384 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-30 22:00:25.589 -04:00 [INF] Executed DbCommand (213ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-30 22:00:25.727 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:00:25.890 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:00:25.967 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:00:26.006 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 389ms reading results.
2025-04-30 22:00:26.032 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:00:26.053 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (24ms).
2025-04-30 22:00:26.342 -04:00 [DBG] Invalid password for user.
2025-04-30 22:00:26.368 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 8967.0023ms
2025-04-30 22:00:26.800 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-30 22:00:26.948 -04:00 [DBG] Connection id "0HNC8ADBEH026" completed keep alive response.
2025-04-30 22:00:26.959 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-30 22:00:26.973 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:00:26.984 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (11ms).
2025-04-30 22:00:26.991 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 500 null application/json 10030.4399ms
2025-04-30 22:00:34.908 -04:00 [DBG] Connection id "0HNC8ADBEH026" received FIN.
2025-04-30 22:00:34.911 -04:00 [DBG] Connection id "0HNC8ADBEH026" disconnecting.
2025-04-30 22:00:34.914 -04:00 [DBG] Connection id "0HNC8ADBEH026" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-30 22:00:34.930 -04:00 [DBG] Connection id "0HNC8ADBEH026" stopped.
2025-04-30 22:01:27.221 -04:00 [DBG] Connection id "0HNC8ADBEH027" accepted.
2025-04-30 22:01:27.224 -04:00 [DBG] Connection id "0HNC8ADBEH027" started.
2025-04-30 22:01:27.227 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/register - application/json 136
2025-04-30 22:01:27.335 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/register'
2025-04-30 22:01:27.341 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/register' is valid for the request path '/api/auth/register'
2025-04-30 22:01:27.345 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-30 22:01:27.352 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-30 22:01:27.358 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-30 22:01:27.369 -04:00 [INF] CORS policy execution failed.
2025-04-30 22:01:27.372 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-30 22:01:27.380 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-04-30 22:01:27.392 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-30 22:01:27.409 -04:00 [INF] Route matched with {action = "Register", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RegisterAsync(HotelBookingPlatform.Domain.Helpers.RegisterModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-04-30 22:01:27.418 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-30 22:01:27.421 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-30 22:01:27.428 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-30 22:01:27.435 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-30 22:01:27.439 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-30 22:01:27.451 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-30 22:01:27.469 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-30 22:01:27.476 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-04-30 22:01:27.486 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' using the name '' in request data ...
2025-04-30 22:01:27.495 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-30 22:01:27.508 -04:00 [DBG] Connection id "0HNC8ADBEH027", Request id "0HNC8ADBEH027:00000001": started reading request body.
2025-04-30 22:01:27.513 -04:00 [DBG] Connection id "0HNC8ADBEH027", Request id "0HNC8ADBEH027:00000001": done reading request body.
2025-04-30 22:01:27.526 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'
2025-04-30 22:01:27.528 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-30 22:01:27.542 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-30 22:01:27.547 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-04-30 22:01:27.562 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-30 22:01:27.787 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-30 22:01:27.905 -04:00 [DBG] Creating DbConnection.
2025-04-30 22:01:27.908 -04:00 [DBG] Created DbConnection. (2ms).
2025-04-30 22:01:27.955 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:27.958 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:27.993 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:01:27.997 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-04-30 22:01:28.002 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-04-30 22:01:28.006 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-30 22:01:28.077 -04:00 [INF] Executed DbCommand (72ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-30 22:01:28.087 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:01:28.095 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:01:28.107 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:28.112 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 26ms reading results.
2025-04-30 22:01:28.122 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:28.126 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-30 22:01:28.135 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API) in 684.64ms
2025-04-30 22:01:28.146 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-30 22:01:28.154 -04:00 [DBG] Connection id "0HNC8ADBEH027" completed keep alive response.
2025-04-30 22:01:28.181 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-30 22:01:28.183 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:28.187 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-30 22:01:28.191 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/register - 400 null application/json 964.5814ms
2025-04-30 22:01:30.003 -04:00 [DBG] Connection id "0HNC8ADBEH027" received FIN.
2025-04-30 22:01:30.008 -04:00 [DBG] Connection id "0HNC8ADBEH027" disconnecting.
2025-04-30 22:01:30.010 -04:00 [DBG] Connection id "0HNC8ADBEH027" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-30 22:01:30.021 -04:00 [DBG] Connection id "0HNC8ADBEH027" stopped.
2025-04-30 22:01:44.070 -04:00 [DBG] Connection id "0HNC8ADBEH028" accepted.
2025-04-30 22:01:44.072 -04:00 [DBG] Connection id "0HNC8ADBEH028" started.
2025-04-30 22:01:44.074 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/register - application/json 137
2025-04-30 22:01:44.080 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/register'
2025-04-30 22:01:44.083 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/register' is valid for the request path '/api/auth/register'
2025-04-30 22:01:44.096 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-30 22:01:44.105 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-30 22:01:44.113 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-30 22:01:44.117 -04:00 [INF] CORS policy execution failed.
2025-04-30 22:01:44.119 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-30 22:01:44.125 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-04-30 22:01:44.128 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-30 22:01:44.131 -04:00 [INF] Route matched with {action = "Register", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RegisterAsync(HotelBookingPlatform.Domain.Helpers.RegisterModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-04-30 22:01:44.140 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-30 22:01:44.145 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-30 22:01:44.155 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-30 22:01:44.161 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-30 22:01:44.169 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-30 22:01:44.173 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-30 22:01:44.254 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-30 22:01:44.294 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-04-30 22:01:44.306 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' using the name '' in request data ...
2025-04-30 22:01:44.361 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-30 22:01:44.408 -04:00 [DBG] Connection id "0HNC8ADBEH028", Request id "0HNC8ADBEH028:00000001": started reading request body.
2025-04-30 22:01:44.411 -04:00 [DBG] Connection id "0HNC8ADBEH028", Request id "0HNC8ADBEH028:00000001": done reading request body.
2025-04-30 22:01:44.461 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'
2025-04-30 22:01:44.468 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-30 22:01:44.472 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-30 22:01:44.476 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-04-30 22:01:44.587 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-04-30 22:01:44.797 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-30 22:01:45.060 -04:00 [DBG] Creating DbConnection.
2025-04-30 22:01:45.063 -04:00 [DBG] Created DbConnection. (2ms).
2025-04-30 22:01:45.069 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:45.074 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:45.093 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:01:45.108 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (15ms).
2025-04-30 22:01:45.126 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (32ms).
2025-04-30 22:01:45.128 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-30 22:01:45.158 -04:00 [INF] Executed DbCommand (30ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-30 22:01:45.175 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:45.178 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-30 22:01:45.189 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:45.193 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-30 22:01:45.488 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-04-30 22:01:45.492 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-04-30 22:01:45.562 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-30 22:01:45.697 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:45.706 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:45.708 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:01:45.710 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-30 22:01:45.714 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-04-30 22:01:45.722 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-30 22:01:45.742 -04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-30 22:01:45.764 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:45.772 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-04-30 22:01:45.792 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:45.797 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-04-30 22:01:45.879 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:01:45.893 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-30 22:01:45.908 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-30 22:01:45.966 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-30 22:01:46.146 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.151 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.179 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:01:46.190 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (11ms).
2025-04-30 22:01:46.197 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (19ms).
2025-04-30 22:01:46.207 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-04-30 22:01:46.272 -04:00 [INF] Executed DbCommand (66ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-04-30 22:01:46.302 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.311 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 21ms reading results.
2025-04-30 22:01:46.321 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.329 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-04-30 22:01:46.371 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:01:46.380 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-04-30 22:01:46.407 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-04-30 22:01:46.427 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-30 22:01:46.455 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.462 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.471 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:01:46.474 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-04-30 22:01:46.478 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-04-30 22:01:46.485 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-04-30 22:01:46.505 -04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-04-30 22:01:46.529 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:01:46.596 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.605 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 94ms reading results.
2025-04-30 22:01:46.610 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.615 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-30 22:01:46.641 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-04-30 22:01:46.662 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-30 22:01:46.688 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.694 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.698 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:01:46.705 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-04-30 22:01:46.708 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-04-30 22:01:46.712 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-04-30 22:01:46.722 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-04-30 22:01:46.728 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.731 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-30 22:01:46.738 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.743 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-30 22:01:46.786 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .FirstOrDefault(e => EF.Property<string>(e, "UserId") == __p_0 && EF.Property<string>(e, "RoleId") == __p_1)'
2025-04-30 22:01:46.819 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<string>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<string>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<string> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<string> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<string>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<string>.UserId, IdentityUserRole<string>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetString(0), 
                        (object)dataReader.GetString(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<string>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]: 
                            {
                                return 
                                {
                                    IdentityUserRole<string> instance;
                                    instance = new IdentityUserRole<string>();
                                    instance.<UserId>k__BackingField = dataReader.GetString(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetString(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityUserRole<string>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-30 22:01:46.844 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.848 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.854 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:01:46.857 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-30 22:01:46.860 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-30 22:01:46.869 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-04-30 22:01:46.885 -04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-04-30 22:01:46.891 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.895 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-04-30 22:01:46.903 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.907 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-30 22:01:46.923 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.929 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.934 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:01:46.937 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-04-30 22:01:46.942 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-04-30 22:01:46.949 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-04-30 22:01:46.956 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-04-30 22:01:46.962 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.966 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-04-30 22:01:46.973 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:46.981 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-04-30 22:01:47.008 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityUserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:01:47.019 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:47.023 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:47.029 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:01:47.035 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-04-30 22:01:47.038 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-04-30 22:01:47.044 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-30 22:01:47.072 -04:00 [INF] Executed DbCommand (29ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-30 22:01:47.487 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:47.612 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 134ms reading results.
2025-04-30 22:01:47.646 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:47.654 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-04-30 22:01:47.677 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:01:47.687 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-30 22:01:47.690 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-30 22:01:47.705 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-30 22:01:47.772 -04:00 [DBG] Executing 2 update commands as a batch.
2025-04-30 22:01:47.782 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:47.788 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:47.796 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-04-30 22:01:47.812 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-04-30 22:01:47.820 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:01:47.824 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-04-30 22:01:47.830 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-04-30 22:01:47.835 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-04-30 22:01:47.868 -04:00 [INF] Executed DbCommand (33ms) [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-04-30 22:01:47.876 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:47.879 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-04-30 22:01:47.894 -04:00 [DBG] Committing transaction.
2025-04-30 22:01:47.919 -04:00 [DBG] Committed transaction.
2025-04-30 22:01:47.926 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:47.932 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-04-30 22:01:47.941 -04:00 [DBG] Disposing transaction.
2025-04-30 22:01:47.945 -04:00 [DBG] An entity of type 'IdentityUserRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:01:47.954 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:01:47.961 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-04-30 22:01:48.009 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-04-30 22:01:48.043 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-30 22:01:48.066 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:48.070 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:48.077 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:01:48.079 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-30 22:01:48.081 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-30 22:01:48.088 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-30 22:01:48.105 -04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-30 22:01:48.112 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:48.119 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-04-30 22:01:48.124 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:48.127 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-30 22:01:48.162 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-04-30 22:01:48.210 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-30 22:01:48.223 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:48.227 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:48.232 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:01:48.235 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-04-30 22:01:48.240 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-04-30 22:01:48.244 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-30 22:01:48.256 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-30 22:01:48.264 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:48.272 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-04-30 22:01:48.281 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:48.289 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-04-30 22:01:48.320 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:48.323 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:48.328 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:01:48.330 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-30 22:01:48.334 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-04-30 22:01:48.338 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-30 22:01:48.354 -04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-30 22:01:48.362 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:48.369 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-04-30 22:01:48.373 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:48.381 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-04-30 22:01:48.388 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:01:48.393 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-30 22:01:48.397 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-30 22:01:48.418 -04:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LocalUser.RefreshTokens'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:01:48.468 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'RefreshToken.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:01:48.487 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:01:48.495 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-30 22:01:48.526 -04:00 [DBG] Executing 2 update commands as a batch.
2025-04-30 22:01:48.529 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:48.537 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:48.541 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-04-30 22:01:48.544 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-04-30 22:01:48.548 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:01:48.553 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-04-30 22:01:48.561 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (13ms).
2025-04-30 22:01:48.567 -04:00 [DBG] Executing DbCommand [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-04-30 22:01:48.594 -04:00 [INF] Executed DbCommand (27ms) [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-04-30 22:01:48.629 -04:00 [DBG] The foreign key property 'RefreshToken.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-30 22:01:48.658 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:48.661 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 55ms reading results.
2025-04-30 22:01:48.669 -04:00 [DBG] Committing transaction.
2025-04-30 22:01:48.677 -04:00 [DBG] Committed transaction.
2025-04-30 22:01:48.679 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:48.686 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-04-30 22:01:48.692 -04:00 [DBG] Disposing transaction.
2025-04-30 22:01:48.696 -04:00 [DBG] An entity of type 'RefreshToken' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:01:48.703 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:01:48.710 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-04-30 22:01:48.824 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-30 22:01:48.830 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-30 22:01:48.834 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-30 22:01:48.836 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-30 22:01:48.839 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-30 22:01:48.846 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-30 22:01:48.936 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API) in 4763.0217ms
2025-04-30 22:01:48.939 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-04-30 22:01:48.944 -04:00 [DBG] Connection id "0HNC8ADBEH028" completed keep alive response.
2025-04-30 22:01:48.955 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-30 22:01:48.957 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:01:48.960 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-30 22:01:48.972 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/register - 200 null application/json; charset=utf-8 4897.6606ms
2025-04-30 22:02:51.786 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 68
2025-04-30 22:02:51.790 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-04-30 22:02:51.792 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-04-30 22:02:51.799 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-30 22:02:51.801 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-30 22:02:51.808 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-30 22:02:51.811 -04:00 [INF] CORS policy execution failed.
2025-04-30 22:02:51.817 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-30 22:02:51.822 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-04-30 22:02:51.827 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-30 22:02:51.832 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-04-30 22:02:51.841 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-30 22:02:51.958 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-30 22:02:51.976 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-30 22:02:51.980 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-30 22:02:51.998 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-30 22:02:52.014 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-30 22:02:52.025 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-04-30 22:02:52.084 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-30 22:02:52.112 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-04-30 22:02:52.122 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-30 22:02:52.129 -04:00 [DBG] Connection id "0HNC8ADBEH028", Request id "0HNC8ADBEH028:00000002": started reading request body.
2025-04-30 22:02:52.134 -04:00 [DBG] Connection id "0HNC8ADBEH028", Request id "0HNC8ADBEH028:00000002": done reading request body.
2025-04-30 22:02:52.142 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-04-30 22:02:52.145 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-30 22:02:52.151 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-30 22:02:52.158 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-04-30 22:02:52.162 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-04-30 22:02:52.175 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-30 22:02:52.182 -04:00 [DBG] Creating DbConnection.
2025-04-30 22:02:52.184 -04:00 [DBG] Created DbConnection. (2ms).
2025-04-30 22:02:52.190 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:02:52.200 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:02:52.215 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:02:52.224 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (8ms).
2025-04-30 22:02:52.230 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (15ms).
2025-04-30 22:02:52.237 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-30 22:02:52.258 -04:00 [INF] Executed DbCommand (24ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-04-30 22:02:52.267 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:02:52.273 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:02:52.281 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:02:52.284 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 17ms reading results.
2025-04-30 22:02:52.293 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:02:52.300 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-04-30 22:02:52.562 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:02:52.567 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:02:52.575 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:02:52.582 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-04-30 22:02:52.589 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (14ms).
2025-04-30 22:02:52.597 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-30 22:02:52.610 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-04-30 22:02:52.617 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:02:52.624 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-04-30 22:02:52.629 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:02:52.633 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-30 22:02:52.646 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:02:52.651 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:02:52.658 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:02:52.662 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-04-30 22:02:52.665 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-04-30 22:02:52.671 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-30 22:02:52.681 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-30 22:02:52.692 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:02:52.697 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-04-30 22:02:52.707 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:02:52.711 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-30 22:02:52.718 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:02:52.724 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:02:52.728 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:02:52.738 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (9ms).
2025-04-30 22:02:52.742 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (13ms).
2025-04-30 22:02:52.746 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-30 22:02:52.759 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-04-30 22:02:52.791 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:02:52.873 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 82ms reading results.
2025-04-30 22:02:52.907 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:02:52.914 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-04-30 22:02:52.925 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-30 22:02:52.931 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-30 22:02:52.934 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-30 22:02:52.939 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-30 22:02:52.943 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-30 22:02:52.947 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-30 22:02:52.958 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 943.8854ms
2025-04-30 22:02:52.964 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-04-30 22:02:52.971 -04:00 [DBG] Connection id "0HNC8ADBEH028" completed keep alive response.
2025-04-30 22:02:52.976 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-30 22:02:52.979 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:02:52.984 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-30 22:02:52.991 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 1205.8803ms
2025-04-30 22:05:04.535 -04:00 [DBG] Connection id "0HNC8ADBEH028" disconnecting.
2025-04-30 22:05:04.537 -04:00 [DBG] Connection id "0HNC8ADBEH028" stopped.
2025-04-30 22:05:04.540 -04:00 [DBG] Connection id "0HNC8ADBEH028" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-30 22:05:10.561 -04:00 [DBG] Connection id "0HNC8ADBEH029" accepted.
2025-04-30 22:05:10.565 -04:00 [DBG] Connection id "0HNC8ADBEH029" started.
2025-04-30 22:05:10.573 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/City - application/json 132
2025-04-30 22:05:10.671 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City'
2025-04-30 22:05:10.673 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)' with route pattern 'api/City' is valid for the request path '/api/City'
2025-04-30 22:05:10.681 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)'
2025-04-30 22:05:10.683 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-30 22:05:10.685 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-30 22:05:10.687 -04:00 [INF] CORS policy execution failed.
2025-04-30 22:05:10.690 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-30 22:05:10.986 -04:00 [DBG] Successfully validated the token.
2025-04-30 22:05:11.004 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-30 22:05:11.037 -04:00 [DBG] Authorization was successful.
2025-04-30 22:05:11.040 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)'
2025-04-30 22:05:11.056 -04:00 [INF] Route matched with {action = "AddCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCity(HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-04-30 22:05:11.062 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-30 22:05:11.067 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-30 22:05:11.073 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-30 22:05:11.078 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-30 22:05:11.085 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-30 22:05:11.090 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:05:11.471 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:05:11.476 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest' ...
2025-04-30 22:05:11.484 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest' using the name '' in request data ...
2025-04-30 22:05:11.497 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-30 22:05:11.502 -04:00 [DBG] Connection id "0HNC8ADBEH029", Request id "0HNC8ADBEH029:00000001": started reading request body.
2025-04-30 22:05:11.511 -04:00 [DBG] Connection id "0HNC8ADBEH029", Request id "0HNC8ADBEH029:00000001": done reading request body.
2025-04-30 22:05:11.518 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'
2025-04-30 22:05:11.523 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'.
2025-04-30 22:05:11.535 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'.
2025-04-30 22:05:11.540 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest' ...
2025-04-30 22:05:11.548 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'.
2025-04-30 22:05:11.580 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-30 22:05:11.620 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'City.CityID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:05:11.682 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:05:11.687 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-30 22:05:11.695 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-30 22:05:11.714 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-30 22:05:11.736 -04:00 [DBG] Creating DbConnection.
2025-04-30 22:05:11.740 -04:00 [DBG] Created DbConnection. (3ms).
2025-04-30 22:05:11.796 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:05:11.823 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:05:11.829 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:05:11.832 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-30 22:05:11.836 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-04-30 22:05:11.839 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Cities" ("Country", "CreatedAtUtc", "Description", "Name", "PostOffice", "VisitCount")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "CityID";
2025-04-30 22:05:11.868 -04:00 [INF] Executed DbCommand (28ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Cities" ("Country", "CreatedAtUtc", "Description", "Name", "PostOffice", "VisitCount")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "CityID";
2025-04-30 22:05:11.890 -04:00 [DBG] The foreign key property 'City.CityID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-30 22:05:11.898 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:05:11.907 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 18ms reading results.
2025-04-30 22:05:11.912 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:05:11.916 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-30 22:05:11.929 -04:00 [DBG] An entity of type 'City' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:05:11.940 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-04-30 22:05:11.953 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-30 22:05:11.963 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-30 22:05:11.966 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-30 22:05:11.971 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-30 22:05:11.974 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-30 22:05:11.981 -04:00 [INF] Executing CreatedResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.City.CityResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-30 22:05:11.995 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API) in 904.7626ms
2025-04-30 22:05:12.001 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)'
2025-04-30 22:05:12.005 -04:00 [DBG] Connection id "0HNC8ADBEH029" completed keep alive response.
2025-04-30 22:05:12.014 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-30 22:05:12.016 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:05:12.020 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-30 22:05:12.023 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/City - 201 null application/json; charset=utf-8 1450.1601ms
2025-04-30 22:06:30.250 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/City/5/hotels - application/json 121
2025-04-30 22:06:30.263 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/5/hotels'
2025-04-30 22:06:30.340 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/5/hotels'
2025-04-30 22:06:30.350 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-04-30 22:06:30.353 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-30 22:06:30.356 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-30 22:06:30.361 -04:00 [INF] CORS policy execution failed.
2025-04-30 22:06:30.366 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-30 22:06:30.371 -04:00 [DBG] Successfully validated the token.
2025-04-30 22:06:30.374 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-30 22:06:30.384 -04:00 [DBG] Authorization was successful.
2025-04-30 22:06:30.393 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-04-30 22:06:30.419 -04:00 [INF] Route matched with {action = "AddHotelToCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddHotelToCity(Int32, HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-04-30 22:06:30.424 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-30 22:06:30.433 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-30 22:06:30.437 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-30 22:06:30.450 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-30 22:06:30.454 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-30 22:06:30.459 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:06:30.471 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:06:30.475 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:06:30.487 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-04-30 22:06:30.492 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:06:30.500 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:06:30.503 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:06:30.508 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:06:30.515 -04:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-04-30 22:06:30.519 -04:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' using the name '' in request data ...
2025-04-30 22:06:30.523 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-30 22:06:30.535 -04:00 [DBG] Connection id "0HNC8ADBEH029", Request id "0HNC8ADBEH029:00000002": started reading request body.
2025-04-30 22:06:30.539 -04:00 [DBG] Connection id "0HNC8ADBEH029", Request id "0HNC8ADBEH029:00000002": done reading request body.
2025-04-30 22:06:30.550 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'
2025-04-30 22:06:30.553 -04:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-04-30 22:06:30.558 -04:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-04-30 22:06:30.570 -04:00 [DBG] Attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-04-30 22:06:30.583 -04:00 [DBG] Done attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-04-30 22:06:30.605 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-30 22:06:30.617 -04:00 [DBG] Compiling query expression: 
'DbSet<City>()
    .FirstOrDefault(e => EF.Property<int>(e, "CityID") == __p_0)'
2025-04-30 22:06:30.643 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<City>(
    asyncEnumerable: SingleQueryingEnumerable.Create<City>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT TOP(1) c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE c.CityID == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT TOP(1) c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE c.CityID == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            City entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                City instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(City);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: City.CityID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (City)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]: 
                            {
                                return 
                                {
                                    City instance;
                                    instance = new City();
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Country>k__BackingField = dataReader.GetString(1);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.GetString(3);
                                    instance.<Name>k__BackingField = dataReader.GetString(4);
                                    instance.<PostOffice>k__BackingField = dataReader.GetString(5);
                                    instance.<VisitCount>k__BackingField = dataReader.GetInt32(6);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(City)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-30 22:06:30.666 -04:00 [DBG] Creating DbConnection.
2025-04-30 22:06:30.669 -04:00 [DBG] Created DbConnection. (2ms).
2025-04-30 22:06:30.676 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:06:30.731 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:06:30.735 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:06:30.738 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-04-30 22:06:30.743 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-04-30 22:06:30.752 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-04-30 22:06:30.770 -04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-04-30 22:06:30.784 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:06:30.820 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:06:30.873 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 95ms reading results.
2025-04-30 22:06:30.918 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:06:30.963 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (45ms).
2025-04-30 22:06:31.024 -04:00 [DBG] Compiling query expression: 
'DbSet<Owner>()
    .FirstOrDefault(e => EF.Property<int>(e, "OwnerID") == __p_0)'
2025-04-30 22:06:31.315 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Owner>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Owner>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Owner.Email (string) Required, 1], [Property: Owner.FirstName (string) Required MaxLength(50), 2], [Property: Owner.LastName (string) Required MaxLength(50), 3], [Property: Owner.PhoneNumber (string) Required, 4] }
            SELECT TOP(1) o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Owners AS o
            WHERE o.OwnerID == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Owner.Email (string) Required, 1], [Property: Owner.FirstName (string) Required MaxLength(50), 2], [Property: Owner.LastName (string) Required MaxLength(50), 3], [Property: Owner.PhoneNumber (string) Required, 4] }
            SELECT TOP(1) o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Owners AS o
            WHERE o.OwnerID == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Owner entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Owner instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Owner);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Owner.OwnerID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Owner)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                            {
                                return 
                                {
                                    Owner instance;
                                    instance = new Owner();
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(2);
                                    instance.<LastName>k__BackingField = dataReader.GetString(3);
                                    instance.<PhoneNumber>k__BackingField = dataReader.GetString(4);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Owner)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-30 22:06:31.355 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:06:31.493 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:06:31.501 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:06:31.502 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-30 22:06:31.505 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-30 22:06:31.506 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-04-30 22:06:31.527 -04:00 [INF] Executed DbCommand (21ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-04-30 22:06:31.536 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:06:31.540 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-04-30 22:06:31.543 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:06:31.549 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-04-30 22:06:31.558 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-30 22:06:31.570 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-30 22:06:31.573 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-30 22:06:31.575 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-30 22:06:31.577 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-30 22:06:31.582 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-30 22:06:31.592 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API) in 1132.8825ms
2025-04-30 22:06:31.599 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-04-30 22:06:31.602 -04:00 [DBG] Connection id "0HNC8ADBEH029" completed keep alive response.
2025-04-30 22:06:31.604 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-30 22:06:31.615 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:06:31.617 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-30 22:06:31.623 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/City/5/hotels - 200 null application/json; charset=utf-8 1372.4746ms
2025-04-30 22:07:39.901 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/City/5/hotels - application/json 131
2025-04-30 22:07:39.908 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/5/hotels'
2025-04-30 22:07:39.910 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/5/hotels'
2025-04-30 22:07:39.917 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-04-30 22:07:39.920 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-30 22:07:39.937 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-30 22:07:39.946 -04:00 [INF] CORS policy execution failed.
2025-04-30 22:07:39.948 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-30 22:07:39.952 -04:00 [DBG] Successfully validated the token.
2025-04-30 22:07:39.953 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-30 22:07:39.959 -04:00 [DBG] Authorization was successful.
2025-04-30 22:07:39.963 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-04-30 22:07:39.969 -04:00 [INF] Route matched with {action = "AddHotelToCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddHotelToCity(Int32, HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-04-30 22:07:39.988 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-30 22:07:39.991 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-30 22:07:39.997 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-30 22:07:40.006 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-30 22:07:40.019 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-30 22:07:40.024 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:07:40.045 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:07:40.057 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:07:40.062 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-04-30 22:07:40.070 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:07:40.076 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:07:40.079 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:07:40.089 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:07:40.113 -04:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-04-30 22:07:40.183 -04:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' using the name '' in request data ...
2025-04-30 22:07:40.262 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-30 22:07:40.272 -04:00 [DBG] Connection id "0HNC8ADBEH029", Request id "0HNC8ADBEH029:00000003": started reading request body.
2025-04-30 22:07:40.286 -04:00 [DBG] Connection id "0HNC8ADBEH029", Request id "0HNC8ADBEH029:00000003": done reading request body.
2025-04-30 22:07:40.293 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'
2025-04-30 22:07:40.312 -04:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-04-30 22:07:40.321 -04:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-04-30 22:07:40.323 -04:00 [DBG] Attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-04-30 22:07:40.325 -04:00 [DBG] Done attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-04-30 22:07:40.392 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-30 22:07:40.407 -04:00 [DBG] Creating DbConnection.
2025-04-30 22:07:40.409 -04:00 [DBG] Created DbConnection. (2ms).
2025-04-30 22:07:40.413 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:07:40.423 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:07:40.430 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:07:40.437 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-04-30 22:07:40.439 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-04-30 22:07:40.444 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-04-30 22:07:40.458 -04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-04-30 22:07:40.473 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:07:40.479 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:07:40.484 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 11ms reading results.
2025-04-30 22:07:40.490 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:07:40.494 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-30 22:07:40.505 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:07:40.510 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:07:40.515 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:07:40.518 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-04-30 22:07:40.522 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-04-30 22:07:40.526 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-04-30 22:07:40.538 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-04-30 22:07:40.547 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:07:40.556 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-04-30 22:07:40.561 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:07:40.568 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-04-30 22:07:40.575 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-30 22:07:40.595 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-30 22:07:40.597 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-30 22:07:40.603 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-30 22:07:40.606 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-30 22:07:40.610 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-30 22:07:40.619 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API) in 595.088ms
2025-04-30 22:07:40.630 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-04-30 22:07:40.637 -04:00 [DBG] Connection id "0HNC8ADBEH029" completed keep alive response.
2025-04-30 22:07:40.646 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-30 22:07:40.649 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:07:40.658 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (10ms).
2025-04-30 22:07:40.662 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/City/5/hotels - 200 null application/json; charset=utf-8 760.3214ms
2025-04-30 22:08:05.708 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City/5/hotels - null null
2025-04-30 22:08:05.714 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/5/hotels'
2025-04-30 22:08:05.717 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/5/hotels'
2025-04-30 22:08:05.720 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:08:05.742 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-30 22:08:05.745 -04:00 [DBG] Successfully validated the token.
2025-04-30 22:08:05.747 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-30 22:08:05.757 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:08:05.774 -04:00 [INF] Route matched with {action = "GetHotelsForCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotelsForCity(Int32) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-04-30 22:08:05.782 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-30 22:08:05.788 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-30 22:08:05.796 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-04-30 22:08:05.809 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-30 22:08:05.819 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-30 22:08:05.824 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:08:05.829 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:08:05.843 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:08:05.847 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-04-30 22:08:05.897 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:08:05.942 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:08:05.991 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:08:06.040 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:08:06.136 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-30 22:08:06.162 -04:00 [DBG] Compiling query expression: 
'DbSet<Hotel>()
    .Where(h => h.CityID == __cityId_0)
    .Include(h => h.Owner)'
2025-04-30 22:08:06.221 -04:00 [DBG] Including navigation: 'Hotel.Owner'.
2025-04-30 22:08:06.262 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Hotel>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
            1 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: Owner.Email (string) Required, 9], [Property: Owner.FirstName (string) Required MaxLength(50), 10], [Property: Owner.LastName (string) Required MaxLength(50), 11], [Property: Owner.PhoneNumber (string) Required, 12] }
        SELECT h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
        FROM Hotels AS h
        INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
        WHERE h.CityID == @__cityId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
            1 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: Owner.Email (string) Required, 9], [Property: Owner.FirstName (string) Required MaxLength(50), 10], [Property: Owner.LastName (string) Required MaxLength(50), 11], [Property: Owner.PhoneNumber (string) Required, 12] }
        SELECT h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
        FROM Hotels AS h
        INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
        WHERE h.CityID == @__cityId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Hotel entity;
        Owner entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Hotel instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Hotel);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Hotel)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                        {
                            return 
                            {
                                Hotel instance;
                                instance = new Hotel();
                                instance.<HotelId>k__BackingField = dataReader.GetInt32(0);
                                instance.<CityID>k__BackingField = dataReader.GetInt32(1);
                                instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                instance.<Name>k__BackingField = dataReader.GetString(4);
                                instance.<OwnerID>k__BackingField = dataReader.GetInt32(5);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(6);
                                instance.<StarRating>k__BackingField = dataReader.GetInt32(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Hotel)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Owner instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Owner);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Owner.OwnerID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(8) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Owner)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                        {
                            return 
                            {
                                Owner instance;
                                instance = new Owner();
                                instance.<OwnerID>k__BackingField = dataReader.GetInt32(8);
                                instance.<Email>k__BackingField = dataReader.GetString(9);
                                instance.<FirstName>k__BackingField = dataReader.GetString(10);
                                instance.<LastName>k__BackingField = dataReader.GetString(11);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Owner)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, Owner>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Hotel.Owner (Owner) ToPrincipal Owner Inverse: Hotels | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Owner")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Owner.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: Owner | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels")], 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                namelessParameter{8}.<Owner>k__BackingField = namelessParameter{9};
                return [LIFTABLE Constant: ClrICollectionAccessor<Owner, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                    entity: namelessParameter{9}, 
                    value: namelessParameter{8}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-30 22:08:06.317 -04:00 [DBG] Creating DbConnection.
2025-04-30 22:08:06.328 -04:00 [DBG] Created DbConnection. (12ms).
2025-04-30 22:08:06.330 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:08:06.335 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:08:06.339 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:08:06.343 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-04-30 22:08:06.348 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-04-30 22:08:06.357 -04:00 [DBG] Executing DbCommand [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-04-30 22:08:06.375 -04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-04-30 22:08:06.394 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:08:06.402 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-04-30 22:08:06.408 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:08:06.412 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-30 22:08:06.423 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API) in 598.7051ms
2025-04-30 22:08:06.428 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:08:06.440 -04:00 [DBG] Connection id "0HNC8ADBEH029" completed keep alive response.
2025-04-30 22:08:06.442 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-30 22:08:06.444 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:08:06.447 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-30 22:08:06.454 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City/5/hotels - 400 null application/json 745.0932ms
2025-04-30 22:08:54.435 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/City/5/hotels - application/json 131
2025-04-30 22:08:54.441 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/5/hotels'
2025-04-30 22:08:54.657 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/5/hotels'
2025-04-30 22:08:54.664 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-04-30 22:08:54.671 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-30 22:08:54.725 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-30 22:08:54.737 -04:00 [INF] CORS policy execution failed.
2025-04-30 22:08:54.746 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-30 22:08:54.756 -04:00 [DBG] Successfully validated the token.
2025-04-30 22:08:54.758 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-30 22:08:54.778 -04:00 [DBG] Authorization was successful.
2025-04-30 22:08:54.795 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-04-30 22:08:54.800 -04:00 [INF] Route matched with {action = "AddHotelToCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddHotelToCity(Int32, HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-04-30 22:08:54.823 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-30 22:08:54.827 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-30 22:08:54.841 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-30 22:08:54.859 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-30 22:08:54.862 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-30 22:08:54.942 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:08:54.944 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:08:54.947 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:08:54.951 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-04-30 22:08:54.961 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:08:54.963 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:08:54.967 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:08:54.981 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:08:54.991 -04:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-04-30 22:08:54.993 -04:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' using the name '' in request data ...
2025-04-30 22:08:54.996 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-30 22:08:54.998 -04:00 [DBG] Connection id "0HNC8ADBEH029", Request id "0HNC8ADBEH029:00000005": started reading request body.
2025-04-30 22:08:55.001 -04:00 [DBG] Connection id "0HNC8ADBEH029", Request id "0HNC8ADBEH029:00000005": done reading request body.
2025-04-30 22:08:55.024 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'
2025-04-30 22:08:55.026 -04:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-04-30 22:08:55.030 -04:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-04-30 22:08:55.032 -04:00 [DBG] Attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-04-30 22:08:55.040 -04:00 [DBG] Done attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-04-30 22:08:55.049 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-30 22:08:55.057 -04:00 [DBG] Creating DbConnection.
2025-04-30 22:08:55.059 -04:00 [DBG] Created DbConnection. (2ms).
2025-04-30 22:08:55.063 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:08:55.067 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:08:55.075 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:08:55.078 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-30 22:08:55.082 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-04-30 22:08:55.087 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-04-30 22:08:55.098 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-04-30 22:08:55.107 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:08:55.110 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:08:55.117 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 11ms reading results.
2025-04-30 22:08:55.123 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:08:55.127 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-30 22:08:55.132 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:08:55.139 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:08:55.147 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:08:55.149 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-04-30 22:08:55.157 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-04-30 22:08:55.159 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-04-30 22:08:55.166 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-04-30 22:08:55.173 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:08:55.180 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-04-30 22:08:55.187 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:08:55.194 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-04-30 22:08:55.204 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-30 22:08:55.211 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-30 22:08:55.213 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-30 22:08:55.240 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-30 22:08:55.242 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-30 22:08:55.246 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-30 22:08:55.251 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API) in 309.2176ms
2025-04-30 22:08:55.264 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-04-30 22:08:55.274 -04:00 [DBG] Connection id "0HNC8ADBEH029" completed keep alive response.
2025-04-30 22:08:55.407 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-30 22:08:55.417 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:08:55.616 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (199ms).
2025-04-30 22:08:55.674 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/City/5/hotels - 200 null application/json; charset=utf-8 1239.1283ms
2025-04-30 22:10:19.000 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City/3/hotels - null null
2025-04-30 22:10:19.076 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/3/hotels'
2025-04-30 22:10:19.080 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/3/hotels'
2025-04-30 22:10:19.104 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:10:19.109 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-30 22:10:19.111 -04:00 [DBG] Successfully validated the token.
2025-04-30 22:10:19.112 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-30 22:10:19.113 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:10:19.115 -04:00 [INF] Route matched with {action = "GetHotelsForCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotelsForCity(Int32) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-04-30 22:10:19.118 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-30 22:10:19.120 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-30 22:10:19.128 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-04-30 22:10:19.131 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-30 22:10:19.132 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-30 22:10:19.134 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:10:19.136 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:10:19.138 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:10:19.143 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-04-30 22:10:19.153 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:10:19.161 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:10:19.197 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:10:19.208 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:10:19.228 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-30 22:10:19.276 -04:00 [DBG] Creating DbConnection.
2025-04-30 22:10:19.296 -04:00 [DBG] Created DbConnection. (20ms).
2025-04-30 22:10:19.298 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:10:19.327 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:10:19.329 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:10:19.330 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-30 22:10:19.333 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-30 22:10:19.334 -04:00 [DBG] Executing DbCommand [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-04-30 22:10:19.345 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-04-30 22:10:19.367 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:10:19.479 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:10:19.491 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:10:19.515 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:10:19.517 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 165ms reading results.
2025-04-30 22:10:19.519 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:10:19.530 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (10ms).
2025-04-30 22:10:19.560 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-30 22:10:19.943 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-30 22:10:19.949 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-30 22:10:19.952 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-30 22:10:19.954 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-30 22:10:19.961 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.Hotel.HotelBasicResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-30 22:10:19.971 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API) in 836.2479ms
2025-04-30 22:10:20.027 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:10:20.028 -04:00 [DBG] Connection id "0HNC8ADBEH029" completed keep alive response.
2025-04-30 22:10:20.065 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-30 22:10:20.067 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:10:20.068 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-30 22:10:20.076 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City/3/hotels - 200 null application/json; charset=utf-8 1075.9747ms
2025-04-30 22:11:45.030 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City?CityName=Petion-Ville&Description=Ville%20de%20la%20commune%20de%20Petion-Ville&pageSize=10&pageNumber=1 - null null
2025-04-30 22:11:45.034 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City'
2025-04-30 22:11:45.036 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCities (HotelBookingPlatform.API)' with route pattern 'api/City' is valid for the request path '/api/City'
2025-04-30 22:11:45.039 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCities (HotelBookingPlatform.API)'
2025-04-30 22:11:45.064 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-30 22:11:45.071 -04:00 [DBG] Successfully validated the token.
2025-04-30 22:11:45.072 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-30 22:11:45.074 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCities (HotelBookingPlatform.API)'
2025-04-30 22:11:45.083 -04:00 [INF] Route matched with {action = "GetCities", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCities(System.String, System.String, Int32, Int32) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-04-30 22:11:45.086 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-30 22:11:45.088 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-30 22:11:45.090 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-30 22:11:45.100 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-30 22:11:45.102 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-30 22:11:45.105 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:11:45.116 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:11:45.122 -04:00 [DBG] Attempting to bind parameter 'CityName' of type 'System.String' ...
2025-04-30 22:11:45.124 -04:00 [DBG] Attempting to bind parameter 'CityName' of type 'System.String' using the name 'CityName' in request data ...
2025-04-30 22:11:45.129 -04:00 [DBG] Done attempting to bind parameter 'CityName' of type 'System.String'.
2025-04-30 22:11:45.132 -04:00 [DBG] Done attempting to bind parameter 'CityName' of type 'System.String'.
2025-04-30 22:11:45.134 -04:00 [DBG] Attempting to validate the bound parameter 'CityName' of type 'System.String' ...
2025-04-30 22:11:45.136 -04:00 [DBG] Done attempting to validate the bound parameter 'CityName' of type 'System.String'.
2025-04-30 22:11:45.138 -04:00 [DBG] Attempting to bind parameter 'Description' of type 'System.String' ...
2025-04-30 22:11:45.140 -04:00 [DBG] Attempting to bind parameter 'Description' of type 'System.String' using the name 'Description' in request data ...
2025-04-30 22:11:45.145 -04:00 [DBG] Done attempting to bind parameter 'Description' of type 'System.String'.
2025-04-30 22:11:45.147 -04:00 [DBG] Done attempting to bind parameter 'Description' of type 'System.String'.
2025-04-30 22:11:45.148 -04:00 [DBG] Attempting to validate the bound parameter 'Description' of type 'System.String' ...
2025-04-30 22:11:45.151 -04:00 [DBG] Done attempting to validate the bound parameter 'Description' of type 'System.String'.
2025-04-30 22:11:45.152 -04:00 [DBG] Attempting to bind parameter 'pageSize' of type 'System.Int32' ...
2025-04-30 22:11:45.155 -04:00 [DBG] Attempting to bind parameter 'pageSize' of type 'System.Int32' using the name 'pageSize' in request data ...
2025-04-30 22:11:45.157 -04:00 [DBG] Done attempting to bind parameter 'pageSize' of type 'System.Int32'.
2025-04-30 22:11:45.161 -04:00 [DBG] Done attempting to bind parameter 'pageSize' of type 'System.Int32'.
2025-04-30 22:11:45.163 -04:00 [DBG] Attempting to validate the bound parameter 'pageSize' of type 'System.Int32' ...
2025-04-30 22:11:45.166 -04:00 [DBG] Done attempting to validate the bound parameter 'pageSize' of type 'System.Int32'.
2025-04-30 22:11:45.168 -04:00 [DBG] Attempting to bind parameter 'pageNumber' of type 'System.Int32' ...
2025-04-30 22:11:45.170 -04:00 [DBG] Attempting to bind parameter 'pageNumber' of type 'System.Int32' using the name 'pageNumber' in request data ...
2025-04-30 22:11:45.172 -04:00 [DBG] Done attempting to bind parameter 'pageNumber' of type 'System.Int32'.
2025-04-30 22:11:45.173 -04:00 [DBG] Done attempting to bind parameter 'pageNumber' of type 'System.Int32'.
2025-04-30 22:11:45.178 -04:00 [DBG] Attempting to validate the bound parameter 'pageNumber' of type 'System.Int32' ...
2025-04-30 22:11:45.180 -04:00 [DBG] Done attempting to validate the bound parameter 'pageNumber' of type 'System.Int32'.
2025-04-30 22:11:45.191 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-30 22:11:45.202 -04:00 [DBG] Compiling query expression: 
'DbSet<City>()
    .Where(c => True && c.Name.Contains(__cityName_0) || True && c.Description.Contains(__description_1))
    .Skip(__p_2)
    .Take(__p_3)'
2025-04-30 22:11:45.212 -04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-04-30 22:11:45.216 -04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-04-30 22:11:45.228 -04:00 [DBG] Generated query execution expression: 
'queryContext => 
{
    queryContext.AddParameter(
        name: "__cityName_0_contains", 
        value: (object)Invoke(queryContext => NpgsqlSqlTranslatingExpressionVisitor.ConstructLikePatternParameter(
            queryContext: queryContext, 
            baseParameterName: "__cityName_0", 
            methodType: Contains), queryContext));
    queryContext.AddParameter(
        name: "__description_1_contains", 
        value: (object)Invoke(queryContext => NpgsqlSqlTranslatingExpressionVisitor.ConstructLikePatternParameter(
            queryContext: queryContext, 
            baseParameterName: "__description_1", 
            methodType: Contains), queryContext));
    return SingleQueryingEnumerable.Create<City>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE (c.Name LIKE @__cityName_0_contains) || (c.Description LIKE @__description_1_contains)
            OFFSET @__p_2 ROWS FETCH NEXT @__p_3 ROWS ONLY) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE (c.Name LIKE @__cityName_0_contains) || (c.Description LIKE @__description_1_contains)
            OFFSET @__p_2 ROWS FETCH NEXT @__p_3 ROWS ONLY, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            City entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                City instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(City);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: City.CityID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (City)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]: 
                            {
                                return 
                                {
                                    City instance;
                                    instance = new City();
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Country>k__BackingField = dataReader.GetString(1);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.GetString(3);
                                    instance.<Name>k__BackingField = dataReader.GetString(4);
                                    instance.<PostOffice>k__BackingField = dataReader.GetString(5);
                                    instance.<VisitCount>k__BackingField = dataReader.GetInt32(6);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(City)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True);
}'
2025-04-30 22:11:45.239 -04:00 [DBG] Creating DbConnection.
2025-04-30 22:11:45.240 -04:00 [DBG] Created DbConnection. (1ms).
2025-04-30 22:11:45.246 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:11:45.272 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:11:45.275 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:11:45.280 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-04-30 22:11:45.282 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-04-30 22:11:45.284 -04:00 [DBG] Executing DbCommand [Parameters=[@__cityName_0_contains='?', @__description_1_contains='?', @__p_3='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."Name" LIKE @__cityName_0_contains OR c."Description" LIKE @__description_1_contains
LIMIT @__p_3 OFFSET @__p_2
2025-04-30 22:11:45.291 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__cityName_0_contains='?', @__description_1_contains='?', @__p_3='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."Name" LIKE @__cityName_0_contains OR c."Description" LIKE @__description_1_contains
LIMIT @__p_3 OFFSET @__p_2
2025-04-30 22:11:45.301 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:11:45.303 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:11:45.305 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:11:45.307 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-04-30 22:11:45.321 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:11:45.324 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-30 22:11:45.340 -04:00 [DBG] The unchanged property 'City.VisitCount' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-30 22:11:45.345 -04:00 [DBG] An entity of type 'City' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:11:45.353 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-30 22:11:45.354 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-30 22:11:45.356 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-30 22:11:45.358 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:11:45.362 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:11:45.364 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:11:45.368 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-04-30 22:11:45.370 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-30 22:11:45.372 -04:00 [DBG] Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Cities" SET "VisitCount" = @p0
WHERE "CityID" = @p1;
2025-04-30 22:11:45.382 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Cities" SET "VisitCount" = @p0
WHERE "CityID" = @p1;
2025-04-30 22:11:45.387 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:11:45.390 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-30 22:11:45.401 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:11:45.406 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-30 22:11:45.418 -04:00 [DBG] An entity of type 'City' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:11:45.473 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-04-30 22:11:45.482 -04:00 [DBG] The unchanged property 'City.VisitCount' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-30 22:11:45.488 -04:00 [DBG] An entity of type 'City' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:11:45.503 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-30 22:11:45.505 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-30 22:11:45.506 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-30 22:11:45.508 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:11:45.521 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:11:45.523 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:11:45.525 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-30 22:11:45.530 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-04-30 22:11:45.536 -04:00 [DBG] Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Cities" SET "VisitCount" = @p0
WHERE "CityID" = @p1;
2025-04-30 22:11:45.545 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Cities" SET "VisitCount" = @p0
WHERE "CityID" = @p1;
2025-04-30 22:11:45.557 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:11:45.565 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-04-30 22:11:45.579 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:11:45.589 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-04-30 22:11:45.592 -04:00 [DBG] An entity of type 'City' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:11:45.600 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-04-30 22:11:45.613 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-30 22:11:45.620 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-30 22:11:45.621 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-30 22:11:45.622 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-30 22:11:45.623 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-30 22:11:45.627 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.City.CityResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-30 22:11:45.633 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetCities (HotelBookingPlatform.API) in 527.2977ms
2025-04-30 22:11:45.639 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCities (HotelBookingPlatform.API)'
2025-04-30 22:11:45.640 -04:00 [DBG] Connection id "0HNC8ADBEH029" completed keep alive response.
2025-04-30 22:11:45.649 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-30 22:11:45.652 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:11:45.653 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-30 22:11:45.656 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City?CityName=Petion-Ville&Description=Ville%20de%20la%20commune%20de%20Petion-Ville&pageSize=10&pageNumber=1 - 200 null application/json; charset=utf-8 625.5354ms
2025-04-30 22:12:50.319 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/City/5/hotels - application/json 131
2025-04-30 22:12:50.323 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/5/hotels'
2025-04-30 22:12:50.327 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/5/hotels'
2025-04-30 22:12:50.354 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-04-30 22:12:50.355 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-30 22:12:50.356 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-30 22:12:50.358 -04:00 [INF] CORS policy execution failed.
2025-04-30 22:12:50.359 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-30 22:12:50.361 -04:00 [DBG] Successfully validated the token.
2025-04-30 22:12:50.365 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-30 22:12:50.368 -04:00 [DBG] Authorization was successful.
2025-04-30 22:12:50.369 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-04-30 22:12:50.371 -04:00 [INF] Route matched with {action = "AddHotelToCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddHotelToCity(Int32, HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-04-30 22:12:50.376 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-30 22:12:50.382 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-30 22:12:50.388 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-30 22:12:50.392 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-30 22:12:50.398 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-30 22:12:50.402 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:12:50.404 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:12:50.406 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:12:50.415 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-04-30 22:12:50.421 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:12:50.423 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:12:50.425 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:12:50.427 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:12:50.433 -04:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-04-30 22:12:50.435 -04:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' using the name '' in request data ...
2025-04-30 22:12:50.438 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-30 22:12:50.443 -04:00 [DBG] Connection id "0HNC8ADBEH029", Request id "0HNC8ADBEH029:00000008": started reading request body.
2025-04-30 22:12:50.444 -04:00 [DBG] Connection id "0HNC8ADBEH029", Request id "0HNC8ADBEH029:00000008": done reading request body.
2025-04-30 22:12:50.451 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'
2025-04-30 22:12:50.452 -04:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-04-30 22:12:50.454 -04:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-04-30 22:12:50.456 -04:00 [DBG] Attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-04-30 22:12:50.457 -04:00 [DBG] Done attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-04-30 22:12:50.460 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-30 22:12:50.466 -04:00 [DBG] Creating DbConnection.
2025-04-30 22:12:50.467 -04:00 [DBG] Created DbConnection. (1ms).
2025-04-30 22:12:50.469 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:12:50.490 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:12:50.491 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:12:50.499 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-04-30 22:12:50.523 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (31ms).
2025-04-30 22:12:50.548 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-04-30 22:12:50.590 -04:00 [INF] Executed DbCommand (42ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-04-30 22:12:50.621 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:12:50.623 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:12:50.624 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-04-30 22:12:50.632 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:12:50.635 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-04-30 22:12:50.638 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:12:50.663 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:12:50.665 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:12:50.667 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-30 22:12:50.668 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-30 22:12:50.670 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-04-30 22:12:50.675 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-04-30 22:12:50.677 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:12:50.680 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:12:50.684 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-04-30 22:12:50.687 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:12:50.688 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-30 22:12:50.697 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Hotel.HotelId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:12:50.703 -04:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:12:50.712 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:12:50.719 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:12:50.724 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-30 22:12:50.726 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-30 22:12:50.742 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-30 22:12:50.747 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:12:50.749 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:12:50.751 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:12:50.752 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-30 22:12:50.755 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-30 22:12:50.757 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?' (DbType = Int32), @p5='?', @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Hotels" ("CityID", "CreatedAtUtc", "Description", "Name", "OwnerID", "PhoneNumber", "StarRating")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "HotelId";
2025-04-30 22:12:50.771 -04:00 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?' (DbType = Int32), @p5='?', @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Hotels" ("CityID", "CreatedAtUtc", "Description", "Name", "OwnerID", "PhoneNumber", "StarRating")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "HotelId";
2025-04-30 22:12:50.776 -04:00 [DBG] The foreign key property 'Hotel.HotelId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-30 22:12:50.783 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:12:50.784 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-04-30 22:12:50.787 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:12:50.788 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-30 22:12:50.791 -04:00 [DBG] An entity of type 'Hotel' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:12:50.794 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-04-30 22:12:50.799 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-30 22:12:50.801 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-30 22:12:50.802 -04:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'City.Hotels'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:12:50.806 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-30 22:12:50.807 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 0 entities written to the database.
2025-04-30 22:12:50.809 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-04-30 22:12:50.811 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-04-30 22:12:50.813 -04:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'City.Hotels'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:12:50.817 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-04-30 22:12:50.818 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 0 entities written to the database.
2025-04-30 22:12:50.820 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-30 22:12:50.824 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-30 22:12:50.825 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-30 22:12:50.826 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-30 22:12:50.830 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-30 22:12:50.832 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-30 22:12:50.835 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API) in 433.0642ms
2025-04-30 22:12:50.836 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-04-30 22:12:50.838 -04:00 [DBG] Connection id "0HNC8ADBEH029" completed keep alive response.
2025-04-30 22:12:50.839 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-30 22:12:50.842 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:12:50.857 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (15ms).
2025-04-30 22:12:50.861 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/City/5/hotels - 200 null application/json; charset=utf-8 542.4824ms
2025-04-30 22:13:14.505 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City/5/hotels - null null
2025-04-30 22:13:14.508 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/5/hotels'
2025-04-30 22:13:14.512 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/5/hotels'
2025-04-30 22:13:14.515 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:13:14.516 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-30 22:13:14.555 -04:00 [DBG] Successfully validated the token.
2025-04-30 22:13:14.571 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-30 22:13:14.572 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:13:14.574 -04:00 [INF] Route matched with {action = "GetHotelsForCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotelsForCity(Int32) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-04-30 22:13:14.578 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-30 22:13:14.584 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-30 22:13:14.586 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-04-30 22:13:14.591 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-30 22:13:14.592 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-30 22:13:14.601 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:13:14.604 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:13:14.606 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:13:14.608 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-04-30 22:13:14.612 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:13:14.619 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:13:14.621 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:13:14.623 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:13:14.625 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-30 22:13:14.631 -04:00 [DBG] Creating DbConnection.
2025-04-30 22:13:14.633 -04:00 [DBG] Created DbConnection. (3ms).
2025-04-30 22:13:14.634 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:13:14.639 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:13:14.641 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:13:14.642 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-04-30 22:13:14.643 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-04-30 22:13:14.645 -04:00 [DBG] Executing DbCommand [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-04-30 22:13:14.654 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-04-30 22:13:14.658 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:13:14.660 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:13:14.662 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:13:14.667 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:13:14.669 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 11ms reading results.
2025-04-30 22:13:14.672 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:13:14.675 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-30 22:13:14.682 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-30 22:13:14.686 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-30 22:13:14.687 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-30 22:13:14.687 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-30 22:13:14.689 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-30 22:13:14.691 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.Hotel.HotelBasicResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-30 22:13:14.699 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API) in 97.0764ms
2025-04-30 22:13:14.702 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:13:14.703 -04:00 [DBG] Connection id "0HNC8ADBEH029" completed keep alive response.
2025-04-30 22:13:14.706 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-30 22:13:14.708 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:13:14.719 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (10ms).
2025-04-30 22:13:14.723 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City/5/hotels - 200 null application/json; charset=utf-8 218.5328ms
2025-04-30 22:13:58.313 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City/3/hotels - null null
2025-04-30 22:13:58.318 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/3/hotels'
2025-04-30 22:13:58.319 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/3/hotels'
2025-04-30 22:13:58.322 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:13:58.324 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-30 22:13:58.375 -04:00 [DBG] Successfully validated the token.
2025-04-30 22:13:58.376 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-30 22:13:58.378 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:13:58.379 -04:00 [INF] Route matched with {action = "GetHotelsForCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotelsForCity(Int32) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-04-30 22:13:58.385 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-30 22:13:58.388 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-30 22:13:58.390 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-04-30 22:13:58.393 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-30 22:13:58.395 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-30 22:13:58.397 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:13:58.401 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:13:58.403 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:13:58.404 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-04-30 22:13:58.406 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:13:58.408 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:13:58.411 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:13:58.421 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:13:58.426 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-30 22:13:58.429 -04:00 [DBG] Creating DbConnection.
2025-04-30 22:13:58.430 -04:00 [DBG] Created DbConnection. (1ms).
2025-04-30 22:13:58.435 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:13:58.437 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:13:58.438 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:13:58.439 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-30 22:13:58.441 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-30 22:13:58.443 -04:00 [DBG] Executing DbCommand [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-04-30 22:13:58.447 -04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-04-30 22:13:58.456 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:13:58.458 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:13:58.460 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:13:58.462 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:13:58.464 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-04-30 22:13:58.467 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:13:58.471 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-30 22:13:58.476 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-30 22:13:58.480 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-30 22:13:58.486 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-30 22:13:58.487 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-30 22:13:58.488 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-30 22:13:58.490 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.Hotel.HotelBasicResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-30 22:13:58.493 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API) in 95.3075ms
2025-04-30 22:13:58.496 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:13:58.504 -04:00 [DBG] Connection id "0HNC8ADBEH029" completed keep alive response.
2025-04-30 22:13:58.513 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-30 22:13:58.519 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:13:58.521 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-30 22:13:58.523 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City/3/hotels - 200 null application/json; charset=utf-8 209.763ms
2025-04-30 22:14:18.244 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City/2/hotels - null null
2025-04-30 22:14:18.259 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/2/hotels'
2025-04-30 22:14:18.260 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/2/hotels'
2025-04-30 22:14:18.263 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:14:18.266 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-30 22:14:18.268 -04:00 [DBG] Successfully validated the token.
2025-04-30 22:14:18.271 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-30 22:14:18.272 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:14:18.274 -04:00 [INF] Route matched with {action = "GetHotelsForCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotelsForCity(Int32) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-04-30 22:14:18.281 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-30 22:14:18.293 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-30 22:14:18.296 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-04-30 22:14:18.303 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-30 22:14:18.306 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-30 22:14:18.308 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:14:18.310 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:14:18.312 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:14:18.320 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-04-30 22:14:18.323 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:14:18.325 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:14:18.327 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:14:18.328 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:14:18.332 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-30 22:14:18.390 -04:00 [DBG] Creating DbConnection.
2025-04-30 22:14:18.392 -04:00 [DBG] Created DbConnection. (1ms).
2025-04-30 22:14:18.415 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:14:18.429 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:14:18.431 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:14:18.434 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-04-30 22:14:18.453 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (22ms).
2025-04-30 22:14:18.464 -04:00 [DBG] Executing DbCommand [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-04-30 22:14:18.472 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-04-30 22:14:18.476 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:14:18.478 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-04-30 22:14:18.480 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:14:18.485 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-04-30 22:14:18.510 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API) in 202.2896ms
2025-04-30 22:14:18.513 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:14:18.523 -04:00 [DBG] Connection id "0HNC8ADBEH029" completed keep alive response.
2025-04-30 22:14:18.531 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-30 22:14:18.539 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:14:18.541 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-30 22:14:18.544 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City/2/hotels - 400 null application/json 299.5189ms
2025-04-30 22:14:30.179 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City/3/hotels - null null
2025-04-30 22:14:30.183 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/3/hotels'
2025-04-30 22:14:30.185 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/3/hotels'
2025-04-30 22:14:30.188 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:14:30.190 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-30 22:14:30.191 -04:00 [DBG] Successfully validated the token.
2025-04-30 22:14:30.213 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-30 22:14:30.214 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:14:30.216 -04:00 [INF] Route matched with {action = "GetHotelsForCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotelsForCity(Int32) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-04-30 22:14:30.229 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-30 22:14:30.239 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-30 22:14:30.242 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-04-30 22:14:30.246 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-30 22:14:30.248 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-30 22:14:30.257 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:14:30.260 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:14:30.263 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:14:30.265 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-04-30 22:14:30.271 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:14:30.273 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:14:30.274 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:14:30.276 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:14:30.278 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-30 22:14:30.281 -04:00 [DBG] Creating DbConnection.
2025-04-30 22:14:30.282 -04:00 [DBG] Created DbConnection. (1ms).
2025-04-30 22:14:30.286 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:14:30.287 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:14:30.289 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:14:30.290 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-30 22:14:30.293 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-30 22:14:30.294 -04:00 [DBG] Executing DbCommand [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-04-30 22:14:30.298 -04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-04-30 22:14:30.306 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:14:30.308 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:14:30.310 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:14:30.313 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:14:30.318 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 12ms reading results.
2025-04-30 22:14:30.323 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:14:30.325 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-04-30 22:14:30.328 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-30 22:14:30.332 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-30 22:14:30.340 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-30 22:14:30.348 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-30 22:14:30.349 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-30 22:14:30.353 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.Hotel.HotelBasicResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-30 22:14:30.358 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API) in 100.8055ms
2025-04-30 22:14:30.361 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-04-30 22:14:30.362 -04:00 [DBG] Connection id "0HNC8ADBEH029" completed keep alive response.
2025-04-30 22:14:30.365 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-30 22:14:30.370 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:14:30.372 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-30 22:14:30.374 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City/3/hotels - 200 null application/json; charset=utf-8 194.0861ms
2025-04-30 22:15:51.155 -04:00 [DBG] Connection id "0HNC8ADBEH029" received FIN.
2025-04-30 22:15:51.158 -04:00 [DBG] Connection id "0HNC8ADBEH029" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-30 22:15:51.160 -04:00 [DBG] Connection id "0HNC8ADBEH029" disconnecting.
2025-04-30 22:15:51.174 -04:00 [DBG] Connection id "0HNC8ADBEH029" stopped.
2025-04-30 22:22:31.035 -04:00 [DBG] Connection id "0HNC8ADBEH02A" accepted.
2025-04-30 22:22:31.037 -04:00 [DBG] Connection id "0HNC8ADBEH02A" started.
2025-04-30 22:22:31.039 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/City/5/hotels - application/json 131
2025-04-30 22:22:31.048 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/5/hotels'
2025-04-30 22:22:31.050 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/5/hotels'
2025-04-30 22:22:31.061 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-04-30 22:22:31.063 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-04-30 22:22:31.065 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-04-30 22:22:31.066 -04:00 [INF] CORS policy execution failed.
2025-04-30 22:22:31.067 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-04-30 22:22:31.069 -04:00 [DBG] Successfully validated the token.
2025-04-30 22:22:31.077 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-04-30 22:22:31.084 -04:00 [DBG] Authorization was successful.
2025-04-30 22:22:31.085 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-04-30 22:22:31.093 -04:00 [INF] Route matched with {action = "AddHotelToCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddHotelToCity(Int32, HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-04-30 22:22:31.101 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-04-30 22:22:31.103 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-04-30 22:22:31.109 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-30 22:22:31.112 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-04-30 22:22:31.114 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-30 22:22:31.116 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:22:31.120 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-04-30 22:22:31.145 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:22:31.146 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-04-30 22:22:31.174 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:22:31.185 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:22:31.186 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-04-30 22:22:31.190 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-04-30 22:22:31.212 -04:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-04-30 22:22:31.214 -04:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' using the name '' in request data ...
2025-04-30 22:22:31.258 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-30 22:22:31.259 -04:00 [DBG] Connection id "0HNC8ADBEH02A", Request id "0HNC8ADBEH02A:00000001": started reading request body.
2025-04-30 22:22:31.261 -04:00 [DBG] Connection id "0HNC8ADBEH02A", Request id "0HNC8ADBEH02A:00000001": done reading request body.
2025-04-30 22:22:31.263 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'
2025-04-30 22:22:31.268 -04:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-04-30 22:22:31.270 -04:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-04-30 22:22:31.275 -04:00 [DBG] Attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-04-30 22:22:31.276 -04:00 [DBG] Done attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-04-30 22:22:31.279 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-04-30 22:22:31.283 -04:00 [DBG] Creating DbConnection.
2025-04-30 22:22:31.284 -04:00 [DBG] Created DbConnection. (0ms).
2025-04-30 22:22:31.285 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:22:31.391 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:22:31.393 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:22:31.394 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-30 22:22:31.396 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-04-30 22:22:31.398 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-04-30 22:22:31.408 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-04-30 22:22:31.412 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-30 22:22:31.418 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:22:31.420 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-04-30 22:22:31.425 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:22:31.427 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-30 22:22:31.430 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:22:31.432 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:22:31.433 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-04-30 22:22:31.435 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-04-30 22:22:31.436 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-04-30 22:22:31.442 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-04-30 22:22:31.447 -04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-04-30 22:22:31.450 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:22:31.452 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-04-30 22:22:31.455 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:22:31.457 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-04-30 22:22:31.459 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-30 22:22:31.467 -04:00 [DBG] No information found on request to perform content negotiation.
2025-04-30 22:22:31.467 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-30 22:22:31.468 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-30 22:22:31.470 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-30 22:22:31.473 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType8`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-30 22:22:31.475 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API) in 358.9213ms
2025-04-30 22:22:31.478 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-04-30 22:22:31.480 -04:00 [DBG] Connection id "0HNC8ADBEH02A" completed keep alive response.
2025-04-30 22:22:31.482 -04:00 [DBG] 'AppDbContext' disposed.
2025-04-30 22:22:31.484 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-04-30 22:22:31.490 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-04-30 22:22:31.493 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/City/5/hotels - 200 null application/json; charset=utf-8 454.4194ms
2025-04-30 22:22:36.722 -04:00 [DBG] Connection id "0HNC8ADBEH02A" received FIN.
2025-04-30 22:22:36.725 -04:00 [DBG] Connection id "0HNC8ADBEH02A" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-04-30 22:22:36.727 -04:00 [DBG] Connection id "0HNC8ADBEH02A" disconnecting.
2025-04-30 22:22:36.736 -04:00 [DBG] Connection id "0HNC8ADBEH02A" stopped.
