2025-03-08 01:17:15.007 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-08 01:17:16.004 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 01:17:16.008 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 01:17:16.011 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 01:17:16.021 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 01:17:16.024 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 01:17:16.381 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 01:17:16.419 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 01:17:16.493 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 01:17:16.856 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 01:17:16.930 -05:00 [DBG] Creating DbConnection.
2025-03-08 01:17:17.026 -05:00 [DBG] Created DbConnection. (87ms).
2025-03-08 01:17:17.039 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:17:17.467 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:17:17.475 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 01:17:17.485 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (8ms).
2025-03-08 01:17:17.489 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (16ms).
2025-03-08 01:17:17.500 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 01:17:17.558 -05:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 01:17:17.613 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:17:17.627 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 59ms reading results.
2025-03-08 01:17:17.634 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:17:17.642 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-08 01:17:17.656 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 01:17:17.660 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:17:17.665 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-08 11:31:06.424 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-08 11:31:07.189 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 11:31:07.193 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 11:31:07.197 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 11:31:07.201 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 11:31:07.207 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 11:31:07.388 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 11:31:07.391 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 11:31:07.393 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 11:31:07.532 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 11:31:08.466 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 11:34:16.401 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-08 11:34:17.120 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 11:34:17.126 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 11:34:17.129 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 11:34:17.133 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 11:34:17.137 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 11:34:17.301 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 11:34:17.304 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 11:34:17.305 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 11:34:17.447 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 11:34:17.505 -05:00 [DBG] Creating DbConnection.
2025-03-08 11:34:17.575 -05:00 [DBG] Created DbConnection. (67ms).
2025-03-08 11:34:17.583 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:34:17.786 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:34:17.796 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 11:34:17.809 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (10ms).
2025-03-08 11:34:17.815 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (22ms).
2025-03-08 11:34:17.827 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 11:34:17.929 -05:00 [INF] Executed DbCommand (100ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 11:34:17.996 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:34:18.013 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 69ms reading results.
2025-03-08 11:34:18.018 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:34:18.032 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (14ms).
2025-03-08 11:34:18.342 -05:00 [DBG] Migrating using database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:34:18.347 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:34:18.352 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:34:18.397 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:34:18.399 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:34:18.405 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-08 11:34:18.410 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:34:18.414 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:34:18.478 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 11:34:18.479 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 11:34:18.481 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 11:34:18.484 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-08 11:34:18.505 -05:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-08 11:34:18.517 -05:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-08 11:34:18.522 -05:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-08 11:34:18.528 -05:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-03-08 11:34:18.529 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 11:34:18.531 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 11:34:18.534 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-08 11:34:18.535 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-08 11:34:18.548 -05:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-08 11:34:18.551 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 11:34:18.553 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 11:34:18.555 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-08 11:34:18.557 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 11:34:18.562 -05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 11:34:18.566 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:34:18.568 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-03-08 11:34:18.582 -05:00 [INF] Applying migration '20250308163108_FixOwnerTable'.
2025-03-08 11:34:18.737 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 11:34:18.744 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (7ms).
2025-03-08 11:34:18.752 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (15ms).
2025-03-08 11:34:18.754 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Hotels" DROP CONSTRAINT "FK_Hotels_owners_OwnerID";
2025-03-08 11:34:18.795 -05:00 [ERR] Failed executing DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Hotels" DROP CONSTRAINT "FK_Hotels_owners_OwnerID";
2025-03-08 11:34:18.816 -05:00 [DBG] Disposing transaction.
2025-03-08 11:34:18.822 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:34:18.830 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-08 11:34:18.836 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 11:34:18.844 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:34:18.850 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-08 11:47:32.105 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-08 11:47:33.229 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 11:47:33.238 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 11:47:33.243 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 11:47:33.254 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 11:47:33.263 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 11:47:33.496 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 11:47:33.503 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 11:47:33.514 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 11:47:33.705 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 11:47:35.325 -05:00 [DBG] Creating DbConnection.
2025-03-08 11:47:35.388 -05:00 [DBG] Created DbConnection. (62ms).
2025-03-08 11:47:35.400 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:47:35.669 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:47:35.692 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 11:47:35.715 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (20ms).
2025-03-08 11:47:35.756 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (73ms).
2025-03-08 11:47:35.838 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 11:47:35.921 -05:00 [INF] Executed DbCommand (115ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 11:47:35.974 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:47:35.989 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 57ms reading results.
2025-03-08 11:47:35.998 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:47:36.006 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-08 11:47:36.170 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 11:47:36.182 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 11:47:36.192 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (10ms).
2025-03-08 11:52:37.647 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-08 11:52:38.692 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 11:52:38.700 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 11:52:38.704 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 11:52:38.708 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 11:52:38.714 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 11:52:38.955 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 11:52:38.959 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 11:52:38.963 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 11:52:39.251 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 11:52:40.707 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:01:55.728 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-08 12:01:57.217 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 12:01:57.224 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 12:01:57.228 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 12:01:57.236 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 12:01:57.239 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 12:01:57.445 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:01:57.449 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:01:57.452 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:01:57.627 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:01:57.708 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:01:57.774 -05:00 [DBG] Created DbConnection. (64ms).
2025-03-08 12:01:57.783 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:01:58.051 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:01:58.065 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:01:58.095 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (28ms).
2025-03-08 12:01:58.103 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (41ms).
2025-03-08 12:01:58.126 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:01:58.207 -05:00 [INF] Executed DbCommand (83ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:01:58.286 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:01:58.301 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 76ms reading results.
2025-03-08 12:01:58.307 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:01:58.317 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-03-08 12:01:58.541 -05:00 [DBG] Migrating using database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:01:58.547 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:01:58.554 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:01:58.618 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:01:58.621 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:01:58.629 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-08 12:01:58.635 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:01:58.638 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:01:58.719 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:01:58.722 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:01:58.724 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (5ms).
2025-03-08 12:01:58.729 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-08 12:01:58.748 -05:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-08 12:01:58.759 -05:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-08 12:01:58.772 -05:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-08 12:01:58.782 -05:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-03-08 12:01:58.787 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:01:58.789 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:01:58.801 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (14ms).
2025-03-08 12:01:58.804 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-08 12:01:58.816 -05:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-08 12:01:58.821 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:01:58.823 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-08 12:01:58.825 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-08 12:01:58.831 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:01:58.837 -05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:01:58.841 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:01:58.845 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-08 12:01:58.864 -05:00 [INF] Applying migration '20250308165240_FixOwnerTable'.
2025-03-08 12:01:58.948 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:01:58.950 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:01:58.953 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-08 12:01:58.955 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Hotels" DROP CONSTRAINT "FK_Hotels_owners_OwnerID";
2025-03-08 12:01:59.092 -05:00 [ERR] Failed executing DbCommand (134ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Hotels" DROP CONSTRAINT "FK_Hotels_owners_OwnerID";
2025-03-08 12:01:59.108 -05:00 [DBG] Disposing transaction.
2025-03-08 12:01:59.136 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:01:59.139 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-08 12:01:59.147 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:01:59.152 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:01:59.157 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-08 12:11:12.825 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-08 12:11:13.503 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 12:11:13.509 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 12:11:13.512 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 12:11:13.514 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 12:11:13.517 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 12:11:13.660 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:11:13.662 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:11:13.664 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:11:13.767 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:11:14.308 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:11:14.340 -05:00 [DBG] Created DbConnection. (30ms).
2025-03-08 12:11:14.348 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:11:14.460 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:11:14.470 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:11:14.478 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (9ms).
2025-03-08 12:11:14.482 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (16ms).
2025-03-08 12:11:14.491 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:11:14.526 -05:00 [INF] Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:11:14.567 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:11:14.584 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 44ms reading results.
2025-03-08 12:11:14.594 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:11:14.606 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (11ms).
2025-03-08 12:11:14.722 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:11:14.727 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:11:14.730 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-08 12:11:47.670 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-08 12:11:48.424 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 12:11:48.428 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 12:11:48.431 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 12:11:48.434 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 12:11:48.437 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 12:11:48.584 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:11:48.587 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:11:48.590 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:11:48.715 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:11:49.108 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:12:16.003 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-08 12:12:16.747 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 12:12:16.759 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 12:12:16.776 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 12:12:16.779 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 12:12:16.782 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 12:12:17.123 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:12:17.131 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:12:17.152 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:12:17.369 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:12:18.234 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:12:18.266 -05:00 [DBG] Created DbConnection. (30ms).
2025-03-08 12:12:18.275 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:12:18.388 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:12:18.397 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:12:18.409 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (9ms).
2025-03-08 12:12:18.413 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (18ms).
2025-03-08 12:12:18.422 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:12:18.466 -05:00 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:12:18.504 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:12:18.516 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 41ms reading results.
2025-03-08 12:12:18.523 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:12:18.532 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-03-08 12:12:18.538 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:12:18.542 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:12:18.548 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-08 12:12:49.088 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-08 12:12:49.761 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 12:12:49.767 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 12:12:49.771 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 12:12:49.774 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 12:12:49.777 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 12:12:49.931 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:12:49.934 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:12:49.936 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:12:50.048 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:12:50.081 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:12:50.118 -05:00 [DBG] Created DbConnection. (34ms).
2025-03-08 12:12:50.128 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:12:50.238 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:12:50.247 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:12:50.258 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (9ms).
2025-03-08 12:12:50.262 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (18ms).
2025-03-08 12:12:50.270 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:12:50.305 -05:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:12:50.347 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:12:50.370 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 52ms reading results.
2025-03-08 12:12:50.397 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:12:50.405 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-08 12:12:50.682 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 12:12:50.685 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 12:12:50.687 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 12:12:50.689 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 12:12:50.692 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 12:12:50.736 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:12:50.738 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:12:50.741 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:12:50.814 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:12:50.817 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:12:50.820 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 12:14:03.363 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-08 12:14:03.968 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 12:14:03.975 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 12:14:03.978 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 12:14:03.983 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 12:14:03.987 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 12:14:04.147 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:14:04.150 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:14:04.152 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:14:04.280 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:14:04.318 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:14:04.355 -05:00 [DBG] Created DbConnection. (34ms).
2025-03-08 12:14:04.363 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:14:04.475 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:14:04.483 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:14:04.491 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (8ms).
2025-03-08 12:14:04.494 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (14ms).
2025-03-08 12:14:04.503 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:14:04.539 -05:00 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:14:04.579 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:14:04.591 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 43ms reading results.
2025-03-08 12:14:04.599 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:14:04.606 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-08 12:14:04.618 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:14:04.622 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:14:04.626 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 12:15:23.885 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-08 12:15:24.550 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 12:15:24.556 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 12:15:24.558 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 12:15:24.561 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 12:15:24.566 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 12:15:24.714 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:15:24.717 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:15:24.719 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:15:24.834 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:15:24.872 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:15:24.916 -05:00 [DBG] Created DbConnection. (39ms).
2025-03-08 12:15:24.922 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:15:25.027 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:15:25.034 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:15:25.044 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (8ms).
2025-03-08 12:15:25.048 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (16ms).
2025-03-08 12:15:25.056 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:15:25.090 -05:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:15:25.138 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:15:25.161 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 62ms reading results.
2025-03-08 12:15:25.166 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:15:25.175 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-08 12:15:25.189 -05:00 [DBG] Migrating using database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:15:25.194 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:15:25.204 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:15:25.254 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:15:25.256 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:15:25.263 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-08 12:15:25.271 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:15:25.274 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:15:25.414 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.416 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:15:25.418 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:15:25.421 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-08 12:15:25.433 -05:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-08 12:15:25.442 -05:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-08 12:15:25.448 -05:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-08 12:15:25.452 -05:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-03-08 12:15:25.454 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.455 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:15:25.457 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:15:25.459 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-08 12:15:25.467 -05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-08 12:15:25.472 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:15:25.473 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 12:15:25.475 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-08 12:15:25.477 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:15:25.485 -05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:15:25.488 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:15:25.490 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-03-08 12:15:25.501 -05:00 [INF] Reverting migration '20250214023702_InitialCreate'.
2025-03-08 12:15:25.507 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.509 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:15:25.511 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:15:25.513 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "AspNetRoleClaims";
2025-03-08 12:15:25.544 -05:00 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "AspNetRoleClaims";
2025-03-08 12:15:25.553 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.554 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:15:25.556 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:15:25.557 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "AspNetUserClaims";
2025-03-08 12:15:25.562 -05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "AspNetUserClaims";
2025-03-08 12:15:25.570 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.572 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:15:25.573 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:15:25.575 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "AspNetUserLogins";
2025-03-08 12:15:25.583 -05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "AspNetUserLogins";
2025-03-08 12:15:25.588 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.589 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:15:25.591 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:15:25.593 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "AspNetUserRoles";
2025-03-08 12:15:25.600 -05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "AspNetUserRoles";
2025-03-08 12:15:25.606 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.607 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:15:25.608 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:15:25.610 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "AspNetUserTokens";
2025-03-08 12:15:25.619 -05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "AspNetUserTokens";
2025-03-08 12:15:25.622 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.623 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:15:25.625 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:15:25.627 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "BookingRoom";
2025-03-08 12:15:25.638 -05:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "BookingRoom";
2025-03-08 12:15:25.641 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.643 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:15:25.644 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:15:25.647 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Discounts";
2025-03-08 12:15:25.653 -05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Discounts";
2025-03-08 12:15:25.657 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.658 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:15:25.661 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:15:25.663 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Images";
2025-03-08 12:15:25.670 -05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Images";
2025-03-08 12:15:25.691 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.692 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:15:25.694 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:15:25.698 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "InvoiceRecords";
2025-03-08 12:15:25.705 -05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "InvoiceRecords";
2025-03-08 12:15:25.710 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.712 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:15:25.719 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (9ms).
2025-03-08 12:15:25.723 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "RefreshToken";
2025-03-08 12:15:25.727 -05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "RefreshToken";
2025-03-08 12:15:25.735 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.737 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:15:25.738 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:15:25.740 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Reviews";
2025-03-08 12:15:25.756 -05:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Reviews";
2025-03-08 12:15:25.760 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.765 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-08 12:15:25.770 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (9ms).
2025-03-08 12:15:25.774 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "RoomClassAmenity";
2025-03-08 12:15:25.792 -05:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "RoomClassAmenity";
2025-03-08 12:15:25.795 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.800 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-08 12:15:25.805 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (9ms).
2025-03-08 12:15:25.808 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "AspNetRoles";
2025-03-08 12:15:25.826 -05:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "AspNetRoles";
2025-03-08 12:15:25.841 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.846 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-08 12:15:25.854 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (12ms).
2025-03-08 12:15:25.855 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Rooms";
2025-03-08 12:15:25.886 -05:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Rooms";
2025-03-08 12:15:25.893 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.895 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:15:25.898 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (5ms).
2025-03-08 12:15:25.900 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Bookings";
2025-03-08 12:15:25.908 -05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Bookings";
2025-03-08 12:15:25.915 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.918 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:15:25.921 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (5ms).
2025-03-08 12:15:25.925 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Amenities";
2025-03-08 12:15:25.935 -05:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Amenities";
2025-03-08 12:15:25.939 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.941 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:15:25.943 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:15:25.948 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "RoomClasses";
2025-03-08 12:15:25.956 -05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "RoomClasses";
2025-03-08 12:15:25.959 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.961 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:15:25.963 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-08 12:15:25.965 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "AspNetUsers";
2025-03-08 12:15:25.970 -05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "AspNetUsers";
2025-03-08 12:15:25.975 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:25.982 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (7ms).
2025-03-08 12:15:25.986 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (10ms).
2025-03-08 12:15:25.989 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Hotels";
2025-03-08 12:15:26.002 -05:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Hotels";
2025-03-08 12:15:26.008 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:26.009 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:15:26.011 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:15:26.019 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Cities";
2025-03-08 12:15:26.023 -05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Cities";
2025-03-08 12:15:26.026 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:15:26.028 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:15:26.035 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (8ms).
2025-03-08 12:15:26.037 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE owners;
2025-03-08 12:15:26.049 -05:00 [ERR] Failed executing DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE owners;
2025-03-08 12:15:26.060 -05:00 [DBG] Disposing transaction.
2025-03-08 12:15:26.063 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:15:26.070 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-08 12:15:26.073 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:15:26.076 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:15:26.078 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 12:16:38.899 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-08 12:16:39.498 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 12:16:39.503 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 12:16:39.507 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 12:16:39.511 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 12:16:39.514 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 12:16:39.693 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:16:39.695 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:16:39.697 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:16:39.832 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:16:40.666 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:16:40.714 -05:00 [DBG] Created DbConnection. (45ms).
2025-03-08 12:16:40.723 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:16:40.858 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:16:40.869 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:16:40.880 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (11ms).
2025-03-08 12:16:40.884 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (20ms).
2025-03-08 12:16:40.904 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:16:40.976 -05:00 [INF] Executed DbCommand (75ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:16:41.036 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:16:41.048 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 62ms reading results.
2025-03-08 12:16:41.056 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:16:41.062 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-08 12:16:41.071 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:16:41.076 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:16:41.081 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-08 12:17:49.979 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-08 12:17:50.565 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 12:17:50.571 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 12:17:50.575 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 12:17:50.577 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 12:17:50.579 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 12:17:50.710 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:17:50.714 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:17:50.716 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:17:50.825 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:17:50.833 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:17:50.869 -05:00 [DBG] Created DbConnection. (34ms).
2025-03-08 12:17:50.883 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:17:50.892 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:17:50.997 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:17:51.001 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:17:51.021 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (14ms).
2025-03-08 12:17:51.047 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:17:51.050 -05:00 [DBG] Created DbConnection. (2ms).
2025-03-08 12:17:51.054 -05:00 [DBG] Opening connection to database 'postgres' on server 'tcp://localhost:5432'.
2025-03-08 12:17:51.130 -05:00 [DBG] Opened connection to database 'postgres' on server 'tcp://localhost:5432'.
2025-03-08 12:17:51.140 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:17:51.149 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (10ms).
2025-03-08 12:17:51.152 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (16ms).
2025-03-08 12:17:51.163 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE lepointdb WITH (FORCE);
2025-03-08 12:17:51.441 -05:00 [INF] Executed DbCommand (280ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE lepointdb WITH (FORCE);
2025-03-08 12:17:51.446 -05:00 [DBG] Closing connection to database 'postgres' on server 'tcp://localhost:5432'.
2025-03-08 12:17:51.449 -05:00 [DBG] Closed connection to database 'postgres' on server 'tcp://localhost:5432' (2ms).
2025-03-08 12:17:51.453 -05:00 [DBG] Disposing connection to database 'postgres' on server 'tcp://localhost:5432'.
2025-03-08 12:17:51.456 -05:00 [DBG] Disposed connection to database 'postgres' on server 'tcp://localhost:5432' (2ms).
2025-03-08 12:17:51.462 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:17:51.465 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:17:51.468 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 12:18:32.076 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-08 12:18:32.690 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 12:18:32.696 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 12:18:32.699 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 12:18:32.703 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 12:18:32.707 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 12:18:32.840 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:18:32.844 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:18:32.845 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:18:32.961 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:18:33.590 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:19:01.300 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-08 12:19:02.034 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 12:19:02.038 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 12:19:02.041 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 12:19:02.044 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 12:19:02.047 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 12:19:02.203 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:19:02.206 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:19:02.209 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:19:02.354 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:19:02.387 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:19:02.426 -05:00 [DBG] Created DbConnection. (35ms).
2025-03-08 12:19:02.433 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:19:02.514 -05:00 [ERR] An error occurred using the connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:19:02.678 -05:00 [DBG] Migrating using database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:19:02.683 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:19:02.691 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:19:02.712 -05:00 [DBG] An error occurred using the connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:19:02.723 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:19:02.728 -05:00 [DBG] Created DbConnection. (4ms).
2025-03-08 12:19:02.730 -05:00 [DBG] Opening connection to database 'postgres' on server 'tcp://localhost:5432'.
2025-03-08 12:19:02.799 -05:00 [DBG] Opened connection to database 'postgres' on server 'tcp://localhost:5432'.
2025-03-08 12:19:02.809 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:02.817 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (9ms).
2025-03-08 12:19:02.821 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (16ms).
2025-03-08 12:19:02.830 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE lepointdb;
2025-03-08 12:19:03.369 -05:00 [INF] Executed DbCommand (540ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE lepointdb;
2025-03-08 12:19:03.375 -05:00 [DBG] Closing connection to database 'postgres' on server 'tcp://localhost:5432'.
2025-03-08 12:19:03.388 -05:00 [DBG] Closed connection to database 'postgres' on server 'tcp://localhost:5432' (6ms).
2025-03-08 12:19:03.393 -05:00 [DBG] Disposing connection to database 'postgres' on server 'tcp://localhost:5432'.
2025-03-08 12:19:03.398 -05:00 [DBG] Disposed connection to database 'postgres' on server 'tcp://localhost:5432' (4ms).
2025-03-08 12:19:03.401 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:19:03.404 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:19:03.453 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:19:03.457 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:19:03.461 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-08 12:19:03.464 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:19:03.497 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:19:03.546 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:03.549 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:03.551 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-08 12:19:03.552 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-08 12:19:03.578 -05:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-08 12:19:03.585 -05:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-08 12:19:03.592 -05:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-08 12:19:03.596 -05:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-03-08 12:19:03.598 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:03.600 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:19:03.604 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (5ms).
2025-03-08 12:19:03.606 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-08 12:19:03.612 -05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-08 12:19:03.616 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:19:03.619 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-08 12:19:03.621 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-08 12:19:03.624 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:19:03.632 -05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-08 12:19:03.643 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:19:03.648 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-03-08 12:19:03.657 -05:00 [INF] Applying migration '20250214023702_InitialCreate'.
2025-03-08 12:19:03.735 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:03.736 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:03.738 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:03.740 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "Name" character varying(256),
    "NormalizedName" character varying(256),
    "ConcurrencyStamp" text,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2025-03-08 12:19:03.767 -05:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "Name" character varying(256),
    "NormalizedName" character varying(256),
    "ConcurrencyStamp" text,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2025-03-08 12:19:03.772 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:03.774 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:03.777 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-08 12:19:03.780 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" text NOT NULL,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "UserName" character varying(256),
    "NormalizedUserName" character varying(256),
    "Email" character varying(256),
    "NormalizedEmail" character varying(256),
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text,
    "SecurityStamp" text,
    "ConcurrencyStamp" text,
    "PhoneNumber" text,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id")
);
2025-03-08 12:19:03.801 -05:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" text NOT NULL,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "UserName" character varying(256),
    "NormalizedUserName" character varying(256),
    "Email" character varying(256),
    "NormalizedEmail" character varying(256),
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text,
    "SecurityStamp" text,
    "ConcurrencyStamp" text,
    "PhoneNumber" text,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id")
);
2025-03-08 12:19:03.805 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:03.806 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:03.809 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:03.811 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Cities" (
    "CityID" integer GENERATED BY DEFAULT AS IDENTITY,
    "Description" text NOT NULL,
    "Name" text NOT NULL,
    "Country" text NOT NULL,
    "PostOffice" text NOT NULL,
    "CreatedAtUtc" timestamp with time zone NOT NULL,
    "VisitCount" integer NOT NULL,
    CONSTRAINT "PK_Cities" PRIMARY KEY ("CityID")
);
2025-03-08 12:19:03.836 -05:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Cities" (
    "CityID" integer GENERATED BY DEFAULT AS IDENTITY,
    "Description" text NOT NULL,
    "Name" text NOT NULL,
    "Country" text NOT NULL,
    "PostOffice" text NOT NULL,
    "CreatedAtUtc" timestamp with time zone NOT NULL,
    "VisitCount" integer NOT NULL,
    CONSTRAINT "PK_Cities" PRIMARY KEY ("CityID")
);
2025-03-08 12:19:03.849 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:03.852 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:03.855 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (6ms).
2025-03-08 12:19:03.858 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Images" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PublicId" text NOT NULL,
    "Url" text NOT NULL,
    "Type" text NOT NULL,
    "EntityId" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "HotelId" integer,
    "RoomClassId" integer,
    "RoomId" integer,
    "CityId" integer,
    CONSTRAINT "PK_Images" PRIMARY KEY ("Id")
);
2025-03-08 12:19:03.881 -05:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Images" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PublicId" text NOT NULL,
    "Url" text NOT NULL,
    "Type" text NOT NULL,
    "EntityId" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "HotelId" integer,
    "RoomClassId" integer,
    "RoomId" integer,
    "CityId" integer,
    CONSTRAINT "PK_Images" PRIMARY KEY ("Id")
);
2025-03-08 12:19:03.885 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:03.886 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:03.888 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:03.903 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE owners (
    "OwnerID" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "Email" text NOT NULL,
    "PhoneNumber" text NOT NULL,
    CONSTRAINT "PK_owners" PRIMARY KEY ("OwnerID")
);
2025-03-08 12:19:03.930 -05:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE owners (
    "OwnerID" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NOT NULL,
    "LastName" text NOT NULL,
    "Email" text NOT NULL,
    "PhoneNumber" text NOT NULL,
    CONSTRAINT "PK_owners" PRIMARY KEY ("OwnerID")
);
2025-03-08 12:19:03.934 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:03.936 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:03.938 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:03.940 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" text NOT NULL,
    "ClaimType" text,
    "ClaimValue" text,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2025-03-08 12:19:03.964 -05:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" text NOT NULL,
    "ClaimType" text,
    "ClaimValue" text,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2025-03-08 12:19:03.967 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:03.968 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:03.970 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:19:03.972 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "ClaimType" text,
    "ClaimValue" text,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2025-03-08 12:19:03.992 -05:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "ClaimType" text,
    "ClaimValue" text,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2025-03-08 12:19:03.996 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:03.998 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.000 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.001 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2025-03-08 12:19:04.025 -05:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2025-03-08 12:19:04.035 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.038 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.042 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (6ms).
2025-03-08 12:19:04.045 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2025-03-08 12:19:04.075 -05:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2025-03-08 12:19:04.079 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.080 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.082 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.085 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2025-03-08 12:19:04.112 -05:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2025-03-08 12:19:04.115 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.117 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.119 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.121 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "LocalUserId" text NOT NULL,
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Token" text NOT NULL,
    "ExpiresOn" timestamp with time zone NOT NULL,
    "CreatedOn" timestamp with time zone NOT NULL,
    "RevokedOn" timestamp with time zone,
    CONSTRAINT "PK_RefreshToken" PRIMARY KEY ("LocalUserId", "Id"),
    CONSTRAINT "FK_RefreshToken_AspNetUsers_LocalUserId" FOREIGN KEY ("LocalUserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2025-03-08 12:19:04.143 -05:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "LocalUserId" text NOT NULL,
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Token" text NOT NULL,
    "ExpiresOn" timestamp with time zone NOT NULL,
    "CreatedOn" timestamp with time zone NOT NULL,
    "RevokedOn" timestamp with time zone,
    CONSTRAINT "PK_RefreshToken" PRIMARY KEY ("LocalUserId", "Id"),
    CONSTRAINT "FK_RefreshToken_AspNetUsers_LocalUserId" FOREIGN KEY ("LocalUserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2025-03-08 12:19:04.147 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.148 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.150 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.152 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Hotels" (
    "HotelId" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(100) NOT NULL,
    "StarRating" integer NOT NULL,
    "Description" character varying(500),
    "PhoneNumber" character varying(15) NOT NULL,
    "CreatedAtUtc" timestamp with time zone NOT NULL,
    "CityID" integer NOT NULL,
    "OwnerID" integer NOT NULL,
    CONSTRAINT "PK_Hotels" PRIMARY KEY ("HotelId"),
    CONSTRAINT "FK_Hotels_Cities_CityID" FOREIGN KEY ("CityID") REFERENCES "Cities" ("CityID") ON DELETE CASCADE,
    CONSTRAINT "FK_Hotels_owners_OwnerID" FOREIGN KEY ("OwnerID") REFERENCES owners ("OwnerID") ON DELETE CASCADE
);
2025-03-08 12:19:04.180 -05:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Hotels" (
    "HotelId" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(100) NOT NULL,
    "StarRating" integer NOT NULL,
    "Description" character varying(500),
    "PhoneNumber" character varying(15) NOT NULL,
    "CreatedAtUtc" timestamp with time zone NOT NULL,
    "CityID" integer NOT NULL,
    "OwnerID" integer NOT NULL,
    CONSTRAINT "PK_Hotels" PRIMARY KEY ("HotelId"),
    CONSTRAINT "FK_Hotels_Cities_CityID" FOREIGN KEY ("CityID") REFERENCES "Cities" ("CityID") ON DELETE CASCADE,
    CONSTRAINT "FK_Hotels_owners_OwnerID" FOREIGN KEY ("OwnerID") REFERENCES owners ("OwnerID") ON DELETE CASCADE
);
2025-03-08 12:19:04.190 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.193 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:19:04.197 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (7ms).
2025-03-08 12:19:04.200 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Amenities" (
    "AmenityID" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NOT NULL,
    "Description" text NOT NULL,
    "HotelId" integer NOT NULL,
    CONSTRAINT "PK_Amenities" PRIMARY KEY ("AmenityID"),
    CONSTRAINT "FK_Amenities_Hotels_HotelId" FOREIGN KEY ("HotelId") REFERENCES "Hotels" ("HotelId") ON DELETE CASCADE
);
2025-03-08 12:19:04.226 -05:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Amenities" (
    "AmenityID" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NOT NULL,
    "Description" text NOT NULL,
    "HotelId" integer NOT NULL,
    CONSTRAINT "PK_Amenities" PRIMARY KEY ("AmenityID"),
    CONSTRAINT "FK_Amenities_Hotels_HotelId" FOREIGN KEY ("HotelId") REFERENCES "Hotels" ("HotelId") ON DELETE CASCADE
);
2025-03-08 12:19:04.237 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.240 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.243 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (6ms).
2025-03-08 12:19:04.247 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Bookings" (
    "BookingID" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "Status" integer NOT NULL,
    "ConfirmationNumber" character varying(50) NOT NULL,
    "TotalPrice" numeric(18,2) NOT NULL,
    "AfterDiscountedPrice" numeric NOT NULL,
    "BookingDateUtc" timestamp with time zone NOT NULL,
    "PaymentMethod" integer NOT NULL,
    "HotelId" integer NOT NULL,
    "CheckInDateUtc" timestamp with time zone NOT NULL,
    "CheckOutDateUtc" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Bookings" PRIMARY KEY ("BookingID"),
    CONSTRAINT "FK_Bookings_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Bookings_Hotels_HotelId" FOREIGN KEY ("HotelId") REFERENCES "Hotels" ("HotelId") ON DELETE CASCADE
);
2025-03-08 12:19:04.278 -05:00 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Bookings" (
    "BookingID" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "Status" integer NOT NULL,
    "ConfirmationNumber" character varying(50) NOT NULL,
    "TotalPrice" numeric(18,2) NOT NULL,
    "AfterDiscountedPrice" numeric NOT NULL,
    "BookingDateUtc" timestamp with time zone NOT NULL,
    "PaymentMethod" integer NOT NULL,
    "HotelId" integer NOT NULL,
    "CheckInDateUtc" timestamp with time zone NOT NULL,
    "CheckOutDateUtc" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Bookings" PRIMARY KEY ("BookingID"),
    CONSTRAINT "FK_Bookings_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Bookings_Hotels_HotelId" FOREIGN KEY ("HotelId") REFERENCES "Hotels" ("HotelId") ON DELETE CASCADE
);
2025-03-08 12:19:04.282 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.284 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.285 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.287 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Reviews" (
    "ReviewID" integer GENERATED BY DEFAULT AS IDENTITY,
    "HotelId" integer NOT NULL,
    "Content" text NOT NULL,
    "Rating" integer NOT NULL,
    "CreatedAtUtc" timestamp with time zone NOT NULL,
    "ModifiedAtUtc" timestamp with time zone,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_Reviews" PRIMARY KEY ("ReviewID"),
    CONSTRAINT "FK_Reviews_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Reviews_Hotels_HotelId" FOREIGN KEY ("HotelId") REFERENCES "Hotels" ("HotelId") ON DELETE RESTRICT
);
2025-03-08 12:19:04.313 -05:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Reviews" (
    "ReviewID" integer GENERATED BY DEFAULT AS IDENTITY,
    "HotelId" integer NOT NULL,
    "Content" text NOT NULL,
    "Rating" integer NOT NULL,
    "CreatedAtUtc" timestamp with time zone NOT NULL,
    "ModifiedAtUtc" timestamp with time zone,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_Reviews" PRIMARY KEY ("ReviewID"),
    CONSTRAINT "FK_Reviews_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Reviews_Hotels_HotelId" FOREIGN KEY ("HotelId") REFERENCES "Hotels" ("HotelId") ON DELETE RESTRICT
);
2025-03-08 12:19:04.317 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.319 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.320 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:19:04.323 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RoomClasses" (
    "RoomClassID" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoomType" integer NOT NULL,
    "Name" text NOT NULL,
    "Description" character varying(500),
    "CreatedAtUtc" timestamp with time zone NOT NULL,
    "HotelId" integer NOT NULL,
    CONSTRAINT "PK_RoomClasses" PRIMARY KEY ("RoomClassID"),
    CONSTRAINT "FK_RoomClasses_Hotels_HotelId" FOREIGN KEY ("HotelId") REFERENCES "Hotels" ("HotelId") ON DELETE CASCADE
);
2025-03-08 12:19:04.353 -05:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RoomClasses" (
    "RoomClassID" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoomType" integer NOT NULL,
    "Name" text NOT NULL,
    "Description" character varying(500),
    "CreatedAtUtc" timestamp with time zone NOT NULL,
    "HotelId" integer NOT NULL,
    CONSTRAINT "PK_RoomClasses" PRIMARY KEY ("RoomClassID"),
    CONSTRAINT "FK_RoomClasses_Hotels_HotelId" FOREIGN KEY ("HotelId") REFERENCES "Hotels" ("HotelId") ON DELETE CASCADE
);
2025-03-08 12:19:04.365 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.366 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.368 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.370 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "InvoiceRecords" (
    "InvoiceRecordId" integer GENERATED BY DEFAULT AS IDENTITY,
    "BookingID" integer NOT NULL,
    "RoomID" integer NOT NULL,
    "RoomClassName" text NOT NULL,
    "RoomNumber" text NOT NULL,
    "PriceAtBooking" numeric NOT NULL,
    "DiscountPercentageAtBooking" numeric,
    CONSTRAINT "PK_InvoiceRecords" PRIMARY KEY ("InvoiceRecordId"),
    CONSTRAINT "FK_InvoiceRecords_Bookings_BookingID" FOREIGN KEY ("BookingID") REFERENCES "Bookings" ("BookingID") ON DELETE CASCADE
);
2025-03-08 12:19:04.402 -05:00 [INF] Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "InvoiceRecords" (
    "InvoiceRecordId" integer GENERATED BY DEFAULT AS IDENTITY,
    "BookingID" integer NOT NULL,
    "RoomID" integer NOT NULL,
    "RoomClassName" text NOT NULL,
    "RoomNumber" text NOT NULL,
    "PriceAtBooking" numeric NOT NULL,
    "DiscountPercentageAtBooking" numeric,
    CONSTRAINT "PK_InvoiceRecords" PRIMARY KEY ("InvoiceRecordId"),
    CONSTRAINT "FK_InvoiceRecords_Bookings_BookingID" FOREIGN KEY ("BookingID") REFERENCES "Bookings" ("BookingID") ON DELETE CASCADE
);
2025-03-08 12:19:04.408 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.409 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.411 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:19:04.415 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RoomClassAmenity" (
    "AmenityID" integer NOT NULL,
    "RoomClassID" integer NOT NULL,
    CONSTRAINT "PK_RoomClassAmenity" PRIMARY KEY ("AmenityID", "RoomClassID"),
    CONSTRAINT "FK_RoomClassAmenity_Amenities_AmenityID" FOREIGN KEY ("AmenityID") REFERENCES "Amenities" ("AmenityID") ON DELETE CASCADE,
    CONSTRAINT "FK_RoomClassAmenity_RoomClasses_RoomClassID" FOREIGN KEY ("RoomClassID") REFERENCES "RoomClasses" ("RoomClassID") ON DELETE CASCADE
);
2025-03-08 12:19:04.433 -05:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RoomClassAmenity" (
    "AmenityID" integer NOT NULL,
    "RoomClassID" integer NOT NULL,
    CONSTRAINT "PK_RoomClassAmenity" PRIMARY KEY ("AmenityID", "RoomClassID"),
    CONSTRAINT "FK_RoomClassAmenity_Amenities_AmenityID" FOREIGN KEY ("AmenityID") REFERENCES "Amenities" ("AmenityID") ON DELETE CASCADE,
    CONSTRAINT "FK_RoomClassAmenity_RoomClasses_RoomClassID" FOREIGN KEY ("RoomClassID") REFERENCES "RoomClasses" ("RoomClassID") ON DELETE CASCADE
);
2025-03-08 12:19:04.475 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.478 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:19:04.480 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-08 12:19:04.570 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Rooms" (
    "RoomID" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoomClassID" integer NOT NULL,
    "Number" character varying(50) NOT NULL,
    "AdultsCapacity" integer NOT NULL,
    "ChildrenCapacity" integer NOT NULL,
    "PricePerNight" numeric(18,2) NOT NULL,
    "CreatedAtUtc" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Rooms" PRIMARY KEY ("RoomID"),
    CONSTRAINT "FK_Rooms_RoomClasses_RoomClassID" FOREIGN KEY ("RoomClassID") REFERENCES "RoomClasses" ("RoomClassID") ON DELETE CASCADE
);
2025-03-08 12:19:04.627 -05:00 [INF] Executed DbCommand (57ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Rooms" (
    "RoomID" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoomClassID" integer NOT NULL,
    "Number" character varying(50) NOT NULL,
    "AdultsCapacity" integer NOT NULL,
    "ChildrenCapacity" integer NOT NULL,
    "PricePerNight" numeric(18,2) NOT NULL,
    "CreatedAtUtc" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Rooms" PRIMARY KEY ("RoomID"),
    CONSTRAINT "FK_Rooms_RoomClasses_RoomClassID" FOREIGN KEY ("RoomClassID") REFERENCES "RoomClasses" ("RoomClassID") ON DELETE CASCADE
);
2025-03-08 12:19:04.631 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.636 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (5ms).
2025-03-08 12:19:04.638 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (7ms).
2025-03-08 12:19:04.640 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "BookingRoom" (
    "BookingID" integer NOT NULL,
    "RoomID" integer NOT NULL,
    CONSTRAINT "PK_BookingRoom" PRIMARY KEY ("BookingID", "RoomID"),
    CONSTRAINT "FK_BookingRoom_Bookings_BookingID" FOREIGN KEY ("BookingID") REFERENCES "Bookings" ("BookingID") ON DELETE CASCADE,
    CONSTRAINT "FK_BookingRoom_Rooms_RoomID" FOREIGN KEY ("RoomID") REFERENCES "Rooms" ("RoomID") ON DELETE CASCADE
);
2025-03-08 12:19:04.659 -05:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "BookingRoom" (
    "BookingID" integer NOT NULL,
    "RoomID" integer NOT NULL,
    CONSTRAINT "PK_BookingRoom" PRIMARY KEY ("BookingID", "RoomID"),
    CONSTRAINT "FK_BookingRoom_Bookings_BookingID" FOREIGN KEY ("BookingID") REFERENCES "Bookings" ("BookingID") ON DELETE CASCADE,
    CONSTRAINT "FK_BookingRoom_Rooms_RoomID" FOREIGN KEY ("RoomID") REFERENCES "Rooms" ("RoomID") ON DELETE CASCADE
);
2025-03-08 12:19:04.664 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.665 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.667 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.669 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Discounts" (
    "DiscountID" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoomID" integer NOT NULL,
    "Percentage" numeric(5,2) NOT NULL,
    "StartDateUtc" timestamp with time zone NOT NULL,
    "EndDateUtc" timestamp with time zone NOT NULL,
    "CreatedAtUtc" timestamp with time zone NOT NULL,
    "IsActive" boolean NOT NULL,
    "RoomClassID" integer,
    CONSTRAINT "PK_Discounts" PRIMARY KEY ("DiscountID"),
    CONSTRAINT "FK_Discounts_RoomClasses_RoomClassID" FOREIGN KEY ("RoomClassID") REFERENCES "RoomClasses" ("RoomClassID"),
    CONSTRAINT "FK_Discounts_Rooms_RoomID" FOREIGN KEY ("RoomID") REFERENCES "Rooms" ("RoomID") ON DELETE CASCADE
);
2025-03-08 12:19:04.686 -05:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Discounts" (
    "DiscountID" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoomID" integer NOT NULL,
    "Percentage" numeric(5,2) NOT NULL,
    "StartDateUtc" timestamp with time zone NOT NULL,
    "EndDateUtc" timestamp with time zone NOT NULL,
    "CreatedAtUtc" timestamp with time zone NOT NULL,
    "IsActive" boolean NOT NULL,
    "RoomClassID" integer,
    CONSTRAINT "PK_Discounts" PRIMARY KEY ("DiscountID"),
    CONSTRAINT "FK_Discounts_RoomClasses_RoomClassID" FOREIGN KEY ("RoomClassID") REFERENCES "RoomClasses" ("RoomClassID"),
    CONSTRAINT "FK_Discounts_Rooms_RoomID" FOREIGN KEY ("RoomID") REFERENCES "Rooms" ("RoomID") ON DELETE CASCADE
);
2025-03-08 12:19:04.690 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.692 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.694 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.696 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Amenities_HotelId" ON "Amenities" ("HotelId");
2025-03-08 12:19:04.710 -05:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Amenities_HotelId" ON "Amenities" ("HotelId");
2025-03-08 12:19:04.715 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.716 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.718 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.720 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2025-03-08 12:19:04.732 -05:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2025-03-08 12:19:04.735 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.737 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.739 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.740 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2025-03-08 12:19:04.753 -05:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2025-03-08 12:19:04.756 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.757 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.759 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.761 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2025-03-08 12:19:04.777 -05:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2025-03-08 12:19:04.782 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.783 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.786 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-08 12:19:04.792 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2025-03-08 12:19:04.806 -05:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2025-03-08 12:19:04.810 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.813 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:19:04.815 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-08 12:19:04.816 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2025-03-08 12:19:04.828 -05:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2025-03-08 12:19:04.832 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.834 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.836 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.838 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2025-03-08 12:19:04.851 -05:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2025-03-08 12:19:04.854 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.855 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.857 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.859 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2025-03-08 12:19:04.870 -05:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2025-03-08 12:19:04.874 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.876 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:19:04.878 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-08 12:19:04.880 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_BookingRoom_RoomID" ON "BookingRoom" ("RoomID");
2025-03-08 12:19:04.894 -05:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_BookingRoom_RoomID" ON "BookingRoom" ("RoomID");
2025-03-08 12:19:04.899 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.901 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.903 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.909 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Bookings_ConfirmationNumber" ON "Bookings" ("ConfirmationNumber");
2025-03-08 12:19:04.921 -05:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Bookings_ConfirmationNumber" ON "Bookings" ("ConfirmationNumber");
2025-03-08 12:19:04.927 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.928 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.930 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.932 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_HotelId" ON "Bookings" ("HotelId");
2025-03-08 12:19:04.948 -05:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_HotelId" ON "Bookings" ("HotelId");
2025-03-08 12:19:04.952 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.953 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.955 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.957 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_UserId" ON "Bookings" ("UserId");
2025-03-08 12:19:04.970 -05:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_UserId" ON "Bookings" ("UserId");
2025-03-08 12:19:04.974 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.975 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.977 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:04.979 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Discounts_RoomClassID" ON "Discounts" ("RoomClassID");
2025-03-08 12:19:04.992 -05:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Discounts_RoomClassID" ON "Discounts" ("RoomClassID");
2025-03-08 12:19:04.995 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:04.997 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:04.999 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:05.001 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Discounts_RoomID" ON "Discounts" ("RoomID");
2025-03-08 12:19:05.014 -05:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Discounts_RoomID" ON "Discounts" ("RoomID");
2025-03-08 12:19:05.017 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:05.018 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:05.020 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:05.022 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Hotels_CityID" ON "Hotels" ("CityID");
2025-03-08 12:19:05.037 -05:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Hotels_CityID" ON "Hotels" ("CityID");
2025-03-08 12:19:05.041 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:05.043 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:05.045 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:05.046 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Hotels_OwnerID" ON "Hotels" ("OwnerID");
2025-03-08 12:19:05.063 -05:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Hotels_OwnerID" ON "Hotels" ("OwnerID");
2025-03-08 12:19:05.066 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:05.067 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:05.069 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:19:05.070 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_InvoiceRecords_BookingID" ON "InvoiceRecords" ("BookingID");
2025-03-08 12:19:05.086 -05:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_InvoiceRecords_BookingID" ON "InvoiceRecords" ("BookingID");
2025-03-08 12:19:05.097 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:05.100 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:19:05.103 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (5ms).
2025-03-08 12:19:05.106 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Reviews_HotelId" ON "Reviews" ("HotelId");
2025-03-08 12:19:05.121 -05:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Reviews_HotelId" ON "Reviews" ("HotelId");
2025-03-08 12:19:05.127 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:05.129 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:05.131 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:05.133 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Reviews_UserId" ON "Reviews" ("UserId");
2025-03-08 12:19:05.145 -05:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Reviews_UserId" ON "Reviews" ("UserId");
2025-03-08 12:19:05.148 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:05.150 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:05.151 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:05.153 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_RoomClassAmenity_RoomClassID" ON "RoomClassAmenity" ("RoomClassID");
2025-03-08 12:19:05.165 -05:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_RoomClassAmenity_RoomClassID" ON "RoomClassAmenity" ("RoomClassID");
2025-03-08 12:19:05.168 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:05.170 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:05.172 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:05.174 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_RoomClasses_HotelId" ON "RoomClasses" ("HotelId");
2025-03-08 12:19:05.188 -05:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_RoomClasses_HotelId" ON "RoomClasses" ("HotelId");
2025-03-08 12:19:05.191 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:05.193 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:05.195 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:05.197 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Rooms_RoomClassID" ON "Rooms" ("RoomClassID");
2025-03-08 12:19:05.213 -05:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Rooms_RoomClassID" ON "Rooms" ("RoomClassID");
2025-03-08 12:19:05.216 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:05.218 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:05.220 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:05.221 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250214023702_InitialCreate', '9.0.2');
2025-03-08 12:19:05.230 -05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250214023702_InitialCreate', '9.0.2');
2025-03-08 12:19:05.233 -05:00 [INF] Applying migration '20250308171833_FixedInitialCreate'.
2025-03-08 12:19:05.289 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:05.291 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:19:05.294 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-08 12:19:05.295 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Hotels" DROP CONSTRAINT "FK_Hotels_owners_OwnerID";
2025-03-08 12:19:05.300 -05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Hotels" DROP CONSTRAINT "FK_Hotels_owners_OwnerID";
2025-03-08 12:19:05.303 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:05.305 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:05.307 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:05.309 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE owners DROP CONSTRAINT "PK_owners";
2025-03-08 12:19:05.315 -05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE owners DROP CONSTRAINT "PK_owners";
2025-03-08 12:19:05.318 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:05.320 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:05.322 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:05.324 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE owners RENAME TO "Owners";
2025-03-08 12:19:05.329 -05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE owners RENAME TO "Owners";
2025-03-08 12:19:05.337 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:05.338 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:05.341 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:05.343 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Owners" ALTER COLUMN "LastName" TYPE character varying(50);
2025-03-08 12:19:05.358 -05:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Owners" ALTER COLUMN "LastName" TYPE character varying(50);
2025-03-08 12:19:05.362 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:05.363 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:05.365 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:05.371 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Owners" ALTER COLUMN "FirstName" TYPE character varying(50);
2025-03-08 12:19:05.386 -05:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Owners" ALTER COLUMN "FirstName" TYPE character varying(50);
2025-03-08 12:19:05.394 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:05.396 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:19:05.398 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-08 12:19:05.400 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Owners" ADD CONSTRAINT "PK_Owners" PRIMARY KEY ("OwnerID");
2025-03-08 12:19:05.412 -05:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Owners" ADD CONSTRAINT "PK_Owners" PRIMARY KEY ("OwnerID");
2025-03-08 12:19:05.416 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:05.418 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-08 12:19:05.420 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-08 12:19:05.422 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Hotels" ADD CONSTRAINT "FK_Hotels_Owners_OwnerID" FOREIGN KEY ("OwnerID") REFERENCES "Owners" ("OwnerID") ON DELETE CASCADE;
2025-03-08 12:19:05.430 -05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Hotels" ADD CONSTRAINT "FK_Hotels_Owners_OwnerID" FOREIGN KEY ("OwnerID") REFERENCES "Owners" ("OwnerID") ON DELETE CASCADE;
2025-03-08 12:19:05.433 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-08 12:19:05.435 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-08 12:19:05.437 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-08 12:19:05.439 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250308171833_FixedInitialCreate', '9.0.2');
2025-03-08 12:19:05.444 -05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250308171833_FixedInitialCreate', '9.0.2');
2025-03-08 12:19:05.449 -05:00 [DBG] Committing transaction.
2025-03-08 12:19:05.466 -05:00 [DBG] Committed transaction.
2025-03-08 12:19:05.471 -05:00 [DBG] Disposing transaction.
2025-03-08 12:19:05.473 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:19:05.476 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-08 12:19:05.491 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:19:05.494 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:19:05.497 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 12:21:02.417 -05:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-08 12:21:02.597 -05:00 [DBG] Hosting starting
2025-03-08 12:21:02.620 -05:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-08 12:21:02.639 -05:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-08 12:21:02.691 -05:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-08 12:21:02.705 -05:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-08 12:21:02.713 -05:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-08 12:21:02.719 -05:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-08 12:21:02.725 -05:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-08 12:21:02.743 -05:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-08 12:21:02.752 -05:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-08 12:21:02.764 -05:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-08 12:21:02.770 -05:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-08 12:21:02.858 -05:00 [INF] Now listening on: http://localhost:5004
2025-03-08 12:21:02.860 -05:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-08 12:21:02.862 -05:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-08 12:21:02.863 -05:00 [INF] Hosting environment: Development
2025-03-08 12:21:02.864 -05:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-08 12:21:02.867 -05:00 [DBG] Hosting started
2025-03-08 12:21:10.590 -05:00 [DBG] Connection id "0HNAUCMFD82IM" accepted.
2025-03-08 12:21:10.594 -05:00 [DBG] Connection id "0HNAUCMFD82IM" started.
2025-03-08 12:21:10.615 -05:00 [DBG] Connection id "0HNAUCMFD82IN" accepted.
2025-03-08 12:21:10.620 -05:00 [DBG] Connection id "0HNAUCMFD82IN" started.
2025-03-08 12:21:10.693 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-03-08 12:21:10.707 -05:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-08 12:21:10.775 -05:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-03-08 12:21:10.777 -05:00 [DBG] Request did not match any endpoints
2025-03-08 12:21:10.980 -05:00 [DBG] Connection id "0HNAUCMFD82IM" completed keep alive response.
2025-03-08 12:21:10.984 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 296.3373ms
2025-03-08 12:21:11.022 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-03-08 12:21:11.034 -05:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-03-08 12:21:11.037 -05:00 [DBG] Request did not match any endpoints
2025-03-08 12:21:11.050 -05:00 [DBG] Connection id "0HNAUCMFD82IM" completed keep alive response.
2025-03-08 12:21:11.054 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 31.8468ms
2025-03-08 12:21:11.337 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-08 12:21:11.371 -05:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-08 12:21:11.373 -05:00 [DBG] Request did not match any endpoints
2025-03-08 12:21:11.718 -05:00 [DBG] Connection id "0HNAUCMFD82IM" completed keep alive response.
2025-03-08 12:21:11.721 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 384.4748ms
2025-03-08 12:21:17.153 -05:00 [DBG] Connection id "0HNAUCMFD82IM" received FIN.
2025-03-08 12:21:17.153 -05:00 [DBG] Connection id "0HNAUCMFD82IN" received FIN.
2025-03-08 12:21:17.186 -05:00 [DBG] Connection id "0HNAUCMFD82IN" disconnecting.
2025-03-08 12:21:17.186 -05:00 [DBG] Connection id "0HNAUCMFD82IM" disconnecting.
2025-03-08 12:21:17.192 -05:00 [DBG] Connection id "0HNAUCMFD82IN" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 12:21:17.220 -05:00 [DBG] Connection id "0HNAUCMFD82IM" stopped.
2025-03-08 12:21:17.235 -05:00 [DBG] Connection id "0HNAUCMFD82IM" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 12:21:17.235 -05:00 [DBG] Connection id "0HNAUCMFD82IN" stopped.
2025-03-08 12:23:37.395 -05:00 [DBG] Connection id "0HNAUCMFD82IO" accepted.
2025-03-08 12:23:37.397 -05:00 [DBG] Connection id "0HNAUCMFD82IO" started.
2025-03-08 12:23:37.400 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 65
2025-03-08 12:23:37.478 -05:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-08 12:23:37.505 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-08 12:23:37.524 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-08 12:23:37.530 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 12:23:37.544 -05:00 [INF] No CORS policy found for the specified request.
2025-03-08 12:23:37.548 -05:00 [WRN] Failed to determine the https port for redirect.
2025-03-08 12:23:37.628 -05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-08 12:23:37.634 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-08 12:23:37.697 -05:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-08 12:23:37.706 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 12:23:37.709 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 12:23:37.725 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 12:23:37.731 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 12:23:37.737 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 12:23:37.743 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-08 12:23:37.961 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-08 12:23:38.049 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-08 12:23:38.072 -05:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-08 12:23:38.081 -05:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-08 12:23:38.101 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-08 12:23:38.174 -05:00 [DBG] Connection id "0HNAUCMFD82IO", Request id "0HNAUCMFD82IO:00000001": started reading request body.
2025-03-08 12:23:38.180 -05:00 [DBG] Connection id "0HNAUCMFD82IO", Request id "0HNAUCMFD82IO:00000001": done reading request body.
2025-03-08 12:23:38.225 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-08 12:23:38.230 -05:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-08 12:23:38.241 -05:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-08 12:23:38.247 -05:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-08 12:23:38.275 -05:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-08 12:23:39.684 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-08 12:23:39.695 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-08 12:23:39.716 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-08 12:23:39.725 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-08 12:23:39.746 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-08 12:23:40.146 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:23:40.150 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:23:40.155 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-08 12:23:40.426 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:23:40.606 -05:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-08 12:23:40.754 -05:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-08 12:23:41.550 -05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-08 12:23:41.738 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:23:41.782 -05:00 [DBG] Created DbConnection. (44ms).
2025-03-08 12:23:41.792 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:23:42.038 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:23:42.048 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:23:42.076 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (14ms).
2025-03-08 12:23:42.096 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (48ms).
2025-03-08 12:23:42.127 -05:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-08 12:23:42.326 -05:00 [INF] Executed DbCommand (198ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-08 12:23:42.376 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:23:42.416 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 53ms reading results.
2025-03-08 12:23:42.444 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:23:42.473 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (25ms).
2025-03-08 12:23:42.514 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 4767.431ms
2025-03-08 12:23:42.530 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-08 12:23:42.824 -05:00 [DBG] Connection id "0HNAUCMFD82IO" completed keep alive response.
2025-03-08 12:23:42.830 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:23:42.850 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:23:42.860 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (10ms).
2025-03-08 12:23:42.864 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 500 null application/json 5463.9152ms
2025-03-08 12:23:47.432 -05:00 [DBG] Connection id "0HNAUCMFD82IO" received FIN.
2025-03-08 12:23:47.436 -05:00 [DBG] Connection id "0HNAUCMFD82IO" disconnecting.
2025-03-08 12:23:47.437 -05:00 [DBG] Connection id "0HNAUCMFD82IO" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 12:23:47.455 -05:00 [DBG] Connection id "0HNAUCMFD82IO" stopped.
2025-03-08 12:25:03.827 -05:00 [DBG] Connection id "0HNAUCMFD82IP" accepted.
2025-03-08 12:25:03.829 -05:00 [DBG] Connection id "0HNAUCMFD82IP" started.
2025-03-08 12:25:03.831 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/register - application/json 136
2025-03-08 12:25:03.840 -05:00 [DBG] 1 candidate(s) found for the request path '/api/auth/register'
2025-03-08 12:25:03.845 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/register' is valid for the request path '/api/auth/register'
2025-03-08 12:25:03.852 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-08 12:25:03.863 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 12:25:03.866 -05:00 [INF] No CORS policy found for the specified request.
2025-03-08 12:25:03.878 -05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-08 12:25:03.881 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-08 12:25:03.933 -05:00 [INF] Route matched with {action = "Register", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RegisterAsync(HotelBookingPlatform.Domain.Helpers.RegisterModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-08 12:25:03.949 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 12:25:03.960 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 12:25:03.966 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 12:25:03.977 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 12:25:03.995 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 12:25:04.001 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-08 12:25:04.032 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-08 12:25:04.059 -05:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-08 12:25:04.066 -05:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' using the name '' in request data ...
2025-03-08 12:25:04.080 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-08 12:25:04.103 -05:00 [DBG] Connection id "0HNAUCMFD82IP", Request id "0HNAUCMFD82IP:00000001": started reading request body.
2025-03-08 12:25:04.112 -05:00 [DBG] Connection id "0HNAUCMFD82IP", Request id "0HNAUCMFD82IP:00000001": done reading request body.
2025-03-08 12:25:04.124 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'
2025-03-08 12:25:04.131 -05:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-08 12:25:04.144 -05:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-08 12:25:04.149 -05:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-08 12:25:04.166 -05:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-08 12:25:04.378 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:25:04.430 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:25:04.434 -05:00 [DBG] Created DbConnection. (2ms).
2025-03-08 12:25:04.437 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:04.446 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:04.452 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:25:04.459 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (8ms).
2025-03-08 12:25:04.466 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (15ms).
2025-03-08 12:25:04.475 -05:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-08 12:25:04.513 -05:00 [INF] Executed DbCommand (39ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-08 12:25:04.537 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:04.552 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 15ms reading results.
2025-03-08 12:25:04.584 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:04.597 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (13ms).
2025-03-08 12:25:04.916 -05:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-03-08 12:25:04.926 -05:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-08 12:25:04.996 -05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-08 12:25:05.119 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:05.125 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:05.134 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:25:05.137 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-08 12:25:05.144 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-03-08 12:25:05.149 -05:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-08 12:25:05.177 -05:00 [INF] Executed DbCommand (28ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-08 12:25:05.194 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:05.199 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-03-08 12:25:05.210 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:05.214 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-08 12:25:05.475 -05:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:25:05.486 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 12:25:05.497 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 12:25:05.566 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 12:25:05.717 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:05.724 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:05.735 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:25:05.744 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (9ms).
2025-03-08 12:25:05.750 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (15ms).
2025-03-08 12:25:05.759 -05:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-03-08 12:25:05.820 -05:00 [INF] Executed DbCommand (61ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-03-08 12:25:05.847 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:05.854 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 18ms reading results.
2025-03-08 12:25:05.877 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:05.881 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-08 12:25:05.918 -05:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:25:05.932 -05:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-08 12:25:05.962 -05:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-03-08 12:25:05.986 -05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-08 12:25:06.014 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:06.019 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:06.025 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:25:06.029 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-08 12:25:06.036 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (11ms).
2025-03-08 12:25:06.044 -05:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-08 12:25:06.058 -05:00 [INF] Executed DbCommand (14ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-08 12:25:06.067 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:06.075 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-03-08 12:25:06.082 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:06.088 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-08 12:25:06.119 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:06.127 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:06.132 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:25:06.135 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-08 12:25:06.145 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (13ms).
2025-03-08 12:25:06.150 -05:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-08 12:25:06.164 -05:00 [INF] Executed DbCommand (14ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-08 12:25:06.178 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:06.183 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-03-08 12:25:06.220 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:06.275 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (55ms).
2025-03-08 12:25:06.402 -05:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:25:06.424 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 12:25:06.460 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 12:25:06.481 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 12:25:06.495 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:06.538 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:06.544 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:25:06.548 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-08 12:25:06.579 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (34ms).
2025-03-08 12:25:06.583 -05:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (@p0, @p1, @p2, @p3);
2025-03-08 12:25:06.609 -05:00 [INF] Executed DbCommand (20ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (@p0, @p1, @p2, @p3);
2025-03-08 12:25:06.617 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:06.626 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-03-08 12:25:06.631 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:06.637 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-08 12:25:06.645 -05:00 [DBG] An entity of type 'IdentityRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:25:06.659 -05:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-08 12:25:06.685 -05:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-03-08 12:25:06.710 -05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-08 12:25:06.743 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:06.750 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:06.754 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:25:06.760 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-03-08 12:25:06.764 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-03-08 12:25:06.769 -05:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-08 12:25:06.788 -05:00 [INF] Executed DbCommand (19ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-08 12:25:06.819 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:06.826 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 26ms reading results.
2025-03-08 12:25:06.834 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:06.841 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-08 12:25:06.914 -05:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .FirstOrDefault(e => EF.Property<string>(e, "UserId") == __p_0 && EF.Property<string>(e, "RoleId") == __p_1)'
2025-03-08 12:25:06.949 -05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<string>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<string>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<string> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<string> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<string>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<string>.UserId, IdentityUserRole<string>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetString(0), 
                        (object)dataReader.GetString(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<string>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]: 
                            {
                                return 
                                {
                                    IdentityUserRole<string> instance;
                                    instance = new IdentityUserRole<string>();
                                    instance.<UserId>k__BackingField = dataReader.GetString(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetString(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityUserRole<string>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-08 12:25:07.004 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:07.010 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:07.014 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:25:07.016 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-08 12:25:07.019 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-08 12:25:07.024 -05:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-03-08 12:25:07.037 -05:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-03-08 12:25:07.050 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:07.052 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-08 12:25:07.066 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:07.069 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-08 12:25:07.083 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:07.093 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:07.097 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:25:07.100 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-08 12:25:07.103 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-03-08 12:25:07.111 -05:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-08 12:25:07.129 -05:00 [INF] Executed DbCommand (17ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-08 12:25:07.138 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:07.145 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-03-08 12:25:07.151 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:07.160 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-03-08 12:25:07.353 -05:00 [DBG] Context 'AppDbContext' started tracking 'IdentityUserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:25:07.381 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:07.393 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:07.462 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:25:07.465 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-08 12:25:07.468 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-08 12:25:07.475 -05:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-08 12:25:07.543 -05:00 [INF] Executed DbCommand (69ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-08 12:25:07.575 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:07.578 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 20ms reading results.
2025-03-08 12:25:07.586 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:07.593 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-08 12:25:07.611 -05:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:25:07.620 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 12:25:07.625 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 12:25:07.630 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 12:25:07.676 -05:00 [DBG] Executing 2 update commands as a batch.
2025-03-08 12:25:07.682 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:07.685 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:07.698 -05:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-08 12:25:07.744 -05:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-08 12:25:07.748 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:25:07.753 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-08 12:25:07.779 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (30ms).
2025-03-08 12:25:07.783 -05:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-03-08 12:25:07.849 -05:00 [INF] Executed DbCommand (66ms) [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-03-08 12:25:07.859 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:07.862 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-08 12:25:07.877 -05:00 [DBG] Committing transaction.
2025-03-08 12:25:07.895 -05:00 [DBG] Committed transaction.
2025-03-08 12:25:07.901 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:07.915 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (14ms).
2025-03-08 12:25:07.928 -05:00 [DBG] Disposing transaction.
2025-03-08 12:25:07.931 -05:00 [DBG] An entity of type 'IdentityUserRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:25:07.936 -05:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:25:07.945 -05:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-03-08 12:25:07.978 -05:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-03-08 12:25:08.009 -05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-08 12:25:08.047 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:08.064 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:08.078 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:25:08.083 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-08 12:25:08.092 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (13ms).
2025-03-08 12:25:08.101 -05:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-08 12:25:08.119 -05:00 [INF] Executed DbCommand (17ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-08 12:25:08.152 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:08.158 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-03-08 12:25:08.163 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:08.166 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 12:25:08.235 -05:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-03-08 12:25:08.317 -05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-08 12:25:08.334 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:08.337 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:08.360 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:25:08.382 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (22ms).
2025-03-08 12:25:08.387 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (27ms).
2025-03-08 12:25:08.396 -05:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-08 12:25:08.411 -05:00 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-08 12:25:08.432 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:08.437 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-03-08 12:25:08.462 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:08.466 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-08 12:25:08.525 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:08.528 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:08.544 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:25:08.648 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (104ms).
2025-03-08 12:25:08.885 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (341ms).
2025-03-08 12:25:08.911 -05:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-08 12:25:08.930 -05:00 [INF] Executed DbCommand (19ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-08 12:25:08.946 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:08.951 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-03-08 12:25:08.959 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:08.963 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-08 12:25:08.975 -05:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:25:08.982 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 12:25:08.985 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 12:25:08.998 -05:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LocalUser.RefreshTokens'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:25:09.042 -05:00 [DBG] 'AppDbContext' generated a temporary value for the property 'RefreshToken.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:25:09.120 -05:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:25:09.128 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 12:25:09.168 -05:00 [DBG] Executing 2 update commands as a batch.
2025-03-08 12:25:09.177 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:09.182 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:09.198 -05:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-08 12:25:09.202 -05:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-08 12:25:09.210 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:25:09.216 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-03-08 12:25:09.225 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (15ms).
2025-03-08 12:25:09.244 -05:00 [DBG] Executing DbCommand [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-03-08 12:25:09.267 -05:00 [INF] Executed DbCommand (23ms) [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-03-08 12:25:09.299 -05:00 [DBG] The foreign key property 'RefreshToken.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-08 12:25:09.315 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:09.318 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 39ms reading results.
2025-03-08 12:25:09.326 -05:00 [DBG] Committing transaction.
2025-03-08 12:25:09.336 -05:00 [DBG] Committed transaction.
2025-03-08 12:25:09.338 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:09.344 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-08 12:25:09.353 -05:00 [DBG] Disposing transaction.
2025-03-08 12:25:09.357 -05:00 [DBG] An entity of type 'RefreshToken' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:25:09.364 -05:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:25:09.371 -05:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-03-08 12:25:09.462 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 12:25:09.478 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 12:25:09.482 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 12:25:09.484 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 12:25:09.492 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 12:25:09.497 -05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-08 12:25:09.598 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API) in 5596.5475ms
2025-03-08 12:25:09.601 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-08 12:25:09.609 -05:00 [DBG] Connection id "0HNAUCMFD82IP" completed keep alive response.
2025-03-08 12:25:09.613 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:25:09.615 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:25:09.619 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-08 12:25:09.626 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/register - 200 null application/json; charset=utf-8 5794.6696ms
2025-03-08 12:25:12.548 -05:00 [DBG] Connection id "0HNAUCMFD82IP" received FIN.
2025-03-08 12:25:12.558 -05:00 [DBG] Connection id "0HNAUCMFD82IP" disconnecting.
2025-03-08 12:25:12.571 -05:00 [DBG] Connection id "0HNAUCMFD82IP" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 12:25:12.595 -05:00 [DBG] Connection id "0HNAUCMFD82IP" stopped.
2025-03-08 12:26:34.598 -05:00 [DBG] Connection id "0HNAUCMFD82IQ" accepted.
2025-03-08 12:26:34.618 -05:00 [DBG] Connection id "0HNAUCMFD82IQ" started.
2025-03-08 12:26:34.644 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 67
2025-03-08 12:26:34.731 -05:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-08 12:26:34.758 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-08 12:26:34.767 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-08 12:26:34.771 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 12:26:34.791 -05:00 [INF] No CORS policy found for the specified request.
2025-03-08 12:26:35.095 -05:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'PgR8PfpSyet7h95ShF4LutzOI5Bn-kDpBc--oUt_-wo'. , KeyId: 
'. Number of keys in TokenValidationParameters: '1'. 
Number of keys in Configuration: '0'. 
Exceptions caught:
 '[PII of type 'System.Text.StringBuilder' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
token: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignature(JsonWebToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignatureAndIssuerSecurityKey(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-03-08 12:26:35.121 -05:00 [INF] Bearer was not authenticated. Failure message: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'PgR8PfpSyet7h95ShF4LutzOI5Bn-kDpBc--oUt_-wo'. , KeyId: 
'. Number of keys in TokenValidationParameters: '1'. 
Number of keys in Configuration: '0'. 
Exceptions caught:
 '[PII of type 'System.Text.StringBuilder' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
token: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.
2025-03-08 12:26:35.135 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-08 12:26:35.157 -05:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-08 12:26:35.178 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 12:26:35.182 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 12:26:35.188 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 12:26:35.199 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 12:26:35.204 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 12:26:35.216 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-08 12:26:35.282 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-08 12:26:35.286 -05:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-08 12:26:35.292 -05:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-08 12:26:35.307 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-08 12:26:35.317 -05:00 [DBG] Connection id "0HNAUCMFD82IQ", Request id "0HNAUCMFD82IQ:00000001": started reading request body.
2025-03-08 12:26:35.323 -05:00 [DBG] Connection id "0HNAUCMFD82IQ", Request id "0HNAUCMFD82IQ:00000001": done reading request body.
2025-03-08 12:26:35.348 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-08 12:26:35.356 -05:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-08 12:26:35.364 -05:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-08 12:26:35.375 -05:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-08 12:26:35.387 -05:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-08 12:26:35.445 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:26:35.454 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:26:35.456 -05:00 [DBG] Created DbConnection. (2ms).
2025-03-08 12:26:35.463 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:26:35.468 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:26:35.471 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:26:35.479 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-08 12:26:35.482 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (11ms).
2025-03-08 12:26:35.487 -05:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-08 12:26:35.505 -05:00 [INF] Executed DbCommand (18ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-08 12:26:35.529 -05:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:26:35.556 -05:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:26:35.565 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:26:35.569 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 48ms reading results.
2025-03-08 12:26:35.574 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:26:35.582 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-08 12:26:35.879 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:26:35.884 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:26:35.888 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:26:35.895 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-03-08 12:26:35.900 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (11ms).
2025-03-08 12:26:35.908 -05:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-08 12:26:35.920 -05:00 [INF] Executed DbCommand (12ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-08 12:26:35.932 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:26:35.936 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-03-08 12:26:35.947 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:26:35.952 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-08 12:26:35.964 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:26:35.969 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:26:35.973 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:26:35.979 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-03-08 12:26:35.983 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-03-08 12:26:35.988 -05:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-08 12:26:36.000 -05:00 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-08 12:26:36.013 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:26:36.018 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-03-08 12:26:36.023 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:26:36.030 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-08 12:26:36.063 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:26:36.072 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:26:36.079 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:26:36.083 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-08 12:26:36.088 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-08 12:26:36.092 -05:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-08 12:26:36.112 -05:00 [INF] Executed DbCommand (20ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-08 12:26:36.121 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:26:36.128 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-03-08 12:26:36.133 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:26:36.138 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-08 12:26:36.153 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 12:26:36.164 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 12:26:36.167 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 12:26:36.170 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 12:26:36.175 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 12:26:36.182 -05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-08 12:26:36.189 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 973.172ms
2025-03-08 12:26:36.200 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-08 12:26:36.203 -05:00 [DBG] Connection id "0HNAUCMFD82IQ" completed keep alive response.
2025-03-08 12:26:36.207 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:26:36.214 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:26:36.217 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 12:26:36.225 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 1582.4513ms
2025-03-08 12:26:37.690 -05:00 [DBG] Connection id "0HNAUCMFD82IQ" received FIN.
2025-03-08 12:26:37.697 -05:00 [DBG] Connection id "0HNAUCMFD82IQ" disconnecting.
2025-03-08 12:26:37.701 -05:00 [DBG] Connection id "0HNAUCMFD82IQ" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 12:26:37.714 -05:00 [DBG] Connection id "0HNAUCMFD82IQ" stopped.
2025-03-08 12:27:36.892 -05:00 [DBG] Connection id "0HNAUCMFD82IR" accepted.
2025-03-08 12:27:36.902 -05:00 [DBG] Connection id "0HNAUCMFD82IR" started.
2025-03-08 12:27:36.916 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Owner - application/json 119
2025-03-08 12:27:37.005 -05:00 [DBG] 1 candidate(s) found for the request path '/api/Owner'
2025-03-08 12:27:37.017 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)' with route pattern 'api/Owner' is valid for the request path '/api/Owner'
2025-03-08 12:27:37.033 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)'
2025-03-08 12:27:37.042 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 12:27:37.052 -05:00 [INF] No CORS policy found for the specified request.
2025-03-08 12:27:37.061 -05:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'PgR8PfpSyet7h95ShF4LutzOI5Bn-kDpBc--oUt_-wo'. , KeyId: 
'. Number of keys in TokenValidationParameters: '1'. 
Number of keys in Configuration: '0'. 
Exceptions caught:
 '[PII of type 'System.Text.StringBuilder' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
token: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignature(JsonWebToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignatureAndIssuerSecurityKey(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-03-08 12:27:37.100 -05:00 [INF] Bearer was not authenticated. Failure message: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'PgR8PfpSyet7h95ShF4LutzOI5Bn-kDpBc--oUt_-wo'. , KeyId: 
'. Number of keys in TokenValidationParameters: '1'. 
Number of keys in Configuration: '0'. 
Exceptions caught:
 '[PII of type 'System.Text.StringBuilder' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
token: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.
2025-03-08 12:27:37.137 -05:00 [DBG] Policy authentication schemes  did not succeed
2025-03-08 12:27:37.156 -05:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-03-08 12:27:37.176 -05:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-03-08 12:27:37.183 -05:00 [DBG] Connection id "0HNAUCMFD82IR" completed keep alive response.
2025-03-08 12:27:37.187 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Owner - 401 0 null 271.8935ms
2025-03-08 12:27:37.218 -05:00 [DBG] Connection id "0HNAUCMFD82IR", Request id "0HNAUCMFD82IR:00000001": started reading request body.
2025-03-08 12:27:37.226 -05:00 [DBG] Connection id "0HNAUCMFD82IR", Request id "0HNAUCMFD82IR:00000001": done reading request body.
2025-03-08 12:27:37.826 -05:00 [DBG] Connection id "0HNAUCMFD82IR" received FIN.
2025-03-08 12:27:37.829 -05:00 [DBG] Connection id "0HNAUCMFD82IR" disconnecting.
2025-03-08 12:27:37.832 -05:00 [DBG] Connection id "0HNAUCMFD82IR" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 12:27:37.849 -05:00 [DBG] Connection id "0HNAUCMFD82IR" stopped.
2025-03-08 12:28:24.304 -05:00 [DBG] Connection id "0HNAUCMFD82IS" accepted.
2025-03-08 12:28:24.306 -05:00 [DBG] Connection id "0HNAUCMFD82IS" started.
2025-03-08 12:28:24.308 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/assign-role - application/json 59
2025-03-08 12:28:24.313 -05:00 [DBG] 1 candidate(s) found for the request path '/api/auth/assign-role'
2025-03-08 12:28:24.317 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoleController.AddRoleAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/assign-role' is valid for the request path '/api/auth/assign-role'
2025-03-08 12:28:24.321 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.RoleController.AddRoleAsync (HotelBookingPlatform.API)'
2025-03-08 12:28:24.323 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 12:28:24.325 -05:00 [INF] No CORS policy found for the specified request.
2025-03-08 12:28:24.332 -05:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'PgR8PfpSyet7h95ShF4LutzOI5Bn-kDpBc--oUt_-wo'. , KeyId: 
'. Number of keys in TokenValidationParameters: '1'. 
Number of keys in Configuration: '0'. 
Exceptions caught:
 '[PII of type 'System.Text.StringBuilder' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
token: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignature(JsonWebToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignatureAndIssuerSecurityKey(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-03-08 12:28:24.359 -05:00 [INF] Bearer was not authenticated. Failure message: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'PgR8PfpSyet7h95ShF4LutzOI5Bn-kDpBc--oUt_-wo'. , KeyId: 
'. Number of keys in TokenValidationParameters: '1'. 
Number of keys in Configuration: '0'. 
Exceptions caught:
 '[PII of type 'System.Text.StringBuilder' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
token: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.
2025-03-08 12:28:24.373 -05:00 [DBG] Policy authentication schemes  did not succeed
2025-03-08 12:28:24.378 -05:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-03-08 12:28:24.385 -05:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-03-08 12:28:24.388 -05:00 [DBG] Connection id "0HNAUCMFD82IS" completed keep alive response.
2025-03-08 12:28:24.392 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/assign-role - 401 0 null 83.8747ms
2025-03-08 12:28:24.406 -05:00 [DBG] Connection id "0HNAUCMFD82IS", Request id "0HNAUCMFD82IS:00000001": started reading request body.
2025-03-08 12:28:24.409 -05:00 [DBG] Connection id "0HNAUCMFD82IS", Request id "0HNAUCMFD82IS:00000001": done reading request body.
2025-03-08 12:28:27.894 -05:00 [DBG] Connection id "0HNAUCMFD82IS" received FIN.
2025-03-08 12:28:27.897 -05:00 [DBG] Connection id "0HNAUCMFD82IS" disconnecting.
2025-03-08 12:28:27.900 -05:00 [DBG] Connection id "0HNAUCMFD82IS" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 12:28:27.920 -05:00 [DBG] Connection id "0HNAUCMFD82IS" stopped.
2025-03-08 12:30:42.306 -05:00 [DBG] Connection id "0HNAUCMFD82IT" accepted.
2025-03-08 12:30:42.318 -05:00 [DBG] Connection id "0HNAUCMFD82IT" started.
2025-03-08 12:30:42.368 -05:00 [DBG] Connection id "0HNAUCMFD82IU" accepted.
2025-03-08 12:30:42.483 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-03-08 12:30:42.495 -05:00 [DBG] Connection id "0HNAUCMFD82IU" started.
2025-03-08 12:30:42.506 -05:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-03-08 12:30:42.514 -05:00 [DBG] Request did not match any endpoints
2025-03-08 12:30:42.517 -05:00 [DBG] Connection id "0HNAUCMFD82IT" completed keep alive response.
2025-03-08 12:30:42.520 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 37.065ms
2025-03-08 12:30:42.583 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-03-08 12:30:42.593 -05:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-03-08 12:30:42.608 -05:00 [DBG] Request did not match any endpoints
2025-03-08 12:30:42.610 -05:00 [DBG] Connection id "0HNAUCMFD82IT" completed keep alive response.
2025-03-08 12:30:42.615 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 31.6142ms
2025-03-08 12:30:42.915 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-08 12:30:42.936 -05:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-08 12:30:42.947 -05:00 [DBG] Request did not match any endpoints
2025-03-08 12:30:43.116 -05:00 [DBG] Connection id "0HNAUCMFD82IT" completed keep alive response.
2025-03-08 12:30:43.198 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 282.8446ms
2025-03-08 12:31:21.914 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 67
2025-03-08 12:31:21.918 -05:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-08 12:31:21.971 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-08 12:31:21.981 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-08 12:31:21.984 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 12:31:21.986 -05:00 [INF] No CORS policy found for the specified request.
2025-03-08 12:31:21.991 -05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-08 12:31:21.997 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-08 12:31:22.002 -05:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-08 12:31:22.011 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 12:31:22.016 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 12:31:22.027 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 12:31:22.035 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 12:31:22.045 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 12:31:22.050 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-08 12:31:22.058 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-08 12:31:22.071 -05:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-08 12:31:22.080 -05:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-08 12:31:22.087 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-08 12:31:22.095 -05:00 [DBG] Connection id "0HNAUCMFD82IT", Request id "0HNAUCMFD82IT:00000004": started reading request body.
2025-03-08 12:31:22.108 -05:00 [DBG] Connection id "0HNAUCMFD82IT", Request id "0HNAUCMFD82IT:00000004": done reading request body.
2025-03-08 12:31:22.114 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-08 12:31:22.118 -05:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-08 12:31:22.127 -05:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-08 12:31:22.132 -05:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-08 12:31:22.144 -05:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-08 12:31:22.151 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:31:22.165 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:31:22.168 -05:00 [DBG] Created DbConnection. (3ms).
2025-03-08 12:31:22.175 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:31:22.224 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:31:22.229 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:31:22.232 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-08 12:31:22.237 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-08 12:31:22.245 -05:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-08 12:31:22.263 -05:00 [INF] Executed DbCommand (18ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-08 12:31:22.272 -05:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:31:22.277 -05:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:31:22.283 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:31:22.287 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 15ms reading results.
2025-03-08 12:31:22.293 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:31:22.297 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-08 12:31:22.546 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:31:22.553 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:31:22.563 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:31:22.580 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (16ms).
2025-03-08 12:31:22.584 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (21ms).
2025-03-08 12:31:22.596 -05:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-08 12:31:22.608 -05:00 [INF] Executed DbCommand (12ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-08 12:31:22.616 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:31:22.620 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-08 12:31:22.630 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:31:22.637 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-08 12:31:22.649 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:31:22.653 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:31:22.664 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:31:22.670 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-03-08 12:31:22.682 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (18ms).
2025-03-08 12:31:22.686 -05:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-08 12:31:22.716 -05:00 [INF] Executed DbCommand (30ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-08 12:31:22.785 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:31:22.899 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 114ms reading results.
2025-03-08 12:31:22.954 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:31:23.006 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (52ms).
2025-03-08 12:31:23.036 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:31:23.044 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:31:23.049 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:31:23.053 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-08 12:31:23.059 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-03-08 12:31:23.062 -05:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-08 12:31:23.082 -05:00 [INF] Executed DbCommand (19ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-08 12:31:23.149 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:31:23.159 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 10ms reading results.
2025-03-08 12:31:23.166 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:31:23.177 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (11ms).
2025-03-08 12:31:23.191 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 12:31:23.210 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 12:31:23.212 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 12:31:23.221 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 12:31:23.233 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 12:31:23.240 -05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-08 12:31:23.249 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 1198.4332ms
2025-03-08 12:31:23.259 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-08 12:31:23.264 -05:00 [DBG] Connection id "0HNAUCMFD82IT" completed keep alive response.
2025-03-08 12:31:23.272 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:31:23.275 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:31:23.360 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (84ms).
2025-03-08 12:31:23.398 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 1484.2545ms
2025-03-08 12:31:45.546 -05:00 [DBG] Connection id "0HNAUCMFD82IU" received FIN.
2025-03-08 12:31:45.558 -05:00 [DBG] Connection id "0HNAUCMFD82IU" disconnecting.
2025-03-08 12:31:45.585 -05:00 [DBG] Connection id "0HNAUCMFD82IU" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 12:31:45.602 -05:00 [DBG] Connection id "0HNAUCMFD82IU" stopped.
2025-03-08 12:33:21.282 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Owner - application/json 119
2025-03-08 12:33:21.288 -05:00 [DBG] 1 candidate(s) found for the request path '/api/Owner'
2025-03-08 12:33:21.293 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)' with route pattern 'api/Owner' is valid for the request path '/api/Owner'
2025-03-08 12:33:21.302 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)'
2025-03-08 12:33:21.320 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 12:33:21.323 -05:00 [INF] No CORS policy found for the specified request.
2025-03-08 12:33:21.419 -05:00 [DBG] Successfully validated the token.
2025-03-08 12:33:21.440 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 12:33:21.469 -05:00 [DBG] Authorization was successful.
2025-03-08 12:33:21.489 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)'
2025-03-08 12:33:21.538 -05:00 [INF] Route matched with {action = "CreateOwner", controller = "Owner"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateOwner(HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto) on controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API).
2025-03-08 12:33:21.555 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 12:33:21.570 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 12:33:21.588 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 12:33:21.601 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 12:33:21.604 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 12:33:21.665 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-08 12:33:22.089 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-08 12:33:22.097 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto' ...
2025-03-08 12:33:22.103 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto' using the name '' in request data ...
2025-03-08 12:33:22.110 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-08 12:33:22.121 -05:00 [DBG] Connection id "0HNAUCMFD82IT", Request id "0HNAUCMFD82IT:00000005": started reading request body.
2025-03-08 12:33:22.130 -05:00 [DBG] Connection id "0HNAUCMFD82IT", Request id "0HNAUCMFD82IT:00000005": done reading request body.
2025-03-08 12:33:22.139 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'
2025-03-08 12:33:22.150 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'.
2025-03-08 12:33:22.155 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'.
2025-03-08 12:33:22.164 -05:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto' ...
2025-03-08 12:33:22.172 -05:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'.
2025-03-08 12:33:22.219 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:33:22.255 -05:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Owner.OwnerID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:33:22.334 -05:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:33:22.338 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 12:33:22.342 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 12:33:22.357 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 12:33:22.384 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:33:22.387 -05:00 [DBG] Created DbConnection. (3ms).
2025-03-08 12:33:22.391 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:33:22.399 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:33:22.404 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:33:22.408 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-08 12:33:22.418 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (13ms).
2025-03-08 12:33:22.423 -05:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Owners" ("Email", "FirstName", "LastName", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "OwnerID";
2025-03-08 12:33:22.457 -05:00 [INF] Executed DbCommand (35ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Owners" ("Email", "FirstName", "LastName", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "OwnerID";
2025-03-08 12:33:22.471 -05:00 [DBG] The foreign key property 'Owner.OwnerID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-08 12:33:22.487 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:33:22.492 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 22ms reading results.
2025-03-08 12:33:22.501 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:33:22.506 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-08 12:33:22.520 -05:00 [DBG] An entity of type 'Owner' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:33:22.534 -05:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-08 12:33:22.554 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 12:33:22.566 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 12:33:22.569 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 12:33:22.573 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 12:33:22.576 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 12:33:22.586 -05:00 [INF] Executing CreatedResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Owner.OwnerDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-08 12:33:22.601 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API) in 935.6855ms
2025-03-08 12:33:22.606 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)'
2025-03-08 12:33:22.616 -05:00 [DBG] Connection id "0HNAUCMFD82IT" completed keep alive response.
2025-03-08 12:33:22.619 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:33:22.622 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:33:22.629 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-08 12:33:22.637 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Owner - 201 null application/json; charset=utf-8 1355.1628ms
2025-03-08 12:33:43.339 -05:00 [DBG] Connection id "0HNAUCMFD82IT" received FIN.
2025-03-08 12:33:43.842 -05:00 [DBG] Connection id "0HNAUCMFD82IT" disconnecting.
2025-03-08 12:33:44.077 -05:00 [DBG] Connection id "0HNAUCMFD82IT" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 12:33:44.088 -05:00 [DBG] Connection id "0HNAUCMFD82IT" stopped.
2025-03-08 12:39:27.275 -05:00 [DBG] Connection id "0HNAUCMFD82IV" accepted.
2025-03-08 12:39:27.277 -05:00 [DBG] Connection id "0HNAUCMFD82IV" started.
2025-03-08 12:39:27.279 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Owner - null null
2025-03-08 12:39:27.318 -05:00 [DBG] 1 candidate(s) found for the request path '/api/Owner'
2025-03-08 12:39:27.338 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetAllOwners (HotelBookingPlatform.API)' with route pattern 'api/Owner' is valid for the request path '/api/Owner'
2025-03-08 12:39:27.346 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetAllOwners (HotelBookingPlatform.API)'
2025-03-08 12:39:27.350 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 12:39:27.352 -05:00 [DBG] Successfully validated the token.
2025-03-08 12:39:27.354 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 12:39:27.356 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetAllOwners (HotelBookingPlatform.API)'
2025-03-08 12:39:27.379 -05:00 [INF] Route matched with {action = "GetAllOwners", controller = "Owner"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllOwners() on controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API).
2025-03-08 12:39:27.385 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 12:39:27.391 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 12:39:27.397 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 12:39:27.406 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 12:39:27.412 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 12:39:27.416 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-08 12:39:27.428 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-08 12:39:27.437 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:39:27.449 -05:00 [DBG] Compiling query expression: 
'DbSet<Owner>()
    .AsNoTracking()'
2025-03-08 12:39:27.466 -05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Owner>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Owner.Email (string) Required, 1], [Property: Owner.FirstName (string) Required MaxLength(50), 2], [Property: Owner.LastName (string) Required MaxLength(50), 3], [Property: Owner.PhoneNumber (string) Required, 4] }
        SELECT o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
        FROM Owners AS o) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Owner.Email (string) Required, 1], [Property: Owner.FirstName (string) Required MaxLength(50), 2], [Property: Owner.LastName (string) Required MaxLength(50), 3], [Property: Owner.PhoneNumber (string) Required, 4] }
        SELECT o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
        FROM Owners AS o, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Owner entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Owner instance1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Owner);
            (object)dataReader.GetInt32(0) != null ? 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                        {
                            return 
                            {
                                Owner instance;
                                instance = new Owner();
                                instance.<OwnerID>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<FirstName>k__BackingField = dataReader.GetString(2);
                                instance.<LastName>k__BackingField = dataReader.GetString(3);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(4);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: NoTracking, 
                                    structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Owner)
                }
                ;
                return instance1;
            } : 
            {
                object[] keyValues1;
                keyValues1 = new object[]{ (object)dataReader.GetInt32(0) };
                return ShapedQueryCompilingExpressionVisitor.CreateNullKeyValueInNoTrackingQuery(
                    entityType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")], 
                    properties: [LIFTABLE Constant: List<RuntimeProperty> { Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd } | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey().Properties], 
                    keyValues: keyValues1);
            };
            return instance1;
        };
        return entity;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-08 12:39:27.480 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:39:27.481 -05:00 [DBG] Created DbConnection. (1ms).
2025-03-08 12:39:27.482 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:39:27.485 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:39:27.487 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:39:27.489 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 12:39:27.497 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-03-08 12:39:27.499 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
2025-03-08 12:39:27.505 -05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
2025-03-08 12:39:27.513 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:39:27.516 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-08 12:39:27.519 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:39:27.521 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 12:39:27.536 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 12:39:27.541 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 12:39:27.546 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 12:39:27.548 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 12:39:27.552 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 12:39:27.555 -05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[HotelBookingPlatform.Domain.DTOs.Owner.OwnerDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-08 12:39:27.564 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.OwnerController.GetAllOwners (HotelBookingPlatform.API) in 148.6849ms
2025-03-08 12:39:27.567 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetAllOwners (HotelBookingPlatform.API)'
2025-03-08 12:39:27.569 -05:00 [DBG] Connection id "0HNAUCMFD82IV" completed keep alive response.
2025-03-08 12:39:27.574 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:39:27.579 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:39:27.584 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-08 12:39:27.588 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Owner - 200 null application/json; charset=utf-8 308.7147ms
2025-03-08 12:39:50.527 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Owner/1 - null null
2025-03-08 12:39:50.531 -05:00 [DBG] 1 candidate(s) found for the request path '/api/Owner/1'
2025-03-08 12:39:50.582 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetOwner (HotelBookingPlatform.API)' with route pattern 'api/Owner/{id}' is valid for the request path '/api/Owner/1'
2025-03-08 12:39:50.587 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetOwner (HotelBookingPlatform.API)'
2025-03-08 12:39:50.590 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 12:39:50.592 -05:00 [DBG] Successfully validated the token.
2025-03-08 12:39:50.597 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 12:39:50.600 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetOwner (HotelBookingPlatform.API)'
2025-03-08 12:39:50.606 -05:00 [INF] Route matched with {action = "GetOwner", controller = "Owner"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetOwner(Int32) on controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API).
2025-03-08 12:39:50.612 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 12:39:50.615 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 12:39:50.617 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 12:39:50.621 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 12:39:50.623 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 12:39:50.629 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-08 12:39:50.639 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-08 12:39:50.642 -05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-08 12:39:50.648 -05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-08 12:39:50.652 -05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-08 12:39:50.654 -05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-08 12:39:50.656 -05:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-08 12:39:50.660 -05:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-08 12:39:50.668 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:39:50.673 -05:00 [DBG] Compiling query expression: 
'DbSet<Owner>()
    .FirstOrDefault(e => EF.Property<int>(e, "OwnerID") == __p_0)'
2025-03-08 12:39:50.685 -05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Owner>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Owner>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Owner.Email (string) Required, 1], [Property: Owner.FirstName (string) Required MaxLength(50), 2], [Property: Owner.LastName (string) Required MaxLength(50), 3], [Property: Owner.PhoneNumber (string) Required, 4] }
            SELECT TOP(1) o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Owners AS o
            WHERE o.OwnerID == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Owner.Email (string) Required, 1], [Property: Owner.FirstName (string) Required MaxLength(50), 2], [Property: Owner.LastName (string) Required MaxLength(50), 3], [Property: Owner.PhoneNumber (string) Required, 4] }
            SELECT TOP(1) o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Owners AS o
            WHERE o.OwnerID == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Owner entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Owner instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Owner);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Owner.OwnerID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Owner)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                            {
                                return 
                                {
                                    Owner instance;
                                    instance = new Owner();
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(2);
                                    instance.<LastName>k__BackingField = dataReader.GetString(3);
                                    instance.<PhoneNumber>k__BackingField = dataReader.GetString(4);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Owner)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-08 12:39:50.704 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:39:50.706 -05:00 [DBG] Created DbConnection. (1ms).
2025-03-08 12:39:50.708 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:39:50.713 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:39:50.715 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:39:50.717 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 12:39:50.719 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-08 12:39:50.723 -05:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-03-08 12:39:50.737 -05:00 [INF] Executed DbCommand (16ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-03-08 12:39:50.745 -05:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:39:50.750 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:39:50.752 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-03-08 12:39:50.755 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:39:50.757 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-08 12:39:50.765 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 12:39:50.769 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 12:39:50.771 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 12:39:50.773 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 12:39:50.775 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 12:39:50.782 -05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Owner.OwnerDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-08 12:39:50.784 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.OwnerController.GetOwner (HotelBookingPlatform.API) in 155.6628ms
2025-03-08 12:39:50.787 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetOwner (HotelBookingPlatform.API)'
2025-03-08 12:39:50.788 -05:00 [DBG] Connection id "0HNAUCMFD82IV" completed keep alive response.
2025-03-08 12:39:50.792 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:39:50.796 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:39:50.800 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-08 12:39:50.804 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Owner/1 - 200 null application/json; charset=utf-8 276.9706ms
2025-03-08 12:42:02.351 -05:00 [DBG] Connection id "0HNAUCMFD82IV" disconnecting.
2025-03-08 12:42:02.356 -05:00 [DBG] Connection id "0HNAUCMFD82IV" stopped.
2025-03-08 12:42:02.362 -05:00 [DBG] Connection id "0HNAUCMFD82IV" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 12:42:36.972 -05:00 [DBG] Connection id "0HNAUCMFD82J0" accepted.
2025-03-08 12:42:36.978 -05:00 [DBG] Connection id "0HNAUCMFD82J0" started.
2025-03-08 12:42:36.985 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/City - application/json 102
2025-03-08 12:42:37.113 -05:00 [DBG] 1 candidate(s) found for the request path '/api/City'
2025-03-08 12:42:37.122 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)' with route pattern 'api/City' is valid for the request path '/api/City'
2025-03-08 12:42:37.128 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)'
2025-03-08 12:42:37.133 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 12:42:37.139 -05:00 [INF] No CORS policy found for the specified request.
2025-03-08 12:42:37.146 -05:00 [DBG] Successfully validated the token.
2025-03-08 12:42:37.155 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 12:42:37.159 -05:00 [DBG] Authorization was successful.
2025-03-08 12:42:37.163 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)'
2025-03-08 12:42:37.188 -05:00 [INF] Route matched with {action = "AddCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCity(HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-08 12:42:37.196 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 12:42:37.205 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 12:42:37.211 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 12:42:37.220 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 12:42:37.225 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 12:42:37.231 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 12:42:37.261 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 12:42:37.315 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest' ...
2025-03-08 12:42:37.371 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest' using the name '' in request data ...
2025-03-08 12:42:37.426 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-08 12:42:37.540 -05:00 [DBG] Connection id "0HNAUCMFD82J0", Request id "0HNAUCMFD82J0:00000001": started reading request body.
2025-03-08 12:42:37.605 -05:00 [DBG] Connection id "0HNAUCMFD82J0", Request id "0HNAUCMFD82J0:00000001": done reading request body.
2025-03-08 12:42:37.612 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'
2025-03-08 12:42:37.615 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'.
2025-03-08 12:42:37.622 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'.
2025-03-08 12:42:37.625 -05:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest' ...
2025-03-08 12:42:37.637 -05:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'.
2025-03-08 12:42:37.655 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:42:37.697 -05:00 [DBG] 'AppDbContext' generated a temporary value for the property 'City.CityID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:42:37.750 -05:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:42:37.758 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 12:42:37.762 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 12:42:37.777 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 12:42:37.782 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:42:37.788 -05:00 [DBG] Created DbConnection. (5ms).
2025-03-08 12:42:37.794 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:42:37.841 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:42:37.845 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:42:37.849 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-08 12:42:37.856 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-03-08 12:42:37.861 -05:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Cities" ("Country", "CreatedAtUtc", "Description", "Name", "PostOffice", "VisitCount")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "CityID";
2025-03-08 12:42:37.893 -05:00 [INF] Executed DbCommand (32ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Cities" ("Country", "CreatedAtUtc", "Description", "Name", "PostOffice", "VisitCount")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "CityID";
2025-03-08 12:42:37.906 -05:00 [DBG] The foreign key property 'City.CityID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-08 12:42:37.911 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:42:37.915 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 11ms reading results.
2025-03-08 12:42:37.926 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:42:37.931 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-08 12:42:37.940 -05:00 [DBG] An entity of type 'City' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:42:37.946 -05:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-08 12:42:37.965 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 12:42:37.979 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 12:42:37.983 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 12:42:37.991 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 12:42:37.998 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 12:42:38.007 -05:00 [INF] Executing CreatedResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.City.CityResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-08 12:42:38.020 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API) in 788.2649ms
2025-03-08 12:42:38.029 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)'
2025-03-08 12:42:38.032 -05:00 [DBG] Connection id "0HNAUCMFD82J0" completed keep alive response.
2025-03-08 12:42:38.040 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:42:38.043 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:42:38.048 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-08 12:42:38.065 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/City - 201 null application/json; charset=utf-8 1079.9409ms
2025-03-08 12:43:52.035 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/City - application/json 114
2025-03-08 12:43:52.041 -05:00 [DBG] 1 candidate(s) found for the request path '/api/City'
2025-03-08 12:43:52.044 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)' with route pattern 'api/City' is valid for the request path '/api/City'
2025-03-08 12:43:52.108 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)'
2025-03-08 12:43:52.115 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 12:43:52.118 -05:00 [INF] No CORS policy found for the specified request.
2025-03-08 12:43:52.132 -05:00 [DBG] Successfully validated the token.
2025-03-08 12:43:52.153 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 12:43:52.191 -05:00 [DBG] Authorization was successful.
2025-03-08 12:43:52.210 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)'
2025-03-08 12:43:52.228 -05:00 [INF] Route matched with {action = "AddCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCity(HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-08 12:43:52.266 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 12:43:52.317 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 12:43:52.363 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 12:43:52.398 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 12:43:52.412 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 12:43:52.429 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 12:43:52.438 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 12:43:52.449 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest' ...
2025-03-08 12:43:52.455 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest' using the name '' in request data ...
2025-03-08 12:43:52.462 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-08 12:43:52.468 -05:00 [DBG] Connection id "0HNAUCMFD82J0", Request id "0HNAUCMFD82J0:00000002": started reading request body.
2025-03-08 12:43:52.474 -05:00 [DBG] Connection id "0HNAUCMFD82J0", Request id "0HNAUCMFD82J0:00000002": done reading request body.
2025-03-08 12:43:52.481 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'
2025-03-08 12:43:52.552 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'.
2025-03-08 12:43:52.560 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'.
2025-03-08 12:43:52.566 -05:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest' ...
2025-03-08 12:43:52.574 -05:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'.
2025-03-08 12:43:52.580 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:43:52.588 -05:00 [DBG] 'AppDbContext' generated a temporary value for the property 'City.CityID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:43:52.602 -05:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:43:52.607 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 12:43:52.610 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 12:43:52.614 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 12:43:52.618 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:43:52.621 -05:00 [DBG] Created DbConnection. (2ms).
2025-03-08 12:43:52.624 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:43:52.641 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:43:52.646 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:43:52.650 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-08 12:43:52.656 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-03-08 12:43:52.659 -05:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Cities" ("Country", "CreatedAtUtc", "Description", "Name", "PostOffice", "VisitCount")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "CityID";
2025-03-08 12:43:52.678 -05:00 [INF] Executed DbCommand (17ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Cities" ("Country", "CreatedAtUtc", "Description", "Name", "PostOffice", "VisitCount")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "CityID";
2025-03-08 12:43:52.685 -05:00 [DBG] The foreign key property 'City.CityID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-08 12:43:52.690 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:43:52.694 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-03-08 12:43:52.701 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:43:52.708 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-08 12:43:52.713 -05:00 [DBG] An entity of type 'City' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:43:52.721 -05:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-08 12:43:52.726 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 12:43:52.738 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 12:43:52.739 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 12:43:52.743 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 12:43:52.745 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 12:43:52.750 -05:00 [INF] Executing CreatedResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.City.CityResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-08 12:43:52.757 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API) in 328.1563ms
2025-03-08 12:43:52.762 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)'
2025-03-08 12:43:52.766 -05:00 [DBG] Connection id "0HNAUCMFD82J0" completed keep alive response.
2025-03-08 12:43:52.771 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:43:52.780 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:43:52.784 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-08 12:43:52.790 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/City - 201 null application/json; charset=utf-8 755.1569ms
2025-03-08 12:44:48.450 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City?CityName=Port-au-Prince&Description=Capitale%20Haiti&pageSize=10&pageNumber=1 - null null
2025-03-08 12:44:48.476 -05:00 [DBG] 1 candidate(s) found for the request path '/api/City'
2025-03-08 12:44:48.507 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCities (HotelBookingPlatform.API)' with route pattern 'api/City' is valid for the request path '/api/City'
2025-03-08 12:44:48.548 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCities (HotelBookingPlatform.API)'
2025-03-08 12:44:48.569 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 12:44:48.609 -05:00 [DBG] Successfully validated the token.
2025-03-08 12:44:48.612 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 12:44:48.616 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCities (HotelBookingPlatform.API)'
2025-03-08 12:44:48.640 -05:00 [INF] Route matched with {action = "GetCities", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCities(System.String, System.String, Int32, Int32) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-08 12:44:48.653 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 12:44:48.660 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 12:44:48.665 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 12:44:48.671 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 12:44:48.676 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 12:44:48.684 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 12:44:48.702 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 12:44:48.721 -05:00 [DBG] Attempting to bind parameter 'CityName' of type 'System.String' ...
2025-03-08 12:44:48.727 -05:00 [DBG] Attempting to bind parameter 'CityName' of type 'System.String' using the name 'CityName' in request data ...
2025-03-08 12:44:48.733 -05:00 [DBG] Done attempting to bind parameter 'CityName' of type 'System.String'.
2025-03-08 12:44:48.740 -05:00 [DBG] Done attempting to bind parameter 'CityName' of type 'System.String'.
2025-03-08 12:44:48.746 -05:00 [DBG] Attempting to validate the bound parameter 'CityName' of type 'System.String' ...
2025-03-08 12:44:48.755 -05:00 [DBG] Done attempting to validate the bound parameter 'CityName' of type 'System.String'.
2025-03-08 12:44:48.759 -05:00 [DBG] Attempting to bind parameter 'Description' of type 'System.String' ...
2025-03-08 12:44:48.765 -05:00 [DBG] Attempting to bind parameter 'Description' of type 'System.String' using the name 'Description' in request data ...
2025-03-08 12:44:48.770 -05:00 [DBG] Done attempting to bind parameter 'Description' of type 'System.String'.
2025-03-08 12:44:48.774 -05:00 [DBG] Done attempting to bind parameter 'Description' of type 'System.String'.
2025-03-08 12:44:48.778 -05:00 [DBG] Attempting to validate the bound parameter 'Description' of type 'System.String' ...
2025-03-08 12:44:48.782 -05:00 [DBG] Done attempting to validate the bound parameter 'Description' of type 'System.String'.
2025-03-08 12:44:48.860 -05:00 [DBG] Attempting to bind parameter 'pageSize' of type 'System.Int32' ...
2025-03-08 12:44:48.864 -05:00 [DBG] Attempting to bind parameter 'pageSize' of type 'System.Int32' using the name 'pageSize' in request data ...
2025-03-08 12:44:48.870 -05:00 [DBG] Done attempting to bind parameter 'pageSize' of type 'System.Int32'.
2025-03-08 12:44:48.874 -05:00 [DBG] Done attempting to bind parameter 'pageSize' of type 'System.Int32'.
2025-03-08 12:44:48.879 -05:00 [DBG] Attempting to validate the bound parameter 'pageSize' of type 'System.Int32' ...
2025-03-08 12:44:48.884 -05:00 [DBG] Done attempting to validate the bound parameter 'pageSize' of type 'System.Int32'.
2025-03-08 12:44:48.895 -05:00 [DBG] Attempting to bind parameter 'pageNumber' of type 'System.Int32' ...
2025-03-08 12:44:48.899 -05:00 [DBG] Attempting to bind parameter 'pageNumber' of type 'System.Int32' using the name 'pageNumber' in request data ...
2025-03-08 12:44:48.905 -05:00 [DBG] Done attempting to bind parameter 'pageNumber' of type 'System.Int32'.
2025-03-08 12:44:48.910 -05:00 [DBG] Done attempting to bind parameter 'pageNumber' of type 'System.Int32'.
2025-03-08 12:44:48.914 -05:00 [DBG] Attempting to validate the bound parameter 'pageNumber' of type 'System.Int32' ...
2025-03-08 12:44:48.918 -05:00 [DBG] Done attempting to validate the bound parameter 'pageNumber' of type 'System.Int32'.
2025-03-08 12:44:48.942 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:44:48.970 -05:00 [DBG] Compiling query expression: 
'DbSet<City>()
    .Where(c => True && c.Name.Contains(__cityName_0) || True && c.Description.Contains(__description_1))
    .Skip(__p_2)
    .Take(__p_3)'
2025-03-08 12:44:48.997 -05:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-03-08 12:44:49.008 -05:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-03-08 12:44:49.038 -05:00 [DBG] Generated query execution expression: 
'queryContext => 
{
    queryContext.AddParameter(
        name: "__cityName_0_contains", 
        value: (object)Invoke(queryContext => NpgsqlSqlTranslatingExpressionVisitor.ConstructLikePatternParameter(
            queryContext: queryContext, 
            baseParameterName: "__cityName_0", 
            methodType: Contains), queryContext));
    queryContext.AddParameter(
        name: "__description_1_contains", 
        value: (object)Invoke(queryContext => NpgsqlSqlTranslatingExpressionVisitor.ConstructLikePatternParameter(
            queryContext: queryContext, 
            baseParameterName: "__description_1", 
            methodType: Contains), queryContext));
    return SingleQueryingEnumerable.Create<City>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE (c.Name LIKE @__cityName_0_contains) || (c.Description LIKE @__description_1_contains)
            OFFSET @__p_2 ROWS FETCH NEXT @__p_3 ROWS ONLY) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE (c.Name LIKE @__cityName_0_contains) || (c.Description LIKE @__description_1_contains)
            OFFSET @__p_2 ROWS FETCH NEXT @__p_3 ROWS ONLY, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            City entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                City instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(City);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: City.CityID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (City)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]: 
                            {
                                return 
                                {
                                    City instance;
                                    instance = new City();
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Country>k__BackingField = dataReader.GetString(1);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.GetString(3);
                                    instance.<Name>k__BackingField = dataReader.GetString(4);
                                    instance.<PostOffice>k__BackingField = dataReader.GetString(5);
                                    instance.<VisitCount>k__BackingField = dataReader.GetInt32(6);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(City)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True);
}'
2025-03-08 12:44:49.082 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:44:49.085 -05:00 [DBG] Created DbConnection. (3ms).
2025-03-08 12:44:49.089 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:44:49.095 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:44:49.102 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:44:49.105 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-08 12:44:49.110 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-08 12:44:49.114 -05:00 [DBG] Executing DbCommand [Parameters=[@__cityName_0_contains='?', @__description_1_contains='?', @__p_3='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."Name" LIKE @__cityName_0_contains OR c."Description" LIKE @__description_1_contains
LIMIT @__p_3 OFFSET @__p_2
2025-03-08 12:44:49.167 -05:00 [INF] Executed DbCommand (53ms) [Parameters=[@__cityName_0_contains='?', @__description_1_contains='?', @__p_3='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."Name" LIKE @__cityName_0_contains OR c."Description" LIKE @__description_1_contains
LIMIT @__p_3 OFFSET @__p_2
2025-03-08 12:44:49.180 -05:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:44:49.185 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:44:49.195 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 15ms reading results.
2025-03-08 12:44:49.199 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:44:49.203 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-08 12:44:49.227 -05:00 [DBG] The unchanged property 'City.VisitCount' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-08 12:44:49.231 -05:00 [DBG] An entity of type 'City' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:44:49.246 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 12:44:49.249 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 12:44:49.253 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 12:44:49.263 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:44:49.267 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:44:49.270 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:44:49.275 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-08 12:44:49.278 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-08 12:44:49.283 -05:00 [DBG] Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Cities" SET "VisitCount" = @p0
WHERE "CityID" = @p1;
2025-03-08 12:44:49.308 -05:00 [INF] Executed DbCommand (25ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Cities" SET "VisitCount" = @p0
WHERE "CityID" = @p1;
2025-03-08 12:44:49.315 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:44:49.320 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-03-08 12:44:49.325 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:44:49.335 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-03-08 12:44:49.342 -05:00 [DBG] An entity of type 'City' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:44:49.348 -05:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-08 12:44:49.377 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 12:44:49.384 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 12:44:49.386 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 12:44:49.392 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 12:44:49.399 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 12:44:49.404 -05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.City.CityResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-08 12:44:49.422 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetCities (HotelBookingPlatform.API) in 738.023ms
2025-03-08 12:44:49.428 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCities (HotelBookingPlatform.API)'
2025-03-08 12:44:49.433 -05:00 [DBG] Connection id "0HNAUCMFD82J0" completed keep alive response.
2025-03-08 12:44:49.450 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:44:49.461 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:44:49.471 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-03-08 12:44:49.478 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City?CityName=Port-au-Prince&Description=Capitale%20Haiti&pageSize=10&pageNumber=1 - 200 null application/json; charset=utf-8 1027.939ms
2025-03-08 12:45:13.584 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City/2?includeHotels=false - null null
2025-03-08 12:45:13.614 -05:00 [DBG] 1 candidate(s) found for the request path '/api/City/2'
2025-03-08 12:45:13.618 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCity (HotelBookingPlatform.API)' with route pattern 'api/City/{id}' is valid for the request path '/api/City/2'
2025-03-08 12:45:13.639 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCity (HotelBookingPlatform.API)'
2025-03-08 12:45:13.648 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 12:45:13.653 -05:00 [DBG] Successfully validated the token.
2025-03-08 12:45:13.660 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 12:45:13.667 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCity (HotelBookingPlatform.API)'
2025-03-08 12:45:13.688 -05:00 [INF] Route matched with {action = "GetCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCity(Int32, Boolean) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-08 12:45:13.701 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 12:45:13.713 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 12:45:13.717 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 12:45:13.736 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 12:45:13.750 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 12:45:13.764 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 12:45:13.772 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 12:45:13.782 -05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-08 12:45:13.789 -05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-08 12:45:13.796 -05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-08 12:45:13.803 -05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-08 12:45:13.810 -05:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-08 12:45:13.852 -05:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-08 12:45:13.902 -05:00 [DBG] Attempting to bind parameter 'includeHotels' of type 'System.Boolean' ...
2025-03-08 12:45:13.991 -05:00 [DBG] Attempting to bind parameter 'includeHotels' of type 'System.Boolean' using the name 'includeHotels' in request data ...
2025-03-08 12:45:14.036 -05:00 [DBG] Done attempting to bind parameter 'includeHotels' of type 'System.Boolean'.
2025-03-08 12:45:14.081 -05:00 [DBG] Done attempting to bind parameter 'includeHotels' of type 'System.Boolean'.
2025-03-08 12:45:14.087 -05:00 [DBG] Attempting to validate the bound parameter 'includeHotels' of type 'System.Boolean' ...
2025-03-08 12:45:14.099 -05:00 [DBG] Done attempting to validate the bound parameter 'includeHotels' of type 'System.Boolean'.
2025-03-08 12:45:14.142 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:45:14.188 -05:00 [DBG] Compiling query expression: 
'DbSet<City>()
    .AsNoTracking()
    .SingleOrDefault(c => c.CityID == __cityId_0)'
2025-03-08 12:45:14.215 -05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<City>(
    asyncEnumerable: SingleQueryingEnumerable.Create<City>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT TOP(2) c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE c.CityID == @__cityId_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT TOP(2) c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE c.CityID == @__cityId_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            City entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                City instance1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(City);
                (object)dataReader.GetInt32(0) != null ? 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]: 
                            {
                                return 
                                {
                                    City instance;
                                    instance = new City();
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Country>k__BackingField = dataReader.GetString(1);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.GetString(3);
                                    instance.<Name>k__BackingField = dataReader.GetString(4);
                                    instance.<PostOffice>k__BackingField = dataReader.GetString(5);
                                    instance.<VisitCount>k__BackingField = dataReader.GetInt32(6);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: NoTracking, 
                                        structuralType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(City)
                    }
                    ;
                    return instance1;
                } : 
                {
                    object[] keyValues1;
                    keyValues1 = new object[]{ (object)dataReader.GetInt32(0) };
                    return ShapedQueryCompilingExpressionVisitor.CreateNullKeyValueInNoTrackingQuery(
                        entityType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")], 
                        properties: [LIFTABLE Constant: List<RuntimeProperty> { Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd } | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindPrimaryKey().Properties], 
                        keyValues: keyValues1);
                };
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-08 12:45:14.251 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:45:14.260 -05:00 [DBG] Created DbConnection. (9ms).
2025-03-08 12:45:14.265 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:45:14.270 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:45:14.278 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:45:14.289 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (10ms).
2025-03-08 12:45:14.298 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (19ms).
2025-03-08 12:45:14.305 -05:00 [DBG] Executing DbCommand [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__cityId_0
LIMIT 2
2025-03-08 12:45:14.331 -05:00 [INF] Executed DbCommand (26ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__cityId_0
LIMIT 2
2025-03-08 12:45:14.345 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:45:14.351 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-03-08 12:45:14.363 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:45:14.378 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (15ms).
2025-03-08 12:45:14.387 -05:00 [DBG] Compiling query expression: 
'DbSet<City>()
    .FirstOrDefault(e => EF.Property<int>(e, "CityID") == __p_0)'
2025-03-08 12:45:14.418 -05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<City>(
    asyncEnumerable: SingleQueryingEnumerable.Create<City>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT TOP(1) c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE c.CityID == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT TOP(1) c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE c.CityID == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            City entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                City instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(City);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: City.CityID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (City)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]: 
                            {
                                return 
                                {
                                    City instance;
                                    instance = new City();
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Country>k__BackingField = dataReader.GetString(1);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.GetString(3);
                                    instance.<Name>k__BackingField = dataReader.GetString(4);
                                    instance.<PostOffice>k__BackingField = dataReader.GetString(5);
                                    instance.<VisitCount>k__BackingField = dataReader.GetInt32(6);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(City)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-08 12:45:14.479 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:45:14.490 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:45:14.500 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:45:14.506 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-03-08 12:45:14.520 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (20ms).
2025-03-08 12:45:14.532 -05:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-03-08 12:45:14.552 -05:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-03-08 12:45:14.570 -05:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:45:14.580 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:45:14.586 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 15ms reading results.
2025-03-08 12:45:14.646 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:45:14.660 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (13ms).
2025-03-08 12:45:14.685 -05:00 [DBG] An entity of type 'City' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:45:14.703 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 12:45:14.711 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 12:45:14.716 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 12:45:14.721 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:45:14.731 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:45:14.739 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:45:14.745 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-03-08 12:45:14.756 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (17ms).
2025-03-08 12:45:14.767 -05:00 [DBG] Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Cities" SET "VisitCount" = @p0
WHERE "CityID" = @p1;
2025-03-08 12:45:14.820 -05:00 [INF] Executed DbCommand (53ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Cities" SET "VisitCount" = @p0
WHERE "CityID" = @p1;
2025-03-08 12:45:14.840 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:45:14.850 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-03-08 12:45:14.865 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:45:14.879 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (14ms).
2025-03-08 12:45:14.888 -05:00 [DBG] An entity of type 'City' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:45:14.910 -05:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-08 12:45:14.940 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 12:45:14.950 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 12:45:14.953 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 12:45:14.956 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 12:45:14.963 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 12:45:14.970 -05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.City.CityWithHotelsResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-08 12:45:15.004 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetCity (HotelBookingPlatform.API) in 1239.7293ms
2025-03-08 12:45:15.015 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCity (HotelBookingPlatform.API)'
2025-03-08 12:45:15.019 -05:00 [DBG] Connection id "0HNAUCMFD82J0" completed keep alive response.
2025-03-08 12:45:15.029 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:45:15.032 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:45:15.042 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-03-08 12:45:15.050 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City/2?includeHotels=false - 200 null application/json; charset=utf-8 1466.6621ms
2025-03-08 12:46:52.772 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/City - application/json 120
2025-03-08 12:46:52.778 -05:00 [DBG] 1 candidate(s) found for the request path '/api/City'
2025-03-08 12:46:52.782 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)' with route pattern 'api/City' is valid for the request path '/api/City'
2025-03-08 12:46:52.799 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)'
2025-03-08 12:46:52.810 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 12:46:52.818 -05:00 [INF] No CORS policy found for the specified request.
2025-03-08 12:46:52.826 -05:00 [DBG] Successfully validated the token.
2025-03-08 12:46:52.835 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 12:46:52.841 -05:00 [DBG] Authorization was successful.
2025-03-08 12:46:52.843 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)'
2025-03-08 12:46:52.851 -05:00 [INF] Route matched with {action = "AddCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCity(HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-08 12:46:52.864 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 12:46:52.868 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 12:46:52.875 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 12:46:52.883 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 12:46:52.890 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 12:46:52.900 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 12:46:52.908 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 12:46:52.917 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest' ...
2025-03-08 12:46:52.925 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest' using the name '' in request data ...
2025-03-08 12:46:52.932 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-08 12:46:52.937 -05:00 [DBG] Connection id "0HNAUCMFD82J0", Request id "0HNAUCMFD82J0:00000005": started reading request body.
2025-03-08 12:46:52.943 -05:00 [DBG] Connection id "0HNAUCMFD82J0", Request id "0HNAUCMFD82J0:00000005": done reading request body.
2025-03-08 12:46:52.951 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'
2025-03-08 12:46:52.956 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'.
2025-03-08 12:46:52.961 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'.
2025-03-08 12:46:52.965 -05:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest' ...
2025-03-08 12:46:52.969 -05:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'.
2025-03-08 12:46:52.978 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:46:52.986 -05:00 [DBG] 'AppDbContext' generated a temporary value for the property 'City.CityID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:46:52.998 -05:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:46:53.004 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 12:46:53.008 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 12:46:53.016 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 12:46:53.025 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:46:53.029 -05:00 [DBG] Created DbConnection. (4ms).
2025-03-08 12:46:53.032 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:46:53.038 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:46:53.043 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:46:53.050 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-03-08 12:46:53.059 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (15ms).
2025-03-08 12:46:53.063 -05:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Cities" ("Country", "CreatedAtUtc", "Description", "Name", "PostOffice", "VisitCount")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "CityID";
2025-03-08 12:46:53.108 -05:00 [INF] Executed DbCommand (44ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Cities" ("Country", "CreatedAtUtc", "Description", "Name", "PostOffice", "VisitCount")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "CityID";
2025-03-08 12:46:53.121 -05:00 [DBG] The foreign key property 'City.CityID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-08 12:46:53.127 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:46:53.137 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 16ms reading results.
2025-03-08 12:46:53.142 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:46:53.147 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-08 12:46:53.152 -05:00 [DBG] An entity of type 'City' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:46:53.158 -05:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-08 12:46:53.169 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 12:46:53.185 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 12:46:53.187 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 12:46:53.190 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 12:46:53.192 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 12:46:53.198 -05:00 [INF] Executing CreatedResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.City.CityResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-08 12:46:53.203 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API) in 302.6169ms
2025-03-08 12:46:53.206 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)'
2025-03-08 12:46:53.209 -05:00 [DBG] Connection id "0HNAUCMFD82J0" completed keep alive response.
2025-03-08 12:46:53.213 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:46:53.216 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:46:53.218 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 12:46:53.221 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/City - 201 null application/json; charset=utf-8 448.8255ms
2025-03-08 12:48:08.273 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/City/3/hotels - application/json 122
2025-03-08 12:48:08.283 -05:00 [DBG] 1 candidate(s) found for the request path '/api/City/3/hotels'
2025-03-08 12:48:08.324 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/3/hotels'
2025-03-08 12:48:08.349 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-03-08 12:48:08.359 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 12:48:08.364 -05:00 [INF] No CORS policy found for the specified request.
2025-03-08 12:48:08.377 -05:00 [DBG] Successfully validated the token.
2025-03-08 12:48:08.378 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 12:48:08.381 -05:00 [DBG] Authorization was successful.
2025-03-08 12:48:08.386 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-03-08 12:48:08.415 -05:00 [INF] Route matched with {action = "AddHotelToCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddHotelToCity(Int32, HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-08 12:48:08.439 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 12:48:08.445 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 12:48:08.455 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 12:48:08.472 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 12:48:08.476 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 12:48:08.487 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 12:48:08.492 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 12:48:08.506 -05:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-03-08 12:48:08.509 -05:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-03-08 12:48:08.514 -05:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-08 12:48:08.524 -05:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-08 12:48:08.529 -05:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-03-08 12:48:08.538 -05:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-03-08 12:48:08.542 -05:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-03-08 12:48:08.546 -05:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' using the name '' in request data ...
2025-03-08 12:48:08.553 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-08 12:48:08.610 -05:00 [DBG] Connection id "0HNAUCMFD82J0", Request id "0HNAUCMFD82J0:00000006": started reading request body.
2025-03-08 12:48:08.659 -05:00 [DBG] Connection id "0HNAUCMFD82J0", Request id "0HNAUCMFD82J0:00000006": done reading request body.
2025-03-08 12:48:08.739 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'
2025-03-08 12:48:08.846 -05:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-03-08 12:48:08.870 -05:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-03-08 12:48:08.879 -05:00 [DBG] Attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-03-08 12:48:08.928 -05:00 [DBG] Done attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-03-08 12:48:08.949 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 12:48:08.957 -05:00 [DBG] Creating DbConnection.
2025-03-08 12:48:08.960 -05:00 [DBG] Created DbConnection. (2ms).
2025-03-08 12:48:08.964 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:48:09.009 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:48:09.017 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:48:09.020 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-08 12:48:09.023 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-03-08 12:48:09.027 -05:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-03-08 12:48:09.041 -05:00 [INF] Executed DbCommand (14ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-03-08 12:48:09.050 -05:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:48:09.054 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:48:09.061 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 11ms reading results.
2025-03-08 12:48:09.069 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:48:09.072 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-08 12:48:09.080 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:48:09.085 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:48:09.093 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:48:09.096 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-08 12:48:09.107 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (13ms).
2025-03-08 12:48:09.115 -05:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-03-08 12:48:09.142 -05:00 [INF] Executed DbCommand (27ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-03-08 12:48:09.149 -05:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:48:09.155 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:48:09.159 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-03-08 12:48:09.164 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:48:09.173 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-08 12:48:09.191 -05:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Hotel.HotelId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:48:09.260 -05:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:48:09.278 -05:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:48:09.297 -05:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:48:09.307 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 12:48:09.311 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 12:48:09.337 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 12:48:09.343 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:48:09.346 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:48:09.350 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 12:48:09.356 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-03-08 12:48:09.360 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-03-08 12:48:09.392 -05:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?' (DbType = Int32), @p5='?', @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Hotels" ("CityID", "CreatedAtUtc", "Description", "Name", "OwnerID", "PhoneNumber", "StarRating")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "HotelId";
2025-03-08 12:48:09.486 -05:00 [INF] Executed DbCommand (95ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?' (DbType = Int32), @p5='?', @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Hotels" ("CityID", "CreatedAtUtc", "Description", "Name", "OwnerID", "PhoneNumber", "StarRating")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "HotelId";
2025-03-08 12:48:09.500 -05:00 [DBG] The foreign key property 'Hotel.HotelId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-08 12:48:09.518 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:48:09.522 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 25ms reading results.
2025-03-08 12:48:09.529 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:48:09.537 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-08 12:48:09.545 -05:00 [DBG] An entity of type 'Hotel' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:48:09.553 -05:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-08 12:48:09.563 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 12:48:09.569 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 12:48:09.572 -05:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'City.Hotels'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:48:09.580 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 12:48:09.585 -05:00 [DBG] SaveChanges completed for 'AppDbContext' with 0 entities written to the database.
2025-03-08 12:48:09.591 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 12:48:09.595 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 12:48:09.601 -05:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'City.Hotels'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 12:48:09.607 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 12:48:09.610 -05:00 [DBG] SaveChanges completed for 'AppDbContext' with 0 entities written to the database.
2025-03-08 12:48:09.619 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 12:48:09.631 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 12:48:09.639 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 12:48:09.641 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 12:48:09.645 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 12:48:09.650 -05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-08 12:48:09.663 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API) in 1176.2639ms
2025-03-08 12:48:09.670 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-03-08 12:48:09.673 -05:00 [DBG] Connection id "0HNAUCMFD82J0" completed keep alive response.
2025-03-08 12:48:09.687 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 12:48:09.691 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 12:48:09.695 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-08 12:48:09.712 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/City/3/hotels - 200 null application/json; charset=utf-8 1438.8914ms
2025-03-08 12:50:21.405 -05:00 [DBG] Connection id "0HNAUCMFD82J0" disconnecting.
2025-03-08 12:50:21.415 -05:00 [DBG] Connection id "0HNAUCMFD82J0" stopped.
2025-03-08 12:50:21.425 -05:00 [DBG] Connection id "0HNAUCMFD82J0" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 13:20:23.116 -05:00 [DBG] Connection id "0HNAUCMFD82J1" accepted.
2025-03-08 13:20:23.117 -05:00 [DBG] Connection id "0HNAUCMFD82J1" started.
2025-03-08 13:20:23.119 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City/3/hotels - null null
2025-03-08 13:20:23.174 -05:00 [DBG] 1 candidate(s) found for the request path '/api/City/3/hotels'
2025-03-08 13:20:23.176 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/3/hotels'
2025-03-08 13:20:23.179 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-08 13:20:23.181 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 13:20:23.184 -05:00 [DBG] Successfully validated the token.
2025-03-08 13:20:23.185 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 13:20:23.187 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-08 13:20:23.197 -05:00 [INF] Route matched with {action = "GetHotelsForCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotelsForCity(Int32) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-08 13:20:23.204 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 13:20:23.206 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 13:20:23.209 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-08 13:20:23.212 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 13:20:23.216 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 13:20:23.222 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 13:20:23.225 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 13:20:23.227 -05:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-03-08 13:20:23.229 -05:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-03-08 13:20:23.238 -05:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-08 13:20:23.240 -05:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-08 13:20:23.242 -05:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-03-08 13:20:23.244 -05:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-03-08 13:20:23.255 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 13:20:23.261 -05:00 [DBG] Compiling query expression: 
'DbSet<Hotel>()
    .Where(h => h.CityID == __cityId_0)
    .Include(h => h.Owner)'
2025-03-08 13:20:23.274 -05:00 [DBG] Including navigation: 'Hotel.Owner'.
2025-03-08 13:20:23.291 -05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Hotel>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
            1 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: Owner.Email (string) Required, 9], [Property: Owner.FirstName (string) Required MaxLength(50), 10], [Property: Owner.LastName (string) Required MaxLength(50), 11], [Property: Owner.PhoneNumber (string) Required, 12] }
        SELECT h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
        FROM Hotels AS h
        INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
        WHERE h.CityID == @__cityId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
            1 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: Owner.Email (string) Required, 9], [Property: Owner.FirstName (string) Required MaxLength(50), 10], [Property: Owner.LastName (string) Required MaxLength(50), 11], [Property: Owner.PhoneNumber (string) Required, 12] }
        SELECT h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
        FROM Hotels AS h
        INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
        WHERE h.CityID == @__cityId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Hotel entity;
        Owner entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Hotel instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Hotel);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Hotel)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                        {
                            return 
                            {
                                Hotel instance;
                                instance = new Hotel();
                                instance.<HotelId>k__BackingField = dataReader.GetInt32(0);
                                instance.<CityID>k__BackingField = dataReader.GetInt32(1);
                                instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                instance.<Name>k__BackingField = dataReader.GetString(4);
                                instance.<OwnerID>k__BackingField = dataReader.GetInt32(5);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(6);
                                instance.<StarRating>k__BackingField = dataReader.GetInt32(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Hotel)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Owner instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Owner);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Owner.OwnerID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(8) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Owner)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                        {
                            return 
                            {
                                Owner instance;
                                instance = new Owner();
                                instance.<OwnerID>k__BackingField = dataReader.GetInt32(8);
                                instance.<Email>k__BackingField = dataReader.GetString(9);
                                instance.<FirstName>k__BackingField = dataReader.GetString(10);
                                instance.<LastName>k__BackingField = dataReader.GetString(11);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Owner)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, Owner>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Hotel.Owner (Owner) ToPrincipal Owner Inverse: Hotels | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Owner")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Owner.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: Owner | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels")], 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                namelessParameter{8}.<Owner>k__BackingField = namelessParameter{9};
                return [LIFTABLE Constant: ClrICollectionAccessor<Owner, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                    entity: namelessParameter{9}, 
                    value: namelessParameter{8}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-08 13:20:23.322 -05:00 [DBG] Creating DbConnection.
2025-03-08 13:20:23.323 -05:00 [DBG] Created DbConnection. (1ms).
2025-03-08 13:20:23.324 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:20:23.362 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:20:23.368 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 13:20:23.370 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 13:20:23.375 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-08 13:20:23.378 -05:00 [DBG] Executing DbCommand [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-03-08 13:20:23.395 -05:00 [INF] Executed DbCommand (17ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-03-08 13:20:23.404 -05:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:20:23.413 -05:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:20:23.420 -05:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:20:23.425 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:20:23.427 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 24ms reading results.
2025-03-08 13:20:23.430 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:20:23.437 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-08 13:20:23.447 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 13:20:23.459 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 13:20:23.461 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 13:20:23.463 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 13:20:23.467 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 13:20:23.471 -05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.Hotel.HotelBasicResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-08 13:20:23.480 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API) in 257.7352ms
2025-03-08 13:20:23.486 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-08 13:20:23.488 -05:00 [DBG] Connection id "0HNAUCMFD82J1" completed keep alive response.
2025-03-08 13:20:23.497 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 13:20:23.510 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:20:23.513 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 13:20:23.520 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City/3/hotels - 200 null application/json; charset=utf-8 401.0398ms
2025-03-08 13:22:34.385 -05:00 [DBG] Connection id "0HNAUCMFD82J1" disconnecting.
2025-03-08 13:22:34.387 -05:00 [DBG] Connection id "0HNAUCMFD82J1" stopped.
2025-03-08 13:22:34.389 -05:00 [DBG] Connection id "0HNAUCMFD82J1" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 13:22:34.446 -05:00 [DBG] Connection id "0HNAUCMFD82J2" accepted.
2025-03-08 13:22:34.448 -05:00 [DBG] Connection id "0HNAUCMFD82J2" started.
2025-03-08 13:22:34.450 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Hotel/3 - null null
2025-03-08 13:22:34.455 -05:00 [DBG] 1 candidate(s) found for the request path '/api/Hotel/3'
2025-03-08 13:22:34.468 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)' with route pattern 'api/Hotel/{id}' is valid for the request path '/api/Hotel/3'
2025-03-08 13:22:34.477 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-08 13:22:34.479 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 13:22:34.480 -05:00 [DBG] Successfully validated the token.
2025-03-08 13:22:34.481 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 13:22:34.483 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-08 13:22:34.495 -05:00 [INF] Route matched with {action = "GetHotel", controller = "Hotel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotel(Int32) on controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API).
2025-03-08 13:22:34.499 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 13:22:34.501 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 13:22:34.507 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-08 13:22:34.511 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 13:22:34.513 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 13:22:34.516 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-08 13:22:34.525 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-08 13:22:34.527 -05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-08 13:22:34.530 -05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-08 13:22:34.532 -05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-08 13:22:34.535 -05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-08 13:22:34.539 -05:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-08 13:22:34.543 -05:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-08 13:22:34.551 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 13:22:34.560 -05:00 [DBG] Compiling query expression: 
'DbSet<Hotel>()
    .Include(h => h.City)
    .Include(h => h.Owner)
    .Include(h => h.Reviews)
    .AsSplitQuery()
    .FirstOrDefault(h => h.HotelId == __id_0)'
2025-03-08 13:22:34.563 -05:00 [DBG] Including navigation: 'Hotel.City'.
2025-03-08 13:22:34.566 -05:00 [DBG] Including navigation: 'Hotel.Owner'.
2025-03-08 13:22:34.569 -05:00 [DBG] Including navigation: 'Hotel.Reviews'.
2025-03-08 13:22:34.651 -05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Hotel>(
    asyncEnumerable: SplitQueryingEnumerable.Create<Hotel>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
                1 -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: City.Country (string) Required, 9], [Property: City.CreatedAtUtc (DateTime) Required, 10], [Property: City.Description (string) Required, 11], [Property: City.Name (string) Required, 12], [Property: City.PostOffice (string) Required, 13], [Property: City.VisitCount (int) Required, 14] }
                2 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: Owner.Email (string) Required, 16], [Property: Owner.FirstName (string) Required MaxLength(50), 17], [Property: Owner.LastName (string) Required MaxLength(50), 18], [Property: Owner.PhoneNumber (string) Required, 19] }
                3 -> 0
                4 -> 8
                5 -> 15
            SELECT TOP(1) h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Hotels AS h
            INNER JOIN Cities AS c ON h.CityID == c.CityID
            INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
            WHERE h.HotelId == @__id_0
            ORDER BY h.HotelId ASC, c.CityID ASC, o.OwnerID ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
                1 -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: City.Country (string) Required, 9], [Property: City.CreatedAtUtc (DateTime) Required, 10], [Property: City.Description (string) Required, 11], [Property: City.Name (string) Required, 12], [Property: City.PostOffice (string) Required, 13], [Property: City.VisitCount (int) Required, 14] }
                2 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: Owner.Email (string) Required, 16], [Property: Owner.FirstName (string) Required MaxLength(50), 17], [Property: Owner.LastName (string) Required MaxLength(50), 18], [Property: Owner.PhoneNumber (string) Required, 19] }
                3 -> 0
                4 -> 8
                5 -> 15
            SELECT TOP(1) h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Hotels AS h
            INNER JOIN Cities AS c ON h.CityID == c.CityID
            INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
            WHERE h.HotelId == @__id_0
            ORDER BY h.HotelId ASC, c.CityID ASC, o.OwnerID ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object> } | Resolver: namelessParameter{0} => new ReaderColumn[]
        { 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("HotelId"), 
                (dataReader, indexMap) => dataReader.GetInt32(0)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CityID"), 
                (dataReader, indexMap) => dataReader.GetInt32(1)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CreatedAtUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(2)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Description"), 
                (dataReader, indexMap) => (object)dataReader.GetString(3)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Name"), 
                (dataReader, indexMap) => (object)dataReader.GetString(4)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("OwnerID"), 
                (dataReader, indexMap) => dataReader.GetInt32(5)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(6)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("StarRating"), 
                (dataReader, indexMap) => dataReader.GetInt32(7)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("CityID"), 
                (dataReader, indexMap) => dataReader.GetInt32(8)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Country"), 
                (dataReader, indexMap) => (object)dataReader.GetString(9)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("CreatedAtUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(10)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Description"), 
                (dataReader, indexMap) => (object)dataReader.GetString(11)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Name"), 
                (dataReader, indexMap) => (object)dataReader.GetString(12)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("PostOffice"), 
                (dataReader, indexMap) => (object)dataReader.GetString(13)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("VisitCount"), 
                (dataReader, indexMap) => dataReader.GetInt32(14)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("OwnerID"), 
                (dataReader, indexMap) => dataReader.GetInt32(15)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("Email"), 
                (dataReader, indexMap) => (object)dataReader.GetString(16)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("FirstName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(17)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("LastName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(18)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(19)
            ) 
        }], 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => resultContext.Values == null ? 
        {
            Hotel entity;
            City entity;
            Owner entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Hotel instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Hotel);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Hotel)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                            {
                                return 
                                {
                                    Hotel instance;
                                    instance = new Hotel();
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(0);
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(3) ? default(string) : (string)dataReader.GetFieldValue<object>(3);
                                    instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(4);
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(5);
                                    instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                    instance.<StarRating>k__BackingField = dataReader.GetInt32(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Hotel)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                City instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(City);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: City.CityID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(8) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (City)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]: 
                            {
                                return 
                                {
                                    City instance;
                                    instance = new City();
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Country>k__BackingField = (string)dataReader.GetFieldValue<object>(9);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(10);
                                    instance.<Description>k__BackingField = (string)dataReader.GetFieldValue<object>(11);
                                    instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(12);
                                    instance.<PostOffice>k__BackingField = (string)dataReader.GetFieldValue<object>(13);
                                    instance.<VisitCount>k__BackingField = dataReader.GetInt32(14);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(City)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                Owner instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(Owner);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Owner.OwnerID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(15) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (Owner)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                            {
                                return 
                                {
                                    Owner instance;
                                    instance = new Owner();
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(15);
                                    instance.<Email>k__BackingField = (string)dataReader.GetFieldValue<object>(16);
                                    instance.<FirstName>k__BackingField = (string)dataReader.GetFieldValue<object>(17);
                                    instance.<LastName>k__BackingField = (string)dataReader.GetFieldValue<object>(18);
                                    instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(19);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Owner)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, City>(
                queryContext: queryContext, 
                entity: (Hotel)(resultContext.Values[0]), 
                relatedEntity: (City)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Hotel.City (City) ToPrincipal City Inverse: Hotels | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("City")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: City.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: City | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindNavigation("Hotels")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<City>k__BackingField = namelessParameter{13};
                    return [LIFTABLE Constant: ClrICollectionAccessor<City, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                        entity: namelessParameter{13}, 
                        value: namelessParameter{12}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, Owner>(
                queryContext: queryContext, 
                entity: (Hotel)(resultContext.Values[0]), 
                relatedEntity: (Owner)(resultContext.Values[2]), 
                navigation: [LIFTABLE Constant: Navigation: Hotel.Owner (Owner) ToPrincipal Owner Inverse: Hotels | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Owner")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Owner.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: Owner | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels")], 
                fixup: (namelessParameter{17}, namelessParameter{18}) => 
                {
                    namelessParameter{17}.<Owner>k__BackingField = namelessParameter{18};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Owner, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                        entity: namelessParameter{18}, 
                        value: namelessParameter{17}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeSplitIncludeCollection<Hotel, Hotel>(
                collectionId: 0, 
                queryContext: queryContext, 
                parentDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Hotel)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(0), 
                    (object)(int?)dataReader.GetInt32(8), 
                    (object)(int?)dataReader.GetInt32(15) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Hotel.Reviews (ICollection<Review>) Collection ToDependent Review Inverse: Hotel | Resolver: namelessParameter{20} => namelessParameter{20}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<Review>, Review> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
            return } : (Hotel)(resultContext.Values[0]), 
        relatedDataLoaders: null, 
        relatedDataLoadersAsync: (queryContext, executionStrategy, resultCoordinator) => ShaperProcessingExpressionVisitor.TaskAwaiter(new Func<Task>[]{ () => ShaperProcessingExpressionVisitor.PopulateSplitIncludeCollectionAsync<Hotel, Review>(
            collectionId: 0, 
            queryContext: (RelationalQueryContext)queryContext, 
            executionStrategy: executionStrategy, 
            relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
                Client Projections:
                    0 -> Dictionary<IProperty, int> { [Property: Review.ReviewID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Review.Content (string) Required, 1], [Property: Review.CreatedAtUtc (DateTime) Required, 2], [Property: Review.HotelId (int) Required FK Index, 3], [Property: Review.ModifiedAtUtc (DateTime?), 4], [Property: Review.Rating (int) Required, 5], [Property: Review.UserId (string) Required FK Index, 6] }
                    1 -> 7
                    2 -> 8
                    3 -> 9
                SELECT r.ReviewID, r.Content, r.CreatedAtUtc, r.HotelId, r.ModifiedAtUtc, r.Rating, r.UserId, s.HotelId, s.CityID, s.OwnerID
                FROM 
                (
                    SELECT TOP(1) h.HotelId, c.CityID, o.OwnerID
                    FROM Hotels AS h
                    INNER JOIN Cities AS c ON h.CityID == c.CityID
                    INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
                    WHERE h.HotelId == @__id_0
                ) AS s
                INNER JOIN Reviews AS r ON s.HotelId == r.HotelId
                ORDER BY s.HotelId ASC, s.CityID ASC, s.OwnerID ASC) | Resolver: c => new RelationalCommandCache(
                c.Dependencies.MemoryCache, 
                c.RelationalDependencies.QuerySqlGeneratorFactory, 
                c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
                Client Projections:
                    0 -> Dictionary<IProperty, int> { [Property: Review.ReviewID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Review.Content (string) Required, 1], [Property: Review.CreatedAtUtc (DateTime) Required, 2], [Property: Review.HotelId (int) Required FK Index, 3], [Property: Review.ModifiedAtUtc (DateTime?), 4], [Property: Review.Rating (int) Required, 5], [Property: Review.UserId (string) Required FK Index, 6] }
                    1 -> 7
                    2 -> 8
                    3 -> 9
                SELECT r.ReviewID, r.Content, r.CreatedAtUtc, r.HotelId, r.ModifiedAtUtc, r.Rating, r.UserId, s.HotelId, s.CityID, s.OwnerID
                FROM 
                (
                    SELECT TOP(1) h.HotelId, c.CityID, o.OwnerID
                    FROM Hotels AS h
                    INNER JOIN Cities AS c ON h.CityID == c.CityID
                    INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
                    WHERE h.HotelId == @__id_0
                ) AS s
                INNER JOIN Reviews AS r ON s.HotelId == r.HotelId
                ORDER BY s.HotelId ASC, s.CityID ASC, s.OwnerID ASC, 
                False, 
                new HashSet<string>(
                    new string[]{ }, 
                    StringComparer.Ordinal
                )
            )].GetRelationalCommandTemplate(parameters), 
            readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<DateTime>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int> } | Resolver: namelessParameter{22} => new ReaderColumn[]
            { 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("ReviewID"), 
                    (dataReader, indexMap) => dataReader.GetInt32(0)
                ), 
                new ReaderColumn<object>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("Content"), 
                    (dataReader, indexMap) => (object)dataReader.GetString(1)
                ), 
                new ReaderColumn<DateTime>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("CreatedAtUtc"), 
                    (dataReader, indexMap) => dataReader.GetDateTime(2)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("HotelId"), 
                    (dataReader, indexMap) => dataReader.GetInt32(3)
                ), 
                new ReaderColumn<DateTime>(
                    True, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("ModifiedAtUtc"), 
                    (dataReader, indexMap) => dataReader.GetDateTime(4)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("Rating"), 
                    (dataReader, indexMap) => dataReader.GetInt32(5)
                ), 
                new ReaderColumn<object>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("UserId"), 
                    (dataReader, indexMap) => (object)dataReader.GetString(6)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(7)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(8)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(9)
                ) 
            }], 
            detailedErrorsEnabled: False, 
            resultCoordinator: resultCoordinator, 
            childIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(int?)dataReader.GetInt32(7), 
                (object)(int?)dataReader.GetInt32(8), 
                (object)(int?)dataReader.GetInt32(9) 
            }], 
            identifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
            }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Review entity;
                entity = 
                {
                    MaterializationContext materializationContext4;
                    IEntityType entityType4;
                    Review instance4;
                    InternalEntityEntry entry4;
                    bool hasNullKey4;
                    materializationContext4 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance4 = default(Review);
                    entry4 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Review.ReviewID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey4);
                    !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                    {
                        entityType4 = entry4.EntityType;
                        return instance4 = (Review)entry4.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot4;
                        shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType4 = [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")];
                        instance4 = switch (entityType4)
                        {
                            case [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{24} => namelessParameter{24}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")]: 
                                {
                                    return 
                                    {
                                        Review instance;
                                        instance = new Review();
                                        instance.<ReviewID>k__BackingField = dataReader.GetInt32(0);
                                        instance.<Content>k__BackingField = (string)dataReader.GetFieldValue<object>(1);
                                        instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<HotelId>k__BackingField = dataReader.GetInt32(3);
                                        instance.<ModifiedAtUtc>k__BackingField = dataReader.IsDBNull(4) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(4);
                                        instance.<Rating>k__BackingField = dataReader.GetInt32(5);
                                        instance.<UserId>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext4.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{25} => namelessParameter{25}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Review)
                        }
                        ;
                        entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType4, 
                            entity: instance4, 
                            snapshot: shadowSnapshot4);
                        return instance4;
                    } : default(void);
                    return instance4;
                };
                return entity;
            }, 
            relatedDataLoaders: null, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Review.Hotel (Hotel) ToPrincipal Hotel Inverse: Reviews | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindNavigation("Hotel")], 
            fixup: (namelessParameter{27}, namelessParameter{28}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<Review>, Review> | Resolver: namelessParameter{29} => namelessParameter{29}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews").GetCollectionAccessor()].Add(
                    entity: namelessParameter{27}, 
                    value: namelessParameter{28}, 
                    forMaterialization: True);
                return namelessParameter{28}.<Hotel>k__BackingField = namelessParameter{27};
            }, 
            trackingQuery: True) }), 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-08 13:22:34.779 -05:00 [DBG] Creating DbConnection.
2025-03-08 13:22:34.783 -05:00 [DBG] Created DbConnection. (3ms).
2025-03-08 13:22:34.785 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:22:34.799 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:22:34.802 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 13:22:34.810 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (8ms).
2025-03-08 13:22:34.815 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (13ms).
2025-03-08 13:22:34.825 -05:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-08 13:22:34.862 -05:00 [INF] Executed DbCommand (37ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-08 13:22:34.916 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:22:34.919 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-03-08 13:22:34.928 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:22:34.930 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 13:22:34.935 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API) in 418.9414ms
2025-03-08 13:22:34.943 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-08 13:22:34.979 -05:00 [DBG] Connection id "0HNAUCMFD82J2" completed keep alive response.
2025-03-08 13:22:34.983 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 13:22:34.985 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:22:34.992 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-08 13:22:34.996 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Hotel/3 - 404 null application/json 546.394ms
2025-03-08 13:22:43.647 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Hotel/2 - null null
2025-03-08 13:22:43.651 -05:00 [DBG] 1 candidate(s) found for the request path '/api/Hotel/2'
2025-03-08 13:22:43.653 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)' with route pattern 'api/Hotel/{id}' is valid for the request path '/api/Hotel/2'
2025-03-08 13:22:43.710 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-08 13:22:43.712 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 13:22:43.713 -05:00 [DBG] Successfully validated the token.
2025-03-08 13:22:43.714 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 13:22:43.716 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-08 13:22:43.719 -05:00 [INF] Route matched with {action = "GetHotel", controller = "Hotel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotel(Int32) on controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API).
2025-03-08 13:22:43.728 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 13:22:43.730 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 13:22:43.732 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-08 13:22:43.736 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 13:22:43.743 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 13:22:43.745 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-08 13:22:43.749 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-08 13:22:43.753 -05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-08 13:22:43.759 -05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-08 13:22:43.762 -05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-08 13:22:43.764 -05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-08 13:22:43.766 -05:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-08 13:22:43.769 -05:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-08 13:22:43.776 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 13:22:43.780 -05:00 [DBG] Creating DbConnection.
2025-03-08 13:22:43.781 -05:00 [DBG] Created DbConnection. (1ms).
2025-03-08 13:22:43.783 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:22:43.785 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:22:43.787 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 13:22:43.792 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-03-08 13:22:43.795 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-08 13:22:43.797 -05:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-08 13:22:43.803 -05:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-08 13:22:43.810 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:22:43.816 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-03-08 13:22:43.818 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:22:43.821 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 13:22:43.826 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API) in 80.7099ms
2025-03-08 13:22:43.828 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-08 13:22:43.834 -05:00 [DBG] Connection id "0HNAUCMFD82J2" completed keep alive response.
2025-03-08 13:22:43.843 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 13:22:43.846 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:22:43.848 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 13:22:43.851 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Hotel/2 - 404 null application/json 204.8827ms
2025-03-08 13:22:53.798 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Hotel/1 - null null
2025-03-08 13:22:53.803 -05:00 [DBG] 1 candidate(s) found for the request path '/api/Hotel/1'
2025-03-08 13:22:53.805 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)' with route pattern 'api/Hotel/{id}' is valid for the request path '/api/Hotel/1'
2025-03-08 13:22:53.814 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-08 13:22:53.817 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 13:22:53.819 -05:00 [DBG] Successfully validated the token.
2025-03-08 13:22:53.830 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 13:22:53.833 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-08 13:22:53.835 -05:00 [INF] Route matched with {action = "GetHotel", controller = "Hotel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotel(Int32) on controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API).
2025-03-08 13:22:53.840 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 13:22:53.844 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 13:22:53.858 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-08 13:22:53.862 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 13:22:53.864 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 13:22:53.867 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-08 13:22:53.884 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-08 13:22:53.887 -05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-08 13:22:53.890 -05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-08 13:22:53.893 -05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-08 13:22:53.895 -05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-08 13:22:53.896 -05:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-08 13:22:53.899 -05:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-08 13:22:53.903 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 13:22:53.908 -05:00 [DBG] Creating DbConnection.
2025-03-08 13:22:53.909 -05:00 [DBG] Created DbConnection. (1ms).
2025-03-08 13:22:53.912 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:22:53.914 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:22:53.916 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 13:22:53.917 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 13:22:53.919 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-08 13:22:53.923 -05:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-08 13:22:53.930 -05:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-08 13:22:53.942 -05:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:22:53.947 -05:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:22:53.949 -05:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:22:53.951 -05:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:22:53.953 -05:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:22:53.976 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 13:22:53.977 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 13:22:53.979 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-08 13:22:53.981 -05:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-08 13:22:53.992 -05:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-08 13:22:54.001 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:22:54.003 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 61ms reading results.
2025-03-08 13:22:54.007 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:22:54.011 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 14ms reading results.
2025-03-08 13:22:54.013 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:22:54.015 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-08 13:22:54.029 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 13:22:54.034 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 13:22:54.035 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 13:22:54.036 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 13:22:54.039 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 13:22:54.042 -05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Hotel.HotelResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-08 13:22:54.052 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API) in 184.9373ms
2025-03-08 13:22:54.054 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-08 13:22:54.057 -05:00 [DBG] Connection id "0HNAUCMFD82J2" completed keep alive response.
2025-03-08 13:22:54.059 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 13:22:54.062 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:22:54.065 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-08 13:22:54.074 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Hotel/1 - 200 null application/json; charset=utf-8 275.3281ms
2025-03-08 13:23:30.981 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Hotel/1/reviews - null null
2025-03-08 13:23:30.999 -05:00 [DBG] 1 candidate(s) found for the request path '/api/Hotel/1/reviews'
2025-03-08 13:23:31.043 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotelReviews (HotelBookingPlatform.API)' with route pattern 'api/Hotel/{hotelId}/reviews' is valid for the request path '/api/Hotel/1/reviews'
2025-03-08 13:23:31.059 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotelReviews (HotelBookingPlatform.API)'
2025-03-08 13:23:31.067 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 13:23:31.069 -05:00 [DBG] Successfully validated the token.
2025-03-08 13:23:31.071 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 13:23:31.072 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotelReviews (HotelBookingPlatform.API)'
2025-03-08 13:23:31.085 -05:00 [INF] Route matched with {action = "GetHotelReviews", controller = "Hotel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotelReviews(Int32) on controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API).
2025-03-08 13:23:31.094 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 13:23:31.096 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 13:23:31.099 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-08 13:23:31.102 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 13:23:31.104 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 13:23:31.109 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-08 13:23:31.115 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-08 13:23:31.118 -05:00 [DBG] Attempting to bind parameter 'hotelId' of type 'System.Int32' ...
2025-03-08 13:23:31.121 -05:00 [DBG] Attempting to bind parameter 'hotelId' of type 'System.Int32' using the name 'hotelId' in request data ...
2025-03-08 13:23:31.126 -05:00 [DBG] Done attempting to bind parameter 'hotelId' of type 'System.Int32'.
2025-03-08 13:23:31.129 -05:00 [DBG] Done attempting to bind parameter 'hotelId' of type 'System.Int32'.
2025-03-08 13:23:31.131 -05:00 [DBG] Attempting to validate the bound parameter 'hotelId' of type 'System.Int32' ...
2025-03-08 13:23:31.133 -05:00 [DBG] Done attempting to validate the bound parameter 'hotelId' of type 'System.Int32'.
2025-03-08 13:23:31.145 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 13:23:31.150 -05:00 [DBG] Compiling query expression: 
'DbSet<Review>()
    .Include(r => r.User)
    .Include(r => r.Hotel)
    .AsSplitQuery()
    .Where(r => r.HotelId == __hotelId_0)'
2025-03-08 13:23:31.159 -05:00 [DBG] Including navigation: 'Review.User'.
2025-03-08 13:23:31.161 -05:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-08 13:23:31.164 -05:00 [DBG] Including navigation: 'Review.Hotel'.
2025-03-08 13:23:31.248 -05:00 [DBG] Generated query execution expression: 
'queryContext => SplitQueryingEnumerable.Create<Review>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Review.ReviewID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Review.Content (string) Required, 1], [Property: Review.CreatedAtUtc (DateTime) Required, 2], [Property: Review.HotelId (int) Required FK Index, 3], [Property: Review.ModifiedAtUtc (DateTime?), 4], [Property: Review.Rating (int) Required, 5], [Property: Review.UserId (string) Required FK Index, 6] }
            1 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 7], [Property: LocalUser.AccessFailedCount (int) Required, 8], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 9], [Property: LocalUser.Email (string) MaxLength(256), 10], [Property: LocalUser.EmailConfirmed (bool) Required, 11], [Property: LocalUser.FirstName (string) Required, 12], [Property: LocalUser.LastName (string) Required, 13], [Property: LocalUser.LockoutEnabled (bool) Required, 14], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 15], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 16], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 17], [Property: LocalUser.PasswordHash (string), 18], [Property: LocalUser.PhoneNumber (string), 19], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 20], [Property: LocalUser.SecurityStamp (string), 21], [Property: LocalUser.TwoFactorEnabled (bool) Required, 22], [Property: LocalUser.UserName (string) MaxLength(256), 23] }
            2 -> 0
            3 -> 7
            4 -> 24
            5 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 24], [Property: Hotel.CityID (int) Required FK Index, 25], [Property: Hotel.CreatedAtUtc (DateTime) Required, 26], [Property: Hotel.Description (string) MaxLength(500), 27], [Property: Hotel.Name (string) Required MaxLength(100), 28], [Property: Hotel.OwnerID (int) Required FK Index, 29], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 30], [Property: Hotel.StarRating (int) Required, 31] }
        SELECT r.ReviewID, r.Content, r.CreatedAtUtc, r.HotelId, r.ModifiedAtUtc, r.Rating, r.UserId, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating
        FROM Reviews AS r
        INNER JOIN AspNetUsers AS a ON r.UserId == a.Id
        INNER JOIN Hotels AS h ON r.HotelId == h.HotelId
        WHERE r.HotelId == @__hotelId_0
        ORDER BY r.ReviewID ASC, a.Id ASC, h.HotelId ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Review.ReviewID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Review.Content (string) Required, 1], [Property: Review.CreatedAtUtc (DateTime) Required, 2], [Property: Review.HotelId (int) Required FK Index, 3], [Property: Review.ModifiedAtUtc (DateTime?), 4], [Property: Review.Rating (int) Required, 5], [Property: Review.UserId (string) Required FK Index, 6] }
            1 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 7], [Property: LocalUser.AccessFailedCount (int) Required, 8], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 9], [Property: LocalUser.Email (string) MaxLength(256), 10], [Property: LocalUser.EmailConfirmed (bool) Required, 11], [Property: LocalUser.FirstName (string) Required, 12], [Property: LocalUser.LastName (string) Required, 13], [Property: LocalUser.LockoutEnabled (bool) Required, 14], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 15], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 16], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 17], [Property: LocalUser.PasswordHash (string), 18], [Property: LocalUser.PhoneNumber (string), 19], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 20], [Property: LocalUser.SecurityStamp (string), 21], [Property: LocalUser.TwoFactorEnabled (bool) Required, 22], [Property: LocalUser.UserName (string) MaxLength(256), 23] }
            2 -> 0
            3 -> 7
            4 -> 24
            5 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 24], [Property: Hotel.CityID (int) Required FK Index, 25], [Property: Hotel.CreatedAtUtc (DateTime) Required, 26], [Property: Hotel.Description (string) MaxLength(500), 27], [Property: Hotel.Name (string) Required MaxLength(100), 28], [Property: Hotel.OwnerID (int) Required FK Index, 29], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 30], [Property: Hotel.StarRating (int) Required, 31] }
        SELECT r.ReviewID, r.Content, r.CreatedAtUtc, r.HotelId, r.ModifiedAtUtc, r.Rating, r.UserId, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName, h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating
        FROM Reviews AS r
        INNER JOIN AspNetUsers AS a ON r.UserId == a.Id
        INNER JOIN Hotels AS h ON r.HotelId == h.HotelId
        WHERE r.HotelId == @__hotelId_0
        ORDER BY r.ReviewID ASC, a.Id ASC, h.HotelId ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<DateTime>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<DateTimeOffset>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int> } | Resolver: namelessParameter{0} => new ReaderColumn[]
    { 
        new ReaderColumn<int>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("ReviewID"), 
            (dataReader, indexMap) => dataReader.GetInt32(0)
        ), 
        new ReaderColumn<object>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("Content"), 
            (dataReader, indexMap) => (object)dataReader.GetString(1)
        ), 
        new ReaderColumn<DateTime>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("CreatedAtUtc"), 
            (dataReader, indexMap) => dataReader.GetDateTime(2)
        ), 
        new ReaderColumn<int>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("HotelId"), 
            (dataReader, indexMap) => dataReader.GetInt32(3)
        ), 
        new ReaderColumn<DateTime>(
            True, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("ModifiedAtUtc"), 
            (dataReader, indexMap) => dataReader.GetDateTime(4)
        ), 
        new ReaderColumn<int>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("Rating"), 
            (dataReader, indexMap) => dataReader.GetInt32(5)
        ), 
        new ReaderColumn<object>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("UserId"), 
            (dataReader, indexMap) => (object)dataReader.GetString(6)
        ), 
        new ReaderColumn<object>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("Id"), 
            (dataReader, indexMap) => (object)dataReader.GetString(7)
        ), 
        new ReaderColumn<int>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("AccessFailedCount"), 
            (dataReader, indexMap) => dataReader.GetInt32(8)
        ), 
        new ReaderColumn<object>(
            True, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("ConcurrencyStamp"), 
            (dataReader, indexMap) => (object)dataReader.GetString(9)
        ), 
        new ReaderColumn<object>(
            True, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("Email"), 
            (dataReader, indexMap) => (object)dataReader.GetString(10)
        ), 
        new ReaderColumn<bool>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("EmailConfirmed"), 
            (dataReader, indexMap) => dataReader.GetBoolean(11)
        ), 
        new ReaderColumn<object>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("FirstName"), 
            (dataReader, indexMap) => (object)dataReader.GetString(12)
        ), 
        new ReaderColumn<object>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("LastName"), 
            (dataReader, indexMap) => (object)dataReader.GetString(13)
        ), 
        new ReaderColumn<bool>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("LockoutEnabled"), 
            (dataReader, indexMap) => dataReader.GetBoolean(14)
        ), 
        new ReaderColumn<DateTimeOffset>(
            True, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("LockoutEnd"), 
            (dataReader, indexMap) => dataReader.GetFieldValue<DateTimeOffset>(15)
        ), 
        new ReaderColumn<object>(
            True, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("NormalizedEmail"), 
            (dataReader, indexMap) => (object)dataReader.GetString(16)
        ), 
        new ReaderColumn<object>(
            True, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("NormalizedUserName"), 
            (dataReader, indexMap) => (object)dataReader.GetString(17)
        ), 
        new ReaderColumn<object>(
            True, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("PasswordHash"), 
            (dataReader, indexMap) => (object)dataReader.GetString(18)
        ), 
        new ReaderColumn<object>(
            True, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("PhoneNumber"), 
            (dataReader, indexMap) => (object)dataReader.GetString(19)
        ), 
        new ReaderColumn<bool>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("PhoneNumberConfirmed"), 
            (dataReader, indexMap) => dataReader.GetBoolean(20)
        ), 
        new ReaderColumn<object>(
            True, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("SecurityStamp"), 
            (dataReader, indexMap) => (object)dataReader.GetString(21)
        ), 
        new ReaderColumn<bool>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("TwoFactorEnabled"), 
            (dataReader, indexMap) => dataReader.GetBoolean(22)
        ), 
        new ReaderColumn<object>(
            True, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("UserName"), 
            (dataReader, indexMap) => (object)dataReader.GetString(23)
        ), 
        new ReaderColumn<int>(
            False, 
            null, 
            default(IPropertyBase), 
            (dataReader, indexMap) => dataReader.GetInt32(24)
        ), 
        new ReaderColumn<int>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CityID"), 
            (dataReader, indexMap) => dataReader.GetInt32(25)
        ), 
        new ReaderColumn<DateTime>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CreatedAtUtc"), 
            (dataReader, indexMap) => dataReader.GetDateTime(26)
        ), 
        new ReaderColumn<object>(
            True, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Description"), 
            (dataReader, indexMap) => (object)dataReader.GetString(27)
        ), 
        new ReaderColumn<object>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Name"), 
            (dataReader, indexMap) => (object)dataReader.GetString(28)
        ), 
        new ReaderColumn<int>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("OwnerID"), 
            (dataReader, indexMap) => dataReader.GetInt32(29)
        ), 
        new ReaderColumn<object>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("PhoneNumber"), 
            (dataReader, indexMap) => (object)dataReader.GetString(30)
        ), 
        new ReaderColumn<int>(
            False, 
            null, 
            namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("StarRating"), 
            (dataReader, indexMap) => dataReader.GetInt32(31)
        ) 
    }], 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => resultContext.Values == null ? 
    {
        Review entity;
        LocalUser entity;
        Hotel entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Review instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Review);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Review.ReviewID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Review)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")]: 
                        {
                            return 
                            {
                                Review instance;
                                instance = new Review();
                                instance.<ReviewID>k__BackingField = dataReader.GetInt32(0);
                                instance.<Content>k__BackingField = (string)dataReader.GetFieldValue<object>(1);
                                instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                instance.<HotelId>k__BackingField = dataReader.GetInt32(3);
                                instance.<ModifiedAtUtc>k__BackingField = dataReader.IsDBNull(4) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(4);
                                instance.<Rating>k__BackingField = dataReader.GetInt32(5);
                                instance.<UserId>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Review)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            LocalUser instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(LocalUser);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                keyValues: new object[]{ (object)(string)dataReader.GetFieldValue<object>(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (LocalUser)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                        {
                            return 
                            {
                                LocalUser instance;
                                instance = new LocalUser();
                                instance.<Id>k__BackingField = (string)dataReader.GetFieldValue<object>(7);
                                instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(8);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(9) ? default(string) : (string)dataReader.GetFieldValue<object>(9);
                                instance.<Email>k__BackingField = dataReader.IsDBNull(10) ? default(string) : (string)dataReader.GetFieldValue<object>(10);
                                instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(11);
                                instance.<FirstName>k__BackingField = (string)dataReader.GetFieldValue<object>(12);
                                instance.<LastName>k__BackingField = (string)dataReader.GetFieldValue<object>(13);
                                instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(14);
                                instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(15) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(15);
                                instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(16) ? default(string) : (string)dataReader.GetFieldValue<object>(16);
                                instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(17) ? default(string) : (string)dataReader.GetFieldValue<object>(17);
                                instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(18) ? default(string) : (string)dataReader.GetFieldValue<object>(18);
                                instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(19) ? default(string) : (string)dataReader.GetFieldValue<object>(19);
                                instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(20);
                                instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(21) ? default(string) : (string)dataReader.GetFieldValue<object>(21);
                                instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(22);
                                instance.<UserName>k__BackingField = dataReader.IsDBNull(23) ? default(string) : (string)dataReader.GetFieldValue<object>(23);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(LocalUser)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext4;
            IEntityType entityType4;
            Hotel instance4;
            InternalEntityEntry entry4;
            bool hasNullKey4;
            materializationContext4 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance4 = default(Hotel);
            entry4 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(24) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey4);
            !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
            {
                entityType4 = entry4.EntityType;
                return instance4 = (Hotel)entry4.Entity;
            } : 
            {
                ISnapshot shadowSnapshot4;
                shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType4 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                instance4 = switch (entityType4)
                {
                    case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                        {
                            return 
                            {
                                Hotel instance;
                                instance = new Hotel();
                                instance.<HotelId>k__BackingField = dataReader.GetInt32(24);
                                instance.<CityID>k__BackingField = dataReader.GetInt32(25);
                                instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(26);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(27) ? default(string) : (string)dataReader.GetFieldValue<object>(27);
                                instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(28);
                                instance.<OwnerID>k__BackingField = dataReader.GetInt32(29);
                                instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(30);
                                instance.<StarRating>k__BackingField = dataReader.GetInt32(31);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext4.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Hotel)
                }
                ;
                entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType4, 
                    entity: instance4, 
                    snapshot: shadowSnapshot4);
                return instance4;
            } : default(void);
            return instance4;
        };
        resultContext.Values = new object[]
        { 
            entity, 
            entity, 
            entity 
        };
        ShaperProcessingExpressionVisitor.InitializeSplitIncludeCollection<LocalUser, LocalUser>(
            collectionId: 0, 
            queryContext: queryContext, 
            parentDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            entity: (LocalUser)(resultContext.Values[1]), 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(int?)dataReader.GetInt32(0), 
                (string)dataReader.GetFieldValue<object>(7), 
                (object)(int?)dataReader.GetInt32(24) 
            }], 
            navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
            clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
            trackingQuery: True, 
            setLoaded: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Review, Review, LocalUser>(
            queryContext: queryContext, 
            entity: (Review)(resultContext.Values[0]), 
            relatedEntity: (LocalUser)(resultContext.Values[1]), 
            navigation: [LIFTABLE Constant: Navigation: Review.User (LocalUser) ToPrincipal LocalUser Inverse: Reviews | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindNavigation("User")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: LocalUser.Reviews (ICollection<Review>) Collection ToDependent Review Inverse: User | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("Reviews")], 
            fixup: (namelessParameter{14}, namelessParameter{15}) => 
            {
                namelessParameter{14}.<User>k__BackingField = namelessParameter{15};
                return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, ICollection<Review>, Review> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("Reviews").GetCollectionAccessor()].Add(
                    entity: namelessParameter{15}, 
                    value: namelessParameter{14}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Review, Review, Hotel>(
            queryContext: queryContext, 
            entity: (Review)(resultContext.Values[0]), 
            relatedEntity: (Hotel)(resultContext.Values[2]), 
            navigation: [LIFTABLE Constant: Navigation: Review.Hotel (Hotel) ToPrincipal Hotel Inverse: Reviews | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindNavigation("Hotel")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Hotel.Reviews (ICollection<Review>) Collection ToDependent Review Inverse: Hotel | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews")], 
            fixup: (namelessParameter{19}, namelessParameter{20}) => 
            {
                namelessParameter{19}.<Hotel>k__BackingField = namelessParameter{20};
                return [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<Review>, Review> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews").GetCollectionAccessor()].Add(
                    entity: namelessParameter{20}, 
                    value: namelessParameter{19}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return } : (Review)(resultContext.Values[0]), 
    relatedDataLoaders: null, 
    relatedDataLoadersAsync: (queryContext, executionStrategy, resultCoordinator) => ShaperProcessingExpressionVisitor.TaskAwaiter(new Func<Task>[]{ () => ShaperProcessingExpressionVisitor.PopulateSplitIncludeCollectionAsync<LocalUser, RefreshToken>(
        collectionId: 0, 
        queryContext: (RelationalQueryContext)queryContext, 
        executionStrategy: executionStrategy, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 0], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 1], [Property: RefreshToken.CreatedOn (DateTime) Required, 2], [Property: RefreshToken.ExpiresOn (DateTime) Required, 3], [Property: RefreshToken.RevokedOn (DateTime?), 4], [Property: RefreshToken.Token (string) Required, 5] }
                1 -> 6
                2 -> 7
                3 -> 8
            SELECT r1.LocalUserId, r1.Id, r1.CreatedOn, r1.ExpiresOn, r1.RevokedOn, r1.Token, r.ReviewID, a.Id, h.HotelId
            FROM Reviews AS r
            INNER JOIN AspNetUsers AS a ON r.UserId == a.Id
            INNER JOIN Hotels AS h ON r.HotelId == h.HotelId
            INNER JOIN RefreshToken AS r1 ON a.Id == r1.LocalUserId
            WHERE r.HotelId == @__hotelId_0
            ORDER BY r.ReviewID ASC, a.Id ASC, h.HotelId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 0], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 1], [Property: RefreshToken.CreatedOn (DateTime) Required, 2], [Property: RefreshToken.ExpiresOn (DateTime) Required, 3], [Property: RefreshToken.RevokedOn (DateTime?), 4], [Property: RefreshToken.Token (string) Required, 5] }
                1 -> 6
                2 -> 7
                3 -> 8
            SELECT r1.LocalUserId, r1.Id, r1.CreatedOn, r1.ExpiresOn, r1.RevokedOn, r1.Token, r.ReviewID, a.Id, h.HotelId
            FROM Reviews AS r
            INNER JOIN AspNetUsers AS a ON r.UserId == a.Id
            INNER JOIN Hotels AS h ON r.HotelId == h.HotelId
            INNER JOIN RefreshToken AS r1 ON a.Id == r1.LocalUserId
            WHERE r.HotelId == @__hotelId_0
            ORDER BY r.ReviewID ASC, a.Id ASC, h.HotelId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int> } | Resolver: namelessParameter{22} => new ReaderColumn[]
        { 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("LocalUserId"), 
                (dataReader, indexMap) => (object)dataReader.GetString(0)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("Id"), 
                (dataReader, indexMap) => dataReader.GetInt32(1)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("CreatedOn"), 
                (dataReader, indexMap) => dataReader.GetDateTime(2)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("ExpiresOn"), 
                (dataReader, indexMap) => dataReader.GetDateTime(3)
            ), 
            new ReaderColumn<DateTime>(
                True, 
                null, 
                namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("RevokedOn"), 
                (dataReader, indexMap) => dataReader.GetDateTime(4)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("Token"), 
                (dataReader, indexMap) => (object)dataReader.GetString(5)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                default(IPropertyBase), 
                (dataReader, indexMap) => dataReader.GetInt32(6)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                default(IPropertyBase), 
                (dataReader, indexMap) => (object)dataReader.GetString(7)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                default(IPropertyBase), 
                (dataReader, indexMap) => dataReader.GetInt32(8)
            ) 
        }], 
        detailedErrorsEnabled: False, 
        resultCoordinator: resultCoordinator, 
        childIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
        { 
            (object)(int?)dataReader.GetInt32(6), 
            (string)dataReader.GetFieldValue<object>(7), 
            (object)(int?)dataReader.GetInt32(8) 
        }], 
        identifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
        { 
            (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
            (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
            (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
        }], 
        innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            RefreshToken entity;
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                RefreshToken instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(RefreshToken);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)(string)dataReader.GetFieldValue<object>(0), 
                        (object)dataReader.GetInt32(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (RefreshToken)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{24} => namelessParameter{24}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                            {
                                shadowSnapshot3 = (ISnapshot)new Snapshot<string, int>(
                                    (string)dataReader.GetFieldValue<object>(0), 
                                    dataReader.GetInt32(1)
                                );
                                return 
                                {
                                    RefreshToken instance;
                                    instance = new RefreshToken();
                                    instance.<CreatedOn>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<ExpiresOn>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(4) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(4);
                                    instance.<Token>k__BackingField = (string)dataReader.GetFieldValue<object>(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{25} => namelessParameter{25}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(RefreshToken)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            return entity;
        }, 
        relatedDataLoaders: null, 
        inverseNavigation: default(INavigationBase), 
        fixup: (namelessParameter{26}, namelessParameter{27}) => 
        {
            return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{28} => namelessParameter{28}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                entity: namelessParameter{26}, 
                value: namelessParameter{27}, 
                forMaterialization: True);
        }, 
        trackingQuery: True) }), 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-08 13:23:31.365 -05:00 [DBG] Creating DbConnection.
2025-03-08 13:23:31.367 -05:00 [DBG] Created DbConnection. (2ms).
2025-03-08 13:23:31.369 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:23:31.371 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:23:31.374 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 13:23:31.379 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-08 13:23:31.381 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-08 13:23:31.385 -05:00 [DBG] Executing DbCommand [Parameters=[@__hotelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating"
FROM "Reviews" AS r
INNER JOIN "AspNetUsers" AS a ON r."UserId" = a."Id"
INNER JOIN "Hotels" AS h ON r."HotelId" = h."HotelId"
WHERE r."HotelId" = @__hotelId_0
ORDER BY r."ReviewID", a."Id", h."HotelId"
2025-03-08 13:23:31.395 -05:00 [INF] Executed DbCommand (10ms) [Parameters=[@__hotelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating"
FROM "Reviews" AS r
INNER JOIN "AspNetUsers" AS a ON r."UserId" = a."Id"
INNER JOIN "Hotels" AS h ON r."HotelId" = h."HotelId"
WHERE r."HotelId" = @__hotelId_0
ORDER BY r."ReviewID", a."Id", h."HotelId"
2025-03-08 13:23:31.405 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:23:31.413 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-03-08 13:23:31.418 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:23:31.420 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-08 13:23:31.429 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.HotelController.GetHotelReviews (HotelBookingPlatform.API) in 319.8993ms
2025-03-08 13:23:31.435 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotelReviews (HotelBookingPlatform.API)'
2025-03-08 13:23:31.438 -05:00 [DBG] Connection id "0HNAUCMFD82J2" completed keep alive response.
2025-03-08 13:23:31.445 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 13:23:31.449 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:23:31.454 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-08 13:23:31.465 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Hotel/1/reviews - 404 null application/json 483.793ms
2025-03-08 13:25:42.532 -05:00 [DBG] Connection id "0HNAUCMFD82J2" disconnecting.
2025-03-08 13:25:42.536 -05:00 [DBG] Connection id "0HNAUCMFD82J2" stopped.
2025-03-08 13:25:42.537 -05:00 [DBG] Connection id "0HNAUCMFD82J2" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 13:37:31.737 -05:00 [DBG] Connection id "0HNAUCMFD82J3" accepted.
2025-03-08 13:37:31.739 -05:00 [DBG] Connection id "0HNAUCMFD82J3" started.
2025-03-08 13:37:31.741 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/RoomClass - application/json 120
2025-03-08 13:37:31.799 -05:00 [DBG] 1 candidate(s) found for the request path '/api/RoomClass'
2025-03-08 13:37:31.802 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.CreateRoomClass (HotelBookingPlatform.API)' with route pattern 'api/RoomClass' is valid for the request path '/api/RoomClass'
2025-03-08 13:37:31.805 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.CreateRoomClass (HotelBookingPlatform.API)'
2025-03-08 13:37:31.806 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 13:37:31.807 -05:00 [INF] No CORS policy found for the specified request.
2025-03-08 13:37:31.809 -05:00 [DBG] Successfully validated the token.
2025-03-08 13:37:31.814 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 13:37:31.816 -05:00 [DBG] Authorization was successful.
2025-03-08 13:37:31.817 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.CreateRoomClass (HotelBookingPlatform.API)'
2025-03-08 13:37:31.822 -05:00 [INF] Route matched with {action = "CreateRoomClass", controller = "RoomClass"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateRoomClass(HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto) on controller HotelBookingPlatform.API.Controllers.RoomClassController (HotelBookingPlatform.API).
2025-03-08 13:37:31.833 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 13:37:31.835 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 13:37:31.837 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 13:37:31.841 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 13:37:31.852 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 13:37:31.855 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.RoomClassController (HotelBookingPlatform.API)
2025-03-08 13:37:31.857 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.RoomClassController (HotelBookingPlatform.API)
2025-03-08 13:37:31.860 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto' ...
2025-03-08 13:37:31.864 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto' using the name '' in request data ...
2025-03-08 13:37:31.868 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-08 13:37:31.876 -05:00 [DBG] Connection id "0HNAUCMFD82J3", Request id "0HNAUCMFD82J3:00000001": started reading request body.
2025-03-08 13:37:31.881 -05:00 [DBG] Connection id "0HNAUCMFD82J3", Request id "0HNAUCMFD82J3:00000001": done reading request body.
2025-03-08 13:37:31.889 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'
2025-03-08 13:37:31.898 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'.
2025-03-08 13:37:31.901 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'.
2025-03-08 13:37:31.907 -05:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto' ...
2025-03-08 13:37:31.915 -05:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'.
2025-03-08 13:37:31.921 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 13:37:31.924 -05:00 [DBG] Creating DbConnection.
2025-03-08 13:37:31.925 -05:00 [DBG] Created DbConnection. (1ms).
2025-03-08 13:37:31.932 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:37:31.958 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:37:31.966 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 13:37:31.968 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-08 13:37:31.970 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-08 13:37:31.973 -05:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-08 13:37:31.987 -05:00 [INF] Executed DbCommand (15ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-08 13:37:31.992 -05:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:37:32.000 -05:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:37:32.003 -05:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:37:32.006 -05:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:37:32.008 -05:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:37:32.022 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 13:37:32.024 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 13:37:32.026 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-08 13:37:32.033 -05:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-08 13:37:32.039 -05:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-08 13:37:32.043 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:37:32.048 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 56ms reading results.
2025-03-08 13:37:32.051 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:37:32.055 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 11ms reading results.
2025-03-08 13:37:32.057 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:37:32.059 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-08 13:37:32.071 -05:00 [DBG] 'AppDbContext' generated a temporary value for the property 'RoomClass.RoomClassID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:37:32.106 -05:00 [DBG] The navigation 'RoomClass.Hotel' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:37:32.116 -05:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:37:32.118 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 13:37:32.119 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 13:37:32.126 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 13:37:32.133 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:37:32.135 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:37:32.137 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 13:37:32.138 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 13:37:32.142 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-08 13:37:32.147 -05:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RoomClasses" ("CreatedAtUtc", "Description", "HotelId", "Name", "RoomType")
VALUES (@p0, @p1, @p2, @p3, @p4)
RETURNING "RoomClassID";
2025-03-08 13:37:32.174 -05:00 [INF] Executed DbCommand (27ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RoomClasses" ("CreatedAtUtc", "Description", "HotelId", "Name", "RoomType")
VALUES (@p0, @p1, @p2, @p3, @p4)
RETURNING "RoomClassID";
2025-03-08 13:37:32.187 -05:00 [DBG] The foreign key property 'RoomClass.RoomClassID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-08 13:37:32.192 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:37:32.198 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 12ms reading results.
2025-03-08 13:37:32.201 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:37:32.203 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-08 13:37:32.207 -05:00 [DBG] An entity of type 'RoomClass' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:37:32.214 -05:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-08 13:37:32.220 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 13:37:32.224 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 13:37:32.225 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 13:37:32.226 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 13:37:32.230 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 13:37:32.232 -05:00 [INF] Executing CreatedResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-08 13:37:32.237 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.RoomClassController.CreateRoomClass (HotelBookingPlatform.API) in 382.4104ms
2025-03-08 13:37:32.240 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.CreateRoomClass (HotelBookingPlatform.API)'
2025-03-08 13:37:32.241 -05:00 [DBG] Connection id "0HNAUCMFD82J3" completed keep alive response.
2025-03-08 13:37:32.243 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 13:37:32.247 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:37:32.249 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 13:37:32.252 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/RoomClass - 201 null application/json; charset=utf-8 510.5902ms
2025-03-08 13:39:43.655 -05:00 [DBG] Connection id "0HNAUCMFD82J3" disconnecting.
2025-03-08 13:39:43.658 -05:00 [DBG] Connection id "0HNAUCMFD82J3" stopped.
2025-03-08 13:39:43.659 -05:00 [DBG] Connection id "0HNAUCMFD82J3" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 13:46:49.014 -05:00 [DBG] Connection id "0HNAUCMFD82J4" accepted.
2025-03-08 13:46:49.017 -05:00 [DBG] Connection id "0HNAUCMFD82J4" started.
2025-03-08 13:46:49.019 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/RoomClass/1/rooms - application/json 93
2025-03-08 13:46:49.049 -05:00 [DBG] 1 candidate(s) found for the request path '/api/RoomClass/1/rooms'
2025-03-08 13:46:49.055 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.AddRoomToRoomClass (HotelBookingPlatform.API)' with route pattern 'api/RoomClass/{roomClassId}/rooms' is valid for the request path '/api/RoomClass/1/rooms'
2025-03-08 13:46:49.059 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.AddRoomToRoomClass (HotelBookingPlatform.API)'
2025-03-08 13:46:49.060 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 13:46:49.062 -05:00 [INF] No CORS policy found for the specified request.
2025-03-08 13:46:49.063 -05:00 [DBG] Successfully validated the token.
2025-03-08 13:46:49.065 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 13:46:49.066 -05:00 [DBG] Authorization was successful.
2025-03-08 13:46:49.076 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.AddRoomToRoomClass (HotelBookingPlatform.API)'
2025-03-08 13:46:49.083 -05:00 [INF] Route matched with {action = "AddRoomToRoomClass", controller = "RoomClass"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddRoomToRoomClass(Int32, HotelBookingPlatform.Domain.DTOs.Room.RoomCreateRequest) on controller HotelBookingPlatform.API.Controllers.RoomClassController (HotelBookingPlatform.API).
2025-03-08 13:46:49.090 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 13:46:49.093 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 13:46:49.095 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 13:46:49.098 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 13:46:49.100 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 13:46:49.106 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.RoomClassController (HotelBookingPlatform.API)
2025-03-08 13:46:49.109 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.RoomClassController (HotelBookingPlatform.API)
2025-03-08 13:46:49.111 -05:00 [DBG] Attempting to bind parameter 'roomClassId' of type 'System.Int32' ...
2025-03-08 13:46:49.113 -05:00 [DBG] Attempting to bind parameter 'roomClassId' of type 'System.Int32' using the name 'roomClassId' in request data ...
2025-03-08 13:46:49.116 -05:00 [DBG] Done attempting to bind parameter 'roomClassId' of type 'System.Int32'.
2025-03-08 13:46:49.123 -05:00 [DBG] Done attempting to bind parameter 'roomClassId' of type 'System.Int32'.
2025-03-08 13:46:49.125 -05:00 [DBG] Attempting to validate the bound parameter 'roomClassId' of type 'System.Int32' ...
2025-03-08 13:46:49.127 -05:00 [DBG] Done attempting to validate the bound parameter 'roomClassId' of type 'System.Int32'.
2025-03-08 13:46:49.129 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Room.RoomCreateRequest' ...
2025-03-08 13:46:49.131 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Room.RoomCreateRequest' using the name '' in request data ...
2025-03-08 13:46:49.133 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-08 13:46:49.146 -05:00 [DBG] Connection id "0HNAUCMFD82J4", Request id "0HNAUCMFD82J4:00000001": started reading request body.
2025-03-08 13:46:49.148 -05:00 [DBG] Connection id "0HNAUCMFD82J4", Request id "0HNAUCMFD82J4:00000001": done reading request body.
2025-03-08 13:46:49.156 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Room.RoomCreateRequest'
2025-03-08 13:46:49.158 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Room.RoomCreateRequest'.
2025-03-08 13:46:49.160 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Room.RoomCreateRequest'.
2025-03-08 13:46:49.162 -05:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Room.RoomCreateRequest' ...
2025-03-08 13:46:49.166 -05:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Room.RoomCreateRequest'.
2025-03-08 13:46:49.176 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 13:46:49.181 -05:00 [DBG] Compiling query expression: 
'DbSet<RoomClass>()
    .Include(rc => rc.Hotel)
    .FirstOrDefault(rc => rc.RoomClassID == __id_0)'
2025-03-08 13:46:49.184 -05:00 [DBG] Including navigation: 'RoomClass.Hotel'.
2025-03-08 13:46:49.205 -05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<RoomClass>(
    asyncEnumerable: SingleQueryingEnumerable.Create<RoomClass>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 1], [Property: RoomClass.Description (string) MaxLength(500), 2], [Property: RoomClass.HotelId (int) Required FK Index, 3], [Property: RoomClass.Name (string) Required, 4], [Property: RoomClass.RoomType (RoomType) Required, 5] }
                1 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Hotel.CityID (int) Required FK Index, 7], [Property: Hotel.CreatedAtUtc (DateTime) Required, 8], [Property: Hotel.Description (string) MaxLength(500), 9], [Property: Hotel.Name (string) Required MaxLength(100), 10], [Property: Hotel.OwnerID (int) Required FK Index, 11], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 12], [Property: Hotel.StarRating (int) Required, 13] }
            SELECT TOP(1) r.RoomClassID, r.CreatedAtUtc, r.Description, r.HotelId, r.Name, r.RoomType, h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating
            FROM RoomClasses AS r
            INNER JOIN Hotels AS h ON r.HotelId == h.HotelId
            WHERE r.RoomClassID == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 1], [Property: RoomClass.Description (string) MaxLength(500), 2], [Property: RoomClass.HotelId (int) Required FK Index, 3], [Property: RoomClass.Name (string) Required, 4], [Property: RoomClass.RoomType (RoomType) Required, 5] }
                1 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Hotel.CityID (int) Required FK Index, 7], [Property: Hotel.CreatedAtUtc (DateTime) Required, 8], [Property: Hotel.Description (string) MaxLength(500), 9], [Property: Hotel.Name (string) Required MaxLength(100), 10], [Property: Hotel.OwnerID (int) Required FK Index, 11], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 12], [Property: Hotel.StarRating (int) Required, 13] }
            SELECT TOP(1) r.RoomClassID, r.CreatedAtUtc, r.Description, r.HotelId, r.Name, r.RoomType, h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating
            FROM RoomClasses AS r
            INNER JOIN Hotels AS h ON r.HotelId == h.HotelId
            WHERE r.RoomClassID == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            RoomClass entity;
            Hotel entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                RoomClass instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(RoomClass);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: RoomClass.RoomClassID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (RoomClass)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]: 
                            {
                                return 
                                {
                                    RoomClass instance;
                                    instance = new RoomClass();
                                    instance.<RoomClassID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(3);
                                    instance.<Name>k__BackingField = dataReader.GetString(4);
                                    instance.<RoomType>k__BackingField = Invoke(((EnumToNumberConverter<RoomType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: RoomClass.RoomType (RoomType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("RoomType")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(RoomClass)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Hotel instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Hotel);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(6) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Hotel)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                            {
                                return 
                                {
                                    Hotel instance;
                                    instance = new Hotel();
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(6);
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(7);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(8);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<Name>k__BackingField = dataReader.GetString(10);
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.GetString(12);
                                    instance.<StarRating>k__BackingField = dataReader.GetInt32(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Hotel)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<RoomClass, RoomClass, Hotel>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: RoomClass.Hotel (Hotel) ToPrincipal Hotel Inverse: RoomClasses | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Hotel")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Hotel.RoomClasses (ICollection<RoomClass>) Collection ToDependent RoomClass Inverse: Hotel | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("RoomClasses")], 
                fixup: (namelessParameter{9}, namelessParameter{10}) => 
                {
                    namelessParameter{9}.<Hotel>k__BackingField = namelessParameter{10};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<RoomClass>, RoomClass> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("RoomClasses").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-08 13:46:49.231 -05:00 [DBG] Creating DbConnection.
2025-03-08 13:46:49.232 -05:00 [DBG] Created DbConnection. (1ms).
2025-03-08 13:46:49.233 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:46:49.260 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:46:49.262 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 13:46:49.263 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 13:46:49.266 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-08 13:46:49.268 -05:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomClassID", r."CreatedAtUtc", r."Description", r."HotelId", r."Name", r."RoomType", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating"
FROM "RoomClasses" AS r
INNER JOIN "Hotels" AS h ON r."HotelId" = h."HotelId"
WHERE r."RoomClassID" = @__id_0
LIMIT 1
2025-03-08 13:46:49.279 -05:00 [INF] Executed DbCommand (12ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomClassID", r."CreatedAtUtc", r."Description", r."HotelId", r."Name", r."RoomType", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating"
FROM "RoomClasses" AS r
INNER JOIN "Hotels" AS h ON r."HotelId" = h."HotelId"
WHERE r."RoomClassID" = @__id_0
LIMIT 1
2025-03-08 13:46:49.287 -05:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:46:49.291 -05:00 [DBG] The navigation 'RoomClass.Hotel' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:46:49.293 -05:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:46:49.296 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:46:49.298 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 14ms reading results.
2025-03-08 13:46:49.301 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:46:49.307 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-08 13:46:49.312 -05:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'RoomClass.Rooms'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:46:49.322 -05:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Room.RoomID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:46:49.350 -05:00 [DBG] The navigation 'Room.RoomClass' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:46:49.360 -05:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:46:49.362 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 13:46:49.364 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 13:46:49.376 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 13:46:49.380 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:46:49.381 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:46:49.383 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 13:46:49.388 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-08 13:46:49.390 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-03-08 13:46:49.391 -05:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime), @p3='?', @p4='?' (DbType = Decimal), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Rooms" ("AdultsCapacity", "ChildrenCapacity", "CreatedAtUtc", "Number", "PricePerNight", "RoomClassID")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "RoomID";
2025-03-08 13:46:49.418 -05:00 [INF] Executed DbCommand (26ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime), @p3='?', @p4='?' (DbType = Decimal), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Rooms" ("AdultsCapacity", "ChildrenCapacity", "CreatedAtUtc", "Number", "PricePerNight", "RoomClassID")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "RoomID";
2025-03-08 13:46:49.425 -05:00 [DBG] The foreign key property 'Room.RoomID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-08 13:46:49.429 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:46:49.430 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-03-08 13:46:49.434 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:46:49.438 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-08 13:46:49.442 -05:00 [DBG] An entity of type 'Room' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:46:49.445 -05:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-08 13:46:49.450 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 13:46:49.458 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 13:46:49.459 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 13:46:49.460 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 13:46:49.462 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 13:46:49.464 -05:00 [INF] Executing CreatedResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Room.RoomResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-08 13:46:49.475 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.RoomClassController.AddRoomToRoomClass (HotelBookingPlatform.API) in 369.4065ms
2025-03-08 13:46:49.478 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.AddRoomToRoomClass (HotelBookingPlatform.API)'
2025-03-08 13:46:49.479 -05:00 [DBG] Connection id "0HNAUCMFD82J4" completed keep alive response.
2025-03-08 13:46:49.481 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 13:46:49.482 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:46:49.486 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-08 13:46:49.490 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/RoomClass/1/rooms - 201 null application/json; charset=utf-8 470.5961ms
2025-03-08 13:49:00.354 -05:00 [DBG] Connection id "0HNAUCMFD82J4" disconnecting.
2025-03-08 13:49:00.472 -05:00 [DBG] Connection id "0HNAUCMFD82J4" stopped.
2025-03-08 13:49:00.478 -05:00 [DBG] Connection id "0HNAUCMFD82J4" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 13:49:44.950 -05:00 [DBG] Connection id "0HNAUCMFD82J5" accepted.
2025-03-08 13:49:44.953 -05:00 [DBG] Connection id "0HNAUCMFD82J5" started.
2025-03-08 13:49:44.957 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Hotel/1/roomclasses - application/json 131
2025-03-08 13:49:44.967 -05:00 [DBG] 1 candidate(s) found for the request path '/api/Hotel/1/roomclasses'
2025-03-08 13:49:44.973 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.HotelController.AddRoomClassToHotel (HotelBookingPlatform.API)' with route pattern 'api/Hotel/{hotelId}/roomclasses' is valid for the request path '/api/Hotel/1/roomclasses'
2025-03-08 13:49:44.986 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.HotelController.AddRoomClassToHotel (HotelBookingPlatform.API)'
2025-03-08 13:49:44.987 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 13:49:44.989 -05:00 [INF] No CORS policy found for the specified request.
2025-03-08 13:49:44.990 -05:00 [DBG] Successfully validated the token.
2025-03-08 13:49:44.991 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 13:49:44.992 -05:00 [DBG] Authorization was successful.
2025-03-08 13:49:45.000 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.HotelController.AddRoomClassToHotel (HotelBookingPlatform.API)'
2025-03-08 13:49:45.008 -05:00 [INF] Route matched with {action = "AddRoomClassToHotel", controller = "Hotel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddRoomClassToHotel(Int32, HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto) on controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API).
2025-03-08 13:49:45.016 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 13:49:45.018 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 13:49:45.020 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 13:49:45.023 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 13:49:45.025 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 13:49:45.034 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-08 13:49:45.036 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-08 13:49:45.038 -05:00 [DBG] Attempting to bind parameter 'hotelId' of type 'System.Int32' ...
2025-03-08 13:49:45.040 -05:00 [DBG] Attempting to bind parameter 'hotelId' of type 'System.Int32' using the name 'hotelId' in request data ...
2025-03-08 13:49:45.043 -05:00 [DBG] Done attempting to bind parameter 'hotelId' of type 'System.Int32'.
2025-03-08 13:49:45.047 -05:00 [DBG] Done attempting to bind parameter 'hotelId' of type 'System.Int32'.
2025-03-08 13:49:45.050 -05:00 [DBG] Attempting to validate the bound parameter 'hotelId' of type 'System.Int32' ...
2025-03-08 13:49:45.051 -05:00 [DBG] Done attempting to validate the bound parameter 'hotelId' of type 'System.Int32'.
2025-03-08 13:49:45.053 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto' ...
2025-03-08 13:49:45.055 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto' using the name '' in request data ...
2025-03-08 13:49:45.057 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-08 13:49:45.062 -05:00 [DBG] Connection id "0HNAUCMFD82J5", Request id "0HNAUCMFD82J5:00000001": started reading request body.
2025-03-08 13:49:45.065 -05:00 [DBG] Connection id "0HNAUCMFD82J5", Request id "0HNAUCMFD82J5:00000001": done reading request body.
2025-03-08 13:49:45.075 -05:00 [DBG] JSON input formatter threw an exception: 'S' is an invalid start of a value. Path: $.roomType | LineNumber: 1 | BytePositionInLine: 14.
2025-03-08 13:49:45.081 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'.
2025-03-08 13:49:45.083 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'.
2025-03-08 13:49:45.085 -05:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto' ...
2025-03-08 13:49:45.088 -05:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'.
2025-03-08 13:49:45.091 -05:00 [DBG] The request has model state errors, returning an error response.
2025-03-08 13:49:45.100 -05:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-03-08 13:49:45.102 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 13:49:45.106 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 13:49:45.108 -05:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-03-08 13:49:45.115 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-03-08 13:49:45.116 -05:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-03-08 13:49:45.218 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.HotelController.AddRoomClassToHotel (HotelBookingPlatform.API) in 183.8685ms
2025-03-08 13:49:45.249 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.HotelController.AddRoomClassToHotel (HotelBookingPlatform.API)'
2025-03-08 13:49:45.251 -05:00 [DBG] Connection id "0HNAUCMFD82J5" completed keep alive response.
2025-03-08 13:49:45.252 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Hotel/1/roomclasses - 400 null application/problem+json; charset=utf-8 294.7672ms
2025-03-08 13:49:59.974 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Hotel/1/roomclasses - application/json 124
2025-03-08 13:50:00.019 -05:00 [DBG] 1 candidate(s) found for the request path '/api/Hotel/1/roomclasses'
2025-03-08 13:50:00.021 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.HotelController.AddRoomClassToHotel (HotelBookingPlatform.API)' with route pattern 'api/Hotel/{hotelId}/roomclasses' is valid for the request path '/api/Hotel/1/roomclasses'
2025-03-08 13:50:00.023 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.HotelController.AddRoomClassToHotel (HotelBookingPlatform.API)'
2025-03-08 13:50:00.025 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 13:50:00.026 -05:00 [INF] No CORS policy found for the specified request.
2025-03-08 13:50:00.032 -05:00 [DBG] Successfully validated the token.
2025-03-08 13:50:00.034 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 13:50:00.037 -05:00 [DBG] Authorization was successful.
2025-03-08 13:50:00.042 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.HotelController.AddRoomClassToHotel (HotelBookingPlatform.API)'
2025-03-08 13:50:00.047 -05:00 [INF] Route matched with {action = "AddRoomClassToHotel", controller = "Hotel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddRoomClassToHotel(Int32, HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto) on controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API).
2025-03-08 13:50:00.051 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 13:50:00.052 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 13:50:00.055 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 13:50:00.058 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 13:50:00.062 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 13:50:00.069 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-08 13:50:00.071 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-08 13:50:00.073 -05:00 [DBG] Attempting to bind parameter 'hotelId' of type 'System.Int32' ...
2025-03-08 13:50:00.075 -05:00 [DBG] Attempting to bind parameter 'hotelId' of type 'System.Int32' using the name 'hotelId' in request data ...
2025-03-08 13:50:00.081 -05:00 [DBG] Done attempting to bind parameter 'hotelId' of type 'System.Int32'.
2025-03-08 13:50:00.083 -05:00 [DBG] Done attempting to bind parameter 'hotelId' of type 'System.Int32'.
2025-03-08 13:50:00.085 -05:00 [DBG] Attempting to validate the bound parameter 'hotelId' of type 'System.Int32' ...
2025-03-08 13:50:00.086 -05:00 [DBG] Done attempting to validate the bound parameter 'hotelId' of type 'System.Int32'.
2025-03-08 13:50:00.088 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto' ...
2025-03-08 13:50:00.090 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto' using the name '' in request data ...
2025-03-08 13:50:00.093 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-08 13:50:00.097 -05:00 [DBG] Connection id "0HNAUCMFD82J5", Request id "0HNAUCMFD82J5:00000002": started reading request body.
2025-03-08 13:50:00.100 -05:00 [DBG] Connection id "0HNAUCMFD82J5", Request id "0HNAUCMFD82J5:00000002": done reading request body.
2025-03-08 13:50:00.102 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'
2025-03-08 13:50:00.104 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'.
2025-03-08 13:50:00.106 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'.
2025-03-08 13:50:00.107 -05:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto' ...
2025-03-08 13:50:00.109 -05:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'.
2025-03-08 13:50:00.116 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 13:50:00.120 -05:00 [DBG] Creating DbConnection.
2025-03-08 13:50:00.121 -05:00 [DBG] Created DbConnection. (1ms).
2025-03-08 13:50:00.122 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:00.124 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:00.129 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 13:50:00.133 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-08 13:50:00.135 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-08 13:50:00.136 -05:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-08 13:50:00.146 -05:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-08 13:50:00.151 -05:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:50:00.153 -05:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:50:00.155 -05:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:50:00.163 -05:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:50:00.166 -05:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:50:00.168 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 13:50:00.170 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 13:50:00.172 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-08 13:50:00.174 -05:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-08 13:50:00.183 -05:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-08 13:50:00.188 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:00.189 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 38ms reading results.
2025-03-08 13:50:00.191 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:00.196 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-03-08 13:50:00.199 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:00.201 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 13:50:00.204 -05:00 [DBG] 'AppDbContext' generated a temporary value for the property 'RoomClass.RoomClassID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:50:00.207 -05:00 [DBG] The navigation 'RoomClass.Hotel' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:50:00.215 -05:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:50:00.217 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 13:50:00.219 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 13:50:00.221 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 13:50:00.223 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:00.226 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:00.232 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 13:50:00.234 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 13:50:00.236 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-08 13:50:00.239 -05:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RoomClasses" ("CreatedAtUtc", "Description", "HotelId", "Name", "RoomType")
VALUES (@p0, @p1, @p2, @p3, @p4)
RETURNING "RoomClassID";
2025-03-08 13:50:00.253 -05:00 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RoomClasses" ("CreatedAtUtc", "Description", "HotelId", "Name", "RoomType")
VALUES (@p0, @p1, @p2, @p3, @p4)
RETURNING "RoomClassID";
2025-03-08 13:50:00.257 -05:00 [DBG] The foreign key property 'RoomClass.RoomClassID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-08 13:50:00.259 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:00.264 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-03-08 13:50:00.267 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:00.269 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-08 13:50:00.271 -05:00 [DBG] An entity of type 'RoomClass' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:50:00.276 -05:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-08 13:50:00.284 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 13:50:00.290 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 13:50:00.292 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 13:50:00.298 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 13:50:00.300 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 13:50:00.302 -05:00 [INF] Executing CreatedResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-08 13:50:00.304 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.HotelController.AddRoomClassToHotel (HotelBookingPlatform.API) in 235.4775ms
2025-03-08 13:50:00.307 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.HotelController.AddRoomClassToHotel (HotelBookingPlatform.API)'
2025-03-08 13:50:00.316 -05:00 [DBG] Connection id "0HNAUCMFD82J5" completed keep alive response.
2025-03-08 13:50:00.318 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 13:50:00.320 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:00.322 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 13:50:00.325 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Hotel/1/roomclasses - 201 null application/json; charset=utf-8 351.4569ms
2025-03-08 13:50:40.068 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Room/by-price?minPrice=200 - null null
2025-03-08 13:50:40.073 -05:00 [DBG] 2 candidate(s) found for the request path '/api/Room/by-price'
2025-03-08 13:50:40.075 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)' with route pattern 'api/Room/by-price' is valid for the request path '/api/Room/by-price'
2025-03-08 13:50:40.078 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)' with route pattern 'api/Room/{id}' is valid for the request path '/api/Room/by-price'
2025-03-08 13:50:40.084 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-08 13:50:40.101 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 13:50:40.102 -05:00 [DBG] Successfully validated the token.
2025-03-08 13:50:40.104 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 13:50:40.106 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-08 13:50:40.119 -05:00 [INF] Route matched with {action = "GetRoomsByPriceRange", controller = "Room"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRoomsByPriceRange(System.Decimal, System.Decimal) on controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API).
2025-03-08 13:50:40.123 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 13:50:40.125 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 13:50:40.128 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 13:50:40.136 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 13:50:40.139 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 13:50:40.141 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-08 13:50:40.145 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-08 13:50:40.148 -05:00 [DBG] Attempting to bind parameter 'minPrice' of type 'System.Decimal' ...
2025-03-08 13:50:40.153 -05:00 [DBG] Attempting to bind parameter 'minPrice' of type 'System.Decimal' using the name 'minPrice' in request data ...
2025-03-08 13:50:40.159 -05:00 [DBG] Done attempting to bind parameter 'minPrice' of type 'System.Decimal'.
2025-03-08 13:50:40.161 -05:00 [DBG] Done attempting to bind parameter 'minPrice' of type 'System.Decimal'.
2025-03-08 13:50:40.167 -05:00 [DBG] Attempting to validate the bound parameter 'minPrice' of type 'System.Decimal' ...
2025-03-08 13:50:40.169 -05:00 [DBG] Done attempting to validate the bound parameter 'minPrice' of type 'System.Decimal'.
2025-03-08 13:50:40.171 -05:00 [DBG] Attempting to bind parameter 'maxPrice' of type 'System.Decimal' ...
2025-03-08 13:50:40.174 -05:00 [DBG] Attempting to bind parameter 'maxPrice' of type 'System.Decimal' using the name '' in request data ...
2025-03-08 13:50:40.177 -05:00 [DBG] Could not find a value in the request with name '' for binding parameter 'maxPrice' of type 'System.Decimal'.
2025-03-08 13:50:40.183 -05:00 [DBG] Done attempting to bind parameter 'maxPrice' of type 'System.Decimal'.
2025-03-08 13:50:40.186 -05:00 [DBG] Done attempting to bind parameter 'maxPrice' of type 'System.Decimal'.
2025-03-08 13:50:40.188 -05:00 [DBG] Attempting to validate the bound parameter 'maxPrice' of type 'System.Decimal' ...
2025-03-08 13:50:40.190 -05:00 [DBG] Done attempting to validate the bound parameter 'maxPrice' of type 'System.Decimal'.
2025-03-08 13:50:40.195 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 13:50:40.203 -05:00 [DBG] Compiling query expression: 
'DbSet<Room>()
    .Include(rc => rc.RoomClass)
    .Where(r => r.PricePerNight >= __minPrice_0 && r.PricePerNight <= __maxPrice_1)'
2025-03-08 13:50:40.206 -05:00 [DBG] Including navigation: 'Room.RoomClass'.
2025-03-08 13:50:40.221 -05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Room>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
            1 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 8], [Property: RoomClass.Description (string) MaxLength(500), 9], [Property: RoomClass.HotelId (int) Required FK Index, 10], [Property: RoomClass.Name (string) Required, 11], [Property: RoomClass.RoomType (RoomType) Required, 12] }
        SELECT r.RoomID, r.AdultsCapacity, r.ChildrenCapacity, r.CreatedAtUtc, r.Number, r.PricePerNight, r.RoomClassID, r0.RoomClassID, r0.CreatedAtUtc, r0.Description, r0.HotelId, r0.Name, r0.RoomType
        FROM Rooms AS r
        INNER JOIN RoomClasses AS r0 ON r.RoomClassID == r0.RoomClassID
        WHERE (r.PricePerNight >= @__minPrice_0) && (r.PricePerNight <= @__maxPrice_1)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
            1 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 8], [Property: RoomClass.Description (string) MaxLength(500), 9], [Property: RoomClass.HotelId (int) Required FK Index, 10], [Property: RoomClass.Name (string) Required, 11], [Property: RoomClass.RoomType (RoomType) Required, 12] }
        SELECT r.RoomID, r.AdultsCapacity, r.ChildrenCapacity, r.CreatedAtUtc, r.Number, r.PricePerNight, r.RoomClassID, r0.RoomClassID, r0.CreatedAtUtc, r0.Description, r0.HotelId, r0.Name, r0.RoomType
        FROM Rooms AS r
        INNER JOIN RoomClasses AS r0 ON r.RoomClassID == r0.RoomClassID
        WHERE (r.PricePerNight >= @__minPrice_0) && (r.PricePerNight <= @__maxPrice_1), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Room entity;
        RoomClass entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Room instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Room);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Room.RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Room)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]: 
                        {
                            return 
                            {
                                Room instance;
                                instance = new Room();
                                instance.<RoomID>k__BackingField = dataReader.GetInt32(0);
                                instance.<AdultsCapacity>k__BackingField = dataReader.GetInt32(1);
                                instance.<ChildrenCapacity>k__BackingField = dataReader.GetInt32(2);
                                instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(3);
                                instance.<Number>k__BackingField = dataReader.GetString(4);
                                instance.<PricePerNight>k__BackingField = dataReader.GetDecimal(5);
                                instance.<RoomClassID>k__BackingField = dataReader.GetInt32(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Room)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            RoomClass instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(RoomClass);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: RoomClass.RoomClassID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (RoomClass)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]: 
                        {
                            return 
                            {
                                RoomClass instance;
                                instance = new RoomClass();
                                instance.<RoomClassID>k__BackingField = dataReader.GetInt32(7);
                                instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(8);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<HotelId>k__BackingField = dataReader.GetInt32(10);
                                instance.<Name>k__BackingField = dataReader.GetString(11);
                                instance.<RoomType>k__BackingField = Invoke(((EnumToNumberConverter<RoomType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: RoomClass.RoomType (RoomType) Required | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("RoomType")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(12));
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(RoomClass)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Room, Room, RoomClass>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Room.RoomClass (RoomClass) ToPrincipal RoomClass Inverse: Rooms | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindNavigation("RoomClass")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: RoomClass.Rooms (ICollection<Room>) Collection ToDependent Room Inverse: RoomClass | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms")], 
            fixup: (namelessParameter{9}, namelessParameter{10}) => 
            {
                namelessParameter{9}.<RoomClass>k__BackingField = namelessParameter{10};
                return [LIFTABLE Constant: ClrICollectionAccessor<RoomClass, ICollection<Room>, Room> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms").GetCollectionAccessor()].Add(
                    entity: namelessParameter{10}, 
                    value: namelessParameter{9}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-08 13:50:40.259 -05:00 [DBG] Creating DbConnection.
2025-03-08 13:50:40.260 -05:00 [DBG] Created DbConnection. (1ms).
2025-03-08 13:50:40.261 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:40.267 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:40.272 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 13:50:40.273 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 13:50:40.275 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-08 13:50:40.277 -05:00 [DBG] Executing DbCommand [Parameters=[@__minPrice_0='?' (DbType = Decimal), @__maxPrice_1='?' (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."PricePerNight" >= @__minPrice_0 AND r."PricePerNight" <= @__maxPrice_1
2025-03-08 13:50:40.292 -05:00 [INF] Executed DbCommand (15ms) [Parameters=[@__minPrice_0='?' (DbType = Decimal), @__maxPrice_1='?' (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."PricePerNight" >= @__minPrice_0 AND r."PricePerNight" <= @__maxPrice_1
2025-03-08 13:50:40.301 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:40.303 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-08 13:50:40.306 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:40.308 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 13:50:40.326 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 13:50:40.336 -05:00 [DBG] Attempting to select an output formatter based on Accept header '["text/plain"]'.
2025-03-08 13:50:40.341 -05:00 [DBG] Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
2025-03-08 13:50:40.343 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 13:50:40.345 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 13:50:40.347 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 13:50:40.352 -05:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType7`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-08 13:50:40.358 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API) in 216.2819ms
2025-03-08 13:50:40.361 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-08 13:50:40.363 -05:00 [DBG] Connection id "0HNAUCMFD82J5" completed keep alive response.
2025-03-08 13:50:40.368 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 13:50:40.374 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:40.376 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 13:50:40.381 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Room/by-price?minPrice=200 - 404 null application/json; charset=utf-8 313.4688ms
2025-03-08 13:50:47.180 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Room/by-price?minPrice=200&maxPrice=200 - null null
2025-03-08 13:50:47.186 -05:00 [DBG] 2 candidate(s) found for the request path '/api/Room/by-price'
2025-03-08 13:50:47.188 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)' with route pattern 'api/Room/by-price' is valid for the request path '/api/Room/by-price'
2025-03-08 13:50:47.206 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)' with route pattern 'api/Room/{id}' is valid for the request path '/api/Room/by-price'
2025-03-08 13:50:47.217 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-08 13:50:47.219 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 13:50:47.221 -05:00 [DBG] Successfully validated the token.
2025-03-08 13:50:47.222 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 13:50:47.224 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-08 13:50:47.234 -05:00 [INF] Route matched with {action = "GetRoomsByPriceRange", controller = "Room"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRoomsByPriceRange(System.Decimal, System.Decimal) on controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API).
2025-03-08 13:50:47.238 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 13:50:47.240 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 13:50:47.244 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 13:50:47.255 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 13:50:47.257 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 13:50:47.260 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-08 13:50:47.268 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-08 13:50:47.272 -05:00 [DBG] Attempting to bind parameter 'minPrice' of type 'System.Decimal' ...
2025-03-08 13:50:47.276 -05:00 [DBG] Attempting to bind parameter 'minPrice' of type 'System.Decimal' using the name 'minPrice' in request data ...
2025-03-08 13:50:47.278 -05:00 [DBG] Done attempting to bind parameter 'minPrice' of type 'System.Decimal'.
2025-03-08 13:50:47.284 -05:00 [DBG] Done attempting to bind parameter 'minPrice' of type 'System.Decimal'.
2025-03-08 13:50:47.286 -05:00 [DBG] Attempting to validate the bound parameter 'minPrice' of type 'System.Decimal' ...
2025-03-08 13:50:47.288 -05:00 [DBG] Done attempting to validate the bound parameter 'minPrice' of type 'System.Decimal'.
2025-03-08 13:50:47.289 -05:00 [DBG] Attempting to bind parameter 'maxPrice' of type 'System.Decimal' ...
2025-03-08 13:50:47.291 -05:00 [DBG] Attempting to bind parameter 'maxPrice' of type 'System.Decimal' using the name 'maxPrice' in request data ...
2025-03-08 13:50:47.294 -05:00 [DBG] Done attempting to bind parameter 'maxPrice' of type 'System.Decimal'.
2025-03-08 13:50:47.300 -05:00 [DBG] Done attempting to bind parameter 'maxPrice' of type 'System.Decimal'.
2025-03-08 13:50:47.302 -05:00 [DBG] Attempting to validate the bound parameter 'maxPrice' of type 'System.Decimal' ...
2025-03-08 13:50:47.303 -05:00 [DBG] Done attempting to validate the bound parameter 'maxPrice' of type 'System.Decimal'.
2025-03-08 13:50:47.306 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 13:50:47.310 -05:00 [DBG] Creating DbConnection.
2025-03-08 13:50:47.311 -05:00 [DBG] Created DbConnection. (1ms).
2025-03-08 13:50:47.317 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:47.318 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:47.320 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 13:50:47.321 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 13:50:47.323 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-08 13:50:47.325 -05:00 [DBG] Executing DbCommand [Parameters=[@__minPrice_0='?' (DbType = Decimal), @__maxPrice_1='?' (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."PricePerNight" >= @__minPrice_0 AND r."PricePerNight" <= @__maxPrice_1
2025-03-08 13:50:47.336 -05:00 [INF] Executed DbCommand (11ms) [Parameters=[@__minPrice_0='?' (DbType = Decimal), @__maxPrice_1='?' (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."PricePerNight" >= @__minPrice_0 AND r."PricePerNight" <= @__maxPrice_1
2025-03-08 13:50:47.344 -05:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:50:47.349 -05:00 [DBG] The navigation 'Room.RoomClass' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:50:47.353 -05:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 13:50:47.356 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:47.358 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 18ms reading results.
2025-03-08 13:50:47.360 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:47.362 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-08 13:50:47.369 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 13:50:47.373 -05:00 [DBG] Attempting to select an output formatter based on Accept header '["text/plain"]'.
2025-03-08 13:50:47.376 -05:00 [DBG] Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
2025-03-08 13:50:47.385 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 13:50:47.390 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 13:50:47.395 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 13:50:47.408 -05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.Room.RoomResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-08 13:50:47.418 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API) in 158.1433ms
2025-03-08 13:50:47.428 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-08 13:50:47.439 -05:00 [DBG] Connection id "0HNAUCMFD82J5" completed keep alive response.
2025-03-08 13:50:47.455 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 13:50:47.464 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 13:50:47.477 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (12ms).
2025-03-08 13:50:47.483 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Room/by-price?minPrice=200&maxPrice=200 - 200 null application/json; charset=utf-8 302.749ms
2025-03-08 13:52:58.914 -05:00 [DBG] Connection id "0HNAUCMFD82J5" disconnecting.
2025-03-08 13:52:58.918 -05:00 [DBG] Connection id "0HNAUCMFD82J5" stopped.
2025-03-08 13:52:58.921 -05:00 [DBG] Connection id "0HNAUCMFD82J5" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-09 09:43:42.868 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-09 09:43:43.107 -04:00 [DBG] Hosting starting
2025-03-09 09:43:43.210 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-09 09:43:43.234 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-09 09:43:43.296 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-09 09:43:43.315 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-09 09:43:43.324 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-09 09:43:43.547 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-09 09:43:43.681 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-09 09:43:43.695 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-09 09:43:43.713 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-09 09:43:43.720 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-09 09:43:43.848 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-09 09:43:44.128 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-09 09:43:44.137 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-09 09:43:44.139 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-09 09:43:44.148 -04:00 [INF] Hosting environment: Development
2025-03-09 09:43:44.151 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-09 09:43:44.153 -04:00 [DBG] Hosting started
2025-03-09 09:43:49.955 -04:00 [DBG] Connection id "0HNAV21M6LP6G" accepted.
2025-03-09 09:43:49.960 -04:00 [DBG] Connection id "0HNAV21M6LP6G" started.
2025-03-09 09:43:49.988 -04:00 [DBG] Connection id "0HNAV21M6LP6H" accepted.
2025-03-09 09:43:50.000 -04:00 [DBG] Connection id "0HNAV21M6LP6H" started.
2025-03-09 09:43:50.346 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-09 09:43:50.354 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-09 09:43:50.425 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-09 09:43:50.434 -04:00 [DBG] Request did not match any endpoints
2025-03-09 09:43:50.974 -04:00 [DBG] Connection id "0HNAV21M6LP6G" completed keep alive response.
2025-03-09 09:43:51.436 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 1371.4351ms
2025-03-09 09:43:51.466 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/favicon.ico - null null
2025-03-09 09:43:51.485 -04:00 [DBG] No candidates found for the request path '/favicon.ico'
2025-03-09 09:43:51.488 -04:00 [DBG] Request did not match any endpoints
2025-03-09 09:43:51.502 -04:00 [DBG] The request path  does not match the path filter
2025-03-09 09:43:51.515 -04:00 [WRN] Failed to determine the https port for redirect.
2025-03-09 09:43:51.595 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-09 09:43:51.599 -04:00 [DBG] Connection id "0HNAV21M6LP6G" completed keep alive response.
2025-03-09 09:43:51.604 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/favicon.ico - 404 0 null 137.5837ms
2025-03-09 09:43:51.612 -04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5004/favicon.ico, Response status code: 404
2025-03-09 09:44:25.172 -04:00 [DBG] Connection id "0HNAV21M6LP6H" received FIN.
2025-03-09 09:44:25.173 -04:00 [DBG] Connection id "0HNAV21M6LP6G" received FIN.
2025-03-09 09:44:25.177 -04:00 [DBG] Connection id "0HNAV21M6LP6H" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-09 09:44:25.177 -04:00 [DBG] Connection id "0HNAV21M6LP6G" disconnecting.
2025-03-09 09:44:25.180 -04:00 [DBG] Connection id "0HNAV21M6LP6H" disconnecting.
2025-03-09 09:44:25.182 -04:00 [DBG] Connection id "0HNAV21M6LP6G" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-09 09:44:25.185 -04:00 [DBG] Connection id "0HNAV21M6LP6H" stopped.
2025-03-09 09:44:25.189 -04:00 [DBG] Connection id "0HNAV21M6LP6G" stopped.
