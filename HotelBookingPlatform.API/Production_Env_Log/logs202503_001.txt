2025-03-07 19:44:56.789 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-07 19:44:58.023 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-07 19:44:58.039 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-07 19:44:58.049 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-07 19:44:58.063 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-07 19:44:58.067 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-07 19:44:58.350 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-07 19:44:58.379 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-07 19:44:58.520 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-07 19:44:59.264 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-07 19:45:00.869 -05:00 [DBG] Creating DbConnection.
2025-03-07 19:45:00.958 -05:00 [DBG] Created DbConnection. (85ms).
2025-03-07 19:45:01.059 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:45:01.856 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:45:02.049 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-07 19:45:02.203 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (151ms).
2025-03-07 19:45:02.297 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (255ms).
2025-03-07 19:45:02.339 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-07 19:45:02.476 -05:00 [INF] Executed DbCommand (140ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-07 19:45:02.937 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:45:02.953 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 85ms reading results.
2025-03-07 19:45:03.121 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:45:03.234 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (113ms).
2025-03-07 19:45:03.339 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-07 19:45:03.405 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:45:03.505 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (98ms).
2025-03-07 19:45:36.710 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-07 19:45:37.569 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-07 19:45:37.575 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-07 19:45:37.578 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-07 19:45:37.582 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-07 19:45:37.584 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-07 19:45:37.719 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-07 19:45:37.723 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-07 19:45:37.725 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-07 19:45:37.834 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-07 19:45:38.211 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-07 19:46:04.919 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-07 19:46:05.751 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-07 19:46:05.757 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-07 19:46:05.761 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-07 19:46:05.768 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-07 19:46:05.782 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-07 19:46:05.920 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-07 19:46:05.924 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-07 19:46:05.925 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-07 19:46:06.027 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-07 19:46:06.058 -05:00 [DBG] Creating DbConnection.
2025-03-07 19:46:06.093 -05:00 [DBG] Created DbConnection. (33ms).
2025-03-07 19:46:06.102 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:46:06.217 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:46:06.233 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-07 19:46:06.250 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (19ms).
2025-03-07 19:46:06.254 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (29ms).
2025-03-07 19:46:06.267 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-07 19:46:06.317 -05:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-07 19:46:06.365 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:46:06.375 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 50ms reading results.
2025-03-07 19:46:06.382 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:46:06.389 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-07 19:46:06.605 -05:00 [DBG] Migrating using database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:46:06.611 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:46:06.616 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:46:06.647 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:46:06.650 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:46:06.656 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-07 19:46:06.659 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:46:06.661 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:46:06.736 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-07 19:46:06.737 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-07 19:46:06.739 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-07 19:46:06.741 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-07 19:46:06.755 -05:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-07 19:46:06.763 -05:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-07 19:46:06.770 -05:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-07 19:46:06.775 -05:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-03-07 19:46:06.776 -05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-07 19:46:06.778 -05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-07 19:46:06.780 -05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-07 19:46:06.782 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-07 19:46:06.792 -05:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-07 19:46:06.797 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-07 19:46:06.800 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-07 19:46:06.803 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-03-07 19:46:06.805 -05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-07 19:46:06.810 -05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-07 19:46:06.818 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:46:06.820 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-03-07 19:46:06.826 -05:00 [INF] No migrations were applied. The database is already up to date.
2025-03-07 19:46:06.829 -05:00 [DBG] Committing transaction.
2025-03-07 19:46:06.838 -05:00 [DBG] Committed transaction.
2025-03-07 19:46:06.841 -05:00 [DBG] Disposing transaction.
2025-03-07 19:46:06.842 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:46:06.844 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-07 19:46:06.849 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-07 19:46:06.853 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 19:46:06.855 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-07 20:01:20.621 -05:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-07 20:01:20.804 -05:00 [DBG] Hosting starting
2025-03-07 20:01:20.824 -05:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-07 20:01:20.845 -05:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-07 20:01:20.894 -05:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-07 20:01:20.913 -05:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-07 20:01:20.921 -05:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-07 20:01:20.928 -05:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-07 20:01:20.934 -05:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-07 20:01:20.956 -05:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-07 20:01:21.127 -05:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-07 20:01:21.146 -05:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-07 20:01:21.172 -05:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-07 20:01:21.291 -05:00 [INF] Now listening on: http://localhost:5004
2025-03-07 20:01:21.292 -05:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-07 20:01:21.294 -05:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-07 20:01:21.296 -05:00 [INF] Hosting environment: Development
2025-03-07 20:01:21.297 -05:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-07 20:01:21.299 -05:00 [DBG] Hosting started
2025-03-07 20:01:34.774 -05:00 [DBG] Connection id "0HNATRJ2R9AEA" accepted.
2025-03-07 20:01:34.781 -05:00 [DBG] Connection id "0HNATRJ2R9AEA" started.
2025-03-07 20:01:34.783 -05:00 [DBG] Connection id "0HNATRJ2R9AEB" accepted.
2025-03-07 20:01:34.796 -05:00 [DBG] Connection id "0HNATRJ2R9AEB" started.
2025-03-07 20:01:35.398 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-07 20:01:35.411 -05:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-07 20:01:35.513 -05:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-07 20:01:35.515 -05:00 [DBG] Request did not match any endpoints
2025-03-07 20:01:36.017 -05:00 [DBG] Connection id "0HNATRJ2R9AEA" completed keep alive response.
2025-03-07 20:01:36.025 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 628.46ms
2025-03-07 20:01:39.208 -05:00 [DBG] Connection id "0HNATRJ2R9AEB" received FIN.
2025-03-07 20:01:39.209 -05:00 [DBG] Connection id "0HNATRJ2R9AEA" received FIN.
2025-03-07 20:01:39.214 -05:00 [DBG] Connection id "0HNATRJ2R9AEA" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-07 20:01:39.214 -05:00 [DBG] Connection id "0HNATRJ2R9AEB" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-07 20:01:39.218 -05:00 [DBG] Connection id "0HNATRJ2R9AEA" disconnecting.
2025-03-07 20:01:39.220 -05:00 [DBG] Connection id "0HNATRJ2R9AEB" disconnecting.
2025-03-07 20:01:39.224 -05:00 [DBG] Connection id "0HNATRJ2R9AEA" stopped.
2025-03-07 20:01:39.224 -05:00 [DBG] Connection id "0HNATRJ2R9AEB" stopped.
2025-03-07 20:03:13.452 -05:00 [DBG] Connection id "0HNATRJ2R9AEC" accepted.
2025-03-07 20:03:13.455 -05:00 [DBG] Connection id "0HNATRJ2R9AEC" started.
2025-03-07 20:03:13.459 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 65
2025-03-07 20:03:13.485 -05:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-07 20:03:13.500 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-07 20:03:13.506 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-07 20:03:13.525 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-07 20:03:13.535 -05:00 [INF] No CORS policy found for the specified request.
2025-03-07 20:03:13.540 -05:00 [WRN] Failed to determine the https port for redirect.
2025-03-07 20:03:13.605 -05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-07 20:03:13.609 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-07 20:03:13.655 -05:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-07 20:03:13.664 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-07 20:03:13.667 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-07 20:03:13.670 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-07 20:03:13.679 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-07 20:03:13.683 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-07 20:03:13.689 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-07 20:03:14.284 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-07 20:03:14.348 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-07 20:03:14.358 -05:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-07 20:03:14.366 -05:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-07 20:03:14.371 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-07 20:03:14.425 -05:00 [DBG] Connection id "0HNATRJ2R9AEC", Request id "0HNATRJ2R9AEC:00000001": started reading request body.
2025-03-07 20:03:14.433 -05:00 [DBG] Connection id "0HNATRJ2R9AEC", Request id "0HNATRJ2R9AEC:00000001": done reading request body.
2025-03-07 20:03:14.457 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-07 20:03:14.460 -05:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-07 20:03:14.470 -05:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-07 20:03:14.475 -05:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-07 20:03:14.533 -05:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-07 20:03:15.841 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-07 20:03:15.857 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-07 20:03:15.871 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-07 20:03:15.887 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-07 20:03:15.892 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-07 20:03:16.285 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-07 20:03:16.288 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-07 20:03:16.297 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-07 20:03:16.542 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-07 20:03:16.689 -05:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-07 20:03:16.779 -05:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-07 20:03:17.239 -05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-07 20:03:17.439 -05:00 [DBG] Creating DbConnection.
2025-03-07 20:03:17.491 -05:00 [DBG] Created DbConnection. (51ms).
2025-03-07 20:03:17.498 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:03:17.769 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:03:17.773 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-07 20:03:17.789 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (11ms).
2025-03-07 20:03:17.803 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (29ms).
2025-03-07 20:03:17.820 -05:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-07 20:03:17.943 -05:00 [INF] Executed DbCommand (132ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-07 20:03:18.030 -05:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-07 20:03:18.100 -05:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-07 20:03:18.124 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:03:18.138 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 182ms reading results.
2025-03-07 20:03:18.147 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:03:18.153 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-07 20:03:18.268 -05:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-03-07 20:03:18.282 -05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-07 20:03:18.292 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:03:18.296 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:03:18.299 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-07 20:03:18.301 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-07 20:03:18.303 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-07 20:03:18.306 -05:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-07 20:03:18.314 -05:00 [INF] Executed DbCommand (8ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-07 20:03:18.320 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:03:18.322 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-07 20:03:18.324 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:03:18.326 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-07 20:03:18.343 -05:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-03-07 20:03:18.365 -05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-07 20:03:18.373 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:03:18.375 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:03:18.378 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-07 20:03:18.381 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-07 20:03:18.383 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-07 20:03:18.387 -05:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-07 20:03:18.402 -05:00 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-07 20:03:18.405 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:03:18.407 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-07 20:03:18.412 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:03:18.419 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-07 20:03:18.440 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:03:18.452 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:03:18.455 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-07 20:03:18.456 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-07 20:03:18.458 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-07 20:03:18.465 -05:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-07 20:03:18.475 -05:00 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-07 20:03:18.486 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:03:18.489 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-07 20:03:18.492 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:03:18.502 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-03-07 20:03:18.572 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-07 20:03:18.583 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-07 20:03:18.587 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-07 20:03:18.589 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-07 20:03:18.591 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-07 20:03:18.599 -05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-07 20:03:18.675 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 4985.7789ms
2025-03-07 20:03:18.682 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-07 20:03:18.685 -05:00 [DBG] Connection id "0HNATRJ2R9AEC" completed keep alive response.
2025-03-07 20:03:18.690 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-07 20:03:18.701 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:03:18.710 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-03-07 20:03:18.723 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 5263.2061ms
2025-03-07 20:03:19.368 -05:00 [DBG] Connection id "0HNATRJ2R9AEC" received FIN.
2025-03-07 20:03:19.372 -05:00 [DBG] Connection id "0HNATRJ2R9AEC" disconnecting.
2025-03-07 20:03:19.374 -05:00 [DBG] Connection id "0HNATRJ2R9AEC" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-07 20:03:19.378 -05:00 [DBG] Connection id "0HNATRJ2R9AEC" stopped.
2025-03-07 20:05:08.929 -05:00 [DBG] Connection id "0HNATRJ2R9AED" accepted.
2025-03-07 20:05:08.931 -05:00 [DBG] Connection id "0HNATRJ2R9AED" started.
2025-03-07 20:05:08.934 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/City/1/hotels - application/json 124
2025-03-07 20:05:08.941 -05:00 [DBG] 1 candidate(s) found for the request path '/api/City/1/hotels'
2025-03-07 20:05:08.944 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/1/hotels'
2025-03-07 20:05:08.958 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-03-07 20:05:08.961 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-07 20:05:08.963 -05:00 [INF] No CORS policy found for the specified request.
2025-03-07 20:05:09.125 -05:00 [DBG] Successfully validated the token.
2025-03-07 20:05:09.127 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-07 20:05:09.136 -05:00 [DBG] Authorization was successful.
2025-03-07 20:05:09.138 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-03-07 20:05:09.148 -05:00 [INF] Route matched with {action = "AddHotelToCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddHotelToCity(Int32, HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-07 20:05:09.155 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-07 20:05:09.157 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-07 20:05:09.160 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-07 20:05:09.163 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-07 20:05:09.168 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-07 20:05:09.171 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-07 20:05:09.372 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-07 20:05:09.375 -05:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-03-07 20:05:09.378 -05:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-03-07 20:05:09.381 -05:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-07 20:05:09.386 -05:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-07 20:05:09.388 -05:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-03-07 20:05:09.391 -05:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-03-07 20:05:09.393 -05:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-03-07 20:05:09.396 -05:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' using the name '' in request data ...
2025-03-07 20:05:09.398 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-07 20:05:09.405 -05:00 [DBG] Connection id "0HNATRJ2R9AED", Request id "0HNATRJ2R9AED:00000001": started reading request body.
2025-03-07 20:05:09.408 -05:00 [DBG] Connection id "0HNATRJ2R9AED", Request id "0HNATRJ2R9AED:00000001": done reading request body.
2025-03-07 20:05:09.413 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'
2025-03-07 20:05:09.419 -05:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-03-07 20:05:09.421 -05:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-03-07 20:05:09.423 -05:00 [DBG] Attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-03-07 20:05:09.429 -05:00 [DBG] Done attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-03-07 20:05:09.574 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-07 20:05:09.625 -05:00 [DBG] Compiling query expression: 
'DbSet<City>()
    .FirstOrDefault(e => EF.Property<int>(e, "CityID") == __p_0)'
2025-03-07 20:05:09.645 -05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<City>(
    asyncEnumerable: SingleQueryingEnumerable.Create<City>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT TOP(1) c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE c.CityID == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT TOP(1) c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE c.CityID == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            City entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                City instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(City);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: City.CityID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (City)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]: 
                            {
                                return 
                                {
                                    City instance;
                                    instance = new City();
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Country>k__BackingField = dataReader.GetString(1);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.GetString(3);
                                    instance.<Name>k__BackingField = dataReader.GetString(4);
                                    instance.<PostOffice>k__BackingField = dataReader.GetString(5);
                                    instance.<VisitCount>k__BackingField = dataReader.GetInt32(6);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(City)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-07 20:05:09.664 -05:00 [DBG] Creating DbConnection.
2025-03-07 20:05:09.668 -05:00 [DBG] Created DbConnection. (2ms).
2025-03-07 20:05:09.671 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:05:09.673 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:05:09.675 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-07 20:05:09.677 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-07 20:05:09.680 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-07 20:05:09.685 -05:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-03-07 20:05:09.697 -05:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-03-07 20:05:09.777 -05:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-07 20:05:09.926 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:05:09.945 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 234ms reading results.
2025-03-07 20:05:09.958 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:05:09.975 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (16ms).
2025-03-07 20:05:10.110 -05:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Hotel.HotelId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-07 20:05:10.197 -05:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-07 20:05:10.219 -05:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-07 20:05:10.229 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-07 20:05:10.249 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-07 20:05:10.291 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-07 20:05:10.435 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:05:10.437 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:05:10.441 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-07 20:05:10.443 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-07 20:05:10.446 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-07 20:05:10.448 -05:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?' (DbType = Int32), @p5='?', @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Hotels" ("CityID", "CreatedAtUtc", "Description", "Name", "OwnerID", "PhoneNumber", "StarRating")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "HotelId";
2025-03-07 20:05:10.505 -05:00 [ERR] Failed executing DbCommand (55ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?' (DbType = Int32), @p5='?', @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Hotels" ("CityID", "CreatedAtUtc", "Description", "Name", "OwnerID", "PhoneNumber", "StarRating")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "HotelId";
2025-03-07 20:05:10.514 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:05:10.575 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (60ms).
2025-03-07 20:05:10.640 -05:00 [ERR] An exception occurred in the database while saving changes for context type 'HotelBookingPlatform.Infrastructure.Data.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23503: insert or update on table "Hotels" violates foreign key constraint "FK_Hotels_Owners_OwnerID"

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ERROR
    SqlState: 23503
    MessageText: insert or update on table "Hotels" violates foreign key constraint "FK_Hotels_Owners_OwnerID"
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: Hotels
    ConstraintName: FK_Hotels_Owners_OwnerID
    File: ri_triggers.c
    Line: 2608
    Routine: ri_ReportViolation
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23503: insert or update on table "Hotels" violates foreign key constraint "FK_Hotels_Owners_OwnerID"

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ERROR
    SqlState: 23503
    MessageText: insert or update on table "Hotels" violates foreign key constraint "FK_Hotels_Owners_OwnerID"
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: Hotels
    ConstraintName: FK_Hotels_Owners_OwnerID
    File: ri_triggers.c
    Line: 2608
    Routine: ri_ReportViolation
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2025-03-07 20:05:10.680 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API) in 1508.7134ms
2025-03-07 20:05:10.687 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-03-07 20:05:10.796 -05:00 [DBG] Connection id "0HNATRJ2R9AED" completed keep alive response.
2025-03-07 20:05:10.797 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-07 20:05:10.800 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 20:05:10.804 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-07 20:05:10.812 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/City/1/hotels - 500 null application/json 1878.3183ms
2025-03-07 20:05:19.496 -05:00 [DBG] Connection id "0HNATRJ2R9AED" received FIN.
2025-03-07 20:05:19.503 -05:00 [DBG] Connection id "0HNATRJ2R9AED" disconnecting.
2025-03-07 20:05:19.504 -05:00 [DBG] Connection id "0HNATRJ2R9AED" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-07 20:05:19.511 -05:00 [DBG] Connection id "0HNATRJ2R9AED" stopped.
2025-03-07 21:03:46.582 -05:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-07 21:03:46.914 -05:00 [DBG] Hosting starting
2025-03-07 21:03:46.964 -05:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-07 21:03:46.995 -05:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-07 21:03:47.111 -05:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-07 21:03:47.152 -05:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-07 21:03:47.160 -05:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-07 21:03:47.166 -05:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-07 21:03:47.171 -05:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-07 21:03:47.185 -05:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-07 21:03:47.196 -05:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-07 21:03:47.205 -05:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-07 21:03:47.208 -05:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-07 21:03:47.579 -05:00 [INF] Now listening on: http://localhost:5004
2025-03-07 21:03:47.580 -05:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-07 21:03:47.582 -05:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-07 21:03:47.584 -05:00 [INF] Hosting environment: Development
2025-03-07 21:03:47.585 -05:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-07 21:03:47.587 -05:00 [DBG] Hosting started
2025-03-07 21:06:58.056 -05:00 [DBG] Connection id "0HNATSNK2LLSA" accepted.
2025-03-07 21:06:58.069 -05:00 [DBG] Connection id "0HNATSNK2LLSA" started.
2025-03-07 21:06:58.095 -05:00 [DBG] Connection id "0HNATSNK2LLSB" accepted.
2025-03-07 21:06:58.102 -05:00 [DBG] Connection id "0HNATSNK2LLSB" started.
2025-03-07 21:06:58.243 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-03-07 21:06:58.254 -05:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-07 21:06:58.363 -05:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-03-07 21:06:58.365 -05:00 [DBG] Request did not match any endpoints
2025-03-07 21:06:58.607 -05:00 [DBG] Connection id "0HNATSNK2LLSA" completed keep alive response.
2025-03-07 21:06:58.615 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 375.1843ms
2025-03-07 21:06:58.685 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-03-07 21:06:58.727 -05:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-03-07 21:06:58.734 -05:00 [DBG] Request did not match any endpoints
2025-03-07 21:06:58.767 -05:00 [DBG] Connection id "0HNATSNK2LLSA" completed keep alive response.
2025-03-07 21:06:58.794 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 108.2492ms
2025-03-07 21:06:59.167 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-07 21:06:59.204 -05:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-07 21:06:59.187 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/favicon-32x32.png - null null
2025-03-07 21:06:59.214 -05:00 [DBG] Request did not match any endpoints
2025-03-07 21:06:59.239 -05:00 [DBG] No candidates found for the request path '/swagger/favicon-32x32.png'
2025-03-07 21:06:59.246 -05:00 [DBG] Request did not match any endpoints
2025-03-07 21:06:59.263 -05:00 [INF] The file /favicon-32x32.png was not modified
2025-03-07 21:06:59.304 -05:00 [DBG] Handled. Status code: 304 File: /favicon-32x32.png
2025-03-07 21:06:59.494 -05:00 [DBG] Connection id "0HNATSNK2LLSB" completed keep alive response.
2025-03-07 21:06:59.535 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/favicon-32x32.png - 304 null image/png 348.0571ms
2025-03-07 21:06:59.819 -05:00 [DBG] Connection id "0HNATSNK2LLSA" completed keep alive response.
2025-03-07 21:06:59.824 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 656.8753ms
2025-03-07 21:07:00.095 -05:00 [DBG] Connection id "0HNATSNK2LLSB" received FIN.
2025-03-07 21:07:00.095 -05:00 [DBG] Connection id "0HNATSNK2LLSA" received FIN.
2025-03-07 21:07:00.101 -05:00 [DBG] Connection id "0HNATSNK2LLSB" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-07 21:07:00.101 -05:00 [DBG] Connection id "0HNATSNK2LLSA" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-07 21:07:00.192 -05:00 [DBG] Connection id "0HNATSNK2LLSB" disconnecting.
2025-03-07 21:07:00.193 -05:00 [DBG] Connection id "0HNATSNK2LLSA" disconnecting.
2025-03-07 21:07:00.196 -05:00 [DBG] Connection id "0HNATSNK2LLSB" stopped.
2025-03-07 21:07:00.197 -05:00 [DBG] Connection id "0HNATSNK2LLSA" stopped.
2025-03-07 21:08:20.731 -05:00 [DBG] Connection id "0HNATSNK2LLSC" accepted.
2025-03-07 21:08:20.733 -05:00 [DBG] Connection id "0HNATSNK2LLSC" started.
2025-03-07 21:08:20.765 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/City/1/hotels - application/json 130
2025-03-07 21:08:20.770 -05:00 [DBG] 1 candidate(s) found for the request path '/api/City/1/hotels'
2025-03-07 21:08:20.777 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/1/hotels'
2025-03-07 21:08:20.787 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-03-07 21:08:20.790 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-07 21:08:20.792 -05:00 [INF] No CORS policy found for the specified request.
2025-03-07 21:08:20.803 -05:00 [WRN] Failed to determine the https port for redirect.
2025-03-07 21:08:20.851 -05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-07 21:08:20.855 -05:00 [DBG] Policy authentication schemes  did not succeed
2025-03-07 21:08:20.860 -05:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-03-07 21:08:20.870 -05:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-03-07 21:08:20.871 -05:00 [DBG] Connection id "0HNATSNK2LLSC" completed keep alive response.
2025-03-07 21:08:20.873 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/City/1/hotels - 401 0 null 108.0648ms
2025-03-07 21:08:20.893 -05:00 [DBG] Connection id "0HNATSNK2LLSC", Request id "0HNATSNK2LLSC:00000001": started reading request body.
2025-03-07 21:08:20.901 -05:00 [DBG] Connection id "0HNATSNK2LLSC", Request id "0HNATSNK2LLSC:00000001": done reading request body.
2025-03-07 21:08:40.232 -05:00 [DBG] Connection id "0HNATSNK2LLSC" received FIN.
2025-03-07 21:08:40.237 -05:00 [DBG] Connection id "0HNATSNK2LLSC" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-07 21:08:40.241 -05:00 [DBG] Connection id "0HNATSNK2LLSC" disconnecting.
2025-03-07 21:08:40.242 -05:00 [DBG] Connection id "0HNATSNK2LLSC" stopped.
2025-03-07 21:09:50.949 -05:00 [DBG] Connection id "0HNATSNK2LLSD" accepted.
2025-03-07 21:09:50.951 -05:00 [DBG] Connection id "0HNATSNK2LLSD" started.
2025-03-07 21:09:50.952 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Owner - application/json 115
2025-03-07 21:09:50.962 -05:00 [DBG] 1 candidate(s) found for the request path '/api/Owner'
2025-03-07 21:09:50.972 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)' with route pattern 'api/Owner' is valid for the request path '/api/Owner'
2025-03-07 21:09:50.976 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)'
2025-03-07 21:09:50.980 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-07 21:09:50.987 -05:00 [INF] No CORS policy found for the specified request.
2025-03-07 21:09:50.994 -05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-07 21:09:50.997 -05:00 [DBG] Policy authentication schemes  did not succeed
2025-03-07 21:09:51.002 -05:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-03-07 21:09:51.005 -05:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-03-07 21:09:51.008 -05:00 [DBG] Connection id "0HNATSNK2LLSD" completed keep alive response.
2025-03-07 21:09:51.010 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Owner - 401 0 null 57.1644ms
2025-03-07 21:09:51.026 -05:00 [DBG] Connection id "0HNATSNK2LLSD", Request id "0HNATSNK2LLSD:00000001": started reading request body.
2025-03-07 21:09:51.028 -05:00 [DBG] Connection id "0HNATSNK2LLSD", Request id "0HNATSNK2LLSD:00000001": done reading request body.
2025-03-07 21:10:10.334 -05:00 [DBG] Connection id "0HNATSNK2LLSD" received FIN.
2025-03-07 21:10:10.337 -05:00 [DBG] Connection id "0HNATSNK2LLSD" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-07 21:10:10.340 -05:00 [DBG] Connection id "0HNATSNK2LLSD" disconnecting.
2025-03-07 21:10:10.342 -05:00 [DBG] Connection id "0HNATSNK2LLSD" stopped.
2025-03-07 21:10:37.326 -05:00 [DBG] Connection id "0HNATSNK2LLSE" accepted.
2025-03-07 21:10:37.328 -05:00 [DBG] Connection id "0HNATSNK2LLSE" started.
2025-03-07 21:10:37.330 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 65
2025-03-07 21:10:37.339 -05:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-07 21:10:37.341 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-07 21:10:37.354 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-07 21:10:37.356 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-07 21:10:37.358 -05:00 [INF] No CORS policy found for the specified request.
2025-03-07 21:10:37.360 -05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-07 21:10:37.392 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-07 21:10:37.433 -05:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-07 21:10:37.441 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-07 21:10:37.444 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-07 21:10:37.446 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-07 21:10:37.449 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-07 21:10:37.455 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-07 21:10:37.460 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-07 21:10:38.135 -05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-07 21:10:38.216 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-07 21:10:38.237 -05:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-07 21:10:38.243 -05:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-07 21:10:38.250 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-07 21:10:38.299 -05:00 [DBG] Connection id "0HNATSNK2LLSE", Request id "0HNATSNK2LLSE:00000001": started reading request body.
2025-03-07 21:10:38.305 -05:00 [DBG] Connection id "0HNATSNK2LLSE", Request id "0HNATSNK2LLSE:00000001": done reading request body.
2025-03-07 21:10:38.374 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-07 21:10:38.384 -05:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-07 21:10:38.391 -05:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-07 21:10:38.393 -05:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-07 21:10:38.443 -05:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-07 21:10:39.362 -05:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-07 21:10:39.366 -05:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-07 21:10:39.369 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-07 21:10:39.371 -05:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-07 21:10:39.374 -05:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-07 21:10:39.535 -05:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-07 21:10:39.537 -05:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-07 21:10:39.539 -05:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-07 21:10:39.670 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-07 21:10:39.732 -05:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-07 21:10:39.780 -05:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-07 21:10:40.227 -05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-07 21:10:40.350 -05:00 [DBG] Creating DbConnection.
2025-03-07 21:10:40.410 -05:00 [DBG] Created DbConnection. (58ms).
2025-03-07 21:10:40.417 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:10:40.698 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:10:40.704 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-07 21:10:40.718 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-03-07 21:10:40.728 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (23ms).
2025-03-07 21:10:40.794 -05:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-07 21:10:40.998 -05:00 [INF] Executed DbCommand (222ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-07 21:10:41.090 -05:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-07 21:10:41.193 -05:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-07 21:10:41.229 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:10:41.246 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 233ms reading results.
2025-03-07 21:10:41.255 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:10:41.263 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-07 21:10:41.428 -05:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-03-07 21:10:41.460 -05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-07 21:10:41.497 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:10:41.499 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:10:41.510 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-07 21:10:41.512 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-07 21:10:41.513 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-07 21:10:41.520 -05:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-07 21:10:41.543 -05:00 [INF] Executed DbCommand (24ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-07 21:10:41.548 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:10:41.550 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-07 21:10:41.561 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:10:41.563 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-07 21:10:41.595 -05:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-03-07 21:10:41.633 -05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-07 21:10:41.649 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:10:41.655 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:10:41.661 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-07 21:10:41.663 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-07 21:10:41.665 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-07 21:10:41.677 -05:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-07 21:10:41.689 -05:00 [INF] Executed DbCommand (22ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-07 21:10:41.700 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:10:41.703 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-07 21:10:41.713 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:10:41.716 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-07 21:10:41.748 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:10:41.751 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:10:41.756 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-07 21:10:41.759 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-07 21:10:41.761 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-07 21:10:41.763 -05:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-07 21:10:41.769 -05:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-07 21:10:41.780 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:10:41.783 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-07 21:10:41.789 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:10:41.792 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-07 21:10:41.868 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-07 21:10:41.875 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-07 21:10:41.877 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-07 21:10:41.879 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-07 21:10:41.881 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-07 21:10:41.887 -05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-07 21:10:41.954 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 4490.5121ms
2025-03-07 21:10:41.957 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-07 21:10:41.962 -05:00 [DBG] Connection id "0HNATSNK2LLSE" completed keep alive response.
2025-03-07 21:10:41.968 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-07 21:10:41.979 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:10:41.990 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-07 21:10:41.996 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 4666.3834ms
2025-03-07 21:10:50.371 -05:00 [DBG] Connection id "0HNATSNK2LLSE" received FIN.
2025-03-07 21:10:50.379 -05:00 [DBG] Connection id "0HNATSNK2LLSE" disconnecting.
2025-03-07 21:10:50.393 -05:00 [DBG] Connection id "0HNATSNK2LLSE" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-07 21:10:50.418 -05:00 [DBG] Connection id "0HNATSNK2LLSE" stopped.
2025-03-07 21:11:23.514 -05:00 [DBG] Connection id "0HNATSNK2LLSF" accepted.
2025-03-07 21:11:23.515 -05:00 [DBG] Connection id "0HNATSNK2LLSF" started.
2025-03-07 21:11:23.517 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/City/1/hotels - application/json 130
2025-03-07 21:11:23.523 -05:00 [DBG] 1 candidate(s) found for the request path '/api/City/1/hotels'
2025-03-07 21:11:23.525 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/1/hotels'
2025-03-07 21:11:23.529 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-03-07 21:11:23.531 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-07 21:11:23.533 -05:00 [INF] No CORS policy found for the specified request.
2025-03-07 21:11:23.632 -05:00 [DBG] Successfully validated the token.
2025-03-07 21:11:23.634 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-07 21:11:23.640 -05:00 [DBG] Authorization was successful.
2025-03-07 21:11:23.642 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-03-07 21:11:23.652 -05:00 [INF] Route matched with {action = "AddHotelToCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddHotelToCity(Int32, HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-07 21:11:23.658 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-07 21:11:23.660 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-07 21:11:23.663 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-07 21:11:23.665 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-07 21:11:23.668 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-07 21:11:23.673 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-07 21:11:23.846 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-07 21:11:23.849 -05:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-03-07 21:11:23.851 -05:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-03-07 21:11:23.856 -05:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-07 21:11:23.859 -05:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-07 21:11:23.863 -05:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-03-07 21:11:23.866 -05:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-03-07 21:11:23.868 -05:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-03-07 21:11:23.872 -05:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' using the name '' in request data ...
2025-03-07 21:11:23.875 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-07 21:11:23.881 -05:00 [DBG] Connection id "0HNATSNK2LLSF", Request id "0HNATSNK2LLSF:00000001": started reading request body.
2025-03-07 21:11:23.883 -05:00 [DBG] Connection id "0HNATSNK2LLSF", Request id "0HNATSNK2LLSF:00000001": done reading request body.
2025-03-07 21:11:23.892 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'
2025-03-07 21:11:23.893 -05:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-03-07 21:11:23.896 -05:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-03-07 21:11:23.898 -05:00 [DBG] Attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-03-07 21:11:23.902 -05:00 [DBG] Done attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-03-07 21:11:24.007 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-07 21:11:24.025 -05:00 [DBG] Compiling query expression: 
'DbSet<City>()
    .FirstOrDefault(e => EF.Property<int>(e, "CityID") == __p_0)'
2025-03-07 21:11:24.051 -05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<City>(
    asyncEnumerable: SingleQueryingEnumerable.Create<City>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT TOP(1) c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE c.CityID == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT TOP(1) c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE c.CityID == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            City entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                City instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(City);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: City.CityID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (City)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]: 
                            {
                                return 
                                {
                                    City instance;
                                    instance = new City();
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Country>k__BackingField = dataReader.GetString(1);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.GetString(3);
                                    instance.<Name>k__BackingField = dataReader.GetString(4);
                                    instance.<PostOffice>k__BackingField = dataReader.GetString(5);
                                    instance.<VisitCount>k__BackingField = dataReader.GetInt32(6);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(City)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-07 21:11:24.075 -05:00 [DBG] Creating DbConnection.
2025-03-07 21:11:24.081 -05:00 [DBG] Created DbConnection. (4ms).
2025-03-07 21:11:24.085 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:11:24.088 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:11:24.095 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-07 21:11:24.099 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-07 21:11:24.102 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-07 21:11:24.110 -05:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-03-07 21:11:24.142 -05:00 [INF] Executed DbCommand (32ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-03-07 21:11:24.176 -05:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-07 21:11:24.225 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:11:24.228 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 81ms reading results.
2025-03-07 21:11:24.230 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:11:24.233 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-07 21:11:24.242 -05:00 [DBG] Compiling query expression: 
'DbSet<Owner>()
    .FirstOrDefault(e => EF.Property<int>(e, "OwnerID") == __p_0)'
2025-03-07 21:11:24.258 -05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Owner>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Owner>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Owner.Email (string) Required, 1], [Property: Owner.FirstName (string) Required, 2], [Property: Owner.LastName (string) Required, 3], [Property: Owner.PhoneNumber (string) Required, 4] }
            SELECT TOP(1) o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM owners AS o
            WHERE o.OwnerID == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Owner.Email (string) Required, 1], [Property: Owner.FirstName (string) Required, 2], [Property: Owner.LastName (string) Required, 3], [Property: Owner.PhoneNumber (string) Required, 4] }
            SELECT TOP(1) o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM owners AS o
            WHERE o.OwnerID == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Owner entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Owner instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Owner);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Owner.OwnerID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Owner)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                            {
                                return 
                                {
                                    Owner instance;
                                    instance = new Owner();
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(2);
                                    instance.<LastName>k__BackingField = dataReader.GetString(3);
                                    instance.<PhoneNumber>k__BackingField = dataReader.GetString(4);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Owner)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-07 21:11:24.274 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:11:24.280 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:11:24.282 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-07 21:11:24.284 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-07 21:11:24.291 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-07 21:11:24.293 -05:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM owners AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-03-07 21:11:24.318 -05:00 [ERR] Failed executing DbCommand (24ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM owners AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-03-07 21:11:24.327 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:11:24.330 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-07 21:11:24.368 -05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'HotelBookingPlatform.Infrastructure.Data.AppDbContext'.
Npgsql.PostgresException (0x80004005): 42P01: relation "owners" does not exist

POSITION: 83
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "owners" does not exist
    Position: 83
    File: parse_relation.c
    Line: 1449
    Routine: parserOpenTable
Npgsql.PostgresException (0x80004005): 42P01: relation "owners" does not exist

POSITION: 83
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "owners" does not exist
    Position: 83
    File: parse_relation.c
    Line: 1449
    Routine: parserOpenTable
2025-03-07 21:11:24.401 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-07 21:11:24.411 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-07 21:11:24.414 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-07 21:11:24.417 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-07 21:11:24.418 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-07 21:11:24.426 -05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-07 21:11:24.515 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API) in 841.7852ms
2025-03-07 21:11:24.519 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-03-07 21:11:24.548 -05:00 [DBG] Connection id "0HNATSNK2LLSF" completed keep alive response.
2025-03-07 21:11:24.585 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-07 21:11:24.591 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:11:24.664 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (73ms).
2025-03-07 21:11:24.668 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/City/1/hotels - 200 null application/json; charset=utf-8 1150.262ms
2025-03-07 21:11:30.403 -05:00 [DBG] Connection id "0HNATSNK2LLSF" received FIN.
2025-03-07 21:11:30.414 -05:00 [DBG] Connection id "0HNATSNK2LLSF" disconnecting.
2025-03-07 21:11:30.427 -05:00 [DBG] Connection id "0HNATSNK2LLSF" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-07 21:11:30.434 -05:00 [DBG] Connection id "0HNATSNK2LLSF" stopped.
2025-03-07 21:11:42.144 -05:00 [DBG] Connection id "0HNATSNK2LLSG" accepted.
2025-03-07 21:11:42.145 -05:00 [DBG] Connection id "0HNATSNK2LLSG" started.
2025-03-07 21:11:42.147 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Owner - application/json 115
2025-03-07 21:11:42.151 -05:00 [DBG] 1 candidate(s) found for the request path '/api/Owner'
2025-03-07 21:11:42.154 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)' with route pattern 'api/Owner' is valid for the request path '/api/Owner'
2025-03-07 21:11:42.156 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)'
2025-03-07 21:11:42.159 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-07 21:11:42.162 -05:00 [INF] No CORS policy found for the specified request.
2025-03-07 21:11:42.167 -05:00 [DBG] Successfully validated the token.
2025-03-07 21:11:42.183 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-07 21:11:42.186 -05:00 [DBG] Authorization was successful.
2025-03-07 21:11:42.191 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)'
2025-03-07 21:11:42.197 -05:00 [INF] Route matched with {action = "CreateOwner", controller = "Owner"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateOwner(HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto) on controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API).
2025-03-07 21:11:42.200 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-07 21:11:42.203 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-07 21:11:42.210 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-07 21:11:42.213 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-07 21:11:42.215 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-07 21:11:42.218 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-07 21:11:42.228 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-07 21:11:42.230 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto' ...
2025-03-07 21:11:42.232 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto' using the name '' in request data ...
2025-03-07 21:11:42.235 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-07 21:11:42.241 -05:00 [DBG] Connection id "0HNATSNK2LLSG", Request id "0HNATSNK2LLSG:00000001": started reading request body.
2025-03-07 21:11:42.243 -05:00 [DBG] Connection id "0HNATSNK2LLSG", Request id "0HNATSNK2LLSG:00000001": done reading request body.
2025-03-07 21:11:42.246 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'
2025-03-07 21:11:42.248 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'.
2025-03-07 21:11:42.250 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'.
2025-03-07 21:11:42.252 -05:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto' ...
2025-03-07 21:11:42.259 -05:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'.
2025-03-07 21:11:42.296 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-07 21:11:42.331 -05:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Owner.OwnerID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-07 21:11:42.364 -05:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-07 21:11:42.370 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-07 21:11:42.380 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-07 21:11:42.394 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-07 21:11:42.469 -05:00 [DBG] Creating DbConnection.
2025-03-07 21:11:42.472 -05:00 [DBG] Created DbConnection. (2ms).
2025-03-07 21:11:42.474 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:11:42.476 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:11:42.479 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-07 21:11:42.481 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-07 21:11:42.483 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-07 21:11:42.485 -05:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO owners ("Email", "FirstName", "LastName", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "OwnerID";
2025-03-07 21:11:42.495 -05:00 [ERR] Failed executing DbCommand (10ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO owners ("Email", "FirstName", "LastName", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "OwnerID";
2025-03-07 21:11:42.503 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:11:42.506 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-07 21:11:42.517 -05:00 [ERR] An exception occurred in the database while saving changes for context type 'HotelBookingPlatform.Infrastructure.Data.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 42P01: relation "owners" does not exist

POSITION: 13
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "owners" does not exist
    Position: 13
    File: parse_relation.c
    Line: 1449
    Routine: parserOpenTable
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 42P01: relation "owners" does not exist

POSITION: 13
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "owners" does not exist
    Position: 13
    File: parse_relation.c
    Line: 1449
    Routine: parserOpenTable
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2025-03-07 21:11:42.551 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API) in 333.5356ms
2025-03-07 21:11:42.556 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)'
2025-03-07 21:11:42.631 -05:00 [DBG] Connection id "0HNATSNK2LLSG" completed keep alive response.
2025-03-07 21:11:42.633 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-07 21:11:42.634 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-07 21:11:42.647 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (12ms).
2025-03-07 21:11:42.650 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Owner - 500 null application/json 503.1524ms
2025-03-07 21:11:50.422 -05:00 [DBG] Connection id "0HNATSNK2LLSG" received FIN.
2025-03-07 21:11:50.431 -05:00 [DBG] Connection id "0HNATSNK2LLSG" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-07 21:11:50.443 -05:00 [DBG] Connection id "0HNATSNK2LLSG" disconnecting.
2025-03-07 21:11:50.446 -05:00 [DBG] Connection id "0HNATSNK2LLSG" stopped.
2025-03-08 01:14:49.624 -05:00 [DBG] Connection id "0HNATSNK2LLSH" accepted.
2025-03-08 01:14:49.640 -05:00 [DBG] Connection id "0HNATSNK2LLSH" started.
2025-03-08 01:14:49.669 -05:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Owner - application/json 115
2025-03-08 01:14:49.685 -05:00 [DBG] 1 candidate(s) found for the request path '/api/Owner'
2025-03-08 01:14:49.690 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)' with route pattern 'api/Owner' is valid for the request path '/api/Owner'
2025-03-08 01:14:49.695 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)'
2025-03-08 01:14:49.713 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 01:14:49.717 -05:00 [INF] No CORS policy found for the specified request.
2025-03-08 01:14:49.755 -05:00 [DBG] Successfully validated the token.
2025-03-08 01:14:49.761 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 01:14:49.764 -05:00 [DBG] Authorization was successful.
2025-03-08 01:14:49.767 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)'
2025-03-08 01:14:49.786 -05:00 [INF] Route matched with {action = "CreateOwner", controller = "Owner"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateOwner(HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto) on controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API).
2025-03-08 01:14:49.795 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 01:14:49.797 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 01:14:49.800 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 01:14:49.803 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 01:14:49.805 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 01:14:49.811 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-08 01:14:49.848 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-08 01:14:49.858 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto' ...
2025-03-08 01:14:49.862 -05:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto' using the name '' in request data ...
2025-03-08 01:14:49.865 -05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-08 01:14:49.868 -05:00 [DBG] Connection id "0HNATSNK2LLSH", Request id "0HNATSNK2LLSH:00000001": started reading request body.
2025-03-08 01:14:49.870 -05:00 [DBG] Connection id "0HNATSNK2LLSH", Request id "0HNATSNK2LLSH:00000001": done reading request body.
2025-03-08 01:14:49.878 -05:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'
2025-03-08 01:14:49.879 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'.
2025-03-08 01:14:49.881 -05:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'.
2025-03-08 01:14:49.883 -05:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto' ...
2025-03-08 01:14:49.902 -05:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'.
2025-03-08 01:14:49.933 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 01:14:49.954 -05:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Owner.OwnerID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 01:14:49.969 -05:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 01:14:49.971 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 01:14:49.977 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 01:14:49.979 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 01:14:49.994 -05:00 [DBG] Creating DbConnection.
2025-03-08 01:14:49.997 -05:00 [DBG] Created DbConnection. (2ms).
2025-03-08 01:14:49.998 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:14:50.054 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:14:50.060 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 01:14:50.062 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-08 01:14:50.064 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-08 01:14:50.068 -05:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO owners ("Email", "FirstName", "LastName", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "OwnerID";
2025-03-08 01:14:50.088 -05:00 [ERR] Failed executing DbCommand (20ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO owners ("Email", "FirstName", "LastName", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "OwnerID";
2025-03-08 01:14:50.095 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:14:50.097 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 01:14:50.119 -05:00 [ERR] An exception occurred in the database while saving changes for context type 'HotelBookingPlatform.Infrastructure.Data.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 42P01: relation "owners" does not exist

POSITION: 13
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "owners" does not exist
    Position: 13
    File: parse_relation.c
    Line: 1449
    Routine: parserOpenTable
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 42P01: relation "owners" does not exist

POSITION: 13
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "owners" does not exist
    Position: 13
    File: parse_relation.c
    Line: 1449
    Routine: parserOpenTable
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2025-03-08 01:14:50.165 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API) in 354.4416ms
2025-03-08 01:14:50.169 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)'
2025-03-08 01:14:50.200 -05:00 [DBG] Connection id "0HNATSNK2LLSH" completed keep alive response.
2025-03-08 01:14:50.201 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 01:14:50.203 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:14:50.205 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 01:14:50.212 -05:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Owner - 500 null application/json 545.9907ms
2025-03-08 01:17:01.689 -05:00 [DBG] Connection id "0HNATSNK2LLSH" disconnecting.
2025-03-08 01:17:01.691 -05:00 [DBG] Connection id "0HNATSNK2LLSH" stopped.
2025-03-08 01:17:01.694 -05:00 [DBG] Connection id "0HNATSNK2LLSH" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 01:53:14.644 -05:00 [DBG] Connection id "0HNATSNK2LLSI" accepted.
2025-03-08 01:53:14.683 -05:00 [DBG] Connection id "0HNATSNK2LLSI" started.
2025-03-08 01:53:14.696 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City/1?includeHotels=false - null null
2025-03-08 01:53:14.704 -05:00 [DBG] 1 candidate(s) found for the request path '/api/City/1'
2025-03-08 01:53:14.707 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCity (HotelBookingPlatform.API)' with route pattern 'api/City/{id}' is valid for the request path '/api/City/1'
2025-03-08 01:53:14.715 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCity (HotelBookingPlatform.API)'
2025-03-08 01:53:14.728 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 01:53:14.734 -05:00 [DBG] Successfully validated the token.
2025-03-08 01:53:14.735 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 01:53:14.738 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCity (HotelBookingPlatform.API)'
2025-03-08 01:53:14.781 -05:00 [INF] Route matched with {action = "GetCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCity(Int32, Boolean) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-08 01:53:14.784 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 01:53:14.786 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 01:53:14.789 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 01:53:14.793 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 01:53:14.795 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 01:53:14.798 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 01:53:14.806 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 01:53:14.823 -05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-08 01:53:14.829 -05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-08 01:53:14.833 -05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-08 01:53:14.835 -05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-08 01:53:14.837 -05:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-08 01:53:14.841 -05:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-08 01:53:14.844 -05:00 [DBG] Attempting to bind parameter 'includeHotels' of type 'System.Boolean' ...
2025-03-08 01:53:14.849 -05:00 [DBG] Attempting to bind parameter 'includeHotels' of type 'System.Boolean' using the name 'includeHotels' in request data ...
2025-03-08 01:53:14.856 -05:00 [DBG] Done attempting to bind parameter 'includeHotels' of type 'System.Boolean'.
2025-03-08 01:53:14.858 -05:00 [DBG] Done attempting to bind parameter 'includeHotels' of type 'System.Boolean'.
2025-03-08 01:53:14.862 -05:00 [DBG] Attempting to validate the bound parameter 'includeHotels' of type 'System.Boolean' ...
2025-03-08 01:53:14.864 -05:00 [DBG] Done attempting to validate the bound parameter 'includeHotels' of type 'System.Boolean'.
2025-03-08 01:53:14.895 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 01:53:14.935 -05:00 [DBG] Compiling query expression: 
'DbSet<City>()
    .AsNoTracking()
    .SingleOrDefault(c => c.CityID == __cityId_0)'
2025-03-08 01:53:14.990 -05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<City>(
    asyncEnumerable: SingleQueryingEnumerable.Create<City>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT TOP(2) c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE c.CityID == @__cityId_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT TOP(2) c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE c.CityID == @__cityId_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            City entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                City instance1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(City);
                (object)dataReader.GetInt32(0) != null ? 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]: 
                            {
                                return 
                                {
                                    City instance;
                                    instance = new City();
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Country>k__BackingField = dataReader.GetString(1);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.GetString(3);
                                    instance.<Name>k__BackingField = dataReader.GetString(4);
                                    instance.<PostOffice>k__BackingField = dataReader.GetString(5);
                                    instance.<VisitCount>k__BackingField = dataReader.GetInt32(6);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: NoTracking, 
                                        structuralType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(City)
                    }
                    ;
                    return instance1;
                } : 
                {
                    object[] keyValues1;
                    keyValues1 = new object[]{ (object)dataReader.GetInt32(0) };
                    return ShapedQueryCompilingExpressionVisitor.CreateNullKeyValueInNoTrackingQuery(
                        entityType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")], 
                        properties: [LIFTABLE Constant: List<RuntimeProperty> { Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd } | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindPrimaryKey().Properties], 
                        keyValues: keyValues1);
                };
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-08 01:53:15.001 -05:00 [DBG] Creating DbConnection.
2025-03-08 01:53:15.003 -05:00 [DBG] Created DbConnection. (1ms).
2025-03-08 01:53:15.005 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:53:15.030 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:53:15.032 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 01:53:15.033 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 01:53:15.035 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-08 01:53:15.037 -05:00 [DBG] Executing DbCommand [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__cityId_0
LIMIT 2
2025-03-08 01:53:15.067 -05:00 [INF] Executed DbCommand (29ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__cityId_0
LIMIT 2
2025-03-08 01:53:15.074 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:53:15.078 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-03-08 01:53:15.080 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:53:15.082 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 01:53:15.097 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:53:15.099 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:53:15.102 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 01:53:15.103 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 01:53:15.105 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-08 01:53:15.107 -05:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-03-08 01:53:15.115 -05:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-03-08 01:53:15.120 -05:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 01:53:15.123 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:53:15.125 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-03-08 01:53:15.127 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:53:15.129 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 01:53:15.164 -05:00 [DBG] An entity of type 'City' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 01:53:15.168 -05:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-08 01:53:15.169 -05:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-08 01:53:15.171 -05:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-08 01:53:15.186 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:53:15.188 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:53:15.191 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 01:53:15.192 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 01:53:15.195 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-08 01:53:15.197 -05:00 [DBG] Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Cities" SET "VisitCount" = @p0
WHERE "CityID" = @p1;
2025-03-08 01:53:15.235 -05:00 [INF] Executed DbCommand (38ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Cities" SET "VisitCount" = @p0
WHERE "CityID" = @p1;
2025-03-08 01:53:15.250 -05:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:53:15.252 -05:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 10ms reading results.
2025-03-08 01:53:15.255 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:53:15.257 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-08 01:53:15.263 -05:00 [DBG] An entity of type 'City' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-08 01:53:15.268 -05:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-08 01:53:15.296 -05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-08 01:53:15.300 -05:00 [DBG] No information found on request to perform content negotiation.
2025-03-08 01:53:15.301 -05:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-08 01:53:15.303 -05:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-08 01:53:15.304 -05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-08 01:53:15.306 -05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.City.CityWithHotelsResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-08 01:53:15.336 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetCity (HotelBookingPlatform.API) in 538.1814ms
2025-03-08 01:53:15.338 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCity (HotelBookingPlatform.API)'
2025-03-08 01:53:15.340 -05:00 [DBG] Connection id "0HNATSNK2LLSI" completed keep alive response.
2025-03-08 01:53:15.343 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 01:53:15.345 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:53:15.348 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 01:53:15.351 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City/1?includeHotels=false - 200 null application/json; charset=utf-8 656.0031ms
2025-03-08 01:53:41.453 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City/1/hotels - null null
2025-03-08 01:53:41.458 -05:00 [DBG] 1 candidate(s) found for the request path '/api/City/1/hotels'
2025-03-08 01:53:41.461 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/1/hotels'
2025-03-08 01:53:41.506 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-08 01:53:41.508 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 01:53:41.514 -05:00 [DBG] Successfully validated the token.
2025-03-08 01:53:41.515 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 01:53:41.517 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-08 01:53:41.524 -05:00 [INF] Route matched with {action = "GetHotelsForCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotelsForCity(Int32) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-08 01:53:41.531 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 01:53:41.533 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 01:53:41.535 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-08 01:53:41.539 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 01:53:41.542 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 01:53:41.547 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 01:53:41.571 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-08 01:53:41.573 -05:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-03-08 01:53:41.575 -05:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-03-08 01:53:41.581 -05:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-08 01:53:41.583 -05:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-08 01:53:41.585 -05:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-03-08 01:53:41.588 -05:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-03-08 01:53:41.600 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 01:53:41.606 -05:00 [DBG] Compiling query expression: 
'DbSet<Hotel>()
    .Where(h => h.CityID == __cityId_0)
    .Include(h => h.Owner)'
2025-03-08 01:53:41.620 -05:00 [DBG] Including navigation: 'Hotel.Owner'.
2025-03-08 01:53:41.639 -05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Hotel>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
            1 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: Owner.Email (string) Required, 9], [Property: Owner.FirstName (string) Required, 10], [Property: Owner.LastName (string) Required, 11], [Property: Owner.PhoneNumber (string) Required, 12] }
        SELECT h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
        FROM Hotels AS h
        INNER JOIN owners AS o ON h.OwnerID == o.OwnerID
        WHERE h.CityID == @__cityId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
            1 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: Owner.Email (string) Required, 9], [Property: Owner.FirstName (string) Required, 10], [Property: Owner.LastName (string) Required, 11], [Property: Owner.PhoneNumber (string) Required, 12] }
        SELECT h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
        FROM Hotels AS h
        INNER JOIN owners AS o ON h.OwnerID == o.OwnerID
        WHERE h.CityID == @__cityId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Hotel entity;
        Owner entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Hotel instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Hotel);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Hotel)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                        {
                            return 
                            {
                                Hotel instance;
                                instance = new Hotel();
                                instance.<HotelId>k__BackingField = dataReader.GetInt32(0);
                                instance.<CityID>k__BackingField = dataReader.GetInt32(1);
                                instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                instance.<Name>k__BackingField = dataReader.GetString(4);
                                instance.<OwnerID>k__BackingField = dataReader.GetInt32(5);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(6);
                                instance.<StarRating>k__BackingField = dataReader.GetInt32(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Hotel)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Owner instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Owner);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Owner.OwnerID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(8) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Owner)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                        {
                            return 
                            {
                                Owner instance;
                                instance = new Owner();
                                instance.<OwnerID>k__BackingField = dataReader.GetInt32(8);
                                instance.<Email>k__BackingField = dataReader.GetString(9);
                                instance.<FirstName>k__BackingField = dataReader.GetString(10);
                                instance.<LastName>k__BackingField = dataReader.GetString(11);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Owner)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, Owner>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Hotel.Owner (Owner) ToPrincipal Owner Inverse: Hotels | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Owner")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Owner.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: Owner | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels")], 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                namelessParameter{8}.<Owner>k__BackingField = namelessParameter{9};
                return [LIFTABLE Constant: ClrICollectionAccessor<Owner, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                    entity: namelessParameter{9}, 
                    value: namelessParameter{8}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-08 01:53:41.664 -05:00 [DBG] Creating DbConnection.
2025-03-08 01:53:41.665 -05:00 [DBG] Created DbConnection. (1ms).
2025-03-08 01:53:41.666 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:53:41.668 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:53:41.670 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 01:53:41.672 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 01:53:41.673 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-08 01:53:41.678 -05:00 [DBG] Executing DbCommand [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN owners AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-03-08 01:53:41.686 -05:00 [ERR] Failed executing DbCommand (9ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN owners AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-03-08 01:53:41.690 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:53:41.692 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-08 01:53:41.699 -05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'HotelBookingPlatform.Infrastructure.Data.AppDbContext'.
Npgsql.PostgresException (0x80004005): 42P01: relation "owners" does not exist

POSITION: 225
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "owners" does not exist
    Position: 225
    File: parse_relation.c
    Line: 1449
    Routine: parserOpenTable
Npgsql.PostgresException (0x80004005): 42P01: relation "owners" does not exist

POSITION: 225
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "owners" does not exist
    Position: 225
    File: parse_relation.c
    Line: 1449
    Routine: parserOpenTable
2025-03-08 01:53:41.719 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API) in 172.7019ms
2025-03-08 01:53:41.722 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-08 01:53:41.732 -05:00 [DBG] Connection id "0HNATSNK2LLSI" completed keep alive response.
2025-03-08 01:53:41.735 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 01:53:41.737 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 01:53:41.741 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-08 01:53:41.750 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City/1/hotels - 500 null application/json 297.3193ms
2025-03-08 01:55:53.251 -05:00 [DBG] Connection id "0HNATSNK2LLSI" disconnecting.
2025-03-08 01:55:53.254 -05:00 [DBG] Connection id "0HNATSNK2LLSI" stopped.
2025-03-08 01:55:53.257 -05:00 [DBG] Connection id "0HNATSNK2LLSI" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 02:05:00.654 -05:00 [DBG] Connection id "0HNATSNK2LLSJ" accepted.
2025-03-08 02:05:00.657 -05:00 [DBG] Connection id "0HNATSNK2LLSJ" started.
2025-03-08 02:05:00.660 -05:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Owner/0 - null null
2025-03-08 02:05:00.663 -05:00 [DBG] 1 candidate(s) found for the request path '/api/Owner/0'
2025-03-08 02:05:00.665 -05:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetOwner (HotelBookingPlatform.API)' with route pattern 'api/Owner/{id}' is valid for the request path '/api/Owner/0'
2025-03-08 02:05:00.671 -05:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetOwner (HotelBookingPlatform.API)'
2025-03-08 02:05:00.674 -05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-08 02:05:00.678 -05:00 [DBG] Successfully validated the token.
2025-03-08 02:05:00.681 -05:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-08 02:05:00.684 -05:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetOwner (HotelBookingPlatform.API)'
2025-03-08 02:05:00.787 -05:00 [INF] Route matched with {action = "GetOwner", controller = "Owner"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetOwner(Int32) on controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API).
2025-03-08 02:05:00.810 -05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-08 02:05:00.821 -05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-08 02:05:00.837 -05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-08 02:05:00.868 -05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-08 02:05:00.888 -05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-08 02:05:00.892 -05:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-08 02:05:00.896 -05:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-08 02:05:00.901 -05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-08 02:05:00.903 -05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-08 02:05:00.911 -05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-08 02:05:00.934 -05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-08 02:05:00.936 -05:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-08 02:05:00.938 -05:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-08 02:05:00.980 -05:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-08 02:05:00.989 -05:00 [DBG] Creating DbConnection.
2025-03-08 02:05:00.992 -05:00 [DBG] Created DbConnection. (2ms).
2025-03-08 02:05:00.993 -05:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 02:05:01.068 -05:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 02:05:01.070 -05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-08 02:05:01.072 -05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-08 02:05:01.077 -05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-03-08 02:05:01.082 -05:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM owners AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-03-08 02:05:01.095 -05:00 [ERR] Failed executing DbCommand (13ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM owners AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-03-08 02:05:01.099 -05:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 02:05:01.100 -05:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-08 02:05:01.105 -05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'HotelBookingPlatform.Infrastructure.Data.AppDbContext'.
Npgsql.PostgresException (0x80004005): 42P01: relation "owners" does not exist

POSITION: 83
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "owners" does not exist
    Position: 83
    File: parse_relation.c
    Line: 1449
    Routine: parserOpenTable
Npgsql.PostgresException (0x80004005): 42P01: relation "owners" does not exist

POSITION: 83
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "owners" does not exist
    Position: 83
    File: parse_relation.c
    Line: 1449
    Routine: parserOpenTable
2025-03-08 02:05:01.139 -05:00 [INF] Executed action HotelBookingPlatform.API.Controllers.OwnerController.GetOwner (HotelBookingPlatform.API) in 247.3698ms
2025-03-08 02:05:01.144 -05:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetOwner (HotelBookingPlatform.API)'
2025-03-08 02:05:01.216 -05:00 [DBG] Connection id "0HNATSNK2LLSJ" completed keep alive response.
2025-03-08 02:05:01.220 -05:00 [DBG] 'AppDbContext' disposed.
2025-03-08 02:05:01.223 -05:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-08 02:05:01.226 -05:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-08 02:05:01.228 -05:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Owner/0 - 500 null application/json 568.2732ms
2025-03-08 02:05:08.600 -05:00 [DBG] Connection id "0HNATSNK2LLSJ" received FIN.
2025-03-08 02:05:08.604 -05:00 [DBG] Connection id "0HNATSNK2LLSJ" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-08 02:05:08.608 -05:00 [DBG] Connection id "0HNATSNK2LLSJ" disconnecting.
2025-03-08 02:05:08.612 -05:00 [DBG] Connection id "0HNATSNK2LLSJ" stopped.
