2025-03-10 12:54:28.252 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-10 12:54:28.595 -04:00 [DBG] Hosting starting
2025-03-10 12:54:28.645 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-10 12:54:28.664 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-10 12:54:28.733 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-10 12:54:28.761 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-10 12:54:28.770 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-10 12:54:28.780 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-10 12:54:28.786 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-10 12:54:28.809 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-10 12:54:28.824 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-10 12:54:28.847 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-10 12:54:28.850 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-10 12:54:29.071 -04:00 [ERR] Hosting failed to start
System.IO.IOException: Failed to bind to address http://127.0.0.1:5004: address already in use.
 ---> Microsoft.AspNetCore.Connections.AddressInUseException: Only one usage of each socket address (protocol/network address/port) is normally permitted.
 ---> System.Net.Sockets.SocketException (10048): Only one usage of each socket address (protocol/network address/port) is normally permitted.
   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, Boolean disconnectOnFailure, String callerName)
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateDefaultBoundListenSocket(EndPoint endpoint)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TransportManager.BindAsync(EndPoint endPoint, ConnectionDelegate connectionDelegate, EndpointConfig endpointConfig, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.<>c__DisplayClass28_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(ListenOptions[] listenOptions, AddressBindContext context, Func`2 useHttps, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-03-10 13:01:45.455 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-10 13:01:45.759 -04:00 [DBG] Hosting starting
2025-03-10 13:01:45.805 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-10 13:01:45.834 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-10 13:01:45.910 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-10 13:01:45.933 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-10 13:01:45.948 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-10 13:01:45.957 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-10 13:01:45.963 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-10 13:01:45.991 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-10 13:01:46.117 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-10 13:01:46.177 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-10 13:01:46.184 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-10 13:01:46.320 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-10 13:01:46.322 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-10 13:01:46.324 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-10 13:01:46.325 -04:00 [INF] Hosting environment: Development
2025-03-10 13:01:46.327 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-10 13:01:46.329 -04:00 [DBG] Hosting started
2025-03-10 13:01:58.654 -04:00 [DBG] Connection id "0HNAVUL2FS2TP" accepted.
2025-03-10 13:02:00.211 -04:00 [DBG] Connection id "0HNAVUL2FS2TP" started.
2025-03-10 13:02:03.087 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-10 13:02:03.124 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-10 13:02:03.385 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-10 13:02:03.412 -04:00 [DBG] Request did not match any endpoints
2025-03-10 13:02:05.632 -04:00 [DBG] Connection id "0HNAVUL2FS2TP" completed keep alive response.
2025-03-10 13:02:06.543 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 3474.5431ms
2025-03-10 13:02:13.830 -04:00 [DBG] Connection id "0HNAVUL2FS2TP" received FIN.
2025-03-10 13:02:14.807 -04:00 [DBG] Connection id "0HNAVUL2FS2TP" disconnecting.
2025-03-10 13:02:15.360 -04:00 [DBG] Connection id "0HNAVUL2FS2TP" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 13:02:15.456 -04:00 [DBG] Connection id "0HNAVUL2FS2TP" stopped.
2025-03-10 13:02:28.795 -04:00 [DBG] Connection id "0HNAVUL2FS2TQ" accepted.
2025-03-10 13:02:28.808 -04:00 [DBG] Connection id "0HNAVUL2FS2TQ" started.
2025-03-10 13:02:28.875 -04:00 [DBG] Connection id "0HNAVUL2FS2TR" accepted.
2025-03-10 13:02:29.278 -04:00 [DBG] Connection id "0HNAVUL2FS2TR" started.
2025-03-10 13:02:29.376 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/favicon.ico - null null
2025-03-10 13:02:29.569 -04:00 [DBG] No candidates found for the request path '/favicon.ico'
2025-03-10 13:02:29.573 -04:00 [DBG] Request did not match any endpoints
2025-03-10 13:02:29.629 -04:00 [DBG] The request path  does not match the path filter
2025-03-10 13:02:29.643 -04:00 [WRN] Failed to determine the https port for redirect.
2025-03-10 13:02:29.817 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-10 13:02:30.094 -04:00 [DBG] Connection id "0HNAVUL2FS2TQ" completed keep alive response.
2025-03-10 13:02:30.709 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/favicon.ico - 404 0 null 1332.4932ms
2025-03-10 13:02:31.034 -04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5004/favicon.ico, Response status code: 404
2025-03-10 13:02:48.302 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-03-10 13:02:48.308 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-03-10 13:02:48.318 -04:00 [DBG] Request did not match any endpoints
2025-03-10 13:02:48.543 -04:00 [DBG] Connection id "0HNAVUL2FS2TQ" completed keep alive response.
2025-03-10 13:02:48.680 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 377.5152ms
2025-03-10 13:02:48.738 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-03-10 13:02:49.038 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-03-10 13:02:49.397 -04:00 [DBG] Request did not match any endpoints
2025-03-10 13:02:49.497 -04:00 [DBG] Connection id "0HNAVUL2FS2TQ" completed keep alive response.
2025-03-10 13:02:49.596 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 857.4111ms
2025-03-10 13:02:50.154 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-10 13:02:50.160 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-10 13:02:50.163 -04:00 [DBG] Request did not match any endpoints
2025-03-10 13:02:50.328 -04:00 [DBG] Connection id "0HNAVUL2FS2TQ" completed keep alive response.
2025-03-10 13:02:50.339 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 184.4923ms
2025-03-10 13:03:59.986 -04:00 [DBG] Connection id "0HNAVUL2FS2TR" received FIN.
2025-03-10 13:03:59.988 -04:00 [DBG] Connection id "0HNAVUL2FS2TR" disconnecting.
2025-03-10 13:03:59.990 -04:00 [DBG] Connection id "0HNAVUL2FS2TR" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 13:03:59.993 -04:00 [DBG] Connection id "0HNAVUL2FS2TR" stopped.
2025-03-10 13:04:52.494 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/register - application/json 130
2025-03-10 13:04:52.507 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/register'
2025-03-10 13:04:52.532 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/register' is valid for the request path '/api/auth/register'
2025-03-10 13:04:52.536 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-10 13:04:52.546 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:04:52.551 -04:00 [INF] No CORS policy found for the specified request.
2025-03-10 13:04:52.560 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-10 13:04:52.565 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-10 13:04:52.666 -04:00 [INF] Route matched with {action = "Register", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RegisterAsync(HotelBookingPlatform.Domain.Helpers.RegisterModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-10 13:04:52.672 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:04:52.675 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:04:52.678 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:04:52.681 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:04:52.684 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:04:52.692 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-10 13:04:53.312 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-10 13:04:53.404 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-10 13:04:53.415 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-10 13:04:53.423 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' using the name '' in request data ...
2025-03-10 13:04:53.428 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-10 13:04:53.461 -04:00 [DBG] Connection id "0HNAVUL2FS2TQ", Request id "0HNAVUL2FS2TQ:00000005": started reading request body.
2025-03-10 13:04:53.465 -04:00 [DBG] Connection id "0HNAVUL2FS2TQ", Request id "0HNAVUL2FS2TQ:00000005": done reading request body.
2025-03-10 13:04:53.494 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'
2025-03-10 13:04:53.497 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-10 13:04:53.499 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-10 13:04:53.502 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-10 13:04:53.528 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-10 13:04:54.458 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-10 13:04:54.461 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-10 13:04:54.463 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-10 13:04:54.467 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-10 13:04:54.472 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-10 13:04:54.697 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-10 13:04:54.700 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-10 13:04:54.702 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-10 13:04:54.869 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:04:54.958 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-10 13:04:55.035 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-10 13:04:55.942 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-10 13:04:56.112 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:04:56.291 -04:00 [DBG] Created DbConnection. (188ms).
2025-03-10 13:04:56.301 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:04:57.164 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:04:57.170 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:04:57.182 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-03-10 13:04:57.193 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (22ms).
2025-03-10 13:04:57.207 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 13:04:57.316 -04:00 [INF] Executed DbCommand (112ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 13:04:57.330 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:04:57.344 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 16ms reading results.
2025-03-10 13:04:57.351 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:04:57.362 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (10ms).
2025-03-10 13:04:57.383 -04:00 [DBG] User password validation failed: PasswordRequiresUpper.
2025-03-10 13:04:57.399 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API) in 4705.2036ms
2025-03-10 13:04:57.402 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-10 13:04:57.508 -04:00 [DBG] Connection id "0HNAVUL2FS2TQ" completed keep alive response.
2025-03-10 13:04:57.513 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:04:57.530 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:04:57.534 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-10 13:04:57.541 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/register - 400 null application/json 5046.6664ms
2025-03-10 13:05:20.055 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/register - application/json 130
2025-03-10 13:05:20.064 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/register'
2025-03-10 13:05:20.110 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/register' is valid for the request path '/api/auth/register'
2025-03-10 13:05:20.120 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-10 13:05:20.124 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:05:20.126 -04:00 [INF] No CORS policy found for the specified request.
2025-03-10 13:05:20.131 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-10 13:05:20.132 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-10 13:05:20.136 -04:00 [INF] Route matched with {action = "Register", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RegisterAsync(HotelBookingPlatform.Domain.Helpers.RegisterModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-10 13:05:20.142 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:05:20.145 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:05:20.148 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:05:20.152 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:05:20.157 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:05:20.160 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-10 13:05:20.169 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-10 13:05:20.175 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-10 13:05:20.183 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' using the name '' in request data ...
2025-03-10 13:05:20.187 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-10 13:05:20.191 -04:00 [DBG] Connection id "0HNAVUL2FS2TQ", Request id "0HNAVUL2FS2TQ:00000006": started reading request body.
2025-03-10 13:05:20.193 -04:00 [DBG] Connection id "0HNAVUL2FS2TQ", Request id "0HNAVUL2FS2TQ:00000006": done reading request body.
2025-03-10 13:05:20.195 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'
2025-03-10 13:05:20.198 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-10 13:05:20.202 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-10 13:05:20.207 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-10 13:05:20.210 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-10 13:05:20.411 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:05:20.427 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:05:20.439 -04:00 [DBG] Created DbConnection. (12ms).
2025-03-10 13:05:20.444 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:20.450 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:20.452 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:05:20.454 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:05:20.459 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-03-10 13:05:20.462 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 13:05:20.470 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 13:05:20.476 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:20.478 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-10 13:05:20.501 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:20.503 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:05:20.699 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-03-10 13:05:20.703 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-10 13:05:20.776 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-10 13:05:20.817 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:20.820 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:20.825 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:05:20.827 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:05:20.830 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-10 13:05:20.832 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 13:05:20.845 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 13:05:20.850 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:20.852 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-10 13:05:20.856 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:20.858 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:05:21.078 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:05:21.091 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-10 13:05:21.104 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-10 13:05:21.159 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-10 13:05:21.278 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.280 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.283 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:05:21.285 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:05:21.289 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-10 13:05:21.293 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-03-10 13:05:21.320 -04:00 [INF] Executed DbCommand (27ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-03-10 13:05:21.334 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.336 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-03-10 13:05:21.348 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.351 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:05:21.368 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:05:21.377 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-10 13:05:21.387 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-03-10 13:05:21.410 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-10 13:05:21.428 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.430 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.432 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:05:21.434 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:05:21.436 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:05:21.440 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-10 13:05:21.449 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-10 13:05:21.480 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:05:21.514 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.516 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 62ms reading results.
2025-03-10 13:05:21.519 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.524 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-10 13:05:21.535 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-03-10 13:05:21.549 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-10 13:05:21.575 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.577 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.580 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:05:21.583 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-10 13:05:21.585 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-10 13:05:21.587 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-10 13:05:21.596 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-10 13:05:21.604 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.607 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-10 13:05:21.609 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.612 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:05:21.635 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .FirstOrDefault(e => EF.Property<string>(e, "UserId") == __p_0 && EF.Property<string>(e, "RoleId") == __p_1)'
2025-03-10 13:05:21.647 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<string>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<string>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<string> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<string> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<string>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<string>.UserId, IdentityUserRole<string>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetString(0), 
                        (object)dataReader.GetString(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<string>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]: 
                            {
                                return 
                                {
                                    IdentityUserRole<string> instance;
                                    instance = new IdentityUserRole<string>();
                                    instance.<UserId>k__BackingField = dataReader.GetString(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetString(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityUserRole<string>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-10 13:05:21.666 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.668 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.671 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:05:21.675 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-10 13:05:21.679 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-10 13:05:21.680 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-03-10 13:05:21.691 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-03-10 13:05:21.697 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.699 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-10 13:05:21.702 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.707 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-10 13:05:21.714 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.719 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.725 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:05:21.728 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-10 13:05:21.731 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-10 13:05:21.733 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-10 13:05:21.777 -04:00 [INF] Executed DbCommand (45ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-10 13:05:21.782 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.784 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-10 13:05:21.787 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.791 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-10 13:05:21.813 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityUserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:05:21.819 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.825 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.828 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:05:21.830 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:05:21.832 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:05:21.834 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 13:05:21.846 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 13:05:21.863 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.865 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 12ms reading results.
2025-03-10 13:05:21.869 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.871 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-10 13:05:21.881 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:05:21.885 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-10 13:05:21.887 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-10 13:05:21.899 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-10 13:05:21.935 -04:00 [DBG] Executing 2 update commands as a batch.
2025-03-10 13:05:21.944 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.946 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:21.950 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-10 13:05:21.961 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-10 13:05:21.964 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:05:21.966 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:05:21.968 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-10 13:05:21.970 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-03-10 13:05:21.987 -04:00 [INF] Executed DbCommand (16ms) [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-03-10 13:05:22.018 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.020 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-03-10 13:05:22.036 -04:00 [DBG] Committing transaction.
2025-03-10 13:05:22.064 -04:00 [DBG] Committed transaction.
2025-03-10 13:05:22.086 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.113 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (26ms).
2025-03-10 13:05:22.118 -04:00 [DBG] Disposing transaction.
2025-03-10 13:05:22.126 -04:00 [DBG] An entity of type 'IdentityUserRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:05:22.136 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:05:22.146 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-03-10 13:05:22.197 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-03-10 13:05:22.232 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-10 13:05:22.292 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.295 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.301 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:05:22.302 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:05:22.308 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-10 13:05:22.311 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-10 13:05:22.319 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-10 13:05:22.328 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.330 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-10 13:05:22.333 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.335 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:05:22.353 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-03-10 13:05:22.379 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-10 13:05:22.385 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.390 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.393 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:05:22.395 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-10 13:05:22.397 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-10 13:05:22.400 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-10 13:05:22.409 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-10 13:05:22.415 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.417 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-03-10 13:05:22.420 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.426 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-10 13:05:22.446 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.450 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.453 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:05:22.459 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-03-10 13:05:22.461 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-10 13:05:22.464 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 13:05:22.476 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 13:05:22.486 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.509 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 22ms reading results.
2025-03-10 13:05:22.517 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.520 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-10 13:05:22.526 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:05:22.529 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-10 13:05:22.542 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-10 13:05:22.558 -04:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LocalUser.RefreshTokens'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:05:22.587 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'RefreshToken.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:05:22.646 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:05:22.649 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-10 13:05:22.666 -04:00 [DBG] Executing 2 update commands as a batch.
2025-03-10 13:05:22.668 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.670 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.676 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-10 13:05:22.678 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-10 13:05:22.680 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:05:22.682 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:05:22.684 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-10 13:05:22.686 -04:00 [DBG] Executing DbCommand [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-03-10 13:05:22.707 -04:00 [INF] Executed DbCommand (21ms) [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-03-10 13:05:22.732 -04:00 [DBG] The foreign key property 'RefreshToken.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-10 13:05:22.770 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.776 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 61ms reading results.
2025-03-10 13:05:22.779 -04:00 [DBG] Committing transaction.
2025-03-10 13:05:22.787 -04:00 [DBG] Committed transaction.
2025-03-10 13:05:22.791 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:22.793 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-10 13:05:22.796 -04:00 [DBG] Disposing transaction.
2025-03-10 13:05:22.800 -04:00 [DBG] An entity of type 'RefreshToken' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:05:22.808 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:05:22.816 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-03-10 13:05:22.909 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:05:22.915 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:05:22.916 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:05:22.918 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:05:22.923 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:05:22.929 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-10 13:05:23.036 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API) in 2876.7182ms
2025-03-10 13:05:23.042 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-10 13:05:23.045 -04:00 [DBG] Connection id "0HNAVUL2FS2TQ" completed keep alive response.
2025-03-10 13:05:23.127 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:05:23.129 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:05:23.133 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-10 13:05:23.143 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/register - 200 null application/json; charset=utf-8 3087.8548ms
2025-03-10 13:05:54.139 -04:00 [DBG] Connection id "0HNAVUL2FS2TQ" received FIN.
2025-03-10 13:05:54.150 -04:00 [DBG] Connection id "0HNAVUL2FS2TQ" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 13:05:54.159 -04:00 [DBG] Connection id "0HNAVUL2FS2TQ" disconnecting.
2025-03-10 13:05:54.174 -04:00 [DBG] Connection id "0HNAVUL2FS2TQ" stopped.
2025-03-10 13:06:07.935 -04:00 [DBG] Connection id "0HNAVUL2FS2TS" accepted.
2025-03-10 13:06:07.937 -04:00 [DBG] Connection id "0HNAVUL2FS2TS" started.
2025-03-10 13:06:07.939 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 63
2025-03-10 13:06:07.949 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-10 13:06:07.961 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-10 13:06:07.967 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-10 13:06:07.969 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:06:07.970 -04:00 [INF] No CORS policy found for the specified request.
2025-03-10 13:06:07.972 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-10 13:06:07.976 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-10 13:06:07.987 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-10 13:06:07.995 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:06:07.999 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:06:08.001 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:06:08.004 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:06:08.006 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:06:08.011 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-10 13:06:08.051 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-10 13:06:08.055 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-10 13:06:08.060 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-10 13:06:08.065 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-10 13:06:08.068 -04:00 [DBG] Connection id "0HNAVUL2FS2TS", Request id "0HNAVUL2FS2TS:00000001": started reading request body.
2025-03-10 13:06:08.070 -04:00 [DBG] Connection id "0HNAVUL2FS2TS", Request id "0HNAVUL2FS2TS:00000001": done reading request body.
2025-03-10 13:06:08.077 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-10 13:06:08.079 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-10 13:06:08.082 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-10 13:06:08.085 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-10 13:06:08.094 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-10 13:06:08.119 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:06:08.126 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:06:08.128 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 13:06:08.130 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:06:08.134 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:06:08.136 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:06:08.138 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-10 13:06:08.143 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-10 13:06:08.146 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 13:06:08.154 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 13:06:08.164 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:06:08.175 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:06:08.178 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:06:08.179 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 16ms reading results.
2025-03-10 13:06:08.184 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:06:08.187 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:06:08.334 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:06:08.336 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:06:08.338 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:06:08.339 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:06:08.344 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-10 13:06:08.345 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-10 13:06:08.352 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-10 13:06:08.355 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:06:08.360 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-03-10 13:06:08.363 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:06:08.365 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:06:08.369 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:06:08.372 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:06:08.378 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:06:08.380 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-10 13:06:08.381 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:06:08.384 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-10 13:06:08.393 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-10 13:06:08.399 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:06:08.401 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-10 13:06:08.404 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:06:08.406 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:06:08.414 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:06:08.416 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:06:08.419 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:06:08.420 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:06:08.422 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:06:08.427 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-10 13:06:08.434 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-10 13:06:08.439 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:06:08.444 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-03-10 13:06:08.446 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:06:08.449 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:06:08.454 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:06:08.462 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:06:08.463 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:06:08.465 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:06:08.467 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:06:08.469 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-10 13:06:08.477 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 466.2864ms
2025-03-10 13:06:08.481 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-10 13:06:08.485 -04:00 [DBG] Connection id "0HNAVUL2FS2TS" completed keep alive response.
2025-03-10 13:06:08.494 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:06:08.496 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:06:08.499 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:06:08.506 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 566.4289ms
2025-03-10 13:06:14.168 -04:00 [DBG] Connection id "0HNAVUL2FS2TS" received FIN.
2025-03-10 13:06:14.171 -04:00 [DBG] Connection id "0HNAVUL2FS2TS" disconnecting.
2025-03-10 13:06:14.175 -04:00 [DBG] Connection id "0HNAVUL2FS2TS" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 13:06:14.190 -04:00 [DBG] Connection id "0HNAVUL2FS2TS" stopped.
2025-03-10 13:08:07.494 -04:00 [DBG] Connection id "0HNAVUL2FS2TT" accepted.
2025-03-10 13:08:07.499 -04:00 [DBG] Connection id "0HNAVUL2FS2TT" started.
2025-03-10 13:08:07.500 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Owner - application/json 115
2025-03-10 13:08:07.574 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Owner'
2025-03-10 13:08:07.586 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)' with route pattern 'api/Owner' is valid for the request path '/api/Owner'
2025-03-10 13:08:07.606 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)'
2025-03-10 13:08:07.610 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:08:07.622 -04:00 [INF] No CORS policy found for the specified request.
2025-03-10 13:08:07.742 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:08:07.748 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:08:07.769 -04:00 [DBG] Authorization was successful.
2025-03-10 13:08:07.772 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)'
2025-03-10 13:08:07.789 -04:00 [INF] Route matched with {action = "CreateOwner", controller = "Owner"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateOwner(HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto) on controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API).
2025-03-10 13:08:07.822 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:08:07.825 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:08:07.838 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:08:07.843 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:08:07.855 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:08:07.859 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-10 13:08:08.075 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-10 13:08:08.078 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto' ...
2025-03-10 13:08:08.081 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto' using the name '' in request data ...
2025-03-10 13:08:08.084 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-10 13:08:08.088 -04:00 [DBG] Connection id "0HNAVUL2FS2TT", Request id "0HNAVUL2FS2TT:00000001": started reading request body.
2025-03-10 13:08:08.092 -04:00 [DBG] Connection id "0HNAVUL2FS2TT", Request id "0HNAVUL2FS2TT:00000001": done reading request body.
2025-03-10 13:08:08.101 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'
2025-03-10 13:08:08.104 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'.
2025-03-10 13:08:08.109 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'.
2025-03-10 13:08:08.114 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto' ...
2025-03-10 13:08:08.120 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'.
2025-03-10 13:08:08.149 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:08:08.204 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Owner.OwnerID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:08:08.257 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:08:08.260 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-10 13:08:08.276 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-10 13:08:08.295 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-10 13:08:08.326 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:08:08.342 -04:00 [DBG] Created DbConnection. (16ms).
2025-03-10 13:08:08.350 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:08:08.357 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:08:08.370 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:08:08.373 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-10 13:08:08.377 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-10 13:08:08.385 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Owners" ("Email", "FirstName", "LastName", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "OwnerID";
2025-03-10 13:08:08.405 -04:00 [INF] Executed DbCommand (21ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Owners" ("Email", "FirstName", "LastName", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "OwnerID";
2025-03-10 13:08:08.411 -04:00 [DBG] The foreign key property 'Owner.OwnerID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-10 13:08:08.421 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:08:08.423 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 13ms reading results.
2025-03-10 13:08:08.426 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:08:08.432 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-10 13:08:08.440 -04:00 [DBG] An entity of type 'Owner' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:08:08.452 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-10 13:08:08.470 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:08:08.486 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:08:08.487 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:08:08.489 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:08:08.490 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:08:08.492 -04:00 [INF] Executing CreatedResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Owner.OwnerDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-10 13:08:08.512 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API) in 652.239ms
2025-03-10 13:08:08.519 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.CreateOwner (HotelBookingPlatform.API)'
2025-03-10 13:08:08.521 -04:00 [DBG] Connection id "0HNAVUL2FS2TT" completed keep alive response.
2025-03-10 13:08:08.528 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:08:08.534 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:08:08.538 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-10 13:08:08.543 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Owner - 201 null application/json; charset=utf-8 1042.6559ms
2025-03-10 13:08:09.287 -04:00 [DBG] Connection id "0HNAVUL2FS2TT" received FIN.
2025-03-10 13:08:09.667 -04:00 [DBG] Connection id "0HNAVUL2FS2TT" disconnecting.
2025-03-10 13:08:09.819 -04:00 [DBG] Connection id "0HNAVUL2FS2TT" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 13:08:09.826 -04:00 [DBG] Connection id "0HNAVUL2FS2TT" stopped.
2025-03-10 13:08:52.304 -04:00 [DBG] Connection id "0HNAVUL2FS2TU" accepted.
2025-03-10 13:08:52.306 -04:00 [DBG] Connection id "0HNAVUL2FS2TU" started.
2025-03-10 13:08:52.308 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Owner - null null
2025-03-10 13:08:52.311 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Owner'
2025-03-10 13:08:52.319 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetAllOwners (HotelBookingPlatform.API)' with route pattern 'api/Owner' is valid for the request path '/api/Owner'
2025-03-10 13:08:52.373 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetAllOwners (HotelBookingPlatform.API)'
2025-03-10 13:08:52.376 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:08:52.379 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:08:52.383 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:08:52.386 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetAllOwners (HotelBookingPlatform.API)'
2025-03-10 13:08:52.391 -04:00 [INF] Route matched with {action = "GetAllOwners", controller = "Owner"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllOwners() on controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API).
2025-03-10 13:08:52.400 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:08:52.405 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:08:52.409 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:08:52.418 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:08:52.420 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:08:52.423 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-10 13:08:52.426 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-10 13:08:52.436 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:08:52.444 -04:00 [DBG] Compiling query expression: 
'DbSet<Owner>()
    .AsNoTracking()'
2025-03-10 13:08:52.462 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Owner>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Owner.Email (string) Required, 1], [Property: Owner.FirstName (string) Required MaxLength(50), 2], [Property: Owner.LastName (string) Required MaxLength(50), 3], [Property: Owner.PhoneNumber (string) Required, 4] }
        SELECT o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
        FROM Owners AS o) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Owner.Email (string) Required, 1], [Property: Owner.FirstName (string) Required MaxLength(50), 2], [Property: Owner.LastName (string) Required MaxLength(50), 3], [Property: Owner.PhoneNumber (string) Required, 4] }
        SELECT o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
        FROM Owners AS o, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Owner entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Owner instance1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Owner);
            (object)dataReader.GetInt32(0) != null ? 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                        {
                            return 
                            {
                                Owner instance;
                                instance = new Owner();
                                instance.<OwnerID>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<FirstName>k__BackingField = dataReader.GetString(2);
                                instance.<LastName>k__BackingField = dataReader.GetString(3);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(4);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: NoTracking, 
                                    structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Owner)
                }
                ;
                return instance1;
            } : 
            {
                object[] keyValues1;
                keyValues1 = new object[]{ (object)dataReader.GetInt32(0) };
                return ShapedQueryCompilingExpressionVisitor.CreateNullKeyValueInNoTrackingQuery(
                    entityType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")], 
                    properties: [LIFTABLE Constant: List<RuntimeProperty> { Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd } | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey().Properties], 
                    keyValues: keyValues1);
            };
            return instance1;
        };
        return entity;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-10 13:08:52.477 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:08:52.478 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 13:08:52.480 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:08:52.484 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:08:52.486 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:08:52.487 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:08:52.489 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:08:52.492 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
2025-03-10 13:08:52.500 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
2025-03-10 13:08:52.504 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:08:52.506 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-10 13:08:52.508 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:08:52.512 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-10 13:08:52.529 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:08:52.536 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:08:52.537 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:08:52.538 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:08:52.540 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:08:52.543 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[HotelBookingPlatform.Domain.DTOs.Owner.OwnerDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-10 13:08:52.550 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.OwnerController.GetAllOwners (HotelBookingPlatform.API) in 126.8684ms
2025-03-10 13:08:52.553 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetAllOwners (HotelBookingPlatform.API)'
2025-03-10 13:08:52.555 -04:00 [DBG] Connection id "0HNAVUL2FS2TU" completed keep alive response.
2025-03-10 13:08:52.557 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:08:52.570 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:08:52.573 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:08:52.578 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Owner - 200 null application/json; charset=utf-8 269.3625ms
2025-03-10 13:08:59.320 -04:00 [DBG] Connection id "0HNAVUL2FS2TU" received FIN.
2025-03-10 13:08:59.325 -04:00 [DBG] Connection id "0HNAVUL2FS2TU" disconnecting.
2025-03-10 13:08:59.327 -04:00 [DBG] Connection id "0HNAVUL2FS2TU" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 13:08:59.335 -04:00 [DBG] Connection id "0HNAVUL2FS2TU" stopped.
2025-03-10 13:09:22.389 -04:00 [DBG] Connection id "0HNAVUL2FS2TV" accepted.
2025-03-10 13:09:22.624 -04:00 [DBG] Connection id "0HNAVUL2FS2TV" started.
2025-03-10 13:09:22.741 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Owner/2 - null null
2025-03-10 13:09:23.009 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Owner/2'
2025-03-10 13:09:23.203 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetOwner (HotelBookingPlatform.API)' with route pattern 'api/Owner/{id}' is valid for the request path '/api/Owner/2'
2025-03-10 13:09:23.504 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetOwner (HotelBookingPlatform.API)'
2025-03-10 13:09:23.731 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:09:23.862 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:09:24.017 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:09:24.189 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetOwner (HotelBookingPlatform.API)'
2025-03-10 13:09:24.348 -04:00 [INF] Route matched with {action = "GetOwner", controller = "Owner"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetOwner(Int32) on controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API).
2025-03-10 13:09:24.363 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:09:24.436 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:09:24.661 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:09:24.935 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:09:24.992 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:09:24.997 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-10 13:09:25.043 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-10 13:09:25.077 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-10 13:09:25.120 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-10 13:09:25.169 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:09:25.236 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:09:25.274 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-10 13:09:25.278 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-10 13:09:25.292 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:09:25.309 -04:00 [DBG] Compiling query expression: 
'DbSet<Owner>()
    .FirstOrDefault(e => EF.Property<int>(e, "OwnerID") == __p_0)'
2025-03-10 13:09:25.539 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Owner>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Owner>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Owner.Email (string) Required, 1], [Property: Owner.FirstName (string) Required MaxLength(50), 2], [Property: Owner.LastName (string) Required MaxLength(50), 3], [Property: Owner.PhoneNumber (string) Required, 4] }
            SELECT TOP(1) o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Owners AS o
            WHERE o.OwnerID == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Owner.Email (string) Required, 1], [Property: Owner.FirstName (string) Required MaxLength(50), 2], [Property: Owner.LastName (string) Required MaxLength(50), 3], [Property: Owner.PhoneNumber (string) Required, 4] }
            SELECT TOP(1) o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Owners AS o
            WHERE o.OwnerID == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Owner entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Owner instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Owner);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Owner.OwnerID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Owner)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                            {
                                return 
                                {
                                    Owner instance;
                                    instance = new Owner();
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(2);
                                    instance.<LastName>k__BackingField = dataReader.GetString(3);
                                    instance.<PhoneNumber>k__BackingField = dataReader.GetString(4);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Owner)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-10 13:09:26.234 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:09:26.446 -04:00 [DBG] Created DbConnection. (211ms).
2025-03-10 13:09:26.650 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:09:26.801 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:09:26.896 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:09:26.926 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (30ms).
2025-03-10 13:09:26.986 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (89ms).
2025-03-10 13:09:27.088 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-03-10 13:09:27.248 -04:00 [INF] Executed DbCommand (160ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-03-10 13:09:27.288 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:09:27.396 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:09:27.517 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 230ms reading results.
2025-03-10 13:09:27.531 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:09:27.653 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (121ms).
2025-03-10 13:09:27.738 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:09:27.770 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:09:27.775 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:09:27.780 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:09:27.812 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:09:27.843 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Owner.OwnerDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-10 13:09:27.870 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.OwnerController.GetOwner (HotelBookingPlatform.API) in 2873.0633ms
2025-03-10 13:09:27.876 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetOwner (HotelBookingPlatform.API)'
2025-03-10 13:09:27.880 -04:00 [DBG] Connection id "0HNAVUL2FS2TV" completed keep alive response.
2025-03-10 13:09:28.359 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:09:28.464 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:09:28.563 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (98ms).
2025-03-10 13:09:28.704 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Owner/2 - 200 null application/json; charset=utf-8 5962.7543ms
2025-03-10 13:09:29.363 -04:00 [DBG] Connection id "0HNAVUL2FS2TV" received FIN.
2025-03-10 13:09:29.463 -04:00 [DBG] Connection id "0HNAVUL2FS2TV" disconnecting.
2025-03-10 13:09:29.479 -04:00 [DBG] Connection id "0HNAVUL2FS2TV" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 13:09:29.485 -04:00 [DBG] Connection id "0HNAVUL2FS2TV" stopped.
2025-03-10 13:11:17.058 -04:00 [DBG] Connection id "0HNAVUL2FS2U0" accepted.
2025-03-10 13:11:17.060 -04:00 [DBG] Connection id "0HNAVUL2FS2U0" started.
2025-03-10 13:11:17.062 -04:00 [INF] Request starting HTTP/1.1 PUT http://localhost:5004/api/Owner/1 - application/json 113
2025-03-10 13:11:17.067 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Owner/1'
2025-03-10 13:11:17.069 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.UpdateOwner (HotelBookingPlatform.API)' with route pattern 'api/Owner/{id}' is valid for the request path '/api/Owner/1'
2025-03-10 13:11:17.079 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.UpdateOwner (HotelBookingPlatform.API)'
2025-03-10 13:11:17.086 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:11:17.091 -04:00 [INF] No CORS policy found for the specified request.
2025-03-10 13:11:17.094 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:11:17.096 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:11:17.101 -04:00 [DBG] Authorization was successful.
2025-03-10 13:11:17.106 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.UpdateOwner (HotelBookingPlatform.API)'
2025-03-10 13:11:17.128 -04:00 [INF] Route matched with {action = "UpdateOwner", controller = "Owner"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateOwner(Int32, HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto) on controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API).
2025-03-10 13:11:17.132 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:11:17.134 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:11:17.140 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:11:17.148 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:11:17.150 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:11:17.158 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-10 13:11:17.163 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-10 13:11:17.174 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-10 13:11:17.186 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-10 13:11:17.194 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:11:17.197 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:11:17.200 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-10 13:11:17.210 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-10 13:11:17.213 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto' ...
2025-03-10 13:11:17.216 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto' using the name '' in request data ...
2025-03-10 13:11:17.219 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-10 13:11:17.225 -04:00 [DBG] Connection id "0HNAVUL2FS2U0", Request id "0HNAVUL2FS2U0:00000001": started reading request body.
2025-03-10 13:11:17.228 -04:00 [DBG] Connection id "0HNAVUL2FS2U0", Request id "0HNAVUL2FS2U0:00000001": done reading request body.
2025-03-10 13:11:17.230 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'
2025-03-10 13:11:17.232 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'.
2025-03-10 13:11:17.234 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'.
2025-03-10 13:11:17.236 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto' ...
2025-03-10 13:11:17.242 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Owner.OwnerCreateDto'.
2025-03-10 13:11:17.246 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:11:17.250 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:11:17.252 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 13:11:17.256 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:11:17.296 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:11:17.298 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:11:17.300 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:11:17.302 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-10 13:11:17.307 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-03-10 13:11:17.314 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-03-10 13:11:17.318 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:11:17.323 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:11:17.327 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-03-10 13:11:17.329 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:11:17.331 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-10 13:11:17.344 -04:00 [DBG] The unchanged property 'Owner.Email' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-10 13:11:17.347 -04:00 [DBG] An entity of type 'Owner' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:11:17.351 -04:00 [DBG] The unchanged property 'Owner.FirstName' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-10 13:11:17.353 -04:00 [DBG] The unchanged property 'Owner.LastName' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-10 13:11:17.359 -04:00 [DBG] The unchanged property 'Owner.PhoneNumber' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-10 13:11:17.368 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-10 13:11:17.369 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-10 13:11:17.374 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-10 13:11:17.377 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:11:17.379 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:11:17.382 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:11:17.384 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:11:17.386 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:11:17.390 -04:00 [DBG] Executing DbCommand [Parameters=[@p4='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Owners" SET "Email" = @p0, "FirstName" = @p1, "LastName" = @p2, "PhoneNumber" = @p3
WHERE "OwnerID" = @p4;
2025-03-10 13:11:17.402 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?', @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Owners" SET "Email" = @p0, "FirstName" = @p1, "LastName" = @p2, "PhoneNumber" = @p3
WHERE "OwnerID" = @p4;
2025-03-10 13:11:17.411 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:11:17.415 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-03-10 13:11:17.418 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:11:17.420 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:11:17.427 -04:00 [DBG] An entity of type 'Owner' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:11:17.431 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-10 13:11:17.435 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:11:17.461 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:11:17.466 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:11:17.492 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:11:17.495 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:11:17.498 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Owner.OwnerDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-10 13:11:17.502 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.OwnerController.UpdateOwner (HotelBookingPlatform.API) in 343.4273ms
2025-03-10 13:11:17.510 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.UpdateOwner (HotelBookingPlatform.API)'
2025-03-10 13:11:17.512 -04:00 [DBG] Connection id "0HNAVUL2FS2U0" completed keep alive response.
2025-03-10 13:11:17.518 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:11:17.531 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:11:17.635 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (104ms).
2025-03-10 13:11:17.668 -04:00 [INF] Request finished HTTP/1.1 PUT http://localhost:5004/api/Owner/1 - 200 null application/json; charset=utf-8 606.1244ms
2025-03-10 13:11:24.491 -04:00 [DBG] Connection id "0HNAVUL2FS2U0" received FIN.
2025-03-10 13:11:24.500 -04:00 [DBG] Connection id "0HNAVUL2FS2U0" disconnecting.
2025-03-10 13:11:24.518 -04:00 [DBG] Connection id "0HNAVUL2FS2U0" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 13:11:24.537 -04:00 [DBG] Connection id "0HNAVUL2FS2U0" stopped.
2025-03-10 13:11:36.936 -04:00 [DBG] Connection id "0HNAVUL2FS2U1" accepted.
2025-03-10 13:11:36.938 -04:00 [DBG] Connection id "0HNAVUL2FS2U1" started.
2025-03-10 13:11:36.940 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Owner - null null
2025-03-10 13:11:36.944 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Owner'
2025-03-10 13:11:36.947 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetAllOwners (HotelBookingPlatform.API)' with route pattern 'api/Owner' is valid for the request path '/api/Owner'
2025-03-10 13:11:36.959 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetAllOwners (HotelBookingPlatform.API)'
2025-03-10 13:11:36.964 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:11:36.965 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:11:36.966 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:11:36.968 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetAllOwners (HotelBookingPlatform.API)'
2025-03-10 13:11:36.970 -04:00 [INF] Route matched with {action = "GetAllOwners", controller = "Owner"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllOwners() on controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API).
2025-03-10 13:11:36.975 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:11:36.978 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:11:36.980 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:11:36.983 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:11:36.985 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:11:36.987 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-10 13:11:36.994 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.OwnerController (HotelBookingPlatform.API)
2025-03-10 13:11:36.997 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:11:37.000 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:11:37.002 -04:00 [DBG] Created DbConnection. (2ms).
2025-03-10 13:11:37.003 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:11:37.012 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:11:37.015 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:11:37.018 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-10 13:11:37.020 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-10 13:11:37.025 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
2025-03-10 13:11:37.030 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
2025-03-10 13:11:37.033 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:11:37.035 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-03-10 13:11:37.041 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:11:37.044 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-10 13:11:37.047 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:11:37.053 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:11:37.054 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:11:37.063 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:11:37.064 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:11:37.066 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[HotelBookingPlatform.Domain.DTOs.Owner.OwnerDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-10 13:11:37.070 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.OwnerController.GetAllOwners (HotelBookingPlatform.API) in 82.1276ms
2025-03-10 13:11:37.091 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.OwnerController.GetAllOwners (HotelBookingPlatform.API)'
2025-03-10 13:11:37.093 -04:00 [DBG] Connection id "0HNAVUL2FS2U1" completed keep alive response.
2025-03-10 13:11:37.097 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:11:37.106 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:11:37.110 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-10 13:11:37.115 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Owner - 200 null application/json; charset=utf-8 175.1904ms
2025-03-10 13:13:19.444 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/City - application/json 127
2025-03-10 13:13:19.461 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City'
2025-03-10 13:13:19.593 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)' with route pattern 'api/City' is valid for the request path '/api/City'
2025-03-10 13:13:19.605 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)'
2025-03-10 13:13:19.607 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:13:19.608 -04:00 [INF] No CORS policy found for the specified request.
2025-03-10 13:13:19.620 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:13:19.672 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:13:19.734 -04:00 [DBG] Authorization was successful.
2025-03-10 13:13:19.763 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)'
2025-03-10 13:13:19.802 -04:00 [INF] Route matched with {action = "AddCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCity(HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-10 13:13:19.836 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:13:19.850 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:13:19.858 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:13:19.863 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:13:19.865 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:13:19.867 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-10 13:13:19.889 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-10 13:13:19.892 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest' ...
2025-03-10 13:13:19.897 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest' using the name '' in request data ...
2025-03-10 13:13:19.899 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-10 13:13:19.905 -04:00 [DBG] Connection id "0HNAVUL2FS2U1", Request id "0HNAVUL2FS2U1:00000002": started reading request body.
2025-03-10 13:13:19.907 -04:00 [DBG] Connection id "0HNAVUL2FS2U1", Request id "0HNAVUL2FS2U1:00000002": done reading request body.
2025-03-10 13:13:19.923 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'
2025-03-10 13:13:19.932 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'.
2025-03-10 13:13:19.934 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'.
2025-03-10 13:13:19.936 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest' ...
2025-03-10 13:13:19.941 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.City.CityCreateRequest'.
2025-03-10 13:13:19.952 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:13:19.962 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'City.CityID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:13:19.988 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:13:19.990 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-10 13:13:19.992 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-10 13:13:20.001 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-10 13:13:20.005 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:13:20.006 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 13:13:20.008 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:13:20.013 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:13:20.015 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:13:20.018 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:13:20.029 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (13ms).
2025-03-10 13:13:20.031 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Cities" ("Country", "CreatedAtUtc", "Description", "Name", "PostOffice", "VisitCount")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "CityID";
2025-03-10 13:13:20.056 -04:00 [INF] Executed DbCommand (25ms) [Parameters=[@p0='?', @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Cities" ("Country", "CreatedAtUtc", "Description", "Name", "PostOffice", "VisitCount")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "CityID";
2025-03-10 13:13:20.071 -04:00 [DBG] The foreign key property 'City.CityID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-10 13:13:20.074 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:13:20.082 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 14ms reading results.
2025-03-10 13:13:20.086 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:13:20.089 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:13:20.097 -04:00 [DBG] An entity of type 'City' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:13:20.101 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-10 13:13:20.120 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:13:20.130 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:13:20.131 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:13:20.135 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:13:20.138 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:13:20.147 -04:00 [INF] Executing CreatedResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.City.CityResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-10 13:13:20.157 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API) in 290.0452ms
2025-03-10 13:13:20.163 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddCity (HotelBookingPlatform.API)'
2025-03-10 13:13:20.168 -04:00 [DBG] Connection id "0HNAVUL2FS2U1" completed keep alive response.
2025-03-10 13:13:20.187 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:13:20.190 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:13:20.198 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-10 13:13:20.201 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/City - 201 null application/json; charset=utf-8 756.4809ms
2025-03-10 13:14:00.402 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City?CityName=Delmas&Description=Commune%20de%20Delmas%2C%20Departement%20Ouest&pageSize=10&pageNumber=1 - null null
2025-03-10 13:14:00.406 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City'
2025-03-10 13:14:00.408 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCities (HotelBookingPlatform.API)' with route pattern 'api/City' is valid for the request path '/api/City'
2025-03-10 13:14:00.415 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCities (HotelBookingPlatform.API)'
2025-03-10 13:14:00.427 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:14:00.436 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:14:00.438 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:14:00.440 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCities (HotelBookingPlatform.API)'
2025-03-10 13:14:00.454 -04:00 [INF] Route matched with {action = "GetCities", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCities(System.String, System.String, Int32, Int32) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-10 13:14:00.460 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:14:00.470 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:14:00.472 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:14:00.476 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:14:00.483 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:14:00.486 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-10 13:14:00.490 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-10 13:14:00.505 -04:00 [DBG] Attempting to bind parameter 'CityName' of type 'System.String' ...
2025-03-10 13:14:00.508 -04:00 [DBG] Attempting to bind parameter 'CityName' of type 'System.String' using the name 'CityName' in request data ...
2025-03-10 13:14:00.513 -04:00 [DBG] Done attempting to bind parameter 'CityName' of type 'System.String'.
2025-03-10 13:14:00.516 -04:00 [DBG] Done attempting to bind parameter 'CityName' of type 'System.String'.
2025-03-10 13:14:00.518 -04:00 [DBG] Attempting to validate the bound parameter 'CityName' of type 'System.String' ...
2025-03-10 13:14:00.520 -04:00 [DBG] Done attempting to validate the bound parameter 'CityName' of type 'System.String'.
2025-03-10 13:14:00.524 -04:00 [DBG] Attempting to bind parameter 'Description' of type 'System.String' ...
2025-03-10 13:14:00.532 -04:00 [DBG] Attempting to bind parameter 'Description' of type 'System.String' using the name 'Description' in request data ...
2025-03-10 13:14:00.534 -04:00 [DBG] Done attempting to bind parameter 'Description' of type 'System.String'.
2025-03-10 13:14:00.536 -04:00 [DBG] Done attempting to bind parameter 'Description' of type 'System.String'.
2025-03-10 13:14:00.538 -04:00 [DBG] Attempting to validate the bound parameter 'Description' of type 'System.String' ...
2025-03-10 13:14:00.542 -04:00 [DBG] Done attempting to validate the bound parameter 'Description' of type 'System.String'.
2025-03-10 13:14:00.548 -04:00 [DBG] Attempting to bind parameter 'pageSize' of type 'System.Int32' ...
2025-03-10 13:14:00.551 -04:00 [DBG] Attempting to bind parameter 'pageSize' of type 'System.Int32' using the name 'pageSize' in request data ...
2025-03-10 13:14:00.553 -04:00 [DBG] Done attempting to bind parameter 'pageSize' of type 'System.Int32'.
2025-03-10 13:14:00.555 -04:00 [DBG] Done attempting to bind parameter 'pageSize' of type 'System.Int32'.
2025-03-10 13:14:00.558 -04:00 [DBG] Attempting to validate the bound parameter 'pageSize' of type 'System.Int32' ...
2025-03-10 13:14:00.560 -04:00 [DBG] Done attempting to validate the bound parameter 'pageSize' of type 'System.Int32'.
2025-03-10 13:14:00.565 -04:00 [DBG] Attempting to bind parameter 'pageNumber' of type 'System.Int32' ...
2025-03-10 13:14:00.567 -04:00 [DBG] Attempting to bind parameter 'pageNumber' of type 'System.Int32' using the name 'pageNumber' in request data ...
2025-03-10 13:14:00.570 -04:00 [DBG] Done attempting to bind parameter 'pageNumber' of type 'System.Int32'.
2025-03-10 13:14:00.573 -04:00 [DBG] Done attempting to bind parameter 'pageNumber' of type 'System.Int32'.
2025-03-10 13:14:00.576 -04:00 [DBG] Attempting to validate the bound parameter 'pageNumber' of type 'System.Int32' ...
2025-03-10 13:14:00.583 -04:00 [DBG] Done attempting to validate the bound parameter 'pageNumber' of type 'System.Int32'.
2025-03-10 13:14:00.604 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:14:00.620 -04:00 [DBG] Compiling query expression: 
'DbSet<City>()
    .Where(c => True && c.Name.Contains(__cityName_0) || True && c.Description.Contains(__description_1))
    .Skip(__p_2)
    .Take(__p_3)'
2025-03-10 13:14:00.636 -04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-03-10 13:14:00.640 -04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-03-10 13:14:00.657 -04:00 [DBG] Generated query execution expression: 
'queryContext => 
{
    queryContext.AddParameter(
        name: "__cityName_0_contains", 
        value: (object)Invoke(queryContext => NpgsqlSqlTranslatingExpressionVisitor.ConstructLikePatternParameter(
            queryContext: queryContext, 
            baseParameterName: "__cityName_0", 
            methodType: Contains), queryContext));
    queryContext.AddParameter(
        name: "__description_1_contains", 
        value: (object)Invoke(queryContext => NpgsqlSqlTranslatingExpressionVisitor.ConstructLikePatternParameter(
            queryContext: queryContext, 
            baseParameterName: "__description_1", 
            methodType: Contains), queryContext));
    return SingleQueryingEnumerable.Create<City>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE (c.Name LIKE @__cityName_0_contains) || (c.Description LIKE @__description_1_contains)
            OFFSET @__p_2 ROWS FETCH NEXT @__p_3 ROWS ONLY) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE (c.Name LIKE @__cityName_0_contains) || (c.Description LIKE @__description_1_contains)
            OFFSET @__p_2 ROWS FETCH NEXT @__p_3 ROWS ONLY, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            City entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                City instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(City);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: City.CityID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (City)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]: 
                            {
                                return 
                                {
                                    City instance;
                                    instance = new City();
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Country>k__BackingField = dataReader.GetString(1);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.GetString(3);
                                    instance.<Name>k__BackingField = dataReader.GetString(4);
                                    instance.<PostOffice>k__BackingField = dataReader.GetString(5);
                                    instance.<VisitCount>k__BackingField = dataReader.GetInt32(6);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(City)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True);
}'
2025-03-10 13:14:00.676 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:14:00.677 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 13:14:00.684 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:14:00.686 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:14:00.689 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:14:00.691 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:14:00.693 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:14:00.698 -04:00 [DBG] Executing DbCommand [Parameters=[@__cityName_0_contains='?', @__description_1_contains='?', @__p_3='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."Name" LIKE @__cityName_0_contains OR c."Description" LIKE @__description_1_contains
LIMIT @__p_3 OFFSET @__p_2
2025-03-10 13:14:00.710 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__cityName_0_contains='?', @__description_1_contains='?', @__p_3='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."Name" LIKE @__cityName_0_contains OR c."Description" LIKE @__description_1_contains
LIMIT @__p_3 OFFSET @__p_2
2025-03-10 13:14:00.718 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:14:00.724 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:14:00.727 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-03-10 13:14:00.734 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:14:00.736 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:14:00.740 -04:00 [DBG] The unchanged property 'City.VisitCount' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-10 13:14:00.743 -04:00 [DBG] An entity of type 'City' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:14:00.748 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-10 13:14:00.754 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-10 13:14:00.767 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-10 13:14:00.770 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:14:00.773 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:14:00.775 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:14:00.776 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:14:00.783 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-10 13:14:00.785 -04:00 [DBG] Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Cities" SET "VisitCount" = @p0
WHERE "CityID" = @p1;
2025-03-10 13:14:00.796 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Cities" SET "VisitCount" = @p0
WHERE "CityID" = @p1;
2025-03-10 13:14:00.803 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:14:00.805 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-10 13:14:00.809 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:14:00.811 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:14:00.814 -04:00 [DBG] An entity of type 'City' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:14:00.818 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-10 13:14:00.831 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:14:00.835 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:14:00.836 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:14:00.838 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:14:00.839 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:14:00.843 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.City.CityResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-10 13:14:00.854 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetCities (HotelBookingPlatform.API) in 368.8301ms
2025-03-10 13:14:00.858 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetCities (HotelBookingPlatform.API)'
2025-03-10 13:14:00.859 -04:00 [DBG] Connection id "0HNAVUL2FS2U1" completed keep alive response.
2025-03-10 13:14:00.865 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:14:00.867 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:14:00.869 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:14:00.874 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City?CityName=Delmas&Description=Commune%20de%20Delmas%2C%20Departement%20Ouest&pageSize=10&pageNumber=1 - 200 null application/json; charset=utf-8 472.2531ms
2025-03-10 13:15:30.998 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/City/4/hotels - application/json 157
2025-03-10 13:15:31.002 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/4/hotels'
2025-03-10 13:15:31.004 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/4/hotels'
2025-03-10 13:15:31.011 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-03-10 13:15:31.029 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:15:31.036 -04:00 [INF] No CORS policy found for the specified request.
2025-03-10 13:15:31.042 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:15:31.043 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:15:31.045 -04:00 [DBG] Authorization was successful.
2025-03-10 13:15:31.047 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-03-10 13:15:31.059 -04:00 [INF] Route matched with {action = "AddHotelToCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddHotelToCity(Int32, HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-10 13:15:31.062 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:15:31.071 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:15:31.079 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:15:31.089 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:15:31.094 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:15:31.098 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-10 13:15:31.110 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-10 13:15:31.113 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-03-10 13:15:31.121 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-03-10 13:15:31.124 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-10 13:15:31.126 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-10 13:15:31.128 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-03-10 13:15:31.130 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-03-10 13:15:31.135 -04:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-03-10 13:15:31.138 -04:00 [DBG] Attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' using the name '' in request data ...
2025-03-10 13:15:31.140 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-10 13:15:31.143 -04:00 [DBG] Connection id "0HNAVUL2FS2U1", Request id "0HNAVUL2FS2U1:00000004": started reading request body.
2025-03-10 13:15:31.145 -04:00 [DBG] Connection id "0HNAVUL2FS2U1", Request id "0HNAVUL2FS2U1:00000004": done reading request body.
2025-03-10 13:15:31.157 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'
2025-03-10 13:15:31.159 -04:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-03-10 13:15:31.161 -04:00 [DBG] Done attempting to bind parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-03-10 13:15:31.163 -04:00 [DBG] Attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest' ...
2025-03-10 13:15:31.171 -04:00 [DBG] Done attempting to validate the bound parameter 'hotelRequest' of type 'HotelBookingPlatform.Domain.DTOs.Hotel.HotelCreateRequest'.
2025-03-10 13:15:31.177 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:15:31.181 -04:00 [DBG] Compiling query expression: 
'DbSet<City>()
    .FirstOrDefault(e => EF.Property<int>(e, "CityID") == __p_0)'
2025-03-10 13:15:31.193 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<City>(
    asyncEnumerable: SingleQueryingEnumerable.Create<City>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT TOP(1) c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE c.CityID == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: City.Country (string) Required, 1], [Property: City.CreatedAtUtc (DateTime) Required, 2], [Property: City.Description (string) Required, 3], [Property: City.Name (string) Required, 4], [Property: City.PostOffice (string) Required, 5], [Property: City.VisitCount (int) Required, 6] }
            SELECT TOP(1) c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount
            FROM Cities AS c
            WHERE c.CityID == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            City entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                City instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(City);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: City.CityID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (City)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]: 
                            {
                                return 
                                {
                                    City instance;
                                    instance = new City();
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Country>k__BackingField = dataReader.GetString(1);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.GetString(3);
                                    instance.<Name>k__BackingField = dataReader.GetString(4);
                                    instance.<PostOffice>k__BackingField = dataReader.GetString(5);
                                    instance.<VisitCount>k__BackingField = dataReader.GetInt32(6);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(City)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-10 13:15:31.208 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:15:31.209 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 13:15:31.211 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:15:31.212 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:15:31.219 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:15:31.221 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:15:31.223 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-10 13:15:31.224 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-03-10 13:15:31.231 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount"
FROM "Cities" AS c
WHERE c."CityID" = @__p_0
LIMIT 1
2025-03-10 13:15:31.238 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:15:31.241 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:15:31.243 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-03-10 13:15:31.245 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:15:31.247 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-10 13:15:31.252 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:15:31.255 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:15:31.258 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:15:31.260 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-10 13:15:31.262 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-10 13:15:31.264 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-03-10 13:15:31.271 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Owners" AS o
WHERE o."OwnerID" = @__p_0
LIMIT 1
2025-03-10 13:15:31.274 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:15:31.278 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:15:31.281 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-03-10 13:15:31.286 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:15:31.288 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:15:31.297 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Hotel.HotelId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:15:31.337 -04:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:15:31.345 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:15:31.354 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:15:31.359 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-10 13:15:31.361 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-10 13:15:31.369 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-10 13:15:31.373 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:15:31.374 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:15:31.376 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:15:31.378 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:15:31.380 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:15:31.384 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?' (DbType = Int32), @p5='?', @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Hotels" ("CityID", "CreatedAtUtc", "Description", "Name", "OwnerID", "PhoneNumber", "StarRating")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "HotelId";
2025-03-10 13:15:31.398 -04:00 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?' (DbType = Int32), @p5='?', @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Hotels" ("CityID", "CreatedAtUtc", "Description", "Name", "OwnerID", "PhoneNumber", "StarRating")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "HotelId";
2025-03-10 13:15:31.406 -04:00 [DBG] The foreign key property 'Hotel.HotelId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-10 13:15:31.411 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:15:31.412 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-03-10 13:15:31.417 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:15:31.420 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:15:31.423 -04:00 [DBG] An entity of type 'Hotel' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:15:31.427 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-10 13:15:31.430 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-10 13:15:31.431 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-10 13:15:31.438 -04:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'City.Hotels'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:15:31.441 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-10 13:15:31.443 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 0 entities written to the database.
2025-03-10 13:15:31.445 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-10 13:15:31.447 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-10 13:15:31.452 -04:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'City.Hotels'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:15:31.455 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-10 13:15:31.458 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 0 entities written to the database.
2025-03-10 13:15:31.460 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:15:31.464 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:15:31.467 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:15:31.470 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:15:31.474 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:15:31.476 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-10 13:15:31.481 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API) in 382.8193ms
2025-03-10 13:15:31.492 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.AddHotelToCity (HotelBookingPlatform.API)'
2025-03-10 13:15:31.503 -04:00 [DBG] Connection id "0HNAVUL2FS2U1" completed keep alive response.
2025-03-10 13:15:31.506 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:15:31.509 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:15:31.515 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-10 13:15:31.523 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/City/4/hotels - 200 null application/json; charset=utf-8 525.2998ms
2025-03-10 13:17:43.293 -04:00 [DBG] Connection id "0HNAVUL2FS2U1" disconnecting.
2025-03-10 13:17:43.299 -04:00 [DBG] Connection id "0HNAVUL2FS2U1" stopped.
2025-03-10 13:17:43.306 -04:00 [DBG] Connection id "0HNAVUL2FS2U1" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 13:17:49.067 -04:00 [DBG] Connection id "0HNAVUL2FS2U2" accepted.
2025-03-10 13:17:49.069 -04:00 [DBG] Connection id "0HNAVUL2FS2U2" started.
2025-03-10 13:17:49.071 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City/4/hotels - null null
2025-03-10 13:17:49.077 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/4/hotels'
2025-03-10 13:17:49.080 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/4/hotels'
2025-03-10 13:17:49.095 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-10 13:17:49.097 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:17:49.099 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:17:49.100 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:17:49.102 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-10 13:17:49.144 -04:00 [INF] Route matched with {action = "GetHotelsForCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotelsForCity(Int32) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-10 13:17:49.149 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:17:49.151 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:17:49.154 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-10 13:17:49.159 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:17:49.163 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:17:49.165 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-10 13:17:49.168 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-10 13:17:49.170 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-03-10 13:17:49.174 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-03-10 13:17:49.177 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-10 13:17:49.178 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-10 13:17:49.181 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-03-10 13:17:49.186 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-03-10 13:17:49.196 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:17:49.204 -04:00 [DBG] Compiling query expression: 
'DbSet<Hotel>()
    .Where(h => h.CityID == __cityId_0)
    .Include(h => h.Owner)'
2025-03-10 13:17:49.217 -04:00 [DBG] Including navigation: 'Hotel.Owner'.
2025-03-10 13:17:49.233 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Hotel>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
            1 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: Owner.Email (string) Required, 9], [Property: Owner.FirstName (string) Required MaxLength(50), 10], [Property: Owner.LastName (string) Required MaxLength(50), 11], [Property: Owner.PhoneNumber (string) Required, 12] }
        SELECT h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
        FROM Hotels AS h
        INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
        WHERE h.CityID == @__cityId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
            1 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: Owner.Email (string) Required, 9], [Property: Owner.FirstName (string) Required MaxLength(50), 10], [Property: Owner.LastName (string) Required MaxLength(50), 11], [Property: Owner.PhoneNumber (string) Required, 12] }
        SELECT h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
        FROM Hotels AS h
        INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
        WHERE h.CityID == @__cityId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Hotel entity;
        Owner entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Hotel instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Hotel);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Hotel)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                        {
                            return 
                            {
                                Hotel instance;
                                instance = new Hotel();
                                instance.<HotelId>k__BackingField = dataReader.GetInt32(0);
                                instance.<CityID>k__BackingField = dataReader.GetInt32(1);
                                instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                instance.<Name>k__BackingField = dataReader.GetString(4);
                                instance.<OwnerID>k__BackingField = dataReader.GetInt32(5);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(6);
                                instance.<StarRating>k__BackingField = dataReader.GetInt32(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Hotel)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Owner instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Owner);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Owner.OwnerID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(8) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Owner)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                        {
                            return 
                            {
                                Owner instance;
                                instance = new Owner();
                                instance.<OwnerID>k__BackingField = dataReader.GetInt32(8);
                                instance.<Email>k__BackingField = dataReader.GetString(9);
                                instance.<FirstName>k__BackingField = dataReader.GetString(10);
                                instance.<LastName>k__BackingField = dataReader.GetString(11);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Owner)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, Owner>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Hotel.Owner (Owner) ToPrincipal Owner Inverse: Hotels | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Owner")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Owner.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: Owner | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels")], 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                namelessParameter{8}.<Owner>k__BackingField = namelessParameter{9};
                return [LIFTABLE Constant: ClrICollectionAccessor<Owner, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                    entity: namelessParameter{9}, 
                    value: namelessParameter{8}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-10 13:17:49.259 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:17:49.260 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 13:17:49.262 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:17:49.293 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:17:49.297 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:17:49.299 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:17:49.301 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:17:49.303 -04:00 [DBG] Executing DbCommand [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-03-10 13:17:49.318 -04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-03-10 13:17:49.329 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:17:49.352 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:17:49.387 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:17:49.486 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:17:49.565 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 235ms reading results.
2025-03-10 13:17:49.618 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:17:49.627 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-10 13:17:49.681 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:17:49.719 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:17:49.725 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:17:49.737 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:17:49.776 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:17:49.782 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.Hotel.HotelBasicResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-10 13:17:49.815 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API) in 649.2763ms
2025-03-10 13:17:49.825 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-10 13:17:49.827 -04:00 [DBG] Connection id "0HNAVUL2FS2U2" completed keep alive response.
2025-03-10 13:17:49.840 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:17:49.843 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:17:49.848 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-10 13:17:49.853 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City/4/hotels - 200 null application/json; charset=utf-8 782.3285ms
2025-03-10 13:20:00.341 -04:00 [DBG] Connection id "0HNAVUL2FS2U2" disconnecting.
2025-03-10 13:20:00.349 -04:00 [DBG] Connection id "0HNAVUL2FS2U2" stopped.
2025-03-10 13:20:00.364 -04:00 [DBG] Connection id "0HNAVUL2FS2U2" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 13:20:08.967 -04:00 [DBG] Connection id "0HNAVUL2FS2U3" accepted.
2025-03-10 13:20:08.968 -04:00 [DBG] Connection id "0HNAVUL2FS2U3" started.
2025-03-10 13:20:08.970 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Hotel/4 - null null
2025-03-10 13:20:08.973 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Hotel/4'
2025-03-10 13:20:08.976 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)' with route pattern 'api/Hotel/{id}' is valid for the request path '/api/Hotel/4'
2025-03-10 13:20:09.027 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-10 13:20:09.033 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:20:09.035 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:20:09.036 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:20:09.039 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-10 13:20:09.048 -04:00 [INF] Route matched with {action = "GetHotel", controller = "Hotel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotel(Int32) on controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API).
2025-03-10 13:20:09.052 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:20:09.054 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:20:09.057 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-10 13:20:09.065 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:20:09.067 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:20:09.070 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-10 13:20:09.076 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-10 13:20:09.082 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-10 13:20:09.085 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-10 13:20:09.088 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:20:09.090 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:20:09.092 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-10 13:20:09.096 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-10 13:20:09.105 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:20:09.180 -04:00 [DBG] Compiling query expression: 
'DbSet<Hotel>()
    .Include(h => h.City)
    .Include(h => h.Owner)
    .Include(h => h.Reviews)
    .AsSplitQuery()
    .FirstOrDefault(h => h.HotelId == __id_0)'
2025-03-10 13:20:09.209 -04:00 [DBG] Including navigation: 'Hotel.City'.
2025-03-10 13:20:09.217 -04:00 [DBG] Including navigation: 'Hotel.Owner'.
2025-03-10 13:20:09.238 -04:00 [DBG] Including navigation: 'Hotel.Reviews'.
2025-03-10 13:20:09.362 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Hotel>(
    asyncEnumerable: SplitQueryingEnumerable.Create<Hotel>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
                1 -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: City.Country (string) Required, 9], [Property: City.CreatedAtUtc (DateTime) Required, 10], [Property: City.Description (string) Required, 11], [Property: City.Name (string) Required, 12], [Property: City.PostOffice (string) Required, 13], [Property: City.VisitCount (int) Required, 14] }
                2 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: Owner.Email (string) Required, 16], [Property: Owner.FirstName (string) Required MaxLength(50), 17], [Property: Owner.LastName (string) Required MaxLength(50), 18], [Property: Owner.PhoneNumber (string) Required, 19] }
                3 -> 0
                4 -> 8
                5 -> 15
            SELECT TOP(1) h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Hotels AS h
            INNER JOIN Cities AS c ON h.CityID == c.CityID
            INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
            WHERE h.HotelId == @__id_0
            ORDER BY h.HotelId ASC, c.CityID ASC, o.OwnerID ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
                1 -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: City.Country (string) Required, 9], [Property: City.CreatedAtUtc (DateTime) Required, 10], [Property: City.Description (string) Required, 11], [Property: City.Name (string) Required, 12], [Property: City.PostOffice (string) Required, 13], [Property: City.VisitCount (int) Required, 14] }
                2 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: Owner.Email (string) Required, 16], [Property: Owner.FirstName (string) Required MaxLength(50), 17], [Property: Owner.LastName (string) Required MaxLength(50), 18], [Property: Owner.PhoneNumber (string) Required, 19] }
                3 -> 0
                4 -> 8
                5 -> 15
            SELECT TOP(1) h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Hotels AS h
            INNER JOIN Cities AS c ON h.CityID == c.CityID
            INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
            WHERE h.HotelId == @__id_0
            ORDER BY h.HotelId ASC, c.CityID ASC, o.OwnerID ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object> } | Resolver: namelessParameter{0} => new ReaderColumn[]
        { 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("HotelId"), 
                (dataReader, indexMap) => dataReader.GetInt32(0)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CityID"), 
                (dataReader, indexMap) => dataReader.GetInt32(1)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CreatedAtUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(2)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Description"), 
                (dataReader, indexMap) => (object)dataReader.GetString(3)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Name"), 
                (dataReader, indexMap) => (object)dataReader.GetString(4)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("OwnerID"), 
                (dataReader, indexMap) => dataReader.GetInt32(5)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(6)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("StarRating"), 
                (dataReader, indexMap) => dataReader.GetInt32(7)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("CityID"), 
                (dataReader, indexMap) => dataReader.GetInt32(8)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Country"), 
                (dataReader, indexMap) => (object)dataReader.GetString(9)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("CreatedAtUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(10)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Description"), 
                (dataReader, indexMap) => (object)dataReader.GetString(11)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Name"), 
                (dataReader, indexMap) => (object)dataReader.GetString(12)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("PostOffice"), 
                (dataReader, indexMap) => (object)dataReader.GetString(13)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("VisitCount"), 
                (dataReader, indexMap) => dataReader.GetInt32(14)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("OwnerID"), 
                (dataReader, indexMap) => dataReader.GetInt32(15)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("Email"), 
                (dataReader, indexMap) => (object)dataReader.GetString(16)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("FirstName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(17)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("LastName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(18)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(19)
            ) 
        }], 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => resultContext.Values == null ? 
        {
            Hotel entity;
            City entity;
            Owner entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Hotel instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Hotel);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Hotel)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                            {
                                return 
                                {
                                    Hotel instance;
                                    instance = new Hotel();
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(0);
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(3) ? default(string) : (string)dataReader.GetFieldValue<object>(3);
                                    instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(4);
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(5);
                                    instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                    instance.<StarRating>k__BackingField = dataReader.GetInt32(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Hotel)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                City instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(City);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: City.CityID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(8) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (City)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]: 
                            {
                                return 
                                {
                                    City instance;
                                    instance = new City();
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Country>k__BackingField = (string)dataReader.GetFieldValue<object>(9);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(10);
                                    instance.<Description>k__BackingField = (string)dataReader.GetFieldValue<object>(11);
                                    instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(12);
                                    instance.<PostOffice>k__BackingField = (string)dataReader.GetFieldValue<object>(13);
                                    instance.<VisitCount>k__BackingField = dataReader.GetInt32(14);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(City)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                Owner instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(Owner);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Owner.OwnerID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(15) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (Owner)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                            {
                                return 
                                {
                                    Owner instance;
                                    instance = new Owner();
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(15);
                                    instance.<Email>k__BackingField = (string)dataReader.GetFieldValue<object>(16);
                                    instance.<FirstName>k__BackingField = (string)dataReader.GetFieldValue<object>(17);
                                    instance.<LastName>k__BackingField = (string)dataReader.GetFieldValue<object>(18);
                                    instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(19);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Owner)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, City>(
                queryContext: queryContext, 
                entity: (Hotel)(resultContext.Values[0]), 
                relatedEntity: (City)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Hotel.City (City) ToPrincipal City Inverse: Hotels | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("City")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: City.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: City | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindNavigation("Hotels")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<City>k__BackingField = namelessParameter{13};
                    return [LIFTABLE Constant: ClrICollectionAccessor<City, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                        entity: namelessParameter{13}, 
                        value: namelessParameter{12}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, Owner>(
                queryContext: queryContext, 
                entity: (Hotel)(resultContext.Values[0]), 
                relatedEntity: (Owner)(resultContext.Values[2]), 
                navigation: [LIFTABLE Constant: Navigation: Hotel.Owner (Owner) ToPrincipal Owner Inverse: Hotels | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Owner")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Owner.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: Owner | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels")], 
                fixup: (namelessParameter{17}, namelessParameter{18}) => 
                {
                    namelessParameter{17}.<Owner>k__BackingField = namelessParameter{18};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Owner, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                        entity: namelessParameter{18}, 
                        value: namelessParameter{17}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeSplitIncludeCollection<Hotel, Hotel>(
                collectionId: 0, 
                queryContext: queryContext, 
                parentDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Hotel)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(0), 
                    (object)(int?)dataReader.GetInt32(8), 
                    (object)(int?)dataReader.GetInt32(15) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Hotel.Reviews (ICollection<Review>) Collection ToDependent Review Inverse: Hotel | Resolver: namelessParameter{20} => namelessParameter{20}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<Review>, Review> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
            return } : (Hotel)(resultContext.Values[0]), 
        relatedDataLoaders: null, 
        relatedDataLoadersAsync: (queryContext, executionStrategy, resultCoordinator) => ShaperProcessingExpressionVisitor.TaskAwaiter(new Func<Task>[]{ () => ShaperProcessingExpressionVisitor.PopulateSplitIncludeCollectionAsync<Hotel, Review>(
            collectionId: 0, 
            queryContext: (RelationalQueryContext)queryContext, 
            executionStrategy: executionStrategy, 
            relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
                Client Projections:
                    0 -> Dictionary<IProperty, int> { [Property: Review.ReviewID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Review.Content (string) Required, 1], [Property: Review.CreatedAtUtc (DateTime) Required, 2], [Property: Review.HotelId (int) Required FK Index, 3], [Property: Review.ModifiedAtUtc (DateTime?), 4], [Property: Review.Rating (int) Required, 5], [Property: Review.UserId (string) Required FK Index, 6] }
                    1 -> 7
                    2 -> 8
                    3 -> 9
                SELECT r.ReviewID, r.Content, r.CreatedAtUtc, r.HotelId, r.ModifiedAtUtc, r.Rating, r.UserId, s.HotelId, s.CityID, s.OwnerID
                FROM 
                (
                    SELECT TOP(1) h.HotelId, c.CityID, o.OwnerID
                    FROM Hotels AS h
                    INNER JOIN Cities AS c ON h.CityID == c.CityID
                    INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
                    WHERE h.HotelId == @__id_0
                ) AS s
                INNER JOIN Reviews AS r ON s.HotelId == r.HotelId
                ORDER BY s.HotelId ASC, s.CityID ASC, s.OwnerID ASC) | Resolver: c => new RelationalCommandCache(
                c.Dependencies.MemoryCache, 
                c.RelationalDependencies.QuerySqlGeneratorFactory, 
                c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
                Client Projections:
                    0 -> Dictionary<IProperty, int> { [Property: Review.ReviewID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Review.Content (string) Required, 1], [Property: Review.CreatedAtUtc (DateTime) Required, 2], [Property: Review.HotelId (int) Required FK Index, 3], [Property: Review.ModifiedAtUtc (DateTime?), 4], [Property: Review.Rating (int) Required, 5], [Property: Review.UserId (string) Required FK Index, 6] }
                    1 -> 7
                    2 -> 8
                    3 -> 9
                SELECT r.ReviewID, r.Content, r.CreatedAtUtc, r.HotelId, r.ModifiedAtUtc, r.Rating, r.UserId, s.HotelId, s.CityID, s.OwnerID
                FROM 
                (
                    SELECT TOP(1) h.HotelId, c.CityID, o.OwnerID
                    FROM Hotels AS h
                    INNER JOIN Cities AS c ON h.CityID == c.CityID
                    INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
                    WHERE h.HotelId == @__id_0
                ) AS s
                INNER JOIN Reviews AS r ON s.HotelId == r.HotelId
                ORDER BY s.HotelId ASC, s.CityID ASC, s.OwnerID ASC, 
                False, 
                new HashSet<string>(
                    new string[]{ }, 
                    StringComparer.Ordinal
                )
            )].GetRelationalCommandTemplate(parameters), 
            readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<DateTime>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int> } | Resolver: namelessParameter{22} => new ReaderColumn[]
            { 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("ReviewID"), 
                    (dataReader, indexMap) => dataReader.GetInt32(0)
                ), 
                new ReaderColumn<object>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("Content"), 
                    (dataReader, indexMap) => (object)dataReader.GetString(1)
                ), 
                new ReaderColumn<DateTime>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("CreatedAtUtc"), 
                    (dataReader, indexMap) => dataReader.GetDateTime(2)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("HotelId"), 
                    (dataReader, indexMap) => dataReader.GetInt32(3)
                ), 
                new ReaderColumn<DateTime>(
                    True, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("ModifiedAtUtc"), 
                    (dataReader, indexMap) => dataReader.GetDateTime(4)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("Rating"), 
                    (dataReader, indexMap) => dataReader.GetInt32(5)
                ), 
                new ReaderColumn<object>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("UserId"), 
                    (dataReader, indexMap) => (object)dataReader.GetString(6)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(7)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(8)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(9)
                ) 
            }], 
            detailedErrorsEnabled: False, 
            resultCoordinator: resultCoordinator, 
            childIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(int?)dataReader.GetInt32(7), 
                (object)(int?)dataReader.GetInt32(8), 
                (object)(int?)dataReader.GetInt32(9) 
            }], 
            identifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
            }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Review entity;
                entity = 
                {
                    MaterializationContext materializationContext4;
                    IEntityType entityType4;
                    Review instance4;
                    InternalEntityEntry entry4;
                    bool hasNullKey4;
                    materializationContext4 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance4 = default(Review);
                    entry4 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Review.ReviewID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey4);
                    !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                    {
                        entityType4 = entry4.EntityType;
                        return instance4 = (Review)entry4.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot4;
                        shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType4 = [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")];
                        instance4 = switch (entityType4)
                        {
                            case [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{24} => namelessParameter{24}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")]: 
                                {
                                    return 
                                    {
                                        Review instance;
                                        instance = new Review();
                                        instance.<ReviewID>k__BackingField = dataReader.GetInt32(0);
                                        instance.<Content>k__BackingField = (string)dataReader.GetFieldValue<object>(1);
                                        instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<HotelId>k__BackingField = dataReader.GetInt32(3);
                                        instance.<ModifiedAtUtc>k__BackingField = dataReader.IsDBNull(4) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(4);
                                        instance.<Rating>k__BackingField = dataReader.GetInt32(5);
                                        instance.<UserId>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext4.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{25} => namelessParameter{25}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Review)
                        }
                        ;
                        entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType4, 
                            entity: instance4, 
                            snapshot: shadowSnapshot4);
                        return instance4;
                    } : default(void);
                    return instance4;
                };
                return entity;
            }, 
            relatedDataLoaders: null, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Review.Hotel (Hotel) ToPrincipal Hotel Inverse: Reviews | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindNavigation("Hotel")], 
            fixup: (namelessParameter{27}, namelessParameter{28}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<Review>, Review> | Resolver: namelessParameter{29} => namelessParameter{29}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews").GetCollectionAccessor()].Add(
                    entity: namelessParameter{27}, 
                    value: namelessParameter{28}, 
                    forMaterialization: True);
                return namelessParameter{28}.<Hotel>k__BackingField = namelessParameter{27};
            }, 
            trackingQuery: True) }), 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-10 13:20:09.508 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:20:09.551 -04:00 [DBG] Created DbConnection. (43ms).
2025-03-10 13:20:09.554 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:09.559 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:09.569 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:20:09.581 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (11ms).
2025-03-10 13:20:09.585 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (16ms).
2025-03-10 13:20:09.589 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:20:09.607 -04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:20:09.674 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:09.688 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 28ms reading results.
2025-03-10 13:20:09.747 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:09.802 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (55ms).
2025-03-10 13:20:09.807 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API) in 736.9455ms
2025-03-10 13:20:09.816 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-10 13:20:09.919 -04:00 [DBG] Connection id "0HNAVUL2FS2U3" completed keep alive response.
2025-03-10 13:20:09.927 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:20:09.936 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:10.049 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (112ms).
2025-03-10 13:20:10.590 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Hotel/4 - 404 null application/json 1620.1741ms
2025-03-10 13:20:20.848 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Hotel/3 - null null
2025-03-10 13:20:20.857 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Hotel/3'
2025-03-10 13:20:20.861 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)' with route pattern 'api/Hotel/{id}' is valid for the request path '/api/Hotel/3'
2025-03-10 13:20:20.918 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-10 13:20:20.921 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:20:20.923 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:20:20.924 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:20:20.926 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-10 13:20:20.932 -04:00 [INF] Route matched with {action = "GetHotel", controller = "Hotel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotel(Int32) on controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API).
2025-03-10 13:20:20.937 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:20:20.940 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:20:20.942 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-10 13:20:20.948 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:20:20.951 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:20:20.954 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-10 13:20:20.959 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-10 13:20:20.964 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-10 13:20:20.965 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-10 13:20:20.968 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:20:20.969 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:20:20.971 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-10 13:20:20.975 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-10 13:20:20.981 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:20:20.990 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:20:20.991 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 13:20:20.997 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:21.001 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:21.005 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:20:21.007 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:20:21.008 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:20:21.010 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:20:21.018 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:20:21.024 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:21.027 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-10 13:20:21.032 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:21.034 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:20:21.038 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API) in 83.9705ms
2025-03-10 13:20:21.041 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-10 13:20:21.049 -04:00 [DBG] Connection id "0HNAVUL2FS2U3" completed keep alive response.
2025-03-10 13:20:21.057 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:20:21.061 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:21.065 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-10 13:20:21.069 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Hotel/3 - 404 null application/json 220.9851ms
2025-03-10 13:20:29.178 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Hotel/1 - null null
2025-03-10 13:20:29.183 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Hotel/1'
2025-03-10 13:20:29.185 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)' with route pattern 'api/Hotel/{id}' is valid for the request path '/api/Hotel/1'
2025-03-10 13:20:29.189 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-10 13:20:29.202 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:20:29.206 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:20:29.211 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:20:29.216 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-10 13:20:29.219 -04:00 [INF] Route matched with {action = "GetHotel", controller = "Hotel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotel(Int32) on controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API).
2025-03-10 13:20:29.222 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:20:29.225 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:20:29.228 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-10 13:20:29.237 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:20:29.240 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:20:29.242 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-10 13:20:29.257 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-10 13:20:29.260 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-10 13:20:29.264 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-10 13:20:29.268 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:20:29.270 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:20:29.273 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-10 13:20:29.275 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-10 13:20:29.277 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:20:29.285 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:20:29.286 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 13:20:29.291 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:29.293 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:29.299 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:20:29.302 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:20:29.304 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-10 13:20:29.306 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:20:29.318 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:20:29.326 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:20:29.335 -04:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:20:29.337 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:20:29.339 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:20:29.341 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:20:29.361 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:20:29.365 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-10 13:20:29.367 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-03-10 13:20:29.369 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-10 13:20:29.377 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-10 13:20:29.388 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:29.391 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 65ms reading results.
2025-03-10 13:20:29.393 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:29.397 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 13ms reading results.
2025-03-10 13:20:29.400 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:29.402 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-10 13:20:29.417 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:20:29.420 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:20:29.421 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:20:29.423 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:20:29.425 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:20:29.427 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Hotel.HotelResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-10 13:20:29.444 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API) in 201.8544ms
2025-03-10 13:20:29.450 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-10 13:20:29.452 -04:00 [DBG] Connection id "0HNAVUL2FS2U3" completed keep alive response.
2025-03-10 13:20:29.454 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:20:29.457 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:29.460 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:20:29.466 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Hotel/1 - 200 null application/json; charset=utf-8 288.0022ms
2025-03-10 13:20:47.859 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Hotel/5 - null null
2025-03-10 13:20:47.864 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Hotel/5'
2025-03-10 13:20:47.866 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)' with route pattern 'api/Hotel/{id}' is valid for the request path '/api/Hotel/5'
2025-03-10 13:20:47.870 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-10 13:20:47.884 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:20:47.892 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:20:47.893 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:20:47.895 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-10 13:20:47.902 -04:00 [INF] Route matched with {action = "GetHotel", controller = "Hotel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotel(Int32) on controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API).
2025-03-10 13:20:47.912 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:20:47.918 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:20:47.921 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-10 13:20:47.925 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:20:47.928 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:20:47.935 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-10 13:20:47.939 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-10 13:20:47.942 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-10 13:20:47.944 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-10 13:20:47.951 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:20:47.954 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:20:47.956 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-10 13:20:47.958 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-10 13:20:47.961 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:20:47.970 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:20:47.973 -04:00 [DBG] Created DbConnection. (2ms).
2025-03-10 13:20:47.974 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:47.977 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:47.981 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:20:47.984 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:20:47.987 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-10 13:20:47.989 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:20:47.999 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:20:48.004 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:48.008 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-10 13:20:48.011 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:48.018 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-10 13:20:48.024 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API) in 88.7072ms
2025-03-10 13:20:48.027 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-10 13:20:48.036 -04:00 [DBG] Connection id "0HNAVUL2FS2U3" completed keep alive response.
2025-03-10 13:20:48.045 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:20:48.054 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:48.057 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-10 13:20:48.059 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Hotel/5 - 404 null application/json 200.1284ms
2025-03-10 13:20:55.230 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Hotel/2 - null null
2025-03-10 13:20:55.235 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Hotel/2'
2025-03-10 13:20:55.236 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)' with route pattern 'api/Hotel/{id}' is valid for the request path '/api/Hotel/2'
2025-03-10 13:20:55.295 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-10 13:20:55.301 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:20:55.303 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:20:55.304 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:20:55.306 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-10 13:20:55.311 -04:00 [INF] Route matched with {action = "GetHotel", controller = "Hotel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotel(Int32) on controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API).
2025-03-10 13:20:55.319 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:20:55.322 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:20:55.325 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-10 13:20:55.335 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:20:55.338 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:20:55.341 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-10 13:20:55.344 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-10 13:20:55.348 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-10 13:20:55.353 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-10 13:20:55.357 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:20:55.359 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:20:55.361 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-10 13:20:55.365 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-10 13:20:55.371 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:20:55.374 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:20:55.375 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 13:20:55.377 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:55.379 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:55.383 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:20:55.386 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-10 13:20:55.387 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-10 13:20:55.392 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:20:55.402 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:20:55.408 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:20:55.410 -04:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:20:55.417 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:20:55.419 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:20:55.422 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:20:55.424 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:20:55.426 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:20:55.428 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:20:55.434 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-10 13:20:55.440 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-10 13:20:55.445 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:55.451 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 43ms reading results.
2025-03-10 13:20:55.454 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:55.456 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 10ms reading results.
2025-03-10 13:20:55.458 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:55.461 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:20:55.470 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:20:55.495 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:20:55.505 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:20:55.545 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:20:55.556 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:20:55.562 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Hotel.HotelResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-10 13:20:55.573 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API) in 232.6099ms
2025-03-10 13:20:55.606 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetHotel (HotelBookingPlatform.API)'
2025-03-10 13:20:55.612 -04:00 [DBG] Connection id "0HNAVUL2FS2U3" completed keep alive response.
2025-03-10 13:20:55.692 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:20:55.698 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:20:55.705 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-10 13:20:55.711 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Hotel/2 - 200 null application/json; charset=utf-8 480.5583ms
2025-03-10 13:22:00.329 -04:00 [DBG] Connection id "0HNAVUL2FS2U3" received FIN.
2025-03-10 13:22:00.332 -04:00 [DBG] Connection id "0HNAVUL2FS2U3" disconnecting.
2025-03-10 13:22:00.336 -04:00 [DBG] Connection id "0HNAVUL2FS2U3" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 13:22:00.342 -04:00 [DBG] Connection id "0HNAVUL2FS2U3" stopped.
2025-03-10 13:23:11.608 -04:00 [DBG] Connection id "0HNAVUL2FS2U4" accepted.
2025-03-10 13:23:11.609 -04:00 [DBG] Connection id "0HNAVUL2FS2U4" started.
2025-03-10 13:23:11.611 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/RoomClass - application/json 118
2025-03-10 13:23:11.672 -04:00 [DBG] 1 candidate(s) found for the request path '/api/RoomClass'
2025-03-10 13:23:11.676 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.CreateRoomClass (HotelBookingPlatform.API)' with route pattern 'api/RoomClass' is valid for the request path '/api/RoomClass'
2025-03-10 13:23:11.680 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.CreateRoomClass (HotelBookingPlatform.API)'
2025-03-10 13:23:11.682 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:23:11.684 -04:00 [INF] No CORS policy found for the specified request.
2025-03-10 13:23:11.693 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:23:11.700 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:23:11.710 -04:00 [DBG] Authorization was successful.
2025-03-10 13:23:11.715 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.CreateRoomClass (HotelBookingPlatform.API)'
2025-03-10 13:23:11.746 -04:00 [INF] Route matched with {action = "CreateRoomClass", controller = "RoomClass"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateRoomClass(HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto) on controller HotelBookingPlatform.API.Controllers.RoomClassController (HotelBookingPlatform.API).
2025-03-10 13:23:11.760 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:23:11.766 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:23:11.773 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:23:11.784 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:23:11.792 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:23:11.797 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.RoomClassController (HotelBookingPlatform.API)
2025-03-10 13:23:11.810 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.RoomClassController (HotelBookingPlatform.API)
2025-03-10 13:23:11.813 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto' ...
2025-03-10 13:23:11.823 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto' using the name '' in request data ...
2025-03-10 13:23:11.829 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-10 13:23:11.840 -04:00 [DBG] Connection id "0HNAVUL2FS2U4", Request id "0HNAVUL2FS2U4:00000001": started reading request body.
2025-03-10 13:23:11.843 -04:00 [DBG] Connection id "0HNAVUL2FS2U4", Request id "0HNAVUL2FS2U4:00000001": done reading request body.
2025-03-10 13:23:11.849 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'
2025-03-10 13:23:11.859 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'.
2025-03-10 13:23:11.861 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'.
2025-03-10 13:23:11.863 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto' ...
2025-03-10 13:23:11.867 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'.
2025-03-10 13:23:11.877 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:23:11.881 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:23:11.882 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 13:23:11.884 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:23:11.920 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:23:11.924 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:23:11.926 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:23:11.928 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:23:11.930 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:23:11.942 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:23:11.947 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:23:11.949 -04:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:23:11.951 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:23:11.957 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:23:11.959 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:23:11.962 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:23:11.963 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:23:11.965 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:23:11.967 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-10 13:23:11.976 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-10 13:23:11.981 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:23:11.982 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 35ms reading results.
2025-03-10 13:23:11.987 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:23:11.992 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 11ms reading results.
2025-03-10 13:23:11.995 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:23:11.996 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-10 13:23:12.007 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'RoomClass.RoomClassID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:23:12.039 -04:00 [DBG] The navigation 'RoomClass.Hotel' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:23:12.046 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:23:12.049 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-10 13:23:12.051 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-10 13:23:12.061 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-10 13:23:12.066 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:23:12.068 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:23:12.091 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:23:12.098 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-03-10 13:23:12.138 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (47ms).
2025-03-10 13:23:12.164 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RoomClasses" ("CreatedAtUtc", "Description", "HotelId", "Name", "RoomType")
VALUES (@p0, @p1, @p2, @p3, @p4)
RETURNING "RoomClassID";
2025-03-10 13:23:12.206 -04:00 [INF] Executed DbCommand (42ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RoomClasses" ("CreatedAtUtc", "Description", "HotelId", "Name", "RoomType")
VALUES (@p0, @p1, @p2, @p3, @p4)
RETURNING "RoomClassID";
2025-03-10 13:23:12.211 -04:00 [DBG] The foreign key property 'RoomClass.RoomClassID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-10 13:23:12.215 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:23:12.219 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-03-10 13:23:12.244 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:23:12.246 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-10 13:23:12.248 -04:00 [DBG] An entity of type 'RoomClass' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:23:12.251 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-10 13:23:12.259 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:23:12.268 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:23:12.272 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:23:12.274 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:23:12.275 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:23:12.278 -04:00 [INF] Executing CreatedResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-10 13:23:12.288 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.RoomClassController.CreateRoomClass (HotelBookingPlatform.API) in 490.828ms
2025-03-10 13:23:12.293 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.CreateRoomClass (HotelBookingPlatform.API)'
2025-03-10 13:23:12.296 -04:00 [DBG] Connection id "0HNAVUL2FS2U4" completed keep alive response.
2025-03-10 13:23:12.301 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:23:12.307 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:23:12.310 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:23:12.316 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/RoomClass - 201 null application/json; charset=utf-8 704.8149ms
2025-03-10 13:24:20.503 -04:00 [DBG] Connection id "0HNAVUL2FS2U4" received FIN.
2025-03-10 13:24:20.850 -04:00 [DBG] Connection id "0HNAVUL2FS2U4" disconnecting.
2025-03-10 13:24:20.947 -04:00 [DBG] Connection id "0HNAVUL2FS2U4" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 13:24:20.964 -04:00 [DBG] Connection id "0HNAVUL2FS2U4" stopped.
2025-03-10 13:24:27.102 -04:00 [DBG] Connection id "0HNAVUL2FS2U5" accepted.
2025-03-10 13:24:27.104 -04:00 [DBG] Connection id "0HNAVUL2FS2U5" started.
2025-03-10 13:24:27.106 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/RoomClass/3/rooms - application/json 93
2025-03-10 13:24:27.112 -04:00 [DBG] 1 candidate(s) found for the request path '/api/RoomClass/3/rooms'
2025-03-10 13:24:27.198 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.AddRoomToRoomClass (HotelBookingPlatform.API)' with route pattern 'api/RoomClass/{roomClassId}/rooms' is valid for the request path '/api/RoomClass/3/rooms'
2025-03-10 13:24:27.204 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.AddRoomToRoomClass (HotelBookingPlatform.API)'
2025-03-10 13:24:27.213 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:24:27.215 -04:00 [INF] No CORS policy found for the specified request.
2025-03-10 13:24:27.220 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:24:27.227 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:24:27.229 -04:00 [DBG] Authorization was successful.
2025-03-10 13:24:27.231 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.AddRoomToRoomClass (HotelBookingPlatform.API)'
2025-03-10 13:24:27.251 -04:00 [INF] Route matched with {action = "AddRoomToRoomClass", controller = "RoomClass"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddRoomToRoomClass(Int32, HotelBookingPlatform.Domain.DTOs.Room.RoomCreateRequest) on controller HotelBookingPlatform.API.Controllers.RoomClassController (HotelBookingPlatform.API).
2025-03-10 13:24:27.263 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:24:27.265 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:24:27.268 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:24:27.279 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:24:27.281 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:24:27.287 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.RoomClassController (HotelBookingPlatform.API)
2025-03-10 13:24:27.297 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.RoomClassController (HotelBookingPlatform.API)
2025-03-10 13:24:27.300 -04:00 [DBG] Attempting to bind parameter 'roomClassId' of type 'System.Int32' ...
2025-03-10 13:24:27.304 -04:00 [DBG] Attempting to bind parameter 'roomClassId' of type 'System.Int32' using the name 'roomClassId' in request data ...
2025-03-10 13:24:27.312 -04:00 [DBG] Done attempting to bind parameter 'roomClassId' of type 'System.Int32'.
2025-03-10 13:24:27.318 -04:00 [DBG] Done attempting to bind parameter 'roomClassId' of type 'System.Int32'.
2025-03-10 13:24:27.322 -04:00 [DBG] Attempting to validate the bound parameter 'roomClassId' of type 'System.Int32' ...
2025-03-10 13:24:27.360 -04:00 [DBG] Done attempting to validate the bound parameter 'roomClassId' of type 'System.Int32'.
2025-03-10 13:24:27.386 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Room.RoomCreateRequest' ...
2025-03-10 13:24:27.417 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Room.RoomCreateRequest' using the name '' in request data ...
2025-03-10 13:24:27.420 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-10 13:24:27.465 -04:00 [DBG] Connection id "0HNAVUL2FS2U5", Request id "0HNAVUL2FS2U5:00000001": started reading request body.
2025-03-10 13:24:27.478 -04:00 [DBG] Connection id "0HNAVUL2FS2U5", Request id "0HNAVUL2FS2U5:00000001": done reading request body.
2025-03-10 13:24:27.514 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Room.RoomCreateRequest'
2025-03-10 13:24:27.538 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Room.RoomCreateRequest'.
2025-03-10 13:24:27.552 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Room.RoomCreateRequest'.
2025-03-10 13:24:27.561 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Room.RoomCreateRequest' ...
2025-03-10 13:24:27.567 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Room.RoomCreateRequest'.
2025-03-10 13:24:27.580 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:24:27.588 -04:00 [DBG] Compiling query expression: 
'DbSet<RoomClass>()
    .Include(rc => rc.Hotel)
    .FirstOrDefault(rc => rc.RoomClassID == __id_0)'
2025-03-10 13:24:27.596 -04:00 [DBG] Including navigation: 'RoomClass.Hotel'.
2025-03-10 13:24:27.720 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<RoomClass>(
    asyncEnumerable: SingleQueryingEnumerable.Create<RoomClass>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 1], [Property: RoomClass.Description (string) MaxLength(500), 2], [Property: RoomClass.HotelId (int) Required FK Index, 3], [Property: RoomClass.Name (string) Required, 4], [Property: RoomClass.RoomType (RoomType) Required, 5] }
                1 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Hotel.CityID (int) Required FK Index, 7], [Property: Hotel.CreatedAtUtc (DateTime) Required, 8], [Property: Hotel.Description (string) MaxLength(500), 9], [Property: Hotel.Name (string) Required MaxLength(100), 10], [Property: Hotel.OwnerID (int) Required FK Index, 11], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 12], [Property: Hotel.StarRating (int) Required, 13] }
            SELECT TOP(1) r.RoomClassID, r.CreatedAtUtc, r.Description, r.HotelId, r.Name, r.RoomType, h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating
            FROM RoomClasses AS r
            INNER JOIN Hotels AS h ON r.HotelId == h.HotelId
            WHERE r.RoomClassID == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 1], [Property: RoomClass.Description (string) MaxLength(500), 2], [Property: RoomClass.HotelId (int) Required FK Index, 3], [Property: RoomClass.Name (string) Required, 4], [Property: RoomClass.RoomType (RoomType) Required, 5] }
                1 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Hotel.CityID (int) Required FK Index, 7], [Property: Hotel.CreatedAtUtc (DateTime) Required, 8], [Property: Hotel.Description (string) MaxLength(500), 9], [Property: Hotel.Name (string) Required MaxLength(100), 10], [Property: Hotel.OwnerID (int) Required FK Index, 11], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 12], [Property: Hotel.StarRating (int) Required, 13] }
            SELECT TOP(1) r.RoomClassID, r.CreatedAtUtc, r.Description, r.HotelId, r.Name, r.RoomType, h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating
            FROM RoomClasses AS r
            INNER JOIN Hotels AS h ON r.HotelId == h.HotelId
            WHERE r.RoomClassID == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            RoomClass entity;
            Hotel entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                RoomClass instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(RoomClass);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: RoomClass.RoomClassID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (RoomClass)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]: 
                            {
                                return 
                                {
                                    RoomClass instance;
                                    instance = new RoomClass();
                                    instance.<RoomClassID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(3);
                                    instance.<Name>k__BackingField = dataReader.GetString(4);
                                    instance.<RoomType>k__BackingField = Invoke(((EnumToNumberConverter<RoomType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: RoomClass.RoomType (RoomType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("RoomType")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(RoomClass)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Hotel instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Hotel);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(6) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Hotel)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                            {
                                return 
                                {
                                    Hotel instance;
                                    instance = new Hotel();
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(6);
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(7);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(8);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<Name>k__BackingField = dataReader.GetString(10);
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(11);
                                    instance.<PhoneNumber>k__BackingField = dataReader.GetString(12);
                                    instance.<StarRating>k__BackingField = dataReader.GetInt32(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Hotel)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<RoomClass, RoomClass, Hotel>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: RoomClass.Hotel (Hotel) ToPrincipal Hotel Inverse: RoomClasses | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Hotel")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Hotel.RoomClasses (ICollection<RoomClass>) Collection ToDependent RoomClass Inverse: Hotel | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("RoomClasses")], 
                fixup: (namelessParameter{9}, namelessParameter{10}) => 
                {
                    namelessParameter{9}.<Hotel>k__BackingField = namelessParameter{10};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<RoomClass>, RoomClass> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("RoomClasses").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-10 13:24:27.810 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:24:27.817 -04:00 [DBG] Created DbConnection. (7ms).
2025-03-10 13:24:27.820 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:24:27.833 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:24:27.843 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:24:27.851 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (8ms).
2025-03-10 13:24:27.854 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (11ms).
2025-03-10 13:24:27.859 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomClassID", r."CreatedAtUtc", r."Description", r."HotelId", r."Name", r."RoomType", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating"
FROM "RoomClasses" AS r
INNER JOIN "Hotels" AS h ON r."HotelId" = h."HotelId"
WHERE r."RoomClassID" = @__id_0
LIMIT 1
2025-03-10 13:24:27.880 -04:00 [INF] Executed DbCommand (21ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomClassID", r."CreatedAtUtc", r."Description", r."HotelId", r."Name", r."RoomType", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating"
FROM "RoomClasses" AS r
INNER JOIN "Hotels" AS h ON r."HotelId" = h."HotelId"
WHERE r."RoomClassID" = @__id_0
LIMIT 1
2025-03-10 13:24:27.900 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:24:27.904 -04:00 [DBG] The navigation 'RoomClass.Hotel' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:24:27.913 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:24:27.922 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:24:27.942 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 47ms reading results.
2025-03-10 13:24:27.972 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:24:27.995 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (23ms).
2025-03-10 13:24:28.037 -04:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'RoomClass.Rooms'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:24:28.064 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Room.RoomID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:24:28.138 -04:00 [DBG] The navigation 'Room.RoomClass' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:24:28.154 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:24:28.161 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-10 13:24:28.167 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-10 13:24:28.200 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-10 13:24:28.204 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:24:28.211 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:24:28.213 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:24:28.215 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-10 13:24:28.217 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-10 13:24:28.220 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime), @p3='?', @p4='?' (DbType = Decimal), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Rooms" ("AdultsCapacity", "ChildrenCapacity", "CreatedAtUtc", "Number", "PricePerNight", "RoomClassID")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "RoomID";
2025-03-10 13:24:28.286 -04:00 [INF] Executed DbCommand (66ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime), @p3='?', @p4='?' (DbType = Decimal), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Rooms" ("AdultsCapacity", "ChildrenCapacity", "CreatedAtUtc", "Number", "PricePerNight", "RoomClassID")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "RoomID";
2025-03-10 13:24:28.328 -04:00 [DBG] The foreign key property 'Room.RoomID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-10 13:24:28.340 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:24:28.348 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 29ms reading results.
2025-03-10 13:24:28.353 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:24:28.355 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:24:28.369 -04:00 [DBG] An entity of type 'Room' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:24:28.379 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-10 13:24:28.401 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:24:28.419 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:24:28.422 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:24:28.434 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:24:28.436 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:24:28.438 -04:00 [INF] Executing CreatedResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Room.RoomResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-10 13:24:28.459 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.RoomClassController.AddRoomToRoomClass (HotelBookingPlatform.API) in 1171.992ms
2025-03-10 13:24:28.471 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.AddRoomToRoomClass (HotelBookingPlatform.API)'
2025-03-10 13:24:28.476 -04:00 [DBG] Connection id "0HNAVUL2FS2U5" completed keep alive response.
2025-03-10 13:24:28.484 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:24:28.490 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:24:28.502 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (12ms).
2025-03-10 13:24:28.510 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/RoomClass/3/rooms - 201 null application/json; charset=utf-8 1403.8259ms
2025-03-10 13:24:57.965 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Room/3 - null null
2025-03-10 13:24:57.969 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Room/3'
2025-03-10 13:24:57.971 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)' with route pattern 'api/Room/{id}' is valid for the request path '/api/Room/3'
2025-03-10 13:24:58.013 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)'
2025-03-10 13:24:58.023 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:24:58.027 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:24:58.029 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:24:58.031 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)'
2025-03-10 13:24:58.044 -04:00 [INF] Route matched with {action = "GetRoom", controller = "Room"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRoom(Int32) on controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API).
2025-03-10 13:24:58.048 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:24:58.051 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:24:58.053 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:24:58.056 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:24:58.063 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:24:58.066 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-10 13:24:58.070 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-10 13:24:58.073 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-10 13:24:58.076 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-10 13:24:58.081 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:24:58.083 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:24:58.085 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-10 13:24:58.088 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-10 13:24:58.095 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:24:58.100 -04:00 [DBG] Compiling query expression: 
'DbSet<Room>()
    .Include(r => r.RoomClass)
    .FirstOrDefault(r => r.RoomID == __id_0)'
2025-03-10 13:24:58.105 -04:00 [DBG] Including navigation: 'Room.RoomClass'.
2025-03-10 13:24:58.120 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Room>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Room>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
                1 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 8], [Property: RoomClass.Description (string) MaxLength(500), 9], [Property: RoomClass.HotelId (int) Required FK Index, 10], [Property: RoomClass.Name (string) Required, 11], [Property: RoomClass.RoomType (RoomType) Required, 12] }
            SELECT TOP(1) r.RoomID, r.AdultsCapacity, r.ChildrenCapacity, r.CreatedAtUtc, r.Number, r.PricePerNight, r.RoomClassID, r0.RoomClassID, r0.CreatedAtUtc, r0.Description, r0.HotelId, r0.Name, r0.RoomType
            FROM Rooms AS r
            INNER JOIN RoomClasses AS r0 ON r.RoomClassID == r0.RoomClassID
            WHERE r.RoomID == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
                1 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 8], [Property: RoomClass.Description (string) MaxLength(500), 9], [Property: RoomClass.HotelId (int) Required FK Index, 10], [Property: RoomClass.Name (string) Required, 11], [Property: RoomClass.RoomType (RoomType) Required, 12] }
            SELECT TOP(1) r.RoomID, r.AdultsCapacity, r.ChildrenCapacity, r.CreatedAtUtc, r.Number, r.PricePerNight, r.RoomClassID, r0.RoomClassID, r0.CreatedAtUtc, r0.Description, r0.HotelId, r0.Name, r0.RoomType
            FROM Rooms AS r
            INNER JOIN RoomClasses AS r0 ON r.RoomClassID == r0.RoomClassID
            WHERE r.RoomID == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Room entity;
            RoomClass entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Room instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Room);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Room.RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Room)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]: 
                            {
                                return 
                                {
                                    Room instance;
                                    instance = new Room();
                                    instance.<RoomID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AdultsCapacity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ChildrenCapacity>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<Number>k__BackingField = dataReader.GetString(4);
                                    instance.<PricePerNight>k__BackingField = dataReader.GetDecimal(5);
                                    instance.<RoomClassID>k__BackingField = dataReader.GetInt32(6);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Room)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                RoomClass instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(RoomClass);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: RoomClass.RoomClassID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(7) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (RoomClass)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]: 
                            {
                                return 
                                {
                                    RoomClass instance;
                                    instance = new RoomClass();
                                    instance.<RoomClassID>k__BackingField = dataReader.GetInt32(7);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(8);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(10);
                                    instance.<Name>k__BackingField = dataReader.GetString(11);
                                    instance.<RoomType>k__BackingField = Invoke(((EnumToNumberConverter<RoomType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: RoomClass.RoomType (RoomType) Required | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("RoomType")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(12));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(RoomClass)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Room, Room, RoomClass>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Room.RoomClass (RoomClass) ToPrincipal RoomClass Inverse: Rooms | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindNavigation("RoomClass")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: RoomClass.Rooms (ICollection<Room>) Collection ToDependent Room Inverse: RoomClass | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms")], 
                fixup: (namelessParameter{9}, namelessParameter{10}) => 
                {
                    namelessParameter{9}.<RoomClass>k__BackingField = namelessParameter{10};
                    return [LIFTABLE Constant: ClrICollectionAccessor<RoomClass, ICollection<Room>, Room> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-10 13:24:58.152 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:24:58.153 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 13:24:58.155 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:24:58.159 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:24:58.160 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:24:58.162 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:24:58.164 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:24:58.166 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-10 13:24:58.179 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-10 13:24:58.183 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:24:58.189 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-03-10 13:24:58.197 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:24:58.200 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:24:58.204 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API) in 137.4825ms
2025-03-10 13:24:58.206 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)'
2025-03-10 13:24:58.216 -04:00 [DBG] Connection id "0HNAVUL2FS2U5" completed keep alive response.
2025-03-10 13:24:58.218 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:24:58.221 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:24:58.223 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-10 13:24:58.230 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Room/3 - 404 null application/json 264.2535ms
2025-03-10 13:25:07.910 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Room/2 - null null
2025-03-10 13:25:07.928 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Room/2'
2025-03-10 13:25:07.982 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)' with route pattern 'api/Room/{id}' is valid for the request path '/api/Room/2'
2025-03-10 13:25:07.985 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)'
2025-03-10 13:25:07.987 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:25:07.989 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:25:07.993 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:25:08.000 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)'
2025-03-10 13:25:08.005 -04:00 [INF] Route matched with {action = "GetRoom", controller = "Room"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRoom(Int32) on controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API).
2025-03-10 13:25:08.012 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:25:08.014 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:25:08.017 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:25:08.021 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:25:08.023 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:25:08.031 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-10 13:25:08.036 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-10 13:25:08.040 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-10 13:25:08.045 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-10 13:25:08.048 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:25:08.049 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 13:25:08.051 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-10 13:25:08.053 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-10 13:25:08.057 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:25:08.066 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:25:08.067 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 13:25:08.068 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:08.070 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:08.072 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:25:08.073 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:25:08.080 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-10 13:25:08.082 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-10 13:25:08.088 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-10 13:25:08.102 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:25:08.105 -04:00 [DBG] The navigation 'Room.RoomClass' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:25:08.107 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:25:08.114 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:08.146 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 47ms reading results.
2025-03-10 13:25:08.148 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:08.150 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-10 13:25:08.167 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:25:08.190 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:25:08.194 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:25:08.219 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:25:08.221 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:25:08.233 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Room.RoomResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-10 13:25:08.256 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API) in 225.0091ms
2025-03-10 13:25:08.261 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)'
2025-03-10 13:25:08.263 -04:00 [DBG] Connection id "0HNAVUL2FS2U5" completed keep alive response.
2025-03-10 13:25:08.265 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:25:08.268 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:08.271 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:25:08.276 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Room/2 - 200 null application/json; charset=utf-8 365.9778ms
2025-03-10 13:25:33.700 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Room/by-price?minPrice=500 - null null
2025-03-10 13:25:33.704 -04:00 [DBG] 2 candidate(s) found for the request path '/api/Room/by-price'
2025-03-10 13:25:33.706 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)' with route pattern 'api/Room/by-price' is valid for the request path '/api/Room/by-price'
2025-03-10 13:25:33.780 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)' with route pattern 'api/Room/{id}' is valid for the request path '/api/Room/by-price'
2025-03-10 13:25:33.784 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-10 13:25:33.790 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:25:33.799 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:25:33.800 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:25:33.802 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-10 13:25:33.818 -04:00 [INF] Route matched with {action = "GetRoomsByPriceRange", controller = "Room"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRoomsByPriceRange(System.Decimal, System.Decimal) on controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API).
2025-03-10 13:25:33.822 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:25:33.831 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:25:33.837 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:25:33.848 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:25:33.850 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:25:33.856 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-10 13:25:33.863 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-10 13:25:33.866 -04:00 [DBG] Attempting to bind parameter 'minPrice' of type 'System.Decimal' ...
2025-03-10 13:25:33.869 -04:00 [DBG] Attempting to bind parameter 'minPrice' of type 'System.Decimal' using the name 'minPrice' in request data ...
2025-03-10 13:25:33.886 -04:00 [DBG] Done attempting to bind parameter 'minPrice' of type 'System.Decimal'.
2025-03-10 13:25:33.892 -04:00 [DBG] Done attempting to bind parameter 'minPrice' of type 'System.Decimal'.
2025-03-10 13:25:33.897 -04:00 [DBG] Attempting to validate the bound parameter 'minPrice' of type 'System.Decimal' ...
2025-03-10 13:25:33.899 -04:00 [DBG] Done attempting to validate the bound parameter 'minPrice' of type 'System.Decimal'.
2025-03-10 13:25:33.901 -04:00 [DBG] Attempting to bind parameter 'maxPrice' of type 'System.Decimal' ...
2025-03-10 13:25:33.904 -04:00 [DBG] Attempting to bind parameter 'maxPrice' of type 'System.Decimal' using the name '' in request data ...
2025-03-10 13:25:33.914 -04:00 [DBG] Could not find a value in the request with name '' for binding parameter 'maxPrice' of type 'System.Decimal'.
2025-03-10 13:25:33.920 -04:00 [DBG] Done attempting to bind parameter 'maxPrice' of type 'System.Decimal'.
2025-03-10 13:25:33.922 -04:00 [DBG] Done attempting to bind parameter 'maxPrice' of type 'System.Decimal'.
2025-03-10 13:25:33.925 -04:00 [DBG] Attempting to validate the bound parameter 'maxPrice' of type 'System.Decimal' ...
2025-03-10 13:25:33.932 -04:00 [DBG] Done attempting to validate the bound parameter 'maxPrice' of type 'System.Decimal'.
2025-03-10 13:25:33.939 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:25:33.951 -04:00 [DBG] Compiling query expression: 
'DbSet<Room>()
    .Include(rc => rc.RoomClass)
    .Where(r => r.PricePerNight >= __minPrice_0 && r.PricePerNight <= __maxPrice_1)'
2025-03-10 13:25:33.956 -04:00 [DBG] Including navigation: 'Room.RoomClass'.
2025-03-10 13:25:33.973 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Room>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
            1 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 8], [Property: RoomClass.Description (string) MaxLength(500), 9], [Property: RoomClass.HotelId (int) Required FK Index, 10], [Property: RoomClass.Name (string) Required, 11], [Property: RoomClass.RoomType (RoomType) Required, 12] }
        SELECT r.RoomID, r.AdultsCapacity, r.ChildrenCapacity, r.CreatedAtUtc, r.Number, r.PricePerNight, r.RoomClassID, r0.RoomClassID, r0.CreatedAtUtc, r0.Description, r0.HotelId, r0.Name, r0.RoomType
        FROM Rooms AS r
        INNER JOIN RoomClasses AS r0 ON r.RoomClassID == r0.RoomClassID
        WHERE (r.PricePerNight >= @__minPrice_0) && (r.PricePerNight <= @__maxPrice_1)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
            1 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 8], [Property: RoomClass.Description (string) MaxLength(500), 9], [Property: RoomClass.HotelId (int) Required FK Index, 10], [Property: RoomClass.Name (string) Required, 11], [Property: RoomClass.RoomType (RoomType) Required, 12] }
        SELECT r.RoomID, r.AdultsCapacity, r.ChildrenCapacity, r.CreatedAtUtc, r.Number, r.PricePerNight, r.RoomClassID, r0.RoomClassID, r0.CreatedAtUtc, r0.Description, r0.HotelId, r0.Name, r0.RoomType
        FROM Rooms AS r
        INNER JOIN RoomClasses AS r0 ON r.RoomClassID == r0.RoomClassID
        WHERE (r.PricePerNight >= @__minPrice_0) && (r.PricePerNight <= @__maxPrice_1), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Room entity;
        RoomClass entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Room instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Room);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Room.RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Room)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]: 
                        {
                            return 
                            {
                                Room instance;
                                instance = new Room();
                                instance.<RoomID>k__BackingField = dataReader.GetInt32(0);
                                instance.<AdultsCapacity>k__BackingField = dataReader.GetInt32(1);
                                instance.<ChildrenCapacity>k__BackingField = dataReader.GetInt32(2);
                                instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(3);
                                instance.<Number>k__BackingField = dataReader.GetString(4);
                                instance.<PricePerNight>k__BackingField = dataReader.GetDecimal(5);
                                instance.<RoomClassID>k__BackingField = dataReader.GetInt32(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Room)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            RoomClass instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(RoomClass);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: RoomClass.RoomClassID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (RoomClass)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]: 
                        {
                            return 
                            {
                                RoomClass instance;
                                instance = new RoomClass();
                                instance.<RoomClassID>k__BackingField = dataReader.GetInt32(7);
                                instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(8);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<HotelId>k__BackingField = dataReader.GetInt32(10);
                                instance.<Name>k__BackingField = dataReader.GetString(11);
                                instance.<RoomType>k__BackingField = Invoke(((EnumToNumberConverter<RoomType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: RoomClass.RoomType (RoomType) Required | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("RoomType")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(12));
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(RoomClass)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Room, Room, RoomClass>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Room.RoomClass (RoomClass) ToPrincipal RoomClass Inverse: Rooms | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindNavigation("RoomClass")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: RoomClass.Rooms (ICollection<Room>) Collection ToDependent Room Inverse: RoomClass | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms")], 
            fixup: (namelessParameter{9}, namelessParameter{10}) => 
            {
                namelessParameter{9}.<RoomClass>k__BackingField = namelessParameter{10};
                return [LIFTABLE Constant: ClrICollectionAccessor<RoomClass, ICollection<Room>, Room> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms").GetCollectionAccessor()].Add(
                    entity: namelessParameter{10}, 
                    value: namelessParameter{9}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-10 13:25:34.041 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:25:34.046 -04:00 [DBG] Created DbConnection. (5ms).
2025-03-10 13:25:34.056 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:34.060 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:34.064 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:25:34.069 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-03-10 13:25:34.072 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-10 13:25:34.083 -04:00 [DBG] Executing DbCommand [Parameters=[@__minPrice_0='?' (DbType = Decimal), @__maxPrice_1='?' (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."PricePerNight" >= @__minPrice_0 AND r."PricePerNight" <= @__maxPrice_1
2025-03-10 13:25:34.116 -04:00 [INF] Executed DbCommand (33ms) [Parameters=[@__minPrice_0='?' (DbType = Decimal), @__maxPrice_1='?' (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."PricePerNight" >= @__minPrice_0 AND r."PricePerNight" <= @__maxPrice_1
2025-03-10 13:25:34.231 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:34.239 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-03-10 13:25:34.255 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:34.258 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:25:34.290 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:25:34.309 -04:00 [DBG] Attempting to select an output formatter based on Accept header '["text/plain"]'.
2025-03-10 13:25:34.324 -04:00 [DBG] Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
2025-03-10 13:25:34.336 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:25:34.339 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:25:34.346 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:25:34.350 -04:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType7`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-10 13:25:34.355 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API) in 498.8065ms
2025-03-10 13:25:34.372 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-10 13:25:34.380 -04:00 [DBG] Connection id "0HNAVUL2FS2U5" completed keep alive response.
2025-03-10 13:25:34.386 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:25:34.389 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:34.570 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (181ms).
2025-03-10 13:25:34.650 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Room/by-price?minPrice=500 - 404 null application/json; charset=utf-8 950.6976ms
2025-03-10 13:25:43.093 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Room/by-price?minPrice=500&maxPrice=300 - null null
2025-03-10 13:25:43.096 -04:00 [DBG] 2 candidate(s) found for the request path '/api/Room/by-price'
2025-03-10 13:25:43.098 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)' with route pattern 'api/Room/by-price' is valid for the request path '/api/Room/by-price'
2025-03-10 13:25:43.101 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)' with route pattern 'api/Room/{id}' is valid for the request path '/api/Room/by-price'
2025-03-10 13:25:43.167 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-10 13:25:43.170 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:25:43.173 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:25:43.197 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:25:43.199 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-10 13:25:43.200 -04:00 [INF] Route matched with {action = "GetRoomsByPriceRange", controller = "Room"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRoomsByPriceRange(System.Decimal, System.Decimal) on controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API).
2025-03-10 13:25:43.205 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:25:43.208 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:25:43.215 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:25:43.218 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:25:43.220 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:25:43.223 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-10 13:25:43.225 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-10 13:25:43.234 -04:00 [DBG] Attempting to bind parameter 'minPrice' of type 'System.Decimal' ...
2025-03-10 13:25:43.237 -04:00 [DBG] Attempting to bind parameter 'minPrice' of type 'System.Decimal' using the name 'minPrice' in request data ...
2025-03-10 13:25:43.252 -04:00 [DBG] Done attempting to bind parameter 'minPrice' of type 'System.Decimal'.
2025-03-10 13:25:43.254 -04:00 [DBG] Done attempting to bind parameter 'minPrice' of type 'System.Decimal'.
2025-03-10 13:25:43.256 -04:00 [DBG] Attempting to validate the bound parameter 'minPrice' of type 'System.Decimal' ...
2025-03-10 13:25:43.258 -04:00 [DBG] Done attempting to validate the bound parameter 'minPrice' of type 'System.Decimal'.
2025-03-10 13:25:43.265 -04:00 [DBG] Attempting to bind parameter 'maxPrice' of type 'System.Decimal' ...
2025-03-10 13:25:43.268 -04:00 [DBG] Attempting to bind parameter 'maxPrice' of type 'System.Decimal' using the name 'maxPrice' in request data ...
2025-03-10 13:25:43.271 -04:00 [DBG] Done attempting to bind parameter 'maxPrice' of type 'System.Decimal'.
2025-03-10 13:25:43.273 -04:00 [DBG] Done attempting to bind parameter 'maxPrice' of type 'System.Decimal'.
2025-03-10 13:25:43.275 -04:00 [DBG] Attempting to validate the bound parameter 'maxPrice' of type 'System.Decimal' ...
2025-03-10 13:25:43.279 -04:00 [DBG] Done attempting to validate the bound parameter 'maxPrice' of type 'System.Decimal'.
2025-03-10 13:25:43.285 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:25:43.289 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:25:43.290 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 13:25:43.298 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:43.301 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:43.304 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:25:43.306 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:25:43.308 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-10 13:25:43.315 -04:00 [DBG] Executing DbCommand [Parameters=[@__minPrice_0='?' (DbType = Decimal), @__maxPrice_1='?' (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."PricePerNight" >= @__minPrice_0 AND r."PricePerNight" <= @__maxPrice_1
2025-03-10 13:25:43.323 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__minPrice_0='?' (DbType = Decimal), @__maxPrice_1='?' (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."PricePerNight" >= @__minPrice_0 AND r."PricePerNight" <= @__maxPrice_1
2025-03-10 13:25:43.330 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:43.332 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-10 13:25:43.341 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:43.349 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-10 13:25:43.353 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:25:43.365 -04:00 [DBG] Attempting to select an output formatter based on Accept header '["text/plain"]'.
2025-03-10 13:25:43.368 -04:00 [DBG] Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
2025-03-10 13:25:43.375 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:25:43.378 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:25:43.383 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:25:43.386 -04:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType7`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-10 13:25:43.391 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API) in 168.2219ms
2025-03-10 13:25:43.398 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-10 13:25:43.403 -04:00 [DBG] Connection id "0HNAVUL2FS2U5" completed keep alive response.
2025-03-10 13:25:43.415 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:25:43.416 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:43.424 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-10 13:25:43.429 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Room/by-price?minPrice=500&maxPrice=300 - 404 null application/json; charset=utf-8 336.7079ms
2025-03-10 13:25:51.331 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Room/by-price?minPrice=500&maxPrice=500 - null null
2025-03-10 13:25:51.335 -04:00 [DBG] 2 candidate(s) found for the request path '/api/Room/by-price'
2025-03-10 13:25:51.337 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)' with route pattern 'api/Room/by-price' is valid for the request path '/api/Room/by-price'
2025-03-10 13:25:51.403 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)' with route pattern 'api/Room/{id}' is valid for the request path '/api/Room/by-price'
2025-03-10 13:25:51.406 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-10 13:25:51.409 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:25:51.416 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:25:51.421 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:25:51.424 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-10 13:25:51.430 -04:00 [INF] Route matched with {action = "GetRoomsByPriceRange", controller = "Room"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRoomsByPriceRange(System.Decimal, System.Decimal) on controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API).
2025-03-10 13:25:51.434 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:25:51.436 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:25:51.440 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:25:51.448 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:25:51.451 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:25:51.454 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-10 13:25:51.456 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-10 13:25:51.463 -04:00 [DBG] Attempting to bind parameter 'minPrice' of type 'System.Decimal' ...
2025-03-10 13:25:51.466 -04:00 [DBG] Attempting to bind parameter 'minPrice' of type 'System.Decimal' using the name 'minPrice' in request data ...
2025-03-10 13:25:51.469 -04:00 [DBG] Done attempting to bind parameter 'minPrice' of type 'System.Decimal'.
2025-03-10 13:25:51.471 -04:00 [DBG] Done attempting to bind parameter 'minPrice' of type 'System.Decimal'.
2025-03-10 13:25:51.473 -04:00 [DBG] Attempting to validate the bound parameter 'minPrice' of type 'System.Decimal' ...
2025-03-10 13:25:51.475 -04:00 [DBG] Done attempting to validate the bound parameter 'minPrice' of type 'System.Decimal'.
2025-03-10 13:25:51.481 -04:00 [DBG] Attempting to bind parameter 'maxPrice' of type 'System.Decimal' ...
2025-03-10 13:25:51.484 -04:00 [DBG] Attempting to bind parameter 'maxPrice' of type 'System.Decimal' using the name 'maxPrice' in request data ...
2025-03-10 13:25:51.488 -04:00 [DBG] Done attempting to bind parameter 'maxPrice' of type 'System.Decimal'.
2025-03-10 13:25:51.490 -04:00 [DBG] Done attempting to bind parameter 'maxPrice' of type 'System.Decimal'.
2025-03-10 13:25:51.495 -04:00 [DBG] Attempting to validate the bound parameter 'maxPrice' of type 'System.Decimal' ...
2025-03-10 13:25:51.498 -04:00 [DBG] Done attempting to validate the bound parameter 'maxPrice' of type 'System.Decimal'.
2025-03-10 13:25:51.501 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:25:51.504 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:25:51.509 -04:00 [DBG] Created DbConnection. (4ms).
2025-03-10 13:25:51.513 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:51.515 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:51.517 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:25:51.519 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:25:51.521 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:25:51.524 -04:00 [DBG] Executing DbCommand [Parameters=[@__minPrice_0='?' (DbType = Decimal), @__maxPrice_1='?' (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."PricePerNight" >= @__minPrice_0 AND r."PricePerNight" <= @__maxPrice_1
2025-03-10 13:25:51.532 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__minPrice_0='?' (DbType = Decimal), @__maxPrice_1='?' (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."PricePerNight" >= @__minPrice_0 AND r."PricePerNight" <= @__maxPrice_1
2025-03-10 13:25:51.536 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:25:51.540 -04:00 [DBG] The navigation 'Room.RoomClass' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:25:51.545 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:25:51.550 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:51.552 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 15ms reading results.
2025-03-10 13:25:51.556 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:51.557 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-10 13:25:51.563 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:25:51.566 -04:00 [DBG] Attempting to select an output formatter based on Accept header '["text/plain"]'.
2025-03-10 13:25:51.569 -04:00 [DBG] Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
2025-03-10 13:25:51.572 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:25:51.573 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:25:51.574 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:25:51.580 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.Room.RoomResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-10 13:25:51.586 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API) in 132.0763ms
2025-03-10 13:25:51.592 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-10 13:25:51.599 -04:00 [DBG] Connection id "0HNAVUL2FS2U5" completed keep alive response.
2025-03-10 13:25:51.602 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:25:51.609 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:25:51.617 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-10 13:25:51.620 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Room/by-price?minPrice=500&maxPrice=500 - 200 null application/json; charset=utf-8 288.6804ms
2025-03-10 13:28:02.349 -04:00 [DBG] Connection id "0HNAVUL2FS2U5" disconnecting.
2025-03-10 13:28:02.374 -04:00 [DBG] Connection id "0HNAVUL2FS2U5" stopped.
2025-03-10 13:28:02.380 -04:00 [DBG] Connection id "0HNAVUL2FS2U5" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 13:28:38.199 -04:00 [DBG] Connection id "0HNAVUL2FS2U6" accepted.
2025-03-10 13:28:38.201 -04:00 [DBG] Connection id "0HNAVUL2FS2U6" started.
2025-03-10 13:28:38.203 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Hotel/2/roomclasses - application/json 120
2025-03-10 13:28:38.209 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Hotel/2/roomclasses'
2025-03-10 13:28:38.215 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.HotelController.AddRoomClassToHotel (HotelBookingPlatform.API)' with route pattern 'api/Hotel/{hotelId}/roomclasses' is valid for the request path '/api/Hotel/2/roomclasses'
2025-03-10 13:28:38.228 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.HotelController.AddRoomClassToHotel (HotelBookingPlatform.API)'
2025-03-10 13:28:38.230 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:28:38.231 -04:00 [INF] No CORS policy found for the specified request.
2025-03-10 13:28:38.234 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:28:38.237 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:28:38.239 -04:00 [DBG] Authorization was successful.
2025-03-10 13:28:38.242 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.HotelController.AddRoomClassToHotel (HotelBookingPlatform.API)'
2025-03-10 13:28:38.262 -04:00 [INF] Route matched with {action = "AddRoomClassToHotel", controller = "Hotel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddRoomClassToHotel(Int32, HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto) on controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API).
2025-03-10 13:28:38.266 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:28:38.274 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:28:38.277 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:28:38.290 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:28:38.293 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:28:38.295 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-10 13:28:38.298 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-10 13:28:38.302 -04:00 [DBG] Attempting to bind parameter 'hotelId' of type 'System.Int32' ...
2025-03-10 13:28:38.307 -04:00 [DBG] Attempting to bind parameter 'hotelId' of type 'System.Int32' using the name 'hotelId' in request data ...
2025-03-10 13:28:38.309 -04:00 [DBG] Done attempting to bind parameter 'hotelId' of type 'System.Int32'.
2025-03-10 13:28:38.312 -04:00 [DBG] Done attempting to bind parameter 'hotelId' of type 'System.Int32'.
2025-03-10 13:28:38.314 -04:00 [DBG] Attempting to validate the bound parameter 'hotelId' of type 'System.Int32' ...
2025-03-10 13:28:38.320 -04:00 [DBG] Done attempting to validate the bound parameter 'hotelId' of type 'System.Int32'.
2025-03-10 13:28:38.326 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto' ...
2025-03-10 13:28:38.330 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto' using the name '' in request data ...
2025-03-10 13:28:38.332 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-10 13:28:38.339 -04:00 [DBG] Connection id "0HNAVUL2FS2U6", Request id "0HNAVUL2FS2U6:00000001": started reading request body.
2025-03-10 13:28:38.341 -04:00 [DBG] Connection id "0HNAVUL2FS2U6", Request id "0HNAVUL2FS2U6:00000001": done reading request body.
2025-03-10 13:28:38.343 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'
2025-03-10 13:28:38.344 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'.
2025-03-10 13:28:38.347 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'.
2025-03-10 13:28:38.349 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto' ...
2025-03-10 13:28:38.356 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassRequestDto'.
2025-03-10 13:28:38.362 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:28:38.365 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:28:38.372 -04:00 [DBG] Created DbConnection. (6ms).
2025-03-10 13:28:38.374 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:28:38.407 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:28:38.409 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:28:38.410 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:28:38.413 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:28:38.414 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:28:38.427 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:28:38.432 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:28:38.438 -04:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:28:38.440 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:28:38.443 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:28:38.445 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:28:38.448 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:28:38.453 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-10 13:28:38.456 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-10 13:28:38.459 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-10 13:28:38.465 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-10 13:28:38.473 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:28:38.475 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 42ms reading results.
2025-03-10 13:28:38.478 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:28:38.479 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-03-10 13:28:38.483 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:28:38.490 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-10 13:28:38.493 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'RoomClass.RoomClassID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:28:38.495 -04:00 [DBG] The navigation 'RoomClass.Hotel' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:28:38.498 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:28:38.505 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-10 13:28:38.507 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-10 13:28:38.510 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-10 13:28:38.514 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:28:38.517 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:28:38.520 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:28:38.524 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:28:38.526 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-03-10 13:28:38.528 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RoomClasses" ("CreatedAtUtc", "Description", "HotelId", "Name", "RoomType")
VALUES (@p0, @p1, @p2, @p3, @p4)
RETURNING "RoomClassID";
2025-03-10 13:28:38.540 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?', @p2='?' (DbType = Int32), @p3='?', @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RoomClasses" ("CreatedAtUtc", "Description", "HotelId", "Name", "RoomType")
VALUES (@p0, @p1, @p2, @p3, @p4)
RETURNING "RoomClassID";
2025-03-10 13:28:38.543 -04:00 [DBG] The foreign key property 'RoomClass.RoomClassID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-10 13:28:38.545 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:28:38.547 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-10 13:28:38.552 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:28:38.556 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-10 13:28:38.560 -04:00 [DBG] An entity of type 'RoomClass' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:28:38.563 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-10 13:28:38.565 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:28:38.574 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:28:38.575 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:28:38.577 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:28:38.579 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:28:38.581 -04:00 [INF] Executing CreatedResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-10 13:28:38.586 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.HotelController.AddRoomClassToHotel (HotelBookingPlatform.API) in 290.9552ms
2025-03-10 13:28:38.591 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.HotelController.AddRoomClassToHotel (HotelBookingPlatform.API)'
2025-03-10 13:28:38.594 -04:00 [DBG] Connection id "0HNAVUL2FS2U6" completed keep alive response.
2025-03-10 13:28:38.602 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:28:38.605 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:28:38.609 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-10 13:28:38.612 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Hotel/2/roomclasses - 201 null application/json; charset=utf-8 408.3563ms
2025-03-10 13:29:05.961 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Hotel/2/roomclasses - null null
2025-03-10 13:29:05.967 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Hotel/2/roomclasses'
2025-03-10 13:29:05.971 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetRoomClassesByHotelId (HotelBookingPlatform.API)' with route pattern 'api/Hotel/{hotelId}/roomclasses' is valid for the request path '/api/Hotel/2/roomclasses'
2025-03-10 13:29:05.990 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetRoomClassesByHotelId (HotelBookingPlatform.API)'
2025-03-10 13:29:05.994 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:29:05.995 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:29:05.997 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:29:05.999 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetRoomClassesByHotelId (HotelBookingPlatform.API)'
2025-03-10 13:29:06.011 -04:00 [INF] Route matched with {action = "GetRoomClassesByHotelId", controller = "Hotel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRoomClassesByHotelId(Int32) on controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API).
2025-03-10 13:29:06.026 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:29:06.029 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:29:06.032 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 13:29:06.041 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:29:06.045 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:29:06.050 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-10 13:29:06.058 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-10 13:29:06.083 -04:00 [DBG] Attempting to bind parameter 'hotelId' of type 'System.Int32' ...
2025-03-10 13:29:06.108 -04:00 [DBG] Attempting to bind parameter 'hotelId' of type 'System.Int32' using the name 'hotelId' in request data ...
2025-03-10 13:29:06.116 -04:00 [DBG] Done attempting to bind parameter 'hotelId' of type 'System.Int32'.
2025-03-10 13:29:06.139 -04:00 [DBG] Done attempting to bind parameter 'hotelId' of type 'System.Int32'.
2025-03-10 13:29:06.155 -04:00 [DBG] Attempting to validate the bound parameter 'hotelId' of type 'System.Int32' ...
2025-03-10 13:29:06.180 -04:00 [DBG] Done attempting to validate the bound parameter 'hotelId' of type 'System.Int32'.
2025-03-10 13:29:06.212 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:29:06.216 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:29:06.217 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 13:29:06.222 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:29:06.224 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:29:06.226 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:29:06.231 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-10 13:29:06.258 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (31ms).
2025-03-10 13:29:06.260 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:29:06.267 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:29:06.278 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:29:06.282 -04:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:29:06.290 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:29:06.292 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:29:06.299 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:29:06.342 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:29:06.491 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (149ms).
2025-03-10 13:29:06.626 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (284ms).
2025-03-10 13:29:06.662 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-10 13:29:06.708 -04:00 [INF] Executed DbCommand (45ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-10 13:29:06.716 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:29:06.740 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 463ms reading results.
2025-03-10 13:29:06.759 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:29:06.761 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 45ms reading results.
2025-03-10 13:29:06.765 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:29:06.775 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-03-10 13:29:06.789 -04:00 [DBG] Compiling query expression: 
'DbSet<RoomClass>()
    .Where(rc => rc.HotelId == __hotelId_0)'
2025-03-10 13:29:06.840 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<RoomClass>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 1], [Property: RoomClass.Description (string) MaxLength(500), 2], [Property: RoomClass.HotelId (int) Required FK Index, 3], [Property: RoomClass.Name (string) Required, 4], [Property: RoomClass.RoomType (RoomType) Required, 5] }
        SELECT r.RoomClassID, r.CreatedAtUtc, r.Description, r.HotelId, r.Name, r.RoomType
        FROM RoomClasses AS r
        WHERE r.HotelId == @__hotelId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 1], [Property: RoomClass.Description (string) MaxLength(500), 2], [Property: RoomClass.HotelId (int) Required FK Index, 3], [Property: RoomClass.Name (string) Required, 4], [Property: RoomClass.RoomType (RoomType) Required, 5] }
        SELECT r.RoomClassID, r.CreatedAtUtc, r.Description, r.HotelId, r.Name, r.RoomType
        FROM RoomClasses AS r
        WHERE r.HotelId == @__hotelId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        RoomClass entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            RoomClass instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(RoomClass);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: RoomClass.RoomClassID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (RoomClass)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]: 
                        {
                            return 
                            {
                                RoomClass instance;
                                instance = new RoomClass();
                                instance.<RoomClassID>k__BackingField = dataReader.GetInt32(0);
                                instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(1);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<HotelId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Name>k__BackingField = dataReader.GetString(4);
                                instance.<RoomType>k__BackingField = Invoke(((EnumToNumberConverter<RoomType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: RoomClass.RoomType (RoomType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("RoomType")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(RoomClass)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-10 13:29:06.873 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:29:06.878 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:29:06.883 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:29:06.887 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-10 13:29:06.894 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (11ms).
2025-03-10 13:29:06.899 -04:00 [DBG] Executing DbCommand [Parameters=[@__hotelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomClassID", r."CreatedAtUtc", r."Description", r."HotelId", r."Name", r."RoomType"
FROM "RoomClasses" AS r
WHERE r."HotelId" = @__hotelId_0
2025-03-10 13:29:06.955 -04:00 [INF] Executed DbCommand (56ms) [Parameters=[@__hotelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomClassID", r."CreatedAtUtc", r."Description", r."HotelId", r."Name", r."RoomType"
FROM "RoomClasses" AS r
WHERE r."HotelId" = @__hotelId_0
2025-03-10 13:29:07.128 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:29:07.144 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:29:07.146 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:29:07.148 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 20ms reading results.
2025-03-10 13:29:07.165 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:29:07.170 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-10 13:29:07.192 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:29:07.207 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:29:07.209 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:29:07.211 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:29:07.212 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:29:07.214 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-10 13:29:07.226 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.HotelController.GetRoomClassesByHotelId (HotelBookingPlatform.API) in 1176.7559ms
2025-03-10 13:29:07.241 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetRoomClassesByHotelId (HotelBookingPlatform.API)'
2025-03-10 13:29:07.255 -04:00 [DBG] Connection id "0HNAVUL2FS2U6" completed keep alive response.
2025-03-10 13:29:07.280 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:29:07.284 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:29:07.298 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (14ms).
2025-03-10 13:29:07.590 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Hotel/2/roomclasses - 200 null application/json; charset=utf-8 1630.7851ms
2025-03-10 13:30:48.563 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Booking/create - application/json 165
2025-03-10 13:30:48.567 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/create'
2025-03-10 13:30:48.615 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/create' is valid for the request path '/api/Booking/create'
2025-03-10 13:30:48.630 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-10 13:30:48.632 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:30:48.634 -04:00 [INF] No CORS policy found for the specified request.
2025-03-10 13:30:48.636 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:30:48.637 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:30:48.641 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-10 13:30:48.650 -04:00 [INF] Route matched with {action = "CreateBooking", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateBooking(HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-03-10 13:30:48.655 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:30:48.661 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:30:48.663 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-10 13:30:48.668 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:30:48.670 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:30:48.675 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-10 13:30:48.682 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-10 13:30:48.684 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-10 13:30:48.687 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' using the name '' in request data ...
2025-03-10 13:30:48.689 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-10 13:30:48.700 -04:00 [DBG] Connection id "0HNAVUL2FS2U6", Request id "0HNAVUL2FS2U6:00000003": started reading request body.
2025-03-10 13:30:48.745 -04:00 [DBG] Connection id "0HNAVUL2FS2U6", Request id "0HNAVUL2FS2U6:00000003": done reading request body.
2025-03-10 13:30:48.763 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'
2025-03-10 13:30:48.765 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-10 13:30:48.768 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-10 13:30:48.771 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-10 13:30:48.786 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-10 13:30:48.799 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:30:48.805 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:30:48.809 -04:00 [DBG] Created DbConnection. (3ms).
2025-03-10 13:30:48.811 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:30:48.813 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:30:48.814 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:30:48.816 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:30:48.819 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-10 13:30:48.822 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 13:30:48.838 -04:00 [INF] Executed DbCommand (17ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 13:30:48.847 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:30:48.850 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:30:48.853 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:30:48.855 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-03-10 13:30:48.862 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:30:48.864 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-10 13:30:48.866 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API) in 191.0811ms
2025-03-10 13:30:48.869 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-10 13:30:48.879 -04:00 [DBG] Connection id "0HNAVUL2FS2U6" completed keep alive response.
2025-03-10 13:30:48.886 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:30:48.894 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:30:48.900 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-10 13:30:48.905 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Booking/create - 400 null application/json 341.9303ms
2025-03-10 13:33:00.527 -04:00 [DBG] Connection id "0HNAVUL2FS2U6" disconnecting.
2025-03-10 13:33:00.529 -04:00 [DBG] Connection id "0HNAVUL2FS2U6" stopped.
2025-03-10 13:33:00.531 -04:00 [DBG] Connection id "0HNAVUL2FS2U6" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 13:33:04.984 -04:00 [DBG] Connection id "0HNAVUL2FS2U7" accepted.
2025-03-10 13:33:04.986 -04:00 [DBG] Connection id "0HNAVUL2FS2U7" started.
2025-03-10 13:33:04.988 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Booking/create - application/json 165
2025-03-10 13:33:04.994 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/create'
2025-03-10 13:33:05.062 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/create' is valid for the request path '/api/Booking/create'
2025-03-10 13:33:05.068 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-10 13:33:05.072 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 13:33:05.073 -04:00 [INF] No CORS policy found for the specified request.
2025-03-10 13:33:05.075 -04:00 [DBG] Successfully validated the token.
2025-03-10 13:33:05.077 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 13:33:05.087 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-10 13:33:05.089 -04:00 [INF] Route matched with {action = "CreateBooking", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateBooking(HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-03-10 13:33:05.095 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 13:33:05.105 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 13:33:05.108 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-10 13:33:05.113 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 13:33:05.118 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 13:33:05.123 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-10 13:33:05.127 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-10 13:33:05.132 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-10 13:33:05.134 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' using the name '' in request data ...
2025-03-10 13:33:05.139 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-10 13:33:05.142 -04:00 [DBG] Connection id "0HNAVUL2FS2U7", Request id "0HNAVUL2FS2U7:00000001": started reading request body.
2025-03-10 13:33:05.148 -04:00 [DBG] Connection id "0HNAVUL2FS2U7", Request id "0HNAVUL2FS2U7:00000001": done reading request body.
2025-03-10 13:33:05.151 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'
2025-03-10 13:33:05.153 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-10 13:33:05.158 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-10 13:33:05.160 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-10 13:33:05.165 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-10 13:33:05.170 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 13:33:05.174 -04:00 [DBG] Creating DbConnection.
2025-03-10 13:33:05.176 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 13:33:05.177 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.186 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.189 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:33:05.191 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-10 13:33:05.193 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:33:05.197 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 13:33:05.210 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 13:33:05.219 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:33:05.221 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:33:05.225 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.228 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-03-10 13:33:05.237 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.239 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:33:05.248 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.250 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.253 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:33:05.254 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:33:05.256 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:33:05.259 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-10 13:33:05.273 -04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-10 13:33:05.280 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:33:05.288 -04:00 [DBG] The navigation 'Room.RoomClass' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:33:05.291 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:33:05.294 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.297 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 17ms reading results.
2025-03-10 13:33:05.301 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.308 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-10 13:33:05.316 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.321 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.325 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:33:05.327 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:33:05.331 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-10 13:33:05.334 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-10 13:33:05.341 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-10 13:33:05.345 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.349 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-03-10 13:33:05.355 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.357 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-10 13:33:05.366 -04:00 [DBG] Compiling query expression: 
'DbSet<Discount>()
    .Where(d => d.RoomID == __roomId_0 && d.StartDateUtc <= __checkOutDate_1 && d.EndDateUtc >= __checkInDate_2 && DateTime.UtcNow >= d.StartDateUtc && DateTime.UtcNow <= d.EndDateUtc)
    .FirstOrDefault()'
2025-03-10 13:33:05.411 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Discount>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Discount>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Discount.DiscountID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Discount.CreatedAtUtc (DateTime) Required, 1], [Property: Discount.EndDateUtc (DateTime) Required, 2], [Property: Discount.IsActive (bool) Required, 3], [Property: Discount.Percentage (decimal) Required, 4], [Property: Discount.RoomClassID (no field, int?) Shadow FK Index, 5], [Property: Discount.RoomID (int) Required FK Index, 6], [Property: Discount.StartDateUtc (DateTime) Required, 7] }
            SELECT TOP(1) d.DiscountID, d.CreatedAtUtc, d.EndDateUtc, d.IsActive, d.Percentage, d.RoomClassID, d.RoomID, d.StartDateUtc
            FROM Discounts AS d
            WHERE ((((d.RoomID == @__roomId_0) && (d.StartDateUtc <= @__checkOutDate_1)) && (d.EndDateUtc >= @__checkInDate_2)) && (now() >= d.StartDateUtc)) && (now() <= d.EndDateUtc)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Discount.DiscountID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Discount.CreatedAtUtc (DateTime) Required, 1], [Property: Discount.EndDateUtc (DateTime) Required, 2], [Property: Discount.IsActive (bool) Required, 3], [Property: Discount.Percentage (decimal) Required, 4], [Property: Discount.RoomClassID (no field, int?) Shadow FK Index, 5], [Property: Discount.RoomID (int) Required FK Index, 6], [Property: Discount.StartDateUtc (DateTime) Required, 7] }
            SELECT TOP(1) d.DiscountID, d.CreatedAtUtc, d.EndDateUtc, d.IsActive, d.Percentage, d.RoomClassID, d.RoomID, d.StartDateUtc
            FROM Discounts AS d
            WHERE ((((d.RoomID == @__roomId_0) && (d.StartDateUtc <= @__checkOutDate_1)) && (d.EndDateUtc >= @__checkInDate_2)) && (now() >= d.StartDateUtc)) && (now() <= d.EndDateUtc), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Discount entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Discount instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Discount);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Discount.DiscountID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Discount").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Discount)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Discount | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Discount")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Discount | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Discount")]: 
                            {
                                shadowSnapshot1 = (ISnapshot)new Snapshot<int?>(dataReader.IsDBNull(5) ? default(int?) : (int?)dataReader.GetInt32(5));
                                return 
                                {
                                    Discount instance;
                                    instance = new Discount();
                                    instance.<DiscountID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EndDateUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<IsActive>k__BackingField = dataReader.GetBoolean(3);
                                    instance.<Percentage>k__BackingField = dataReader.GetDecimal(4);
                                    instance.<RoomID>k__BackingField = dataReader.GetInt32(6);
                                    instance.<StartDateUtc>k__BackingField = dataReader.GetDateTime(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Discount | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Discount")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Discount)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-10 13:33:05.461 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.469 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.471 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:33:05.473 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-10 13:33:05.476 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-10 13:33:05.480 -04:00 [DBG] Executing DbCommand [Parameters=[@__roomId_0='?' (DbType = Int32), @__checkOutDate_1='?' (DbType = DateTime), @__checkInDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT d."DiscountID", d."CreatedAtUtc", d."EndDateUtc", d."IsActive", d."Percentage", d."RoomClassID", d."RoomID", d."StartDateUtc"
FROM "Discounts" AS d
WHERE d."RoomID" = @__roomId_0 AND d."StartDateUtc" <= @__checkOutDate_1 AND d."EndDateUtc" >= @__checkInDate_2 AND now() >= d."StartDateUtc" AND now() <= d."EndDateUtc"
LIMIT 1
2025-03-10 13:33:05.502 -04:00 [INF] Executed DbCommand (21ms) [Parameters=[@__roomId_0='?' (DbType = Int32), @__checkOutDate_1='?' (DbType = DateTime), @__checkInDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT d."DiscountID", d."CreatedAtUtc", d."EndDateUtc", d."IsActive", d."Percentage", d."RoomClassID", d."RoomID", d."StartDateUtc"
FROM "Discounts" AS d
WHERE d."RoomID" = @__roomId_0 AND d."StartDateUtc" <= @__checkOutDate_1 AND d."EndDateUtc" >= @__checkInDate_2 AND now() >= d."StartDateUtc" AND now() <= d."EndDateUtc"
LIMIT 1
2025-03-10 13:33:05.509 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.511 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-10 13:33:05.518 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.521 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-10 13:33:05.526 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.528 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.536 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:33:05.537 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:33:05.539 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:33:05.542 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:33:05.555 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-10 13:33:05.568 -04:00 [DBG] The navigation 'RoomClass.Hotel' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:33:05.571 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:33:05.575 -04:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:33:05.583 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:33:05.586 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:33:05.588 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:33:05.593 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:33:05.600 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-03-10 13:33:05.605 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (12ms).
2025-03-10 13:33:05.608 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-10 13:33:05.623 -04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-10 13:33:05.633 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.640 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 72ms reading results.
2025-03-10 13:33:05.645 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.653 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 19ms reading results.
2025-03-10 13:33:05.658 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.661 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:33:05.671 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.678 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.685 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:33:05.687 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:33:05.689 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 13:33:05.691 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-10 13:33:05.704 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-10 13:33:05.709 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.711 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-10 13:33:05.719 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.721 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 13:33:05.743 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Booking.BookingID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:33:05.852 -04:00 [DBG] Context 'AppDbContext' started tracking 'Booking' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:33:05.892 -04:00 [DBG] Context 'AppDbContext' started tracking 'BookingRoom' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:33:05.901 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-10 13:33:05.902 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-10 13:33:05.937 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-10 13:33:05.953 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.956 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:05.959 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-10 13:33:05.961 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-10 13:33:05.968 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:33:05.969 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 13:33:05.975 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-10 13:33:05.977 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Decimal), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = Decimal), @p9='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Bookings" ("AfterDiscountedPrice", "BookingDateUtc", "CheckInDateUtc", "CheckOutDateUtc", "ConfirmationNumber", "HotelId", "PaymentMethod", "Status", "TotalPrice", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9)
RETURNING "BookingID";
2025-03-10 13:33:06.006 -04:00 [INF] Executed DbCommand (28ms) [Parameters=[@p0='?' (DbType = Decimal), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = Decimal), @p9='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Bookings" ("AfterDiscountedPrice", "BookingDateUtc", "CheckInDateUtc", "CheckOutDateUtc", "ConfirmationNumber", "HotelId", "PaymentMethod", "Status", "TotalPrice", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9)
RETURNING "BookingID";
2025-03-10 13:33:06.012 -04:00 [DBG] The foreign key property 'Booking.BookingID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-10 13:33:06.025 -04:00 [DBG] The foreign key property 'BookingRoom.BookingID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-10 13:33:06.036 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:06.039 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 28ms reading results.
2025-03-10 13:33:06.043 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 13:33:06.045 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-10 13:33:06.052 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-03-10 13:33:06.057 -04:00 [DBG] Executing DbCommand [Parameters=[@p10='?' (DbType = Int32), @p11='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "BookingRoom" ("BookingID", "RoomID")
VALUES (@p10, @p11);
2025-03-10 13:33:06.070 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@p10='?' (DbType = Int32), @p11='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "BookingRoom" ("BookingID", "RoomID")
VALUES (@p10, @p11);
2025-03-10 13:33:06.081 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:06.085 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-10 13:33:06.090 -04:00 [DBG] Committing transaction.
2025-03-10 13:33:06.102 -04:00 [DBG] Committed transaction.
2025-03-10 13:33:06.106 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:06.111 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-10 13:33:06.116 -04:00 [DBG] Disposing transaction.
2025-03-10 13:33:06.119 -04:00 [DBG] An entity of type 'Booking' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:33:06.131 -04:00 [DBG] An entity of type 'BookingRoom' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 13:33:06.137 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-03-10 13:33:06.140 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-10 13:33:06.144 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-10 13:33:06.151 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-10 13:33:06.153 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 0 entities written to the database.
2025-03-10 13:33:06.168 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 13:33:06.182 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 13:33:06.185 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 13:33:06.187 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 13:33:06.189 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 13:33:06.193 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Booking.BookingDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-10 13:33:06.219 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API) in 1095.8163ms
2025-03-10 13:33:06.226 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-10 13:33:06.228 -04:00 [DBG] Connection id "0HNAVUL2FS2U7" completed keep alive response.
2025-03-10 13:33:06.232 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 13:33:06.234 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 13:33:06.238 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-10 13:33:06.250 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Booking/create - 200 null application/json; charset=utf-8 1262.1842ms
2025-03-10 13:35:16.580 -04:00 [DBG] Connection id "0HNAVUL2FS2U7" disconnecting.
2025-03-10 13:35:16.582 -04:00 [DBG] Connection id "0HNAVUL2FS2U7" stopped.
2025-03-10 13:35:16.584 -04:00 [DBG] Connection id "0HNAVUL2FS2U7" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 16:24:54.542 -04:00 [WRN] As of ""2025-03-10T20:24:50.5844605+00:00"", the heartbeat has been running for ""00:00:01.2457077"" which is longer than ""00:00:01"". This could be caused by thread pool starvation.
2025-03-10 18:53:15.657 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-10 18:53:15.938 -04:00 [DBG] Hosting starting
2025-03-10 18:53:15.966 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-10 18:53:15.982 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-10 18:53:16.005 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-10 18:53:16.039 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-10 18:53:16.047 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-10 18:53:16.052 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-10 18:53:16.062 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-10 18:53:16.078 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-10 18:53:16.093 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-10 18:53:16.103 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-10 18:53:16.112 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-10 18:53:16.233 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-10 18:53:16.237 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-10 18:53:16.238 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-10 18:53:16.240 -04:00 [INF] Hosting environment: Development
2025-03-10 18:53:16.241 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-10 18:53:16.243 -04:00 [DBG] Hosting started
2025-03-10 18:53:20.517 -04:00 [DBG] Connection id "0HNB04PDD2E8U" accepted.
2025-03-10 18:53:20.520 -04:00 [DBG] Connection id "0HNB04PDD2E8U" started.
2025-03-10 18:53:20.719 -04:00 [DBG] Connection id "0HNB04PDD2E8V" accepted.
2025-03-10 18:53:20.724 -04:00 [DBG] Connection id "0HNB04PDD2E8V" started.
2025-03-10 18:53:20.778 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-03-10 18:53:20.785 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-10 18:53:20.867 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-03-10 18:53:20.881 -04:00 [DBG] Request did not match any endpoints
2025-03-10 18:53:21.145 -04:00 [DBG] Connection id "0HNB04PDD2E8U" completed keep alive response.
2025-03-10 18:53:21.149 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 373.773ms
2025-03-10 18:53:21.356 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-03-10 18:53:21.361 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-03-10 18:53:21.363 -04:00 [DBG] Request did not match any endpoints
2025-03-10 18:53:21.377 -04:00 [DBG] Connection id "0HNB04PDD2E8U" completed keep alive response.
2025-03-10 18:53:21.380 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 23.3486ms
2025-03-10 18:53:21.964 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-10 18:53:22.100 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-10 18:53:22.150 -04:00 [DBG] Request did not match any endpoints
2025-03-10 18:53:22.622 -04:00 [DBG] Connection id "0HNB04PDD2E8U" completed keep alive response.
2025-03-10 18:53:22.629 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 665.0398ms
2025-03-10 18:53:24.406 -04:00 [DBG] Connection id "0HNB04PDD2E8V" received FIN.
2025-03-10 18:53:24.406 -04:00 [DBG] Connection id "0HNB04PDD2E8U" received FIN.
2025-03-10 18:53:24.412 -04:00 [DBG] Connection id "0HNB04PDD2E8U" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 18:53:24.412 -04:00 [DBG] Connection id "0HNB04PDD2E8V" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 18:53:24.419 -04:00 [DBG] Connection id "0HNB04PDD2E8U" disconnecting.
2025-03-10 18:53:24.420 -04:00 [DBG] Connection id "0HNB04PDD2E8V" disconnecting.
2025-03-10 18:53:24.427 -04:00 [DBG] Connection id "0HNB04PDD2E8U" stopped.
2025-03-10 18:53:24.427 -04:00 [DBG] Connection id "0HNB04PDD2E8V" stopped.
2025-03-10 18:54:07.816 -04:00 [DBG] Connection id "0HNB04PDD2E90" accepted.
2025-03-10 18:54:07.818 -04:00 [DBG] Connection id "0HNB04PDD2E90" started.
2025-03-10 18:54:07.822 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 63
2025-03-10 18:54:07.836 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-10 18:54:07.847 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-10 18:54:07.852 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-10 18:54:07.888 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 18:54:07.898 -04:00 [INF] No CORS policy found for the specified request.
2025-03-10 18:54:07.902 -04:00 [WRN] Failed to determine the https port for redirect.
2025-03-10 18:54:08.014 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-10 18:54:08.018 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-10 18:54:08.064 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-10 18:54:08.069 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 18:54:08.073 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 18:54:08.077 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 18:54:08.080 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 18:54:08.082 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 18:54:08.090 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-10 18:54:08.273 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-10 18:54:08.322 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-10 18:54:08.331 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-10 18:54:08.335 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-10 18:54:08.341 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-10 18:54:08.367 -04:00 [DBG] Connection id "0HNB04PDD2E90", Request id "0HNB04PDD2E90:00000001": started reading request body.
2025-03-10 18:54:08.372 -04:00 [DBG] Connection id "0HNB04PDD2E90", Request id "0HNB04PDD2E90:00000001": done reading request body.
2025-03-10 18:54:08.389 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-10 18:54:08.393 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-10 18:54:08.395 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-10 18:54:08.398 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-10 18:54:08.414 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-10 18:54:09.492 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-10 18:54:09.495 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-10 18:54:09.498 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-10 18:54:09.500 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-10 18:54:09.503 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-10 18:54:09.666 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-10 18:54:09.669 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-10 18:54:09.671 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-10 18:54:09.802 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 18:54:09.870 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-10 18:54:09.921 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-10 18:54:10.292 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-10 18:54:10.425 -04:00 [DBG] Creating DbConnection.
2025-03-10 18:54:10.470 -04:00 [DBG] Created DbConnection. (48ms).
2025-03-10 18:54:10.478 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:54:10.816 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:54:10.821 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 18:54:10.833 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-03-10 18:54:10.844 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (22ms).
2025-03-10 18:54:10.853 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 18:54:10.948 -04:00 [INF] Executed DbCommand (97ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 18:54:11.014 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 18:54:11.081 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 18:54:11.110 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:54:11.120 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 164ms reading results.
2025-03-10 18:54:11.130 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:54:11.136 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-10 18:54:11.264 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-03-10 18:54:11.279 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-10 18:54:11.291 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:54:11.294 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:54:11.296 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 18:54:11.298 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 18:54:11.301 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-10 18:54:11.303 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-10 18:54:11.313 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-10 18:54:11.317 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:54:11.320 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-10 18:54:11.323 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:54:11.325 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 18:54:11.335 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-03-10 18:54:11.349 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-10 18:54:11.354 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:54:11.356 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:54:11.358 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 18:54:11.360 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 18:54:11.362 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 18:54:11.364 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-10 18:54:11.373 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-10 18:54:11.377 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:54:11.379 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-10 18:54:11.382 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:54:11.385 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 18:54:11.400 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:54:11.402 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:54:11.407 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 18:54:11.409 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 18:54:11.411 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 18:54:11.413 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-10 18:54:11.418 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-10 18:54:11.425 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:54:11.429 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-10 18:54:11.431 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:54:11.433 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-10 18:54:11.490 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 18:54:11.495 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 18:54:11.499 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 18:54:11.501 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 18:54:11.503 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 18:54:11.509 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-10 18:54:11.560 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 3468.5375ms
2025-03-10 18:54:11.563 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-10 18:54:11.566 -04:00 [DBG] Connection id "0HNB04PDD2E90" completed keep alive response.
2025-03-10 18:54:11.573 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 18:54:11.582 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:54:11.586 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-10 18:54:11.594 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 3772.6844ms
2025-03-10 18:54:19.474 -04:00 [DBG] Connection id "0HNB04PDD2E90" received FIN.
2025-03-10 18:54:19.478 -04:00 [DBG] Connection id "0HNB04PDD2E90" disconnecting.
2025-03-10 18:54:19.483 -04:00 [DBG] Connection id "0HNB04PDD2E90" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 18:54:19.504 -04:00 [DBG] Connection id "0HNB04PDD2E90" stopped.
2025-03-10 18:55:26.873 -04:00 [DBG] Connection id "0HNB04PDD2E91" accepted.
2025-03-10 18:55:26.875 -04:00 [DBG] Connection id "0HNB04PDD2E91" started.
2025-03-10 18:55:26.877 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Booking/1 - null null
2025-03-10 18:55:26.917 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/1'
2025-03-10 18:55:26.924 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/{id}' is valid for the request path '/api/Booking/1'
2025-03-10 18:55:26.931 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)'
2025-03-10 18:55:26.934 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 18:55:27.000 -04:00 [DBG] Successfully validated the token.
2025-03-10 18:55:27.002 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 18:55:27.012 -04:00 [DBG] Authorization was successful.
2025-03-10 18:55:27.013 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)'
2025-03-10 18:55:27.021 -04:00 [INF] Route matched with {action = "GetBooking", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBooking(Int32) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-03-10 18:55:27.024 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 18:55:27.028 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 18:55:27.030 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-10 18:55:27.034 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 18:55:27.036 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 18:55:27.039 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-10 18:55:27.207 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-10 18:55:27.210 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-10 18:55:27.213 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-10 18:55:27.216 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 18:55:27.218 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 18:55:27.220 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-10 18:55:27.223 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-10 18:55:27.299 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 18:55:27.307 -04:00 [DBG] Compiling query expression: 
'DbSet<Booking>()
    .Include(b => b.Hotel)
    .Include(b => b.Rooms)
    .Include(b => b.User)
    .AsSplitQuery()
    .FirstOrDefault(b => b.BookingID == __id_0)'
2025-03-10 18:55:27.317 -04:00 [DBG] Including navigation: 'Booking.Hotel'.
2025-03-10 18:55:27.321 -04:00 [DBG] Including navigation: 'Booking.Rooms'.
2025-03-10 18:55:27.324 -04:00 [DBG] Including navigation: 'Booking.User'.
2025-03-10 18:55:27.329 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-10 18:55:27.429 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Booking>(
    asyncEnumerable: SplitQueryingEnumerable.Create<Booking>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Booking.BookingID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Booking.AfterDiscountedPrice (decimal) Required, 1], [Property: Booking.BookingDateUtc (DateTime) Required, 2], [Property: Booking.CheckInDateUtc (DateTime) Required, 3], [Property: Booking.CheckOutDateUtc (DateTime) Required, 4], [Property: Booking.ConfirmationNumber (string) Required Index MaxLength(50), 5], [Property: Booking.HotelId (int) Required FK Index, 6], [Property: Booking.PaymentMethod (PaymentMethod) Required, 7], [Property: Booking.Status (BookingStatus) Required, 8], [Property: Booking.TotalPrice (decimal) Required, 9], [Property: Booking.UserId (string) Required FK Index, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Hotel.CityID (int) Required FK Index, 12], [Property: Hotel.CreatedAtUtc (DateTime) Required, 13], [Property: Hotel.Description (string) MaxLength(500), 14], [Property: Hotel.Name (string) Required MaxLength(100), 15], [Property: Hotel.OwnerID (int) Required FK Index, 16], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 17], [Property: Hotel.StarRating (int) Required, 18] }
                2 -> 0
                3 -> 11
                4 -> 19
                5 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 19], [Property: LocalUser.AccessFailedCount (int) Required, 20], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 21], [Property: LocalUser.Email (string) MaxLength(256), 22], [Property: LocalUser.EmailConfirmed (bool) Required, 23], [Property: LocalUser.FirstName (string) Required, 24], [Property: LocalUser.LastName (string) Required, 25], [Property: LocalUser.LockoutEnabled (bool) Required, 26], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 27], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 28], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 29], [Property: LocalUser.PasswordHash (string), 30], [Property: LocalUser.PhoneNumber (string), 31], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 32], [Property: LocalUser.SecurityStamp (string), 33], [Property: LocalUser.TwoFactorEnabled (bool) Required, 34], [Property: LocalUser.UserName (string) MaxLength(256), 35] }
            SELECT TOP(1) b.BookingID, b.AfterDiscountedPrice, b.BookingDateUtc, b.CheckInDateUtc, b.CheckOutDateUtc, b.ConfirmationNumber, b.HotelId, b.PaymentMethod, b.Status, b.TotalPrice, b.UserId, h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM Bookings AS b
            INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
            INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
            WHERE b.BookingID == @__id_0
            ORDER BY b.BookingID ASC, h.HotelId ASC, a.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Booking.BookingID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Booking.AfterDiscountedPrice (decimal) Required, 1], [Property: Booking.BookingDateUtc (DateTime) Required, 2], [Property: Booking.CheckInDateUtc (DateTime) Required, 3], [Property: Booking.CheckOutDateUtc (DateTime) Required, 4], [Property: Booking.ConfirmationNumber (string) Required Index MaxLength(50), 5], [Property: Booking.HotelId (int) Required FK Index, 6], [Property: Booking.PaymentMethod (PaymentMethod) Required, 7], [Property: Booking.Status (BookingStatus) Required, 8], [Property: Booking.TotalPrice (decimal) Required, 9], [Property: Booking.UserId (string) Required FK Index, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Hotel.CityID (int) Required FK Index, 12], [Property: Hotel.CreatedAtUtc (DateTime) Required, 13], [Property: Hotel.Description (string) MaxLength(500), 14], [Property: Hotel.Name (string) Required MaxLength(100), 15], [Property: Hotel.OwnerID (int) Required FK Index, 16], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 17], [Property: Hotel.StarRating (int) Required, 18] }
                2 -> 0
                3 -> 11
                4 -> 19
                5 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 19], [Property: LocalUser.AccessFailedCount (int) Required, 20], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 21], [Property: LocalUser.Email (string) MaxLength(256), 22], [Property: LocalUser.EmailConfirmed (bool) Required, 23], [Property: LocalUser.FirstName (string) Required, 24], [Property: LocalUser.LastName (string) Required, 25], [Property: LocalUser.LockoutEnabled (bool) Required, 26], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 27], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 28], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 29], [Property: LocalUser.PasswordHash (string), 30], [Property: LocalUser.PhoneNumber (string), 31], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 32], [Property: LocalUser.SecurityStamp (string), 33], [Property: LocalUser.TwoFactorEnabled (bool) Required, 34], [Property: LocalUser.UserName (string) MaxLength(256), 35] }
            SELECT TOP(1) b.BookingID, b.AfterDiscountedPrice, b.BookingDateUtc, b.CheckInDateUtc, b.CheckOutDateUtc, b.ConfirmationNumber, b.HotelId, b.PaymentMethod, b.Status, b.TotalPrice, b.UserId, h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM Bookings AS b
            INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
            INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
            WHERE b.BookingID == @__id_0
            ORDER BY b.BookingID ASC, h.HotelId ASC, a.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<decimal>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<decimal>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<DateTimeOffset>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<object> } | Resolver: namelessParameter{0} => new ReaderColumn[]
        { 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("BookingID"), 
                (dataReader, indexMap) => dataReader.GetInt32(0)
            ), 
            new ReaderColumn<decimal>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("AfterDiscountedPrice"), 
                (dataReader, indexMap) => dataReader.GetDecimal(1)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("BookingDateUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(2)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("CheckInDateUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(3)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("CheckOutDateUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(4)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("ConfirmationNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(5)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("HotelId"), 
                (dataReader, indexMap) => dataReader.GetInt32(6)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("PaymentMethod"), 
                (dataReader, indexMap) => dataReader.GetInt32(7)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("Status"), 
                (dataReader, indexMap) => dataReader.GetInt32(8)
            ), 
            new ReaderColumn<decimal>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("TotalPrice"), 
                (dataReader, indexMap) => dataReader.GetDecimal(9)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("UserId"), 
                (dataReader, indexMap) => (object)dataReader.GetString(10)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("HotelId"), 
                (dataReader, indexMap) => dataReader.GetInt32(11)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CityID"), 
                (dataReader, indexMap) => dataReader.GetInt32(12)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CreatedAtUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(13)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Description"), 
                (dataReader, indexMap) => (object)dataReader.GetString(14)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Name"), 
                (dataReader, indexMap) => (object)dataReader.GetString(15)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("OwnerID"), 
                (dataReader, indexMap) => dataReader.GetInt32(16)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(17)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("StarRating"), 
                (dataReader, indexMap) => dataReader.GetInt32(18)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                default(IPropertyBase), 
                (dataReader, indexMap) => (object)dataReader.GetString(19)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("AccessFailedCount"), 
                (dataReader, indexMap) => dataReader.GetInt32(20)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("ConcurrencyStamp"), 
                (dataReader, indexMap) => (object)dataReader.GetString(21)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("Email"), 
                (dataReader, indexMap) => (object)dataReader.GetString(22)
            ), 
            new ReaderColumn<bool>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("EmailConfirmed"), 
                (dataReader, indexMap) => dataReader.GetBoolean(23)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("FirstName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(24)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("LastName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(25)
            ), 
            new ReaderColumn<bool>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("LockoutEnabled"), 
                (dataReader, indexMap) => dataReader.GetBoolean(26)
            ), 
            new ReaderColumn<DateTimeOffset>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("LockoutEnd"), 
                (dataReader, indexMap) => dataReader.GetFieldValue<DateTimeOffset>(27)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("NormalizedEmail"), 
                (dataReader, indexMap) => (object)dataReader.GetString(28)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("NormalizedUserName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(29)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("PasswordHash"), 
                (dataReader, indexMap) => (object)dataReader.GetString(30)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(31)
            ), 
            new ReaderColumn<bool>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("PhoneNumberConfirmed"), 
                (dataReader, indexMap) => dataReader.GetBoolean(32)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("SecurityStamp"), 
                (dataReader, indexMap) => (object)dataReader.GetString(33)
            ), 
            new ReaderColumn<bool>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("TwoFactorEnabled"), 
                (dataReader, indexMap) => dataReader.GetBoolean(34)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("UserName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(35)
            ) 
        }], 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => resultContext.Values == null ? 
        {
            Booking entity;
            Hotel entity;
            LocalUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Booking instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Booking);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Booking.BookingID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Booking)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Booking | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Booking | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking")]: 
                            {
                                return 
                                {
                                    Booking instance;
                                    instance = new Booking();
                                    instance.<BookingID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AfterDiscountedPrice>k__BackingField = dataReader.GetDecimal(1);
                                    instance.<BookingDateUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CheckInDateUtc>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CheckOutDateUtc>k__BackingField = dataReader.GetDateTime(4);
                                    instance.<ConfirmationNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(5);
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(6);
                                    instance.<PaymentMethod>k__BackingField = Invoke(((EnumToNumberConverter<PaymentMethod, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Booking.PaymentMethod (PaymentMethod) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("PaymentMethod")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(7));
                                    instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookingStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Booking.Status (BookingStatus) Required | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(8));
                                    instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(9);
                                    instance.<UserId>k__BackingField = (string)dataReader.GetFieldValue<object>(10);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Booking | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Booking)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Hotel instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Hotel);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(11) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Hotel)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                            {
                                return 
                                {
                                    Hotel instance;
                                    instance = new Hotel();
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(11);
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(12);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(13);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(14) ? default(string) : (string)dataReader.GetFieldValue<object>(14);
                                    instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(15);
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(16);
                                    instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(17);
                                    instance.<StarRating>k__BackingField = dataReader.GetInt32(18);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Hotel)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext5;
                IEntityType entityType5;
                LocalUser instance5;
                InternalEntityEntry entry5;
                bool hasNullKey5;
                materializationContext5 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance5 = default(LocalUser);
                entry5 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)(string)dataReader.GetFieldValue<object>(19) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey5);
                !(hasNullKey5) ? entry5 != default(InternalEntityEntry) ? 
                {
                    entityType5 = entry5.EntityType;
                    return instance5 = (LocalUser)entry5.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot5;
                    shadowSnapshot5 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType5 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                    instance5 = switch (entityType5)
                    {
                        case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                            {
                                return 
                                {
                                    LocalUser instance;
                                    instance = new LocalUser();
                                    instance.<Id>k__BackingField = (string)dataReader.GetFieldValue<object>(19);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(20);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(21) ? default(string) : (string)dataReader.GetFieldValue<object>(21);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(22) ? default(string) : (string)dataReader.GetFieldValue<object>(22);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(23);
                                    instance.<FirstName>k__BackingField = (string)dataReader.GetFieldValue<object>(24);
                                    instance.<LastName>k__BackingField = (string)dataReader.GetFieldValue<object>(25);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(26);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(27) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(27);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(28) ? default(string) : (string)dataReader.GetFieldValue<object>(28);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(29) ? default(string) : (string)dataReader.GetFieldValue<object>(29);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(30) ? default(string) : (string)dataReader.GetFieldValue<object>(30);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(31) ? default(string) : (string)dataReader.GetFieldValue<object>(31);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(32);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(33) ? default(string) : (string)dataReader.GetFieldValue<object>(33);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(34);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(35) ? default(string) : (string)dataReader.GetFieldValue<object>(35);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext5.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(LocalUser)
                    }
                    ;
                    entry5 = entityType5 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType5, 
                        entity: instance5, 
                        snapshot: shadowSnapshot5);
                    return instance5;
                } : default(void);
                return instance5;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Booking, Booking, Hotel>(
                queryContext: queryContext, 
                entity: (Booking)(resultContext.Values[0]), 
                relatedEntity: (Hotel)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Booking.Hotel (Hotel) ToPrincipal Hotel Inverse: Bookings | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindNavigation("Hotel")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Hotel.Bookings (ICollection<Booking>) Collection ToDependent Booking Inverse: Hotel | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Bookings")], 
                fixup: (namelessParameter{14}, namelessParameter{15}) => 
                {
                    namelessParameter{14}.<Hotel>k__BackingField = namelessParameter{15};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<Booking>, Booking> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Bookings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{15}, 
                        value: namelessParameter{14}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeSplitIncludeCollection<Booking, Booking>(
                collectionId: 0, 
                queryContext: queryContext, 
                parentDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Booking)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(0), 
                    (object)(int?)dataReader.GetInt32(11), 
                    (string)dataReader.GetFieldValue<object>(19) 
                }], 
                navigation: [LIFTABLE Constant: SkipNavigation: Booking.Rooms (ICollection<Room>) CollectionRoom Inverse: Bookings | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindSkipNavigation("Rooms")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Booking, ICollection<Room>, Room> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindSkipNavigation("Rooms").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
            ShaperProcessingExpressionVisitor.InitializeSplitIncludeCollection<LocalUser, LocalUser>(
                collectionId: 1, 
                queryContext: queryContext, 
                parentDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (LocalUser)(resultContext.Values[2]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(0), 
                    (object)(int?)dataReader.GetInt32(11), 
                    (string)dataReader.GetFieldValue<object>(19) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{20} => namelessParameter{20}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Booking, Booking, LocalUser>(
                queryContext: queryContext, 
                entity: (Booking)(resultContext.Values[0]), 
                relatedEntity: (LocalUser)(resultContext.Values[2]), 
                navigation: [LIFTABLE Constant: Navigation: Booking.User (LocalUser) ToPrincipal LocalUser Inverse: Bookings | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindNavigation("User")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: LocalUser.Bookings (ICollection<Booking>) Collection ToDependent Booking Inverse: User | Resolver: namelessParameter{22} => namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("Bookings")], 
                fixup: (namelessParameter{23}, namelessParameter{24}) => 
                {
                    namelessParameter{23}.<User>k__BackingField = namelessParameter{24};
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, ICollection<Booking>, Booking> | Resolver: namelessParameter{25} => namelessParameter{25}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("Bookings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{24}, 
                        value: namelessParameter{23}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return } : (Booking)(resultContext.Values[0]), 
        relatedDataLoaders: null, 
        relatedDataLoadersAsync: (queryContext, executionStrategy, resultCoordinator) => ShaperProcessingExpressionVisitor.TaskAwaiter(new Func<Task>[]
        { 
            () => ShaperProcessingExpressionVisitor.PopulateSplitIncludeCollectionAsync<Booking, Room>(
                collectionId: 0, 
                queryContext: (RelationalQueryContext)queryContext, 
                executionStrategy: executionStrategy, 
                relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: BookingRoom (Dictionary<string, object>).BookingID (no field, int) Indexer Required PK FK AfterSave:Throw, 0], [Property: BookingRoom (Dictionary<string, object>).RoomID (no field, int) Indexer Required PK FK Index AfterSave:Throw, 1] }
                        1 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 2], [Property: Room.AdultsCapacity (int) Required, 3], [Property: Room.ChildrenCapacity (int) Required, 4], [Property: Room.CreatedAtUtc (DateTime) Required, 5], [Property: Room.Number (string) Required MaxLength(50), 6], [Property: Room.PricePerNight (decimal) Required, 7], [Property: Room.RoomClassID (int) Required FK Index, 8] }
                        2 -> 9
                        3 -> 10
                        4 -> 11
                    SELECT s0.BookingID, s0.RoomID, s0.RoomID0, s0.AdultsCapacity, s0.ChildrenCapacity, s0.CreatedAtUtc, s0.Number, s0.PricePerNight, s0.RoomClassID, s.BookingID, s.HotelId, s.Id
                    FROM 
                    (
                        SELECT TOP(1) b.BookingID, h.HotelId, a.Id
                        FROM Bookings AS b
                        INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
                        INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
                        WHERE b.BookingID == @__id_0
                    ) AS s
                    INNER JOIN 
                    (
                        SELECT b0.BookingID, b0.RoomID, r0.RoomID AS RoomID0, r0.AdultsCapacity, r0.ChildrenCapacity, r0.CreatedAtUtc, r0.Number, r0.PricePerNight, r0.RoomClassID
                        FROM BookingRoom AS b0
                        INNER JOIN Rooms AS r0 ON b0.RoomID == r0.RoomID
                    ) AS s0 ON s.BookingID == s0.BookingID
                    ORDER BY s.BookingID ASC, s.HotelId ASC, s.Id ASC) | Resolver: c => new RelationalCommandCache(
                    c.Dependencies.MemoryCache, 
                    c.RelationalDependencies.QuerySqlGeneratorFactory, 
                    c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: BookingRoom (Dictionary<string, object>).BookingID (no field, int) Indexer Required PK FK AfterSave:Throw, 0], [Property: BookingRoom (Dictionary<string, object>).RoomID (no field, int) Indexer Required PK FK Index AfterSave:Throw, 1] }
                        1 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 2], [Property: Room.AdultsCapacity (int) Required, 3], [Property: Room.ChildrenCapacity (int) Required, 4], [Property: Room.CreatedAtUtc (DateTime) Required, 5], [Property: Room.Number (string) Required MaxLength(50), 6], [Property: Room.PricePerNight (decimal) Required, 7], [Property: Room.RoomClassID (int) Required FK Index, 8] }
                        2 -> 9
                        3 -> 10
                        4 -> 11
                    SELECT s0.BookingID, s0.RoomID, s0.RoomID0, s0.AdultsCapacity, s0.ChildrenCapacity, s0.CreatedAtUtc, s0.Number, s0.PricePerNight, s0.RoomClassID, s.BookingID, s.HotelId, s.Id
                    FROM 
                    (
                        SELECT TOP(1) b.BookingID, h.HotelId, a.Id
                        FROM Bookings AS b
                        INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
                        INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
                        WHERE b.BookingID == @__id_0
                    ) AS s
                    INNER JOIN 
                    (
                        SELECT b0.BookingID, b0.RoomID, r0.RoomID AS RoomID0, r0.AdultsCapacity, r0.ChildrenCapacity, r0.CreatedAtUtc, r0.Number, r0.PricePerNight, r0.RoomClassID
                        FROM BookingRoom AS b0
                        INNER JOIN Rooms AS r0 ON b0.RoomID == r0.RoomID
                    ) AS s0 ON s.BookingID == s0.BookingID
                    ORDER BY s.BookingID ASC, s.HotelId ASC, s.Id ASC, 
                    False, 
                    new HashSet<string>(
                        new string[]{ }, 
                        StringComparer.Ordinal
                    )
                )].GetRelationalCommandTemplate(parameters), 
                readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<decimal>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object> } | Resolver: namelessParameter{26} => new ReaderColumn[]
                { 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("BookingRoom").FindProperty("BookingID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(0)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("BookingRoom").FindProperty("RoomID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(1)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("RoomID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(2)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("AdultsCapacity"), 
                        (dataReader, indexMap) => dataReader.GetInt32(3)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("ChildrenCapacity"), 
                        (dataReader, indexMap) => dataReader.GetInt32(4)
                    ), 
                    new ReaderColumn<DateTime>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("CreatedAtUtc"), 
                        (dataReader, indexMap) => dataReader.GetDateTime(5)
                    ), 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("Number"), 
                        (dataReader, indexMap) => (object)dataReader.GetString(6)
                    ), 
                    new ReaderColumn<decimal>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("PricePerNight"), 
                        (dataReader, indexMap) => dataReader.GetDecimal(7)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("RoomClassID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(8)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(9)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(10)
                    ), 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => (object)dataReader.GetString(11)
                    ) 
                }], 
                detailedErrorsEnabled: False, 
                resultCoordinator: resultCoordinator, 
                childIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(9), 
                    (object)(int?)dataReader.GetInt32(10), 
                    (string)dataReader.GetFieldValue<object>(11) 
                }], 
                identifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Dictionary<string, object> entity;
                    Room entity;
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Dictionary<string, object> instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Dictionary<string, object>);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: BookingRoom (Dictionary<string, object>).BookingID, BookingRoom (Dictionary<string, object>).RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("BookingRoom").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                (object)dataReader.GetInt32(0), 
                                (object)dataReader.GetInt32(1) 
                            }, 
                            throwOnNullKey: True, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Dictionary<string, object>)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: BookingRoom (Dictionary<string, object>) CLR Type: Dictionary<string, object> | Resolver: namelessParameter{27} => namelessParameter{27}.Dependencies.Model.FindEntityType("BookingRoom")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: BookingRoom (Dictionary<string, object>) CLR Type: Dictionary<string, object> | Resolver: namelessParameter{28} => namelessParameter{28}.Dependencies.Model.FindEntityType("BookingRoom")]: 
                                    {
                                        return 
                                        {
                                            Dictionary<string, object> instance;
                                            instance = new Dictionary<string, object>();
                                            instance["BookingID"] = (object)dataReader.GetInt32(0);
                                            instance["RoomID"] = (object)dataReader.GetInt32(1);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: BookingRoom (Dictionary<string, object>) CLR Type: Dictionary<string, object> | Resolver: namelessParameter{29} => namelessParameter{29}.Dependencies.Model.FindEntityType("BookingRoom")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Dictionary<string, object>)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    entity = 
                    {
                        MaterializationContext materializationContext4;
                        IEntityType entityType4;
                        Room instance4;
                        InternalEntityEntry entry4;
                        bool hasNullKey4;
                        materializationContext4 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance4 = default(Room);
                        entry4 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Room.RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindPrimaryKey()], 
                            keyValues: new object[]{ (object)dataReader.GetInt32(2) }, 
                            throwOnNullKey: True, 
                            hasNullKey: hasNullKey4);
                        !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                        {
                            entityType4 = entry4.EntityType;
                            return instance4 = (Room)entry4.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot4;
                            shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType4 = [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{30} => namelessParameter{30}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")];
                            instance4 = switch (entityType4)
                            {
                                case [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{31} => namelessParameter{31}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]: 
                                    {
                                        return 
                                        {
                                            Room instance;
                                            instance = new Room();
                                            instance.<RoomID>k__BackingField = dataReader.GetInt32(2);
                                            instance.<AdultsCapacity>k__BackingField = dataReader.GetInt32(3);
                                            instance.<ChildrenCapacity>k__BackingField = dataReader.GetInt32(4);
                                            instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(5);
                                            instance.<Number>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                            instance.<PricePerNight>k__BackingField = dataReader.GetDecimal(7);
                                            instance.<RoomClassID>k__BackingField = dataReader.GetInt32(8);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext4.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{32} => namelessParameter{32}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Room)
                            }
                            ;
                            entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType4, 
                                entity: instance4, 
                                snapshot: shadowSnapshot4);
                            return instance4;
                        } : default(void);
                        return instance4;
                    };
                    return NavigationExpandingExpressionVisitor.FetchJoinEntity<Dictionary<string, object>, Room>(
                        joinEntity: entity, 
                        targetEntity: entity);
                }, 
                relatedDataLoaders: null, 
                inverseNavigation: [LIFTABLE Constant: SkipNavigation: Room.Bookings (ICollection<Booking>) CollectionBooking Inverse: Rooms | Resolver: namelessParameter{33} => namelessParameter{33}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindSkipNavigation("Bookings")], 
                fixup: (namelessParameter{34}, namelessParameter{35}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Booking, ICollection<Room>, Room> | Resolver: namelessParameter{36} => namelessParameter{36}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindSkipNavigation("Rooms").GetCollectionAccessor()].Add(
                        entity: namelessParameter{34}, 
                        value: namelessParameter{35}, 
                        forMaterialization: True);
                    return [LIFTABLE Constant: ClrICollectionAccessor<Room, ICollection<Booking>, Booking> | Resolver: namelessParameter{37} => namelessParameter{37}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindSkipNavigation("Bookings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{35}, 
                        value: namelessParameter{34}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True), 
            () => ShaperProcessingExpressionVisitor.PopulateSplitIncludeCollectionAsync<LocalUser, RefreshToken>(
                collectionId: 1, 
                queryContext: (RelationalQueryContext)queryContext, 
                executionStrategy: executionStrategy, 
                relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 0], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 1], [Property: RefreshToken.CreatedOn (DateTime) Required, 2], [Property: RefreshToken.ExpiresOn (DateTime) Required, 3], [Property: RefreshToken.RevokedOn (DateTime?), 4], [Property: RefreshToken.Token (string) Required, 5] }
                        1 -> 6
                        2 -> 7
                        3 -> 8
                    SELECT r1.LocalUserId, r1.Id, r1.CreatedOn, r1.ExpiresOn, r1.RevokedOn, r1.Token, s1.BookingID, s1.HotelId, s1.Id
                    FROM 
                    (
                        SELECT TOP(1) b.BookingID, h.HotelId, a.Id
                        FROM Bookings AS b
                        INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
                        INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
                        WHERE b.BookingID == @__id_0
                    ) AS s1
                    INNER JOIN RefreshToken AS r1 ON s1.Id == r1.LocalUserId
                    ORDER BY s1.BookingID ASC, s1.HotelId ASC, s1.Id ASC) | Resolver: c => new RelationalCommandCache(
                    c.Dependencies.MemoryCache, 
                    c.RelationalDependencies.QuerySqlGeneratorFactory, 
                    c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 0], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 1], [Property: RefreshToken.CreatedOn (DateTime) Required, 2], [Property: RefreshToken.ExpiresOn (DateTime) Required, 3], [Property: RefreshToken.RevokedOn (DateTime?), 4], [Property: RefreshToken.Token (string) Required, 5] }
                        1 -> 6
                        2 -> 7
                        3 -> 8
                    SELECT r1.LocalUserId, r1.Id, r1.CreatedOn, r1.ExpiresOn, r1.RevokedOn, r1.Token, s1.BookingID, s1.HotelId, s1.Id
                    FROM 
                    (
                        SELECT TOP(1) b.BookingID, h.HotelId, a.Id
                        FROM Bookings AS b
                        INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
                        INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
                        WHERE b.BookingID == @__id_0
                    ) AS s1
                    INNER JOIN RefreshToken AS r1 ON s1.Id == r1.LocalUserId
                    ORDER BY s1.BookingID ASC, s1.HotelId ASC, s1.Id ASC, 
                    False, 
                    new HashSet<string>(
                        new string[]{ }, 
                        StringComparer.Ordinal
                    )
                )].GetRelationalCommandTemplate(parameters), 
                readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object> } | Resolver: namelessParameter{38} => new ReaderColumn[]
                { 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("LocalUserId"), 
                        (dataReader, indexMap) => (object)dataReader.GetString(0)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("Id"), 
                        (dataReader, indexMap) => dataReader.GetInt32(1)
                    ), 
                    new ReaderColumn<DateTime>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("CreatedOn"), 
                        (dataReader, indexMap) => dataReader.GetDateTime(2)
                    ), 
                    new ReaderColumn<DateTime>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("ExpiresOn"), 
                        (dataReader, indexMap) => dataReader.GetDateTime(3)
                    ), 
                    new ReaderColumn<DateTime>(
                        True, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("RevokedOn"), 
                        (dataReader, indexMap) => dataReader.GetDateTime(4)
                    ), 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("Token"), 
                        (dataReader, indexMap) => (object)dataReader.GetString(5)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(6)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(7)
                    ), 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => (object)dataReader.GetString(8)
                    ) 
                }], 
                detailedErrorsEnabled: False, 
                resultCoordinator: resultCoordinator, 
                childIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(6), 
                    (object)(int?)dataReader.GetInt32(7), 
                    (string)dataReader.GetFieldValue<object>(8) 
                }], 
                identifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext6;
                        IEntityType entityType6;
                        RefreshToken instance6;
                        InternalEntityEntry entry6;
                        bool hasNullKey6;
                        materializationContext6 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance6 = default(RefreshToken);
                        entry6 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                (object)(string)dataReader.GetFieldValue<object>(0), 
                                (object)dataReader.GetInt32(1) 
                            }, 
                            throwOnNullKey: True, 
                            hasNullKey: hasNullKey6);
                        !(hasNullKey6) ? entry6 != default(InternalEntityEntry) ? 
                        {
                            entityType6 = entry6.EntityType;
                            return instance6 = (RefreshToken)entry6.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot6;
                            shadowSnapshot6 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType6 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{39} => namelessParameter{39}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance6 = switch (entityType6)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{40} => namelessParameter{40}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot6 = (ISnapshot)new Snapshot<string, int>(
                                            (string)dataReader.GetFieldValue<object>(0), 
                                            dataReader.GetInt32(1)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.GetDateTime(2);
                                            instance.<ExpiresOn>k__BackingField = dataReader.GetDateTime(3);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(4) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(4);
                                            instance.<Token>k__BackingField = (string)dataReader.GetFieldValue<object>(5);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext6.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{41} => namelessParameter{41}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry6 = entityType6 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType6, 
                                entity: instance6, 
                                snapshot: shadowSnapshot6);
                            return instance6;
                        } : default(void);
                        return instance6;
                    };
                    return entity;
                }, 
                relatedDataLoaders: null, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{42}, namelessParameter{43}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{44} => namelessParameter{44}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{42}, 
                        value: namelessParameter{43}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True) 
        }), 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-10 18:55:27.570 -04:00 [DBG] Creating DbConnection.
2025-03-10 18:55:27.571 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 18:55:27.573 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:55:27.579 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:55:27.582 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 18:55:27.584 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-10 18:55:27.586 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-10 18:55:27.588 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."BookingID", b."AfterDiscountedPrice", b."BookingDateUtc", b."CheckInDateUtc", b."CheckOutDateUtc", b."ConfirmationNumber", b."HotelId", b."PaymentMethod", b."Status", b."TotalPrice", b."UserId", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "Bookings" AS b
INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
WHERE b."BookingID" = @__id_0
ORDER BY b."BookingID", h."HotelId", a."Id"
LIMIT 1
2025-03-10 18:55:27.619 -04:00 [INF] Executed DbCommand (32ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."BookingID", b."AfterDiscountedPrice", b."BookingDateUtc", b."CheckInDateUtc", b."CheckOutDateUtc", b."ConfirmationNumber", b."HotelId", b."PaymentMethod", b."Status", b."TotalPrice", b."UserId", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "Bookings" AS b
INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
WHERE b."BookingID" = @__id_0
ORDER BY b."BookingID", h."HotelId", a."Id"
LIMIT 1
2025-03-10 18:55:27.669 -04:00 [DBG] Context 'AppDbContext' started tracking 'Booking' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 18:55:27.722 -04:00 [DBG] The navigation 'Booking.Hotel' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 18:55:27.732 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 18:55:27.751 -04:00 [DBG] The navigation 'Booking.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 18:55:27.754 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 18:55:27.777 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 18:55:27.779 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 18:55:27.781 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-10 18:55:27.783 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s0."BookingID", s0."RoomID", s0."RoomID0", s0."AdultsCapacity", s0."ChildrenCapacity", s0."CreatedAtUtc", s0."Number", s0."PricePerNight", s0."RoomClassID", s."BookingID", s."HotelId", s."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s
INNER JOIN (
    SELECT b0."BookingID", b0."RoomID", r0."RoomID" AS "RoomID0", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID"
    FROM "BookingRoom" AS b0
    INNER JOIN "Rooms" AS r0 ON b0."RoomID" = r0."RoomID"
) AS s0 ON s."BookingID" = s0."BookingID"
ORDER BY s."BookingID", s."HotelId", s."Id"
2025-03-10 18:55:27.805 -04:00 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s0."BookingID", s0."RoomID", s0."RoomID0", s0."AdultsCapacity", s0."ChildrenCapacity", s0."CreatedAtUtc", s0."Number", s0."PricePerNight", s0."RoomClassID", s."BookingID", s."HotelId", s."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s
INNER JOIN (
    SELECT b0."BookingID", b0."RoomID", r0."RoomID" AS "RoomID0", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID"
    FROM "BookingRoom" AS b0
    INNER JOIN "Rooms" AS r0 ON b0."RoomID" = r0."RoomID"
) AS s0 ON s."BookingID" = s0."BookingID"
ORDER BY s."BookingID", s."HotelId", s."Id"
2025-03-10 18:55:27.839 -04:00 [DBG] Context 'AppDbContext' started tracking 'BookingRoom' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 18:55:27.872 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 18:55:27.914 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 18:55:27.917 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-10 18:55:27.929 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (14ms).
2025-03-10 18:55:27.933 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r1."LocalUserId", r1."Id", r1."CreatedOn", r1."ExpiresOn", r1."RevokedOn", r1."Token", s1."BookingID", s1."HotelId", s1."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s1
INNER JOIN "RefreshToken" AS r1 ON s1."Id" = r1."LocalUserId"
ORDER BY s1."BookingID", s1."HotelId", s1."Id"
2025-03-10 18:55:27.944 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r1."LocalUserId", r1."Id", r1."CreatedOn", r1."ExpiresOn", r1."RevokedOn", r1."Token", s1."BookingID", s1."HotelId", s1."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s1
INNER JOIN "RefreshToken" AS r1 ON s1."Id" = r1."LocalUserId"
ORDER BY s1."BookingID", s1."HotelId", s1."Id"
2025-03-10 18:55:27.950 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 18:55:27.961 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:55:27.965 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 314ms reading results.
2025-03-10 18:55:27.969 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:55:27.988 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 172ms reading results.
2025-03-10 18:55:28.012 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:55:28.017 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 67ms reading results.
2025-03-10 18:55:28.067 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:55:28.069 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-10 18:55:28.107 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .AsNoTracking()
    .FirstOrDefault(user => user.Id == __userId_0)'
2025-03-10 18:55:28.115 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-10 18:55:28.155 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.Id == @__userId_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.Id == @__userId_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    (object)dataReader.GetString(0) != null ? 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: NoTracking, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        return instance1;
                    } : 
                    {
                        object[] keyValues1;
                        keyValues1 = new object[]{ (object)dataReader.GetString(0) };
                        return ShapedQueryCompilingExpressionVisitor.CreateNullKeyValueInNoTrackingQuery(
                            entityType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")], 
                            properties: [LIFTABLE Constant: List<RuntimeProperty> { Property: LocalUser.Id (string) Required PK AfterSave:Throw } | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey().Properties], 
                            keyValues: keyValues1);
                    };
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: False, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17) != null && dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) != null ? 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: NoTracking, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{9}, namelessParameter{10}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{10}, 
                        forMaterialization: True);
                }, 
                trackingQuery: False);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-10 18:55:28.189 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:55:28.195 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:55:28.196 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 18:55:28.198 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 18:55:28.200 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-10 18:55:28.202 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__userId_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 18:55:28.211 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__userId_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-10 18:55:28.220 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:55:28.222 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-03-10 18:55:28.227 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:55:28.230 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 18:55:28.246 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 18:55:28.250 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 18:55:28.252 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 18:55:28.253 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 18:55:28.255 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 18:55:28.257 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Booking.BookingDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-10 18:55:28.282 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API) in 1243.5132ms
2025-03-10 18:55:28.284 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)'
2025-03-10 18:55:28.286 -04:00 [DBG] Connection id "0HNB04PDD2E91" completed keep alive response.
2025-03-10 18:55:28.288 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 18:55:28.290 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:55:28.298 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-10 18:55:28.302 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Booking/1 - 200 null application/json; charset=utf-8 1424.8948ms
2025-03-10 18:56:41.610 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Room/by-price?minPrice=500&maxPrice=500 - null null
2025-03-10 18:56:41.615 -04:00 [DBG] 2 candidate(s) found for the request path '/api/Room/by-price'
2025-03-10 18:56:41.619 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)' with route pattern 'api/Room/by-price' is valid for the request path '/api/Room/by-price'
2025-03-10 18:56:41.820 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)' with route pattern 'api/Room/{id}' is valid for the request path '/api/Room/by-price'
2025-03-10 18:56:41.822 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-10 18:56:41.832 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 18:56:41.842 -04:00 [DBG] Successfully validated the token.
2025-03-10 18:56:41.843 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 18:56:41.850 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-10 18:56:41.859 -04:00 [INF] Route matched with {action = "GetRoomsByPriceRange", controller = "Room"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRoomsByPriceRange(System.Decimal, System.Decimal) on controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API).
2025-03-10 18:56:41.875 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 18:56:41.887 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 18:56:41.890 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 18:56:41.893 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 18:56:41.901 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 18:56:41.904 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-10 18:56:41.926 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-10 18:56:41.939 -04:00 [DBG] Attempting to bind parameter 'minPrice' of type 'System.Decimal' ...
2025-03-10 18:56:41.944 -04:00 [DBG] Attempting to bind parameter 'minPrice' of type 'System.Decimal' using the name 'minPrice' in request data ...
2025-03-10 18:56:41.951 -04:00 [DBG] Done attempting to bind parameter 'minPrice' of type 'System.Decimal'.
2025-03-10 18:56:41.953 -04:00 [DBG] Done attempting to bind parameter 'minPrice' of type 'System.Decimal'.
2025-03-10 18:56:41.957 -04:00 [DBG] Attempting to validate the bound parameter 'minPrice' of type 'System.Decimal' ...
2025-03-10 18:56:41.960 -04:00 [DBG] Done attempting to validate the bound parameter 'minPrice' of type 'System.Decimal'.
2025-03-10 18:56:41.966 -04:00 [DBG] Attempting to bind parameter 'maxPrice' of type 'System.Decimal' ...
2025-03-10 18:56:41.969 -04:00 [DBG] Attempting to bind parameter 'maxPrice' of type 'System.Decimal' using the name 'maxPrice' in request data ...
2025-03-10 18:56:41.972 -04:00 [DBG] Done attempting to bind parameter 'maxPrice' of type 'System.Decimal'.
2025-03-10 18:56:41.973 -04:00 [DBG] Done attempting to bind parameter 'maxPrice' of type 'System.Decimal'.
2025-03-10 18:56:41.975 -04:00 [DBG] Attempting to validate the bound parameter 'maxPrice' of type 'System.Decimal' ...
2025-03-10 18:56:41.977 -04:00 [DBG] Done attempting to validate the bound parameter 'maxPrice' of type 'System.Decimal'.
2025-03-10 18:56:42.017 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 18:56:42.027 -04:00 [DBG] Compiling query expression: 
'DbSet<Room>()
    .Include(rc => rc.RoomClass)
    .Where(r => r.PricePerNight >= __minPrice_0 && r.PricePerNight <= __maxPrice_1)'
2025-03-10 18:56:42.036 -04:00 [DBG] Including navigation: 'Room.RoomClass'.
2025-03-10 18:56:42.070 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Room>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
            1 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 8], [Property: RoomClass.Description (string) MaxLength(500), 9], [Property: RoomClass.HotelId (int) Required FK Index, 10], [Property: RoomClass.Name (string) Required, 11], [Property: RoomClass.RoomType (RoomType) Required, 12] }
        SELECT r.RoomID, r.AdultsCapacity, r.ChildrenCapacity, r.CreatedAtUtc, r.Number, r.PricePerNight, r.RoomClassID, r0.RoomClassID, r0.CreatedAtUtc, r0.Description, r0.HotelId, r0.Name, r0.RoomType
        FROM Rooms AS r
        INNER JOIN RoomClasses AS r0 ON r.RoomClassID == r0.RoomClassID
        WHERE (r.PricePerNight >= @__minPrice_0) && (r.PricePerNight <= @__maxPrice_1)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
            1 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 8], [Property: RoomClass.Description (string) MaxLength(500), 9], [Property: RoomClass.HotelId (int) Required FK Index, 10], [Property: RoomClass.Name (string) Required, 11], [Property: RoomClass.RoomType (RoomType) Required, 12] }
        SELECT r.RoomID, r.AdultsCapacity, r.ChildrenCapacity, r.CreatedAtUtc, r.Number, r.PricePerNight, r.RoomClassID, r0.RoomClassID, r0.CreatedAtUtc, r0.Description, r0.HotelId, r0.Name, r0.RoomType
        FROM Rooms AS r
        INNER JOIN RoomClasses AS r0 ON r.RoomClassID == r0.RoomClassID
        WHERE (r.PricePerNight >= @__minPrice_0) && (r.PricePerNight <= @__maxPrice_1), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Room entity;
        RoomClass entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Room instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Room);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Room.RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Room)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]: 
                        {
                            return 
                            {
                                Room instance;
                                instance = new Room();
                                instance.<RoomID>k__BackingField = dataReader.GetInt32(0);
                                instance.<AdultsCapacity>k__BackingField = dataReader.GetInt32(1);
                                instance.<ChildrenCapacity>k__BackingField = dataReader.GetInt32(2);
                                instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(3);
                                instance.<Number>k__BackingField = dataReader.GetString(4);
                                instance.<PricePerNight>k__BackingField = dataReader.GetDecimal(5);
                                instance.<RoomClassID>k__BackingField = dataReader.GetInt32(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Room)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            RoomClass instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(RoomClass);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: RoomClass.RoomClassID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(7) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (RoomClass)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]: 
                        {
                            return 
                            {
                                RoomClass instance;
                                instance = new RoomClass();
                                instance.<RoomClassID>k__BackingField = dataReader.GetInt32(7);
                                instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(8);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                instance.<HotelId>k__BackingField = dataReader.GetInt32(10);
                                instance.<Name>k__BackingField = dataReader.GetString(11);
                                instance.<RoomType>k__BackingField = Invoke(((EnumToNumberConverter<RoomType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: RoomClass.RoomType (RoomType) Required | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("RoomType")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(12));
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(RoomClass)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Room, Room, RoomClass>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Room.RoomClass (RoomClass) ToPrincipal RoomClass Inverse: Rooms | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindNavigation("RoomClass")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: RoomClass.Rooms (ICollection<Room>) Collection ToDependent Room Inverse: RoomClass | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms")], 
            fixup: (namelessParameter{9}, namelessParameter{10}) => 
            {
                namelessParameter{9}.<RoomClass>k__BackingField = namelessParameter{10};
                return [LIFTABLE Constant: ClrICollectionAccessor<RoomClass, ICollection<Room>, Room> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms").GetCollectionAccessor()].Add(
                    entity: namelessParameter{10}, 
                    value: namelessParameter{9}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-10 18:56:42.110 -04:00 [DBG] Creating DbConnection.
2025-03-10 18:56:42.119 -04:00 [DBG] Created DbConnection. (8ms).
2025-03-10 18:56:42.122 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:56:42.125 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:56:42.131 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 18:56:42.133 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 18:56:42.138 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-03-10 18:56:42.141 -04:00 [DBG] Executing DbCommand [Parameters=[@__minPrice_0='?' (DbType = Decimal), @__maxPrice_1='?' (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."PricePerNight" >= @__minPrice_0 AND r."PricePerNight" <= @__maxPrice_1
2025-03-10 18:56:42.166 -04:00 [INF] Executed DbCommand (26ms) [Parameters=[@__minPrice_0='?' (DbType = Decimal), @__maxPrice_1='?' (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."PricePerNight" >= @__minPrice_0 AND r."PricePerNight" <= @__maxPrice_1
2025-03-10 18:56:42.173 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 18:56:42.194 -04:00 [DBG] The navigation 'Room.RoomClass' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 18:56:42.204 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 18:56:42.234 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:56:42.238 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 65ms reading results.
2025-03-10 18:56:42.241 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:56:42.243 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 18:56:42.266 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 18:56:42.275 -04:00 [DBG] Attempting to select an output formatter based on Accept header '["text/plain"]'.
2025-03-10 18:56:42.283 -04:00 [DBG] Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
2025-03-10 18:56:42.289 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 18:56:42.291 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 18:56:42.292 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 18:56:42.294 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.Room.RoomResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-10 18:56:42.316 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API) in 411.8537ms
2025-03-10 18:56:42.325 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoomsByPriceRange (HotelBookingPlatform.API)'
2025-03-10 18:56:42.327 -04:00 [DBG] Connection id "0HNB04PDD2E91" completed keep alive response.
2025-03-10 18:56:42.333 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 18:56:42.337 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:56:42.348 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (10ms).
2025-03-10 18:56:42.351 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Room/by-price?minPrice=500&maxPrice=500 - 200 null application/json; charset=utf-8 740.6257ms
2025-03-10 18:57:36.339 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Invoice - application/json 150
2025-03-10 18:57:36.344 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Invoice'
2025-03-10 18:57:36.345 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.InvoiceController.CreateInvoice (HotelBookingPlatform.API)' with route pattern 'api/Invoice' is valid for the request path '/api/Invoice'
2025-03-10 18:57:36.391 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.InvoiceController.CreateInvoice (HotelBookingPlatform.API)'
2025-03-10 18:57:36.406 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 18:57:36.408 -04:00 [INF] No CORS policy found for the specified request.
2025-03-10 18:57:36.411 -04:00 [DBG] Successfully validated the token.
2025-03-10 18:57:36.412 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 18:57:36.420 -04:00 [DBG] Authorization was successful.
2025-03-10 18:57:36.421 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.InvoiceController.CreateInvoice (HotelBookingPlatform.API)'
2025-03-10 18:57:36.429 -04:00 [INF] Route matched with {action = "CreateInvoice", controller = "Invoice"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateInvoice(HotelBookingPlatform.Domain.DTOs.InvoiceRecord.InvoiceCreateRequest) on controller HotelBookingPlatform.API.Controllers.InvoiceController (HotelBookingPlatform.API).
2025-03-10 18:57:36.440 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 18:57:36.442 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 18:57:36.444 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 18:57:36.451 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 18:57:36.453 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 18:57:36.456 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.InvoiceController (HotelBookingPlatform.API)
2025-03-10 18:57:36.459 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.InvoiceController (HotelBookingPlatform.API)
2025-03-10 18:57:36.463 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.InvoiceRecord.InvoiceCreateRequest' ...
2025-03-10 18:57:36.469 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.InvoiceRecord.InvoiceCreateRequest' using the name '' in request data ...
2025-03-10 18:57:36.471 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-10 18:57:36.475 -04:00 [DBG] Connection id "0HNB04PDD2E91", Request id "0HNB04PDD2E91:00000003": started reading request body.
2025-03-10 18:57:36.478 -04:00 [DBG] Connection id "0HNB04PDD2E91", Request id "0HNB04PDD2E91:00000003": done reading request body.
2025-03-10 18:57:36.490 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.InvoiceRecord.InvoiceCreateRequest'
2025-03-10 18:57:36.491 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.InvoiceRecord.InvoiceCreateRequest'.
2025-03-10 18:57:36.495 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.InvoiceRecord.InvoiceCreateRequest'.
2025-03-10 18:57:36.496 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.InvoiceRecord.InvoiceCreateRequest' ...
2025-03-10 18:57:36.504 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.InvoiceRecord.InvoiceCreateRequest'.
2025-03-10 18:57:36.519 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 18:57:36.552 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'InvoiceRecord.InvoiceRecordId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 18:57:36.585 -04:00 [DBG] Context 'AppDbContext' started tracking 'InvoiceRecord' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 18:57:36.590 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-10 18:57:36.595 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-10 18:57:36.613 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-10 18:57:36.693 -04:00 [DBG] Creating DbConnection.
2025-03-10 18:57:36.694 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-10 18:57:36.696 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:57:36.701 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:57:36.705 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 18:57:36.707 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-10 18:57:36.709 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-10 18:57:36.711 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Decimal), @p2='?' (DbType = Decimal), @p3='?', @p4='?' (DbType = Int32), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "InvoiceRecords" ("BookingID", "DiscountPercentageAtBooking", "PriceAtBooking", "RoomClassName", "RoomID", "RoomNumber")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "InvoiceRecordId";
2025-03-10 18:57:36.752 -04:00 [INF] Executed DbCommand (42ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Decimal), @p2='?' (DbType = Decimal), @p3='?', @p4='?' (DbType = Int32), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "InvoiceRecords" ("BookingID", "DiscountPercentageAtBooking", "PriceAtBooking", "RoomClassName", "RoomID", "RoomNumber")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "InvoiceRecordId";
2025-03-10 18:57:36.765 -04:00 [DBG] The foreign key property 'InvoiceRecord.InvoiceRecordId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-10 18:57:36.775 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:57:36.777 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 20ms reading results.
2025-03-10 18:57:36.780 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:57:36.785 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-10 18:57:36.801 -04:00 [DBG] An entity of type 'InvoiceRecord' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 18:57:36.806 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-10 18:57:36.809 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-10 18:57:36.811 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-10 18:57:36.812 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-10 18:57:36.817 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 0 entities written to the database.
2025-03-10 18:57:36.822 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 18:57:36.826 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-10 18:57:36.827 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 18:57:36.828 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 18:57:36.830 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 18:57:36.835 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-10 18:57:36.839 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.InvoiceController.CreateInvoice (HotelBookingPlatform.API) in 383.3942ms
2025-03-10 18:57:36.843 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.InvoiceController.CreateInvoice (HotelBookingPlatform.API)'
2025-03-10 18:57:36.851 -04:00 [DBG] Connection id "0HNB04PDD2E91" completed keep alive response.
2025-03-10 18:57:36.853 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 18:57:36.856 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:57:36.858 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-10 18:57:36.861 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Invoice - 200 null application/json; charset=utf-8 522.4855ms
2025-03-10 18:58:05.555 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Invoice/1 - null null
2025-03-10 18:58:05.559 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Invoice/1'
2025-03-10 18:58:05.560 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.InvoiceController.GetInvoice (HotelBookingPlatform.API)' with route pattern 'api/Invoice/{id}' is valid for the request path '/api/Invoice/1'
2025-03-10 18:58:05.563 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.InvoiceController.GetInvoice (HotelBookingPlatform.API)'
2025-03-10 18:58:05.564 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-10 18:58:05.566 -04:00 [DBG] Successfully validated the token.
2025-03-10 18:58:05.572 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-10 18:58:05.576 -04:00 [DBG] Authorization was successful.
2025-03-10 18:58:05.577 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.InvoiceController.GetInvoice (HotelBookingPlatform.API)'
2025-03-10 18:58:05.594 -04:00 [INF] Route matched with {action = "GetInvoice", controller = "Invoice"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInvoice(Int32) on controller HotelBookingPlatform.API.Controllers.InvoiceController (HotelBookingPlatform.API).
2025-03-10 18:58:05.598 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-10 18:58:05.607 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-10 18:58:05.610 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-10 18:58:05.613 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-10 18:58:05.620 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-10 18:58:05.623 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.InvoiceController (HotelBookingPlatform.API)
2025-03-10 18:58:05.626 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.InvoiceController (HotelBookingPlatform.API)
2025-03-10 18:58:05.628 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-10 18:58:05.636 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-10 18:58:05.641 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 18:58:05.643 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-10 18:58:05.646 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-10 18:58:05.653 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-10 18:58:05.660 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-10 18:58:05.688 -04:00 [DBG] Compiling query expression: 
'DbSet<InvoiceRecord>()
    .FirstOrDefault(e => EF.Property<int>(e, "InvoiceRecordId") == __p_0)'
2025-03-10 18:58:05.696 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<InvoiceRecord>(
    asyncEnumerable: SingleQueryingEnumerable.Create<InvoiceRecord>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: InvoiceRecord.InvoiceRecordId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: InvoiceRecord.BookingID (int) Required FK Index, 1], [Property: InvoiceRecord.DiscountPercentageAtBooking (decimal?), 2], [Property: InvoiceRecord.PriceAtBooking (decimal) Required, 3], [Property: InvoiceRecord.RoomClassName (string) Required, 4], [Property: InvoiceRecord.RoomID (int) Required, 5], [Property: InvoiceRecord.RoomNumber (string) Required, 6] }
            SELECT TOP(1) i.InvoiceRecordId, i.BookingID, i.DiscountPercentageAtBooking, i.PriceAtBooking, i.RoomClassName, i.RoomID, i.RoomNumber
            FROM InvoiceRecords AS i
            WHERE i.InvoiceRecordId == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: InvoiceRecord.InvoiceRecordId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: InvoiceRecord.BookingID (int) Required FK Index, 1], [Property: InvoiceRecord.DiscountPercentageAtBooking (decimal?), 2], [Property: InvoiceRecord.PriceAtBooking (decimal) Required, 3], [Property: InvoiceRecord.RoomClassName (string) Required, 4], [Property: InvoiceRecord.RoomID (int) Required, 5], [Property: InvoiceRecord.RoomNumber (string) Required, 6] }
            SELECT TOP(1) i.InvoiceRecordId, i.BookingID, i.DiscountPercentageAtBooking, i.PriceAtBooking, i.RoomClassName, i.RoomID, i.RoomNumber
            FROM InvoiceRecords AS i
            WHERE i.InvoiceRecordId == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            InvoiceRecord entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                InvoiceRecord instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(InvoiceRecord);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: InvoiceRecord.InvoiceRecordId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.InvoiceRecord").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (InvoiceRecord)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: InvoiceRecord | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.InvoiceRecord")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: InvoiceRecord | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.InvoiceRecord")]: 
                            {
                                return 
                                {
                                    InvoiceRecord instance;
                                    instance = new InvoiceRecord();
                                    instance.<InvoiceRecordId>k__BackingField = dataReader.GetInt32(0);
                                    instance.<BookingID>k__BackingField = dataReader.GetInt32(1);
                                    instance.<DiscountPercentageAtBooking>k__BackingField = dataReader.IsDBNull(2) ? default(decimal?) : (decimal?)dataReader.GetDecimal(2);
                                    instance.<PriceAtBooking>k__BackingField = dataReader.GetDecimal(3);
                                    instance.<RoomClassName>k__BackingField = dataReader.GetString(4);
                                    instance.<RoomID>k__BackingField = dataReader.GetInt32(5);
                                    instance.<RoomNumber>k__BackingField = dataReader.GetString(6);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: InvoiceRecord | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.InvoiceRecord")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(InvoiceRecord)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-10 18:58:05.726 -04:00 [DBG] Creating DbConnection.
2025-03-10 18:58:05.738 -04:00 [DBG] Created DbConnection. (12ms).
2025-03-10 18:58:05.753 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:58:05.794 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:58:05.820 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-10 18:58:05.822 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-10 18:58:05.824 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-10 18:58:05.827 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT i."InvoiceRecordId", i."BookingID", i."DiscountPercentageAtBooking", i."PriceAtBooking", i."RoomClassName", i."RoomID", i."RoomNumber"
FROM "InvoiceRecords" AS i
WHERE i."InvoiceRecordId" = @__p_0
LIMIT 1
2025-03-10 18:58:05.863 -04:00 [INF] Executed DbCommand (36ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT i."InvoiceRecordId", i."BookingID", i."DiscountPercentageAtBooking", i."PriceAtBooking", i."RoomClassName", i."RoomID", i."RoomNumber"
FROM "InvoiceRecords" AS i
WHERE i."InvoiceRecordId" = @__p_0
LIMIT 1
2025-03-10 18:58:05.872 -04:00 [DBG] Context 'AppDbContext' started tracking 'InvoiceRecord' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-10 18:58:05.876 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:58:05.880 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-03-10 18:58:05.889 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:58:05.891 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-10 18:58:05.898 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-10 18:58:05.906 -04:00 [DBG] Attempting to select an output formatter based on Accept header '["text/plain"]'.
2025-03-10 18:58:05.908 -04:00 [DBG] Could not find an output formatter based on content negotiation. Accepted types were (["text/plain"])
2025-03-10 18:58:05.911 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-10 18:58:05.914 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-10 18:58:05.921 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-10 18:58:05.923 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.InvoiceRecord.InvoiceResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-10 18:58:05.930 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.InvoiceController.GetInvoice (HotelBookingPlatform.API) in 307.1872ms
2025-03-10 18:58:05.937 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.InvoiceController.GetInvoice (HotelBookingPlatform.API)'
2025-03-10 18:58:05.940 -04:00 [DBG] Connection id "0HNB04PDD2E91" completed keep alive response.
2025-03-10 18:58:05.946 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-10 18:58:05.950 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-10 18:58:05.957 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-10 18:58:05.960 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Invoice/1 - 200 null application/json; charset=utf-8 404.7439ms
2025-03-10 19:00:09.976 -04:00 [DBG] Connection id "0HNB04PDD2E91" received FIN.
2025-03-10 19:00:09.978 -04:00 [DBG] Connection id "0HNB04PDD2E91" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-10 19:00:09.980 -04:00 [DBG] Connection id "0HNB04PDD2E91" disconnecting.
2025-03-10 19:00:09.982 -04:00 [DBG] Connection id "0HNB04PDD2E91" stopped.
2025-03-21 00:43:45.040 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-21 00:43:45.937 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-21 00:43:45.957 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-21 00:43:45.963 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-21 00:43:46.123 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-21 00:43:46.356 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-21 00:43:46.535 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-21 00:43:46.537 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-21 00:43:46.539 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-21 00:43:46.821 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-21 00:43:46.879 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-21 00:46:10.390 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-21 00:46:11.338 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-21 00:46:11.343 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-21 00:46:11.346 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-21 00:46:11.348 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-21 00:46:11.350 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-21 00:46:11.486 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-21 00:46:11.490 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-21 00:46:11.492 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-21 00:46:11.620 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-21 00:46:12.619 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-21 00:52:23.343 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-21 00:52:24.578 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-21 00:52:24.583 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-21 00:52:24.587 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-21 00:52:24.592 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-21 00:52:24.604 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-21 00:52:24.804 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-21 00:52:24.806 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-21 00:52:24.808 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-21 00:52:24.954 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-21 00:52:25.017 -04:00 [DBG] Creating DbConnection.
2025-03-21 00:52:25.082 -04:00 [DBG] Created DbConnection. (64ms).
2025-03-21 00:52:25.089 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-21 00:52:25.661 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-21 00:52:25.670 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-21 00:52:25.680 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (10ms).
2025-03-21 00:52:25.684 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (18ms).
2025-03-21 00:52:25.699 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-21 00:52:25.783 -04:00 [INF] Executed DbCommand (85ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-21 00:52:25.839 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-21 00:52:25.855 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 62ms reading results.
2025-03-21 00:52:25.861 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-21 00:52:25.869 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-21 00:52:26.178 -04:00 [DBG] Migrating using database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-21 00:52:26.183 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-21 00:52:26.192 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-21 00:52:26.364 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-21 00:52:26.368 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-21 00:52:26.374 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-21 00:52:26.378 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-21 00:52:26.381 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-21 00:52:26.472 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-21 00:52:26.474 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-21 00:52:26.477 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (5ms).
2025-03-21 00:52:26.486 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-21 00:52:26.544 -04:00 [INF] Executed DbCommand (57ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-21 00:52:26.554 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-21 00:52:26.562 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-21 00:52:26.567 -04:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-03-21 00:52:26.569 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-21 00:52:26.571 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-21 00:52:26.573 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-21 00:52:26.575 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-21 00:52:26.614 -04:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-21 00:52:26.618 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-21 00:52:26.619 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-21 00:52:26.622 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-21 00:52:26.626 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-21 00:52:26.632 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-21 00:52:26.635 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-21 00:52:26.637 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-03-21 00:52:26.650 -04:00 [INF] Applying migration '20250321044612_AddCINToLocalUser'.
2025-03-21 00:52:26.714 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-21 00:52:26.716 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-21 00:52:26.719 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (5ms).
2025-03-21 00:52:26.722 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "AspNetUsers" ADD "CIN" character varying(10) NOT NULL DEFAULT '';
2025-03-21 00:52:26.888 -04:00 [INF] Executed DbCommand (166ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "AspNetUsers" ADD "CIN" character varying(10) NOT NULL DEFAULT '';
2025-03-21 00:52:26.917 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-21 00:52:26.921 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-21 00:52:26.923 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (6ms).
2025-03-21 00:52:26.925 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250321044612_AddCINToLocalUser', '9.0.2');
2025-03-21 00:52:26.932 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250321044612_AddCINToLocalUser', '9.0.2');
2025-03-21 00:52:26.938 -04:00 [DBG] Committing transaction.
2025-03-21 00:52:26.950 -04:00 [DBG] Committed transaction.
2025-03-21 00:52:26.952 -04:00 [DBG] Disposing transaction.
2025-03-21 00:52:26.954 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-21 00:52:26.956 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-21 00:52:26.961 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-21 00:52:26.965 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-21 00:52:26.968 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-21 01:09:26.680 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-21 01:09:26.895 -04:00 [DBG] Hosting starting
2025-03-21 01:09:26.933 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-21 01:09:26.955 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-21 01:09:27.032 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-21 01:09:27.052 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-21 01:09:27.066 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-21 01:09:27.076 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-21 01:09:27.085 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-21 01:09:27.107 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-21 01:09:27.115 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-21 01:09:27.129 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-21 01:09:27.133 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-21 01:09:27.278 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-21 01:09:27.280 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-21 01:09:27.281 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-21 01:09:27.283 -04:00 [INF] Hosting environment: Development
2025-03-21 01:09:27.284 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-21 01:09:27.286 -04:00 [DBG] Hosting started
2025-03-21 01:11:41.133 -04:00 [DBG] Connection id "0HNB86REP30OI" accepted.
2025-03-21 01:11:41.168 -04:00 [DBG] Connection id "0HNB86REP30OI" started.
2025-03-21 01:11:41.173 -04:00 [DBG] Connection id "0HNB86REP30OJ" accepted.
2025-03-21 01:11:41.203 -04:00 [DBG] Connection id "0HNB86REP30OJ" started.
2025-03-21 01:11:41.348 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-03-21 01:11:41.404 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-21 01:11:41.547 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-03-21 01:11:41.566 -04:00 [DBG] Request did not match any endpoints
2025-03-21 01:11:42.800 -04:00 [DBG] Connection id "0HNB86REP30OI" completed keep alive response.
2025-03-21 01:11:42.826 -04:00 [DBG] Connection id "0HNB86REP30OK" accepted.
2025-03-21 01:11:42.844 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui-standalone-preset.js - null null
2025-03-21 01:11:42.868 -04:00 [DBG] Connection id "0HNB86REP30OL" accepted.
2025-03-21 01:11:42.869 -04:00 [DBG] No candidates found for the request path '/swagger/swagger-ui-standalone-preset.js'
2025-03-21 01:11:42.879 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 1533.3891ms
2025-03-21 01:11:42.882 -04:00 [DBG] Connection id "0HNB86REP30OK" started.
2025-03-21 01:11:42.953 -04:00 [DBG] Request did not match any endpoints
2025-03-21 01:11:42.954 -04:00 [DBG] Connection id "0HNB86REP30OM" accepted.
2025-03-21 01:11:42.955 -04:00 [DBG] Connection id "0HNB86REP30OL" started.
2025-03-21 01:11:42.972 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-03-21 01:11:42.979 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui.css - null null
2025-03-21 01:11:42.996 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.css - null null
2025-03-21 01:11:43.001 -04:00 [DBG] Connection id "0HNB86REP30OM" started.
2025-03-21 01:11:43.054 -04:00 [DBG] No candidates found for the request path '/swagger/index.css'
2025-03-21 01:11:43.020 -04:00 [INF] The file /swagger-ui-standalone-preset.js was not modified
2025-03-21 01:11:43.032 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-03-21 01:11:43.035 -04:00 [DBG] No candidates found for the request path '/swagger/swagger-ui.css'
2025-03-21 01:11:43.055 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui-bundle.js - null null
2025-03-21 01:11:43.056 -04:00 [DBG] Request did not match any endpoints
2025-03-21 01:11:43.064 -04:00 [DBG] Request did not match any endpoints
2025-03-21 01:11:43.065 -04:00 [DBG] Request did not match any endpoints
2025-03-21 01:11:43.081 -04:00 [INF] The file /swagger-ui.css was not modified
2025-03-21 01:11:43.076 -04:00 [DBG] No candidates found for the request path '/swagger/swagger-ui-bundle.js'
2025-03-21 01:11:43.081 -04:00 [INF] The file /index.css was not modified
2025-03-21 01:11:43.075 -04:00 [DBG] Handled. Status code: 304 File: /swagger-ui-standalone-preset.js
2025-03-21 01:11:43.082 -04:00 [DBG] Connection id "0HNB86REP30OK" completed keep alive response.
2025-03-21 01:11:43.086 -04:00 [DBG] Handled. Status code: 304 File: /swagger-ui.css
2025-03-21 01:11:43.087 -04:00 [DBG] Request did not match any endpoints
2025-03-21 01:11:43.090 -04:00 [DBG] Handled. Status code: 304 File: /index.css
2025-03-21 01:11:43.093 -04:00 [DBG] Connection id "0HNB86REP30OJ" completed keep alive response.
2025-03-21 01:11:43.095 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 122.7036ms
2025-03-21 01:11:43.098 -04:00 [DBG] Connection id "0HNB86REP30OI" completed keep alive response.
2025-03-21 01:11:43.100 -04:00 [DBG] Connection id "0HNB86REP30OL" completed keep alive response.
2025-03-21 01:11:43.101 -04:00 [INF] The file /swagger-ui-bundle.js was not modified
2025-03-21 01:11:43.155 -04:00 [DBG] Handled. Status code: 304 File: /swagger-ui-bundle.js
2025-03-21 01:11:43.160 -04:00 [DBG] Connection id "0HNB86REP30OM" completed keep alive response.
2025-03-21 01:11:43.154 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.css - 304 null text/css 157.1845ms
2025-03-21 01:11:43.102 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui-standalone-preset.js - 304 null text/javascript 258.2259ms
2025-03-21 01:11:43.117 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui.css - 304 null text/css 138.2518ms
2025-03-21 01:11:43.185 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/swagger-ui-bundle.js - 304 null text/javascript 129.9547ms
2025-03-21 01:11:43.606 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-21 01:11:43.663 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/favicon-32x32.png - null null
2025-03-21 01:11:43.718 -04:00 [DBG] No candidates found for the request path '/swagger/favicon-32x32.png'
2025-03-21 01:11:43.671 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-21 01:11:43.808 -04:00 [DBG] Request did not match any endpoints
2025-03-21 01:11:43.814 -04:00 [DBG] Request did not match any endpoints
2025-03-21 01:11:43.819 -04:00 [INF] The file /favicon-32x32.png was not modified
2025-03-21 01:11:43.885 -04:00 [DBG] Handled. Status code: 304 File: /favicon-32x32.png
2025-03-21 01:11:43.887 -04:00 [DBG] Connection id "0HNB86REP30OK" completed keep alive response.
2025-03-21 01:11:43.921 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/favicon-32x32.png - 304 null image/png 258.1016ms
2025-03-21 01:11:44.500 -04:00 [DBG] Connection id "0HNB86REP30OM" completed keep alive response.
2025-03-21 01:11:44.556 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 950.3861ms
2025-03-21 01:11:46.533 -04:00 [DBG] Connection id "0HNB86REP30OJ" received FIN.
2025-03-21 01:11:46.534 -04:00 [DBG] Connection id "0HNB86REP30OI" received FIN.
2025-03-21 01:11:46.535 -04:00 [DBG] Connection id "0HNB86REP30OL" received FIN.
2025-03-21 01:11:46.537 -04:00 [DBG] Connection id "0HNB86REP30OK" received FIN.
2025-03-21 01:11:46.539 -04:00 [DBG] Connection id "0HNB86REP30OM" received FIN.
2025-03-21 01:11:46.558 -04:00 [DBG] Connection id "0HNB86REP30OI" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-21 01:11:46.559 -04:00 [DBG] Connection id "0HNB86REP30OJ" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-21 01:11:46.561 -04:00 [DBG] Connection id "0HNB86REP30OL" disconnecting.
2025-03-21 01:11:46.566 -04:00 [DBG] Connection id "0HNB86REP30OI" disconnecting.
2025-03-21 01:11:46.566 -04:00 [DBG] Connection id "0HNB86REP30OJ" disconnecting.
2025-03-21 01:11:46.569 -04:00 [DBG] Connection id "0HNB86REP30OJ" stopped.
2025-03-21 01:11:46.568 -04:00 [DBG] Connection id "0HNB86REP30OK" disconnecting.
2025-03-21 01:11:46.568 -04:00 [DBG] Connection id "0HNB86REP30OI" stopped.
2025-03-21 01:11:46.567 -04:00 [DBG] Connection id "0HNB86REP30OL" stopped.
2025-03-21 01:11:46.572 -04:00 [DBG] Connection id "0HNB86REP30OK" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-21 01:11:46.576 -04:00 [DBG] Connection id "0HNB86REP30OM" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-21 01:11:46.578 -04:00 [DBG] Connection id "0HNB86REP30OK" stopped.
2025-03-21 01:11:46.578 -04:00 [DBG] Connection id "0HNB86REP30OM" disconnecting.
2025-03-21 01:11:46.579 -04:00 [DBG] Connection id "0HNB86REP30OL" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-21 01:11:46.581 -04:00 [DBG] Connection id "0HNB86REP30OM" stopped.
2025-03-23 23:30:04.621 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-23 23:30:04.903 -04:00 [DBG] Hosting starting
2025-03-23 23:30:04.938 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-23 23:30:04.955 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-23 23:30:05.018 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-23 23:30:05.035 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-23 23:30:05.043 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-23 23:30:05.050 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-23 23:30:05.054 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-23 23:30:05.074 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-23 23:30:05.085 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-23 23:30:05.091 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-23 23:30:05.095 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-23 23:30:05.219 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-23 23:30:05.221 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-23 23:30:05.222 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-23 23:30:05.224 -04:00 [INF] Hosting environment: Development
2025-03-23 23:30:05.225 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-23 23:30:05.227 -04:00 [DBG] Hosting started
2025-03-23 23:30:32.489 -04:00 [DBG] Connection id "0HNBAGGTPQAQA" accepted.
2025-03-23 23:30:32.496 -04:00 [DBG] Connection id "0HNBAGGTPQAQB" accepted.
2025-03-23 23:30:32.499 -04:00 [DBG] Connection id "0HNBAGGTPQAQA" started.
2025-03-23 23:30:32.526 -04:00 [DBG] Connection id "0HNBAGGTPQAQB" started.
2025-03-23 23:30:33.210 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-23 23:30:33.224 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-23 23:30:33.378 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-23 23:30:33.383 -04:00 [DBG] Request did not match any endpoints
2025-03-23 23:30:34.326 -04:00 [DBG] Connection id "0HNBAGGTPQAQA" completed keep alive response.
2025-03-23 23:30:34.358 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 1150.7849ms
2025-03-23 23:30:38.211 -04:00 [DBG] Connection id "0HNBAGGTPQAQB" received FIN.
2025-03-23 23:30:38.211 -04:00 [DBG] Connection id "0HNBAGGTPQAQA" received FIN.
2025-03-23 23:30:38.240 -04:00 [DBG] Connection id "0HNBAGGTPQAQA" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-23 23:30:38.240 -04:00 [DBG] Connection id "0HNBAGGTPQAQB" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-23 23:30:38.253 -04:00 [DBG] Connection id "0HNBAGGTPQAQA" disconnecting.
2025-03-23 23:30:38.255 -04:00 [DBG] Connection id "0HNBAGGTPQAQB" disconnecting.
2025-03-23 23:30:38.266 -04:00 [DBG] Connection id "0HNBAGGTPQAQA" stopped.
2025-03-23 23:30:38.267 -04:00 [DBG] Connection id "0HNBAGGTPQAQB" stopped.
2025-03-23 23:31:41.332 -04:00 [DBG] Connection id "0HNBAGGTPQAQC" accepted.
2025-03-23 23:31:41.334 -04:00 [DBG] Connection id "0HNBAGGTPQAQC" started.
2025-03-23 23:31:41.377 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/register - application/json 130
2025-03-23 23:31:41.393 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/register'
2025-03-23 23:31:41.406 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/register' is valid for the request path '/api/auth/register'
2025-03-23 23:31:41.412 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-23 23:31:41.424 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-23 23:31:41.427 -04:00 [INF] No CORS policy found for the specified request.
2025-03-23 23:31:41.429 -04:00 [WRN] Failed to determine the https port for redirect.
2025-03-23 23:31:41.477 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-23 23:31:41.480 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-23 23:31:41.521 -04:00 [INF] Route matched with {action = "Register", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RegisterAsync(HotelBookingPlatform.Domain.Helpers.RegisterModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-23 23:31:41.526 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-23 23:31:41.528 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-23 23:31:41.533 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-23 23:31:41.537 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-23 23:31:41.539 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-23 23:31:41.544 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-23 23:31:42.024 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-23 23:31:42.070 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-23 23:31:42.078 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-23 23:31:42.083 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' using the name '' in request data ...
2025-03-23 23:31:42.086 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-23 23:31:42.124 -04:00 [DBG] Connection id "0HNBAGGTPQAQC", Request id "0HNBAGGTPQAQC:00000001": started reading request body.
2025-03-23 23:31:42.127 -04:00 [DBG] Connection id "0HNBAGGTPQAQC", Request id "0HNBAGGTPQAQC:00000001": done reading request body.
2025-03-23 23:31:42.145 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'
2025-03-23 23:31:42.147 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-23 23:31:42.150 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-23 23:31:42.152 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-23 23:31:42.166 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-23 23:31:42.895 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-23 23:31:42.903 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-23 23:31:42.906 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-23 23:31:42.909 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-23 23:31:42.912 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-23 23:31:43.100 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-23 23:31:43.103 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-23 23:31:43.105 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-23 23:31:43.232 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-23 23:31:43.322 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-23 23:31:43.393 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-23 23:31:43.724 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.CIN (string) Required MaxLength(10), 2], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 3], [Property: LocalUser.Email (string) MaxLength(256), 4], [Property: LocalUser.EmailConfirmed (bool) Required, 5], [Property: LocalUser.FirstName (string) Required, 6], [Property: LocalUser.LastName (string) Required, 7], [Property: LocalUser.LockoutEnabled (bool) Required, 8], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 9], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 10], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 11], [Property: LocalUser.PasswordHash (string), 12], [Property: LocalUser.PhoneNumber (string), 13], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 14], [Property: LocalUser.SecurityStamp (string), 15], [Property: LocalUser.TwoFactorEnabled (bool) Required, 16], [Property: LocalUser.UserName (string) MaxLength(256), 17] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 18], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 19], [Property: RefreshToken.CreatedOn (DateTime) Required, 20], [Property: RefreshToken.ExpiresOn (DateTime) Required, 21], [Property: RefreshToken.RevokedOn (DateTime?), 22], [Property: RefreshToken.Token (string) Required, 23] }
                3 -> 18
                4 -> 19
            SELECT a0.Id, a0.AccessFailedCount, a0.CIN, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.CIN, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.CIN (string) Required MaxLength(10), 2], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 3], [Property: LocalUser.Email (string) MaxLength(256), 4], [Property: LocalUser.EmailConfirmed (bool) Required, 5], [Property: LocalUser.FirstName (string) Required, 6], [Property: LocalUser.LastName (string) Required, 7], [Property: LocalUser.LockoutEnabled (bool) Required, 8], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 9], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 10], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 11], [Property: LocalUser.PasswordHash (string), 12], [Property: LocalUser.PhoneNumber (string), 13], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 14], [Property: LocalUser.SecurityStamp (string), 15], [Property: LocalUser.TwoFactorEnabled (bool) Required, 16], [Property: LocalUser.UserName (string) MaxLength(256), 17] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 18], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 19], [Property: RefreshToken.CreatedOn (DateTime) Required, 20], [Property: RefreshToken.ExpiresOn (DateTime) Required, 21], [Property: RefreshToken.RevokedOn (DateTime?), 22], [Property: RefreshToken.Token (string) Required, 23] }
                3 -> 18
                4 -> 19
            SELECT a0.Id, a0.AccessFailedCount, a0.CIN, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.CIN, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<CIN>k__BackingField = dataReader.GetString(2);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(4) ? default(string) : dataReader.GetString(4);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(5);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(6);
                                        instance.<LastName>k__BackingField = dataReader.GetString(7);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(8);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(9) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(9);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(13) ? default(string) : dataReader.GetString(13);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(14);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(15) ? default(string) : dataReader.GetString(15);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(16);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18), 
                    (object)dataReader.IsDBNull(19) ? default(int?) : (int?)dataReader.GetInt32(19) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetString(18), 
                                dataReader.IsDBNull(19) ? default(object) : (object)dataReader.GetInt32(19) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18), 
                                            dataReader.IsDBNull(19) ? default(int) : dataReader.GetInt32(19)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime) : dataReader.GetDateTime(21);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(22) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(22);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(23) ? default(string) : dataReader.GetString(23);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-23 23:31:43.809 -04:00 [DBG] Creating DbConnection.
2025-03-23 23:31:43.847 -04:00 [DBG] Created DbConnection. (38ms).
2025-03-23 23:31:43.855 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:31:44.163 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:31:44.174 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:31:44.192 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (9ms).
2025-03-23 23:31:44.205 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (33ms).
2025-03-23 23:31:44.227 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."CIN", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."CIN", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:31:44.376 -04:00 [INF] Executed DbCommand (156ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."CIN", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."CIN", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:31:44.393 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:31:44.411 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 23ms reading results.
2025-03-23 23:31:44.421 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:31:44.431 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-03-23 23:31:44.455 -04:00 [DBG] User password validation failed: PasswordRequiresUpper.
2025-03-23 23:31:44.470 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API) in 2921.4704ms
2025-03-23 23:31:44.477 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-23 23:31:44.573 -04:00 [DBG] Connection id "0HNBAGGTPQAQC" completed keep alive response.
2025-03-23 23:31:44.578 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-23 23:31:44.597 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:31:44.607 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (10ms).
2025-03-23 23:31:44.611 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/register - 400 null application/json 3233.6746ms
2025-03-23 23:31:48.288 -04:00 [DBG] Connection id "0HNBAGGTPQAQC" received FIN.
2025-03-23 23:31:48.293 -04:00 [DBG] Connection id "0HNBAGGTPQAQC" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-23 23:31:48.297 -04:00 [DBG] Connection id "0HNBAGGTPQAQC" disconnecting.
2025-03-23 23:31:48.299 -04:00 [DBG] Connection id "0HNBAGGTPQAQC" stopped.
2025-03-23 23:32:02.187 -04:00 [DBG] Connection id "0HNBAGGTPQAQD" accepted.
2025-03-23 23:32:02.189 -04:00 [DBG] Connection id "0HNBAGGTPQAQD" started.
2025-03-23 23:32:02.190 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/register - application/json 130
2025-03-23 23:32:02.218 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/register'
2025-03-23 23:32:02.231 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/register' is valid for the request path '/api/auth/register'
2025-03-23 23:32:02.239 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-23 23:32:02.240 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-23 23:32:02.242 -04:00 [INF] No CORS policy found for the specified request.
2025-03-23 23:32:02.244 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-23 23:32:02.246 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-23 23:32:02.248 -04:00 [INF] Route matched with {action = "Register", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RegisterAsync(HotelBookingPlatform.Domain.Helpers.RegisterModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-23 23:32:02.255 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-23 23:32:02.257 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-23 23:32:02.259 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-23 23:32:02.262 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-23 23:32:02.264 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-23 23:32:02.269 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-23 23:32:02.278 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-23 23:32:02.286 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-23 23:32:02.289 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' using the name '' in request data ...
2025-03-23 23:32:02.291 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-23 23:32:02.294 -04:00 [DBG] Connection id "0HNBAGGTPQAQD", Request id "0HNBAGGTPQAQD:00000001": started reading request body.
2025-03-23 23:32:02.296 -04:00 [DBG] Connection id "0HNBAGGTPQAQD", Request id "0HNBAGGTPQAQD:00000001": done reading request body.
2025-03-23 23:32:02.298 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'
2025-03-23 23:32:02.302 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-23 23:32:02.305 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-23 23:32:02.308 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-23 23:32:02.310 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-23 23:32:02.388 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-23 23:32:02.394 -04:00 [DBG] Creating DbConnection.
2025-03-23 23:32:02.396 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-23 23:32:02.398 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:32:02.402 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:32:02.405 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:32:02.407 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-23 23:32:02.409 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-23 23:32:02.411 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."CIN", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."CIN", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:32:02.422 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."CIN", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."CIN", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:32:02.426 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:32:02.429 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-23 23:32:02.431 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:32:02.439 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-23 23:32:02.588 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-03-23 23:32:02.590 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-23 23:32:02.613 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.CIN (string) Required MaxLength(10), 2], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 3], [Property: LocalUser.Email (string) MaxLength(256), 4], [Property: LocalUser.EmailConfirmed (bool) Required, 5], [Property: LocalUser.FirstName (string) Required, 6], [Property: LocalUser.LastName (string) Required, 7], [Property: LocalUser.LockoutEnabled (bool) Required, 8], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 9], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 10], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 11], [Property: LocalUser.PasswordHash (string), 12], [Property: LocalUser.PhoneNumber (string), 13], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 14], [Property: LocalUser.SecurityStamp (string), 15], [Property: LocalUser.TwoFactorEnabled (bool) Required, 16], [Property: LocalUser.UserName (string) MaxLength(256), 17] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 18], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 19], [Property: RefreshToken.CreatedOn (DateTime) Required, 20], [Property: RefreshToken.ExpiresOn (DateTime) Required, 21], [Property: RefreshToken.RevokedOn (DateTime?), 22], [Property: RefreshToken.Token (string) Required, 23] }
                3 -> 18
                4 -> 19
            SELECT a0.Id, a0.AccessFailedCount, a0.CIN, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.CIN, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.CIN (string) Required MaxLength(10), 2], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 3], [Property: LocalUser.Email (string) MaxLength(256), 4], [Property: LocalUser.EmailConfirmed (bool) Required, 5], [Property: LocalUser.FirstName (string) Required, 6], [Property: LocalUser.LastName (string) Required, 7], [Property: LocalUser.LockoutEnabled (bool) Required, 8], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 9], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 10], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 11], [Property: LocalUser.PasswordHash (string), 12], [Property: LocalUser.PhoneNumber (string), 13], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 14], [Property: LocalUser.SecurityStamp (string), 15], [Property: LocalUser.TwoFactorEnabled (bool) Required, 16], [Property: LocalUser.UserName (string) MaxLength(256), 17] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 18], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 19], [Property: RefreshToken.CreatedOn (DateTime) Required, 20], [Property: RefreshToken.ExpiresOn (DateTime) Required, 21], [Property: RefreshToken.RevokedOn (DateTime?), 22], [Property: RefreshToken.Token (string) Required, 23] }
                3 -> 18
                4 -> 19
            SELECT a0.Id, a0.AccessFailedCount, a0.CIN, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.CIN, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<CIN>k__BackingField = dataReader.GetString(2);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(4) ? default(string) : dataReader.GetString(4);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(5);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(6);
                                        instance.<LastName>k__BackingField = dataReader.GetString(7);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(8);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(9) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(9);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(13) ? default(string) : dataReader.GetString(13);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(14);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(15) ? default(string) : dataReader.GetString(15);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(16);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18), 
                    (object)dataReader.IsDBNull(19) ? default(int?) : (int?)dataReader.GetInt32(19) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetString(18), 
                                dataReader.IsDBNull(19) ? default(object) : (object)dataReader.GetInt32(19) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18), 
                                            dataReader.IsDBNull(19) ? default(int) : dataReader.GetInt32(19)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime) : dataReader.GetDateTime(21);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(22) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(22);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(23) ? default(string) : dataReader.GetString(23);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-23 23:32:02.654 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:32:02.658 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:32:02.660 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:32:02.661 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-23 23:32:02.663 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-23 23:32:02.665 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."CIN", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."CIN", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:32:02.675 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."CIN", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."CIN", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:32:02.680 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:32:02.682 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-03-23 23:32:02.686 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:32:02.688 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-23 23:32:02.846 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:32:02.855 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-23 23:32:02.863 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-23 23:32:02.898 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-23 23:32:02.981 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:32:02.985 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:32:02.991 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:32:02.993 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-23 23:32:02.995 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-23 23:32:02.997 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "CIN", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17);
2025-03-23 23:32:03.031 -04:00 [ERR] Failed executing DbCommand (34ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "CIN", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17);
2025-03-23 23:32:03.043 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:32:03.046 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-23 23:32:03.063 -04:00 [ERR] An exception occurred in the database while saving changes for context type 'HotelBookingPlatform.Infrastructure.Data.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23502: null value in column "CIN" of relation "AspNetUsers" violates not-null constraint

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ERROR
    SqlState: 23502
    MessageText: null value in column "CIN" of relation "AspNetUsers" violates not-null constraint
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: AspNetUsers
    ColumnName: CIN
    File: execMain.c
    Line: 2003
    Routine: ExecConstraints
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23502: null value in column "CIN" of relation "AspNetUsers" violates not-null constraint

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ERROR
    SqlState: 23502
    MessageText: null value in column "CIN" of relation "AspNetUsers" violates not-null constraint
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: AspNetUsers
    ColumnName: CIN
    File: execMain.c
    Line: 2003
    Routine: ExecConstraints
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2025-03-23 23:32:03.096 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API) in 826.9597ms
2025-03-23 23:32:03.098 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-23 23:32:03.158 -04:00 [DBG] Connection id "0HNBAGGTPQAQD" completed keep alive response.
2025-03-23 23:32:03.271 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-23 23:32:03.325 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:32:03.341 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (16ms).
2025-03-23 23:32:03.344 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/register - 500 null application/json 1153.2504ms
2025-03-23 23:32:08.320 -04:00 [DBG] Connection id "0HNBAGGTPQAQD" received FIN.
2025-03-23 23:32:08.324 -04:00 [DBG] Connection id "0HNBAGGTPQAQD" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-23 23:32:08.330 -04:00 [DBG] Connection id "0HNBAGGTPQAQD" disconnecting.
2025-03-23 23:32:08.336 -04:00 [DBG] Connection id "0HNBAGGTPQAQD" stopped.
2025-03-23 23:35:29.855 -04:00 [DBG] Connection id "0HNBAGGTPQAQE" accepted.
2025-03-23 23:35:29.863 -04:00 [DBG] Connection id "0HNBAGGTPQAQE" started.
2025-03-23 23:35:29.883 -04:00 [DBG] Connection id "0HNBAGGTPQAQF" accepted.
2025-03-23 23:35:29.918 -04:00 [DBG] Connection id "0HNBAGGTPQAQF" started.
2025-03-23 23:35:29.918 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-03-23 23:35:29.968 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-03-23 23:35:29.991 -04:00 [DBG] Request did not match any endpoints
2025-03-23 23:35:30.123 -04:00 [DBG] Connection id "0HNBAGGTPQAQE" completed keep alive response.
2025-03-23 23:35:30.125 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 206.3661ms
2025-03-23 23:35:30.140 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-03-23 23:35:30.146 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-03-23 23:35:30.149 -04:00 [DBG] Request did not match any endpoints
2025-03-23 23:35:30.158 -04:00 [DBG] Connection id "0HNBAGGTPQAQE" completed keep alive response.
2025-03-23 23:35:30.167 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 26.6798ms
2025-03-23 23:35:30.369 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-23 23:35:30.400 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-23 23:35:30.401 -04:00 [DBG] Request did not match any endpoints
2025-03-23 23:35:30.472 -04:00 [DBG] Connection id "0HNBAGGTPQAQE" completed keep alive response.
2025-03-23 23:35:30.474 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 104.6791ms
2025-03-23 23:36:34.332 -04:00 [DBG] Connection id "0HNBAGGTPQAQF" received FIN.
2025-03-23 23:36:34.333 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/register - application/json 130
2025-03-23 23:36:34.335 -04:00 [DBG] Connection id "0HNBAGGTPQAQF" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-23 23:36:34.339 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/register'
2025-03-23 23:36:34.366 -04:00 [DBG] Connection id "0HNBAGGTPQAQF" disconnecting.
2025-03-23 23:36:34.368 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/register' is valid for the request path '/api/auth/register'
2025-03-23 23:36:34.370 -04:00 [DBG] Connection id "0HNBAGGTPQAQF" stopped.
2025-03-23 23:36:34.374 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-23 23:36:34.377 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-23 23:36:34.384 -04:00 [INF] No CORS policy found for the specified request.
2025-03-23 23:36:34.388 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-23 23:36:34.390 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-23 23:36:34.392 -04:00 [INF] Route matched with {action = "Register", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RegisterAsync(HotelBookingPlatform.Domain.Helpers.RegisterModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-23 23:36:34.400 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-23 23:36:34.402 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-23 23:36:34.405 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-23 23:36:34.408 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-23 23:36:34.410 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-23 23:36:34.415 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-23 23:36:34.438 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-23 23:36:34.440 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-23 23:36:34.442 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' using the name '' in request data ...
2025-03-23 23:36:34.448 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-23 23:36:34.451 -04:00 [DBG] Connection id "0HNBAGGTPQAQE", Request id "0HNBAGGTPQAQE:00000004": started reading request body.
2025-03-23 23:36:34.453 -04:00 [DBG] Connection id "0HNBAGGTPQAQE", Request id "0HNBAGGTPQAQE:00000004": done reading request body.
2025-03-23 23:36:34.455 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'
2025-03-23 23:36:34.457 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-23 23:36:34.459 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-23 23:36:34.466 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-23 23:36:34.468 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-23 23:36:34.488 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-23 23:36:34.493 -04:00 [DBG] Creating DbConnection.
2025-03-23 23:36:34.494 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-23 23:36:34.499 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:36:34.501 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:36:34.503 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:36:34.504 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-23 23:36:34.506 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-23 23:36:34.508 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."CIN", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."CIN", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:36:34.521 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."CIN", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."CIN", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:36:34.526 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:36:34.528 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-03-23 23:36:34.534 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:36:34.536 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-23 23:36:34.636 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:36:34.638 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:36:34.639 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:36:34.640 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-23 23:36:34.642 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-23 23:36:34.645 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."CIN", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."CIN", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:36:34.656 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."CIN", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."CIN", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:36:34.660 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:36:34.665 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-03-23 23:36:34.667 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:36:34.669 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-23 23:36:34.672 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:36:34.674 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-23 23:36:34.676 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-23 23:36:34.681 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-23 23:36:34.684 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:36:34.686 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:36:34.688 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:36:34.691 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-23 23:36:34.693 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-23 23:36:34.698 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "CIN", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17);
2025-03-23 23:36:34.705 -04:00 [ERR] Failed executing DbCommand (7ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "CIN", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17);
2025-03-23 23:36:34.710 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:36:34.714 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-23 23:36:34.719 -04:00 [ERR] An exception occurred in the database while saving changes for context type 'HotelBookingPlatform.Infrastructure.Data.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23502: null value in column "CIN" of relation "AspNetUsers" violates not-null constraint

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ERROR
    SqlState: 23502
    MessageText: null value in column "CIN" of relation "AspNetUsers" violates not-null constraint
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: AspNetUsers
    ColumnName: CIN
    File: execMain.c
    Line: 2003
    Routine: ExecConstraints
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23502: null value in column "CIN" of relation "AspNetUsers" violates not-null constraint

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ERROR
    SqlState: 23502
    MessageText: null value in column "CIN" of relation "AspNetUsers" violates not-null constraint
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: AspNetUsers
    ColumnName: CIN
    File: execMain.c
    Line: 2003
    Routine: ExecConstraints
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2025-03-23 23:36:34.751 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API) in 336.1443ms
2025-03-23 23:36:34.753 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-23 23:36:34.757 -04:00 [DBG] Connection id "0HNBAGGTPQAQE" completed keep alive response.
2025-03-23 23:36:34.760 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-23 23:36:34.804 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:36:34.806 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-23 23:36:34.809 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/register - 500 null application/json 476.1738ms
2025-03-23 23:36:38.698 -04:00 [DBG] Connection id "0HNBAGGTPQAQE" received FIN.
2025-03-23 23:36:38.705 -04:00 [DBG] Connection id "0HNBAGGTPQAQE" disconnecting.
2025-03-23 23:36:38.720 -04:00 [DBG] Connection id "0HNBAGGTPQAQE" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-23 23:36:38.738 -04:00 [DBG] Connection id "0HNBAGGTPQAQE" stopped.
2025-03-23 23:39:12.965 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-23 23:39:13.220 -04:00 [DBG] Hosting starting
2025-03-23 23:39:13.253 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-23 23:39:13.301 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-23 23:39:13.341 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-23 23:39:13.384 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-23 23:39:13.395 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-23 23:39:13.400 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-23 23:39:13.408 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-23 23:39:13.430 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-23 23:39:13.449 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-23 23:39:13.480 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-23 23:39:13.484 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-23 23:39:13.628 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-23 23:39:13.630 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-23 23:39:13.631 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-23 23:39:13.632 -04:00 [INF] Hosting environment: Development
2025-03-23 23:39:13.633 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-23 23:39:13.635 -04:00 [DBG] Hosting started
2025-03-23 23:40:45.203 -04:00 [DBG] Connection id "0HNBAGMKD4BSR" accepted.
2025-03-23 23:40:45.205 -04:00 [DBG] Connection id "0HNBAGMKD4BSR" started.
2025-03-23 23:40:45.217 -04:00 [DBG] Connection id "0HNBAGMKD4BSS" accepted.
2025-03-23 23:40:45.245 -04:00 [DBG] Connection id "0HNBAGMKD4BSS" started.
2025-03-23 23:40:45.314 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-03-23 23:40:45.321 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-23 23:40:45.375 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-03-23 23:40:45.378 -04:00 [DBG] Request did not match any endpoints
2025-03-23 23:40:45.584 -04:00 [DBG] Connection id "0HNBAGMKD4BSR" completed keep alive response.
2025-03-23 23:40:45.591 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 278.0887ms
2025-03-23 23:40:45.686 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-03-23 23:40:45.698 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-03-23 23:40:45.704 -04:00 [DBG] Request did not match any endpoints
2025-03-23 23:40:45.735 -04:00 [DBG] Connection id "0HNBAGMKD4BSR" completed keep alive response.
2025-03-23 23:40:45.738 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 52.1311ms
2025-03-23 23:40:45.979 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-23 23:40:45.984 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-23 23:40:45.985 -04:00 [DBG] Request did not match any endpoints
2025-03-23 23:40:46.432 -04:00 [DBG] Connection id "0HNBAGMKD4BSR" completed keep alive response.
2025-03-23 23:40:46.438 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 458.7829ms
2025-03-23 23:40:54.094 -04:00 [DBG] Connection id "0HNBAGMKD4BSR" received FIN.
2025-03-23 23:40:54.095 -04:00 [DBG] Connection id "0HNBAGMKD4BSS" received FIN.
2025-03-23 23:40:54.119 -04:00 [DBG] Connection id "0HNBAGMKD4BSR" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-23 23:40:54.132 -04:00 [DBG] Connection id "0HNBAGMKD4BSS" disconnecting.
2025-03-23 23:40:54.132 -04:00 [DBG] Connection id "0HNBAGMKD4BSR" disconnecting.
2025-03-23 23:40:54.154 -04:00 [DBG] Connection id "0HNBAGMKD4BSS" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-23 23:40:54.165 -04:00 [DBG] Connection id "0HNBAGMKD4BSR" stopped.
2025-03-23 23:40:54.245 -04:00 [DBG] Connection id "0HNBAGMKD4BSS" stopped.
2025-03-23 23:41:59.825 -04:00 [DBG] Connection id "0HNBAGMKD4BST" accepted.
2025-03-23 23:41:59.830 -04:00 [DBG] Connection id "0HNBAGMKD4BST" started.
2025-03-23 23:41:59.839 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/register - application/json 130
2025-03-23 23:41:59.869 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/register'
2025-03-23 23:41:59.882 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/register' is valid for the request path '/api/auth/register'
2025-03-23 23:41:59.887 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-23 23:41:59.892 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-23 23:41:59.900 -04:00 [INF] No CORS policy found for the specified request.
2025-03-23 23:41:59.903 -04:00 [WRN] Failed to determine the https port for redirect.
2025-03-23 23:41:59.957 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-23 23:41:59.964 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-23 23:42:00.005 -04:00 [INF] Route matched with {action = "Register", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RegisterAsync(HotelBookingPlatform.Domain.Helpers.RegisterModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-23 23:42:00.008 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-23 23:42:00.023 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-23 23:42:00.032 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-23 23:42:00.038 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-23 23:42:00.041 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-23 23:42:00.052 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-23 23:42:00.240 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-23 23:42:00.290 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-23 23:42:00.301 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-23 23:42:00.306 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' using the name '' in request data ...
2025-03-23 23:42:00.312 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-23 23:42:00.338 -04:00 [DBG] Connection id "0HNBAGMKD4BST", Request id "0HNBAGMKD4BST:00000001": started reading request body.
2025-03-23 23:42:00.341 -04:00 [DBG] Connection id "0HNBAGMKD4BST", Request id "0HNBAGMKD4BST:00000001": done reading request body.
2025-03-23 23:42:00.365 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'
2025-03-23 23:42:00.368 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-23 23:42:00.370 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-23 23:42:00.373 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-23 23:42:00.387 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-23 23:42:01.289 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-23 23:42:01.292 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-23 23:42:01.298 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-23 23:42:01.301 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-23 23:42:01.304 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-23 23:42:01.547 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-23 23:42:01.549 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-23 23:42:01.551 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-23 23:42:01.691 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-23 23:42:01.764 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-23 23:42:01.822 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-23 23:42:02.207 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-23 23:42:02.336 -04:00 [DBG] Creating DbConnection.
2025-03-23 23:42:02.400 -04:00 [DBG] Created DbConnection. (56ms).
2025-03-23 23:42:02.404 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:02.832 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:02.838 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:42:02.855 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-03-23 23:42:02.865 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (26ms).
2025-03-23 23:42:02.873 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:42:02.971 -04:00 [INF] Executed DbCommand (97ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:42:02.984 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:02.999 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 15ms reading results.
2025-03-23 23:42:03.006 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:03.014 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-23 23:42:03.206 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-03-23 23:42:03.209 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-23 23:42:03.239 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-23 23:42:03.280 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:03.284 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:03.287 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:42:03.289 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-23 23:42:03.291 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-23 23:42:03.297 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:42:03.322 -04:00 [INF] Executed DbCommand (25ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:42:03.330 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:03.333 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-23 23:42:03.336 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:03.339 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-23 23:42:03.475 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:42:03.482 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-23 23:42:03.486 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-23 23:42:03.511 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-23 23:42:03.581 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:03.583 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:03.586 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:42:03.587 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-23 23:42:03.590 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-23 23:42:03.594 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-03-23 23:42:03.652 -04:00 [INF] Executed DbCommand (58ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-03-23 23:42:03.679 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:03.682 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 16ms reading results.
2025-03-23 23:42:03.730 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:03.740 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-03-23 23:42:03.792 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:42:03.819 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-23 23:42:03.834 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-03-23 23:42:03.876 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-23 23:42:03.892 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:03.897 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:03.901 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:42:03.904 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-23 23:42:03.915 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (14ms).
2025-03-23 23:42:03.919 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-23 23:42:03.952 -04:00 [INF] Executed DbCommand (33ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-23 23:42:03.958 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:03.964 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-03-23 23:42:03.967 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:03.971 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-23 23:42:04.002 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.005 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.007 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:42:04.009 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-23 23:42:04.015 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-23 23:42:04.017 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-23 23:42:04.030 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-23 23:42:04.038 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.041 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-23 23:42:04.054 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.058 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-23 23:42:04.153 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:42:04.158 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-23 23:42:04.166 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-23 23:42:04.175 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-23 23:42:04.184 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.190 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.201 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:42:04.213 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (8ms).
2025-03-23 23:42:04.222 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (20ms).
2025-03-23 23:42:04.231 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (@p0, @p1, @p2, @p3);
2025-03-23 23:42:04.321 -04:00 [INF] Executed DbCommand (90ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (@p0, @p1, @p2, @p3);
2025-03-23 23:42:04.342 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.348 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-03-23 23:42:04.363 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.366 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-23 23:42:04.383 -04:00 [DBG] An entity of type 'IdentityRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:42:04.391 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-23 23:42:04.415 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-03-23 23:42:04.453 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-23 23:42:04.468 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.473 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.487 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:42:04.491 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-23 23:42:04.497 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-03-23 23:42:04.513 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-23 23:42:04.533 -04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-23 23:42:04.584 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.599 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 45ms reading results.
2025-03-23 23:42:04.602 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.604 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-23 23:42:04.656 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .FirstOrDefault(e => EF.Property<string>(e, "UserId") == __p_0 && EF.Property<string>(e, "RoleId") == __p_1)'
2025-03-23 23:42:04.683 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<string>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<string>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<string> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<string> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<string>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<string>.UserId, IdentityUserRole<string>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetString(0), 
                        (object)dataReader.GetString(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<string>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]: 
                            {
                                return 
                                {
                                    IdentityUserRole<string> instance;
                                    instance = new IdentityUserRole<string>();
                                    instance.<UserId>k__BackingField = dataReader.GetString(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetString(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityUserRole<string>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-23 23:42:04.733 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.773 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.781 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:42:04.783 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-23 23:42:04.785 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-23 23:42:04.788 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-03-23 23:42:04.801 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-03-23 23:42:04.805 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.808 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-23 23:42:04.815 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.818 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-23 23:42:04.825 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.833 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.835 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:42:04.837 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-23 23:42:04.839 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-23 23:42:04.841 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-23 23:42:04.853 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-23 23:42:04.859 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.863 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-03-23 23:42:04.867 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.869 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-23 23:42:04.894 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityUserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:42:04.900 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.903 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.907 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:42:04.909 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-23 23:42:04.916 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-23 23:42:04.918 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:42:04.932 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:42:04.950 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.952 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 15ms reading results.
2025-03-23 23:42:04.955 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:04.958 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-23 23:42:04.971 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:42:04.975 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-23 23:42:04.979 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-23 23:42:04.982 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-23 23:42:05.012 -04:00 [DBG] Executing 2 update commands as a batch.
2025-03-23 23:42:05.016 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.019 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.022 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-23 23:42:05.033 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-23 23:42:05.036 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:42:05.039 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-23 23:42:05.042 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-23 23:42:05.050 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-03-23 23:42:05.089 -04:00 [INF] Executed DbCommand (38ms) [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-03-23 23:42:05.101 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.103 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-23 23:42:05.112 -04:00 [DBG] Committing transaction.
2025-03-23 23:42:05.129 -04:00 [DBG] Committed transaction.
2025-03-23 23:42:05.133 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.136 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-23 23:42:05.141 -04:00 [DBG] Disposing transaction.
2025-03-23 23:42:05.145 -04:00 [DBG] An entity of type 'IdentityUserRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:42:05.149 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:42:05.152 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-03-23 23:42:05.170 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-03-23 23:42:05.189 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-23 23:42:05.206 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.208 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.221 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:42:05.224 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-23 23:42:05.229 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-23 23:42:05.236 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-23 23:42:05.255 -04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-23 23:42:05.274 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.282 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-03-23 23:42:05.285 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.289 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-23 23:42:05.313 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-03-23 23:42:05.349 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-23 23:42:05.354 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.359 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.365 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:42:05.367 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-23 23:42:05.369 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-23 23:42:05.373 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-23 23:42:05.391 -04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-23 23:42:05.401 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.403 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-23 23:42:05.406 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.409 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-23 23:42:05.425 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.431 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.434 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:42:05.436 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-23 23:42:05.438 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-23 23:42:05.440 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:42:05.453 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:42:05.458 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.462 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-03-23 23:42:05.470 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.474 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-23 23:42:05.482 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:42:05.486 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-23 23:42:05.488 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-23 23:42:05.499 -04:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LocalUser.RefreshTokens'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:42:05.521 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'RefreshToken.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:42:05.552 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:42:05.554 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-23 23:42:05.568 -04:00 [DBG] Executing 2 update commands as a batch.
2025-03-23 23:42:05.569 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.572 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.573 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-23 23:42:05.575 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-23 23:42:05.580 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:42:05.582 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-23 23:42:05.584 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-23 23:42:05.587 -04:00 [DBG] Executing DbCommand [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-03-23 23:42:05.607 -04:00 [INF] Executed DbCommand (21ms) [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-03-23 23:42:05.628 -04:00 [DBG] The foreign key property 'RefreshToken.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-23 23:42:05.637 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.639 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 23ms reading results.
2025-03-23 23:42:05.642 -04:00 [DBG] Committing transaction.
2025-03-23 23:42:05.652 -04:00 [DBG] Committed transaction.
2025-03-23 23:42:05.653 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.656 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-23 23:42:05.659 -04:00 [DBG] Disposing transaction.
2025-03-23 23:42:05.665 -04:00 [DBG] An entity of type 'RefreshToken' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:42:05.669 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:42:05.672 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-03-23 23:42:05.737 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-23 23:42:05.744 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-23 23:42:05.746 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-23 23:42:05.748 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-23 23:42:05.750 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-23 23:42:05.754 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-23 23:42:05.823 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API) in 5769.6311ms
2025-03-23 23:42:05.825 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-23 23:42:05.832 -04:00 [DBG] Connection id "0HNBAGMKD4BST" completed keep alive response.
2025-03-23 23:42:05.838 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-23 23:42:05.869 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:42:05.884 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (35ms).
2025-03-23 23:42:05.889 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/register - 200 null application/json; charset=utf-8 6050.2133ms
2025-03-23 23:42:14.189 -04:00 [DBG] Connection id "0HNBAGMKD4BST" received FIN.
2025-03-23 23:42:14.192 -04:00 [DBG] Connection id "0HNBAGMKD4BST" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-23 23:42:14.196 -04:00 [DBG] Connection id "0HNBAGMKD4BST" disconnecting.
2025-03-23 23:42:14.204 -04:00 [DBG] Connection id "0HNBAGMKD4BST" stopped.
2025-03-23 23:44:05.196 -04:00 [DBG] Connection id "0HNBAGMKD4BSU" accepted.
2025-03-23 23:44:05.199 -04:00 [DBG] Connection id "0HNBAGMKD4BSU" started.
2025-03-23 23:44:05.201 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 66
2025-03-23 23:44:05.258 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-23 23:44:05.261 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-23 23:44:05.273 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-23 23:44:05.276 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-23 23:44:05.277 -04:00 [INF] No CORS policy found for the specified request.
2025-03-23 23:44:05.280 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-23 23:44:05.284 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-23 23:44:05.296 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-23 23:44:05.303 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-23 23:44:05.309 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-23 23:44:05.311 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-23 23:44:05.314 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-23 23:44:05.320 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-23 23:44:05.324 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-23 23:44:05.331 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-23 23:44:05.338 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-23 23:44:05.340 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-23 23:44:05.343 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-23 23:44:05.347 -04:00 [DBG] Connection id "0HNBAGMKD4BSU", Request id "0HNBAGMKD4BSU:00000001": started reading request body.
2025-03-23 23:44:05.352 -04:00 [DBG] Connection id "0HNBAGMKD4BSU", Request id "0HNBAGMKD4BSU:00000001": done reading request body.
2025-03-23 23:44:05.356 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-23 23:44:05.357 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-23 23:44:05.360 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-23 23:44:05.362 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-23 23:44:05.370 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-23 23:44:05.470 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-23 23:44:05.474 -04:00 [DBG] Creating DbConnection.
2025-03-23 23:44:05.475 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-23 23:44:05.476 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:44:05.479 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:44:05.481 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:44:05.487 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-03-23 23:44:05.489 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-23 23:44:05.491 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:44:05.503 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-23 23:44:05.512 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:44:05.524 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-23 23:44:05.527 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:44:05.529 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 18ms reading results.
2025-03-23 23:44:05.531 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:44:05.537 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-23 23:44:05.710 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:44:05.712 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:44:05.713 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:44:05.715 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-23 23:44:05.717 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-23 23:44:05.720 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-23 23:44:05.725 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-23 23:44:05.729 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:44:05.730 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-03-23 23:44:05.734 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:44:05.736 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-23 23:44:05.740 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:44:05.742 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:44:05.746 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:44:05.752 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-03-23 23:44:05.753 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-23 23:44:05.755 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-23 23:44:05.761 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-23 23:44:05.769 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:44:05.770 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-03-23 23:44:05.773 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:44:05.775 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-23 23:44:05.780 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:44:05.786 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:44:05.788 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-23 23:44:05.790 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-23 23:44:05.792 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-23 23:44:05.794 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-23 23:44:05.806 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-23 23:44:05.810 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:44:05.812 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-23 23:44:05.815 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:44:05.822 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-23 23:44:05.826 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-23 23:44:05.830 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-23 23:44:05.836 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-23 23:44:05.837 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-23 23:44:05.839 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-23 23:44:05.841 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-23 23:44:05.844 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 519.9628ms
2025-03-23 23:44:05.847 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-23 23:44:05.852 -04:00 [DBG] Connection id "0HNBAGMKD4BSU" completed keep alive response.
2025-03-23 23:44:05.854 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-23 23:44:05.862 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-23 23:44:05.864 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-23 23:44:05.870 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 668.5036ms
2025-03-23 23:46:16.814 -04:00 [DBG] Connection id "0HNBAGMKD4BSU" disconnecting.
2025-03-23 23:46:16.821 -04:00 [DBG] Connection id "0HNBAGMKD4BSU" stopped.
2025-03-23 23:46:16.831 -04:00 [DBG] Connection id "0HNBAGMKD4BSU" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 02:07:50.418 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 02:07:51.061 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:07:51.161 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:07:51.463 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:07:51.545 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:07:51.658 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:07:51.668 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:07:51.870 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 02:07:51.875 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 02:07:51.879 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 02:07:51.885 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 02:07:51.891 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 02:07:52.116 -04:00 [WRN] The foreign key property 'Booking.GuestId1' was created in shadow state because a conflicting property with the simple name 'GuestId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-03-24 02:07:52.124 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:07:52.127 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:07:52.132 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:07:52.287 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 02:07:53.484 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 02:08:52.200 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 02:08:53.339 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:08:53.412 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:08:53.557 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:08:53.601 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:08:53.689 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:08:53.695 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:08:53.805 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 02:08:53.809 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 02:08:53.822 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 02:08:53.835 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 02:08:53.847 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 02:08:54.008 -04:00 [WRN] The foreign key property 'Booking.GuestId1' was created in shadow state because a conflicting property with the simple name 'GuestId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-03-24 02:08:54.015 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:08:54.017 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:08:54.026 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:08:54.148 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 02:08:54.189 -04:00 [DBG] Creating DbConnection.
2025-03-24 02:08:54.242 -04:00 [DBG] Created DbConnection. (51ms).
2025-03-24 02:08:54.254 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:08:54.545 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:08:54.555 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 02:08:54.568 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (10ms).
2025-03-24 02:08:54.572 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (20ms).
2025-03-24 02:08:54.586 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:08:54.632 -04:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:08:54.679 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:08:54.690 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 49ms reading results.
2025-03-24 02:08:54.695 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:08:54.708 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (13ms).
2025-03-24 02:08:54.912 -04:00 [DBG] Migrating using database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:08:54.920 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:08:54.930 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:08:55.007 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:08:55.010 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:08:55.020 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-03-24 02:08:55.025 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:08:55.028 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:08:55.098 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:08:55.100 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:08:55.102 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 02:08:55.105 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-24 02:08:55.125 -04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-24 02:08:55.135 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-24 02:08:55.141 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-24 02:08:55.149 -04:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-03-24 02:08:55.152 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:08:55.154 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-24 02:08:55.157 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-24 02:08:55.158 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-24 02:08:55.172 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-24 02:08:55.175 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 02:08:55.177 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 02:08:55.179 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 02:08:55.182 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:08:55.187 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:08:55.191 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:08:55.193 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 02:08:55.207 -04:00 [INF] Applying migration '20250324060753_LinkBookingToGuestAndStaff'.
2025-03-24 02:08:55.278 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:08:55.280 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-24 02:08:55.282 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-24 02:08:55.285 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "AspNetUsers" DROP COLUMN "CIN";
2025-03-24 02:08:55.326 -04:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "AspNetUsers" DROP COLUMN "CIN";
2025-03-24 02:08:55.330 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:08:55.332 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:08:55.334 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 02:08:55.335 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "CreatedById" text NOT NULL DEFAULT '';
2025-03-24 02:08:55.383 -04:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "CreatedById" text NOT NULL DEFAULT '';
2025-03-24 02:08:55.386 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:08:55.387 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:08:55.389 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 02:08:55.391 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "GuestId" uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000';
2025-03-24 02:08:55.400 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "GuestId" uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000';
2025-03-24 02:08:55.404 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:08:55.405 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:08:55.407 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 02:08:55.408 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "GuestId1" uuid;
2025-03-24 02:08:55.418 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "GuestId1" uuid;
2025-03-24 02:08:55.423 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:08:55.425 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:08:55.427 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-24 02:08:55.431 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Guest" (
    "Id" uuid NOT NULL,
    "FirstName" character varying(50) NOT NULL,
    "LastName" character varying(50) NOT NULL,
    "CIN" text NOT NULL,
    "Email" text NOT NULL,
    CONSTRAINT "PK_Guest" PRIMARY KEY ("Id")
);
2025-03-24 02:08:55.491 -04:00 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Guest" (
    "Id" uuid NOT NULL,
    "FirstName" character varying(50) NOT NULL,
    "LastName" character varying(50) NOT NULL,
    "CIN" text NOT NULL,
    "Email" text NOT NULL,
    CONSTRAINT "PK_Guest" PRIMARY KEY ("Id")
);
2025-03-24 02:08:55.496 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:08:55.498 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:08:55.500 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-24 02:08:55.502 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_CreatedById" ON "Bookings" ("CreatedById");
2025-03-24 02:08:55.532 -04:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_CreatedById" ON "Bookings" ("CreatedById");
2025-03-24 02:08:55.536 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:08:55.538 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-24 02:08:55.540 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-24 02:08:55.542 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_GuestId" ON "Bookings" ("GuestId");
2025-03-24 02:08:55.555 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_GuestId" ON "Bookings" ("GuestId");
2025-03-24 02:08:55.558 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:08:55.560 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:08:55.563 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-24 02:08:55.565 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_GuestId1" ON "Bookings" ("GuestId1");
2025-03-24 02:08:55.582 -04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_GuestId1" ON "Bookings" ("GuestId1");
2025-03-24 02:08:55.589 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:08:55.592 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-24 02:08:55.596 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (6ms).
2025-03-24 02:08:55.599 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD CONSTRAINT "FK_Bookings_AspNetUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT;
2025-03-24 02:08:55.648 -04:00 [ERR] Failed executing DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD CONSTRAINT "FK_Bookings_AspNetUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT;
2025-03-24 02:08:55.657 -04:00 [DBG] Disposing transaction.
2025-03-24 02:08:55.661 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:08:55.664 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-24 02:08:55.669 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 02:08:55.672 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:08:55.675 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 02:12:20.545 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 02:12:20.896 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:12:20.957 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:12:21.092 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:12:21.134 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:12:21.223 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:12:21.231 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:12:21.328 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 02:12:21.331 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 02:12:21.333 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 02:12:21.337 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 02:12:21.342 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 02:12:21.663 -04:00 [WRN] The foreign key property 'Booking.GuestId1' was created in shadow state because a conflicting property with the simple name 'GuestId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-03-24 02:12:21.680 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:12:21.685 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:12:21.689 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:12:21.882 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 02:12:22.498 -04:00 [DBG] Creating DbConnection.
2025-03-24 02:12:22.534 -04:00 [DBG] Created DbConnection. (34ms).
2025-03-24 02:12:22.545 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:12:22.802 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:12:22.812 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 02:12:22.828 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (10ms).
2025-03-24 02:12:22.833 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (25ms).
2025-03-24 02:12:22.844 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:12:22.894 -04:00 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:12:22.936 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:12:22.948 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 46ms reading results.
2025-03-24 02:12:22.952 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:12:22.969 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (16ms).
2025-03-24 02:12:23.073 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 02:12:23.078 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:12:23.083 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-24 02:17:21.009 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 02:17:21.435 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:17:21.560 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:17:21.959 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:17:22.069 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:17:22.207 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:17:22.211 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:17:22.301 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 02:17:22.305 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 02:17:22.307 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 02:17:22.311 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 02:17:22.315 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 02:17:22.460 -04:00 [WRN] The foreign key property 'Booking.GuestId1' was created in shadow state because a conflicting property with the simple name 'GuestId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-03-24 02:17:22.475 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:17:22.482 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:17:22.486 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:17:22.601 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 02:17:23.383 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 02:18:25.983 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 02:18:26.381 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:18:26.446 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:18:26.595 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:18:26.657 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:18:26.731 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:18:26.740 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:18:26.836 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 02:18:26.839 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 02:18:26.842 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 02:18:26.844 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 02:18:26.847 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 02:18:27.007 -04:00 [WRN] The foreign key property 'Booking.GuestId1' was created in shadow state because a conflicting property with the simple name 'GuestId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-03-24 02:18:27.016 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:18:27.020 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:18:27.024 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:18:27.150 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 02:18:27.204 -04:00 [DBG] Creating DbConnection.
2025-03-24 02:18:27.246 -04:00 [DBG] Created DbConnection. (40ms).
2025-03-24 02:18:27.257 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:18:27.405 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:18:27.415 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 02:18:27.425 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (9ms).
2025-03-24 02:18:27.431 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (18ms).
2025-03-24 02:18:27.442 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:18:27.484 -04:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:18:27.537 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:18:27.548 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 54ms reading results.
2025-03-24 02:18:27.556 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:18:27.565 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-24 02:18:27.864 -04:00 [DBG] Migrating using database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:18:27.874 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:18:27.897 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:18:28.022 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:18:28.025 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:18:28.033 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-24 02:18:28.037 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:18:28.041 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:18:28.125 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:18:28.127 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-24 02:18:28.130 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-24 02:18:28.133 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-24 02:18:28.149 -04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-24 02:18:28.160 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-24 02:18:28.165 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-24 02:18:28.170 -04:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-03-24 02:18:28.172 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:18:28.174 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:18:28.177 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-24 02:18:28.181 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-24 02:18:28.192 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-24 02:18:28.196 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 02:18:28.198 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-24 02:18:28.202 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-24 02:18:28.207 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:18:28.213 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:18:28.217 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:18:28.220 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-24 02:18:28.235 -04:00 [INF] Applying migration '20250324061723_LinkBookingToGuestAndStaff'.
2025-03-24 02:18:28.314 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:18:28.317 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-24 02:18:28.320 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (5ms).
2025-03-24 02:18:28.324 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "AspNetUsers" DROP COLUMN "CIN";
2025-03-24 02:18:28.339 -04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "AspNetUsers" DROP COLUMN "CIN";
2025-03-24 02:18:28.342 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:18:28.344 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:18:28.347 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 02:18:28.353 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "CreatedById" text;
2025-03-24 02:18:28.362 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "CreatedById" text;
2025-03-24 02:18:28.366 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:18:28.367 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:18:28.370 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 02:18:28.372 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "GuestId" uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000';
2025-03-24 02:18:28.385 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "GuestId" uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000';
2025-03-24 02:18:28.389 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:18:28.391 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:18:28.393 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 02:18:28.395 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "GuestId1" uuid;
2025-03-24 02:18:28.402 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "GuestId1" uuid;
2025-03-24 02:18:28.405 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:18:28.407 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:18:28.409 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 02:18:28.411 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Guest" (
    "Id" uuid NOT NULL,
    "FirstName" character varying(50) NOT NULL,
    "LastName" character varying(50) NOT NULL,
    "CIN" text NOT NULL,
    "Email" text NOT NULL,
    CONSTRAINT "PK_Guest" PRIMARY KEY ("Id")
);
2025-03-24 02:18:28.597 -04:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Guest" (
    "Id" uuid NOT NULL,
    "FirstName" character varying(50) NOT NULL,
    "LastName" character varying(50) NOT NULL,
    "CIN" text NOT NULL,
    "Email" text NOT NULL,
    CONSTRAINT "PK_Guest" PRIMARY KEY ("Id")
);
2025-03-24 02:18:28.601 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:18:28.603 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:18:28.605 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-24 02:18:28.607 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_CreatedById" ON "Bookings" ("CreatedById");
2025-03-24 02:18:28.624 -04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_CreatedById" ON "Bookings" ("CreatedById");
2025-03-24 02:18:28.630 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:18:28.632 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:18:28.634 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 02:18:28.637 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_GuestId" ON "Bookings" ("GuestId");
2025-03-24 02:18:28.658 -04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_GuestId" ON "Bookings" ("GuestId");
2025-03-24 02:18:28.661 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:18:28.665 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 02:18:28.668 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (6ms).
2025-03-24 02:18:28.671 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_GuestId1" ON "Bookings" ("GuestId1");
2025-03-24 02:18:28.711 -04:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_GuestId1" ON "Bookings" ("GuestId1");
2025-03-24 02:18:28.714 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:18:28.716 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:18:28.720 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (5ms).
2025-03-24 02:18:28.723 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD CONSTRAINT "FK_Bookings_AspNetUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT;
2025-03-24 02:18:28.741 -04:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD CONSTRAINT "FK_Bookings_AspNetUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT;
2025-03-24 02:18:28.745 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:18:28.746 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:18:28.748 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 02:18:28.750 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD CONSTRAINT "FK_Bookings_Guest_GuestId" FOREIGN KEY ("GuestId") REFERENCES "Guest" ("Id") ON DELETE RESTRICT;
2025-03-24 02:18:28.770 -04:00 [ERR] Failed executing DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD CONSTRAINT "FK_Bookings_Guest_GuestId" FOREIGN KEY ("GuestId") REFERENCES "Guest" ("Id") ON DELETE RESTRICT;
2025-03-24 02:18:28.780 -04:00 [DBG] Disposing transaction.
2025-03-24 02:18:28.784 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:18:28.786 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 02:18:28.791 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 02:18:28.796 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:18:28.799 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-24 02:22:37.154 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 02:22:37.572 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:22:37.632 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:22:37.778 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:22:37.900 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:22:37.996 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:22:38.006 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:22:38.089 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 02:22:38.092 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 02:22:38.094 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 02:22:38.098 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 02:22:38.102 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 02:22:38.233 -04:00 [WRN] The foreign key property 'Booking.GuestId1' was created in shadow state because a conflicting property with the simple name 'GuestId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-03-24 02:22:38.242 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:22:38.249 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:22:38.254 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:22:38.397 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 02:22:39.005 -04:00 [DBG] Creating DbConnection.
2025-03-24 02:22:39.042 -04:00 [DBG] Created DbConnection. (33ms).
2025-03-24 02:22:39.051 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:22:39.227 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:22:39.236 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 02:22:39.250 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (10ms).
2025-03-24 02:22:39.255 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (22ms).
2025-03-24 02:22:39.265 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:22:39.306 -04:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:22:39.356 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:22:39.370 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 52ms reading results.
2025-03-24 02:22:39.375 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:22:39.386 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (10ms).
2025-03-24 02:22:39.489 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 02:22:39.495 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:22:39.506 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-03-24 02:22:59.069 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 02:22:59.571 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:22:59.707 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:22:59.923 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:22:59.977 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:23:00.067 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:23:00.078 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:23:00.186 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 02:23:00.189 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 02:23:00.192 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 02:23:00.198 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 02:23:00.205 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 02:23:00.369 -04:00 [WRN] The foreign key property 'Booking.GuestId1' was created in shadow state because a conflicting property with the simple name 'GuestId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-03-24 02:23:00.378 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:23:00.381 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:23:00.386 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:23:00.513 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 02:23:01.234 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 02:23:27.509 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 02:23:27.895 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:23:27.955 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:23:28.171 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:23:28.267 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:23:28.357 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:23:28.361 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:23:28.453 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 02:23:28.458 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 02:23:28.462 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 02:23:28.466 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 02:23:28.470 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 02:23:28.616 -04:00 [WRN] The foreign key property 'Booking.GuestId1' was created in shadow state because a conflicting property with the simple name 'GuestId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-03-24 02:23:28.625 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:23:28.630 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:23:28.633 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:23:28.763 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 02:23:29.148 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 02:24:01.374 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 02:24:01.734 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:01.798 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:01.974 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:02.070 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:02.247 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:02.267 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:02.474 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 02:24:02.481 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 02:24:02.504 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 02:24:02.506 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 02:24:02.510 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 02:24:02.674 -04:00 [WRN] The foreign key property 'Booking.GuestId1' was created in shadow state because a conflicting property with the simple name 'GuestId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-03-24 02:24:02.687 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:24:02.691 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:24:02.695 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:24:02.823 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 02:24:03.411 -04:00 [DBG] Creating DbConnection.
2025-03-24 02:24:03.450 -04:00 [DBG] Created DbConnection. (36ms).
2025-03-24 02:24:03.459 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:24:03.608 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:24:03.622 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 02:24:03.633 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (12ms).
2025-03-24 02:24:03.639 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (21ms).
2025-03-24 02:24:03.652 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:24:03.709 -04:00 [INF] Executed DbCommand (53ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:24:03.760 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:24:03.774 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 57ms reading results.
2025-03-24 02:24:03.779 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:24:03.791 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (10ms).
2025-03-24 02:24:03.909 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 02:24:03.914 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:24:03.921 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-24 02:24:14.712 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 02:24:15.561 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:15.632 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:15.811 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:15.857 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:15.955 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:15.961 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:16.068 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 02:24:16.072 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 02:24:16.077 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 02:24:16.084 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 02:24:16.087 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 02:24:16.238 -04:00 [WRN] The foreign key property 'Booking.GuestId1' was created in shadow state because a conflicting property with the simple name 'GuestId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-03-24 02:24:16.251 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:24:16.256 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:24:16.259 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:24:16.379 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 02:24:16.911 -04:00 [DBG] Creating DbConnection.
2025-03-24 02:24:16.945 -04:00 [DBG] Created DbConnection. (31ms).
2025-03-24 02:24:16.955 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:24:17.078 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:24:17.088 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 02:24:17.102 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (10ms).
2025-03-24 02:24:17.106 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (20ms).
2025-03-24 02:24:17.116 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:24:17.235 -04:00 [INF] Executed DbCommand (85ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:24:17.313 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:24:17.325 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 66ms reading results.
2025-03-24 02:24:17.330 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:24:17.339 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-24 02:24:17.348 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 02:24:17.355 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:24:17.358 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-24 02:24:42.163 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 02:24:43.100 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:43.199 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:43.505 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:43.597 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:43.697 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:43.713 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:24:44.004 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 02:24:44.007 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 02:24:44.010 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 02:24:44.013 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 02:24:44.016 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 02:24:44.164 -04:00 [WRN] The foreign key property 'Booking.GuestId1' was created in shadow state because a conflicting property with the simple name 'GuestId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-03-24 02:24:44.171 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:24:44.174 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:24:44.177 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:24:44.308 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 02:24:45.073 -04:00 [DBG] Creating DbConnection.
2025-03-24 02:24:45.118 -04:00 [DBG] Created DbConnection. (41ms).
2025-03-24 02:24:45.124 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:24:45.242 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:24:45.252 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 02:24:45.261 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (9ms).
2025-03-24 02:24:45.266 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (17ms).
2025-03-24 02:24:45.275 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:24:45.313 -04:00 [INF] Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:24:45.408 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:24:45.431 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 95ms reading results.
2025-03-24 02:24:45.444 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:24:45.456 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-24 02:24:45.461 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 02:24:45.467 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:24:45.477 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (10ms).
2025-03-24 02:38:11.659 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 02:38:12.184 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:38:12.249 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:38:12.425 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:38:12.479 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:38:12.563 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:38:12.568 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:38:12.592 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:38:12.716 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 02:38:12.720 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 02:38:12.728 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 02:38:12.735 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 02:38:12.741 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 02:38:13.097 -04:00 [WRN] The foreign key property 'Booking.GuestId1' was created in shadow state because a conflicting property with the simple name 'GuestId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-03-24 02:38:13.111 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:38:13.114 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:38:13.119 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:38:13.343 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 02:38:14.296 -04:00 [DBG] Creating DbConnection.
2025-03-24 02:38:14.356 -04:00 [DBG] Created DbConnection. (59ms).
2025-03-24 02:38:14.364 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:38:14.577 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:38:14.585 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 02:38:14.597 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (10ms).
2025-03-24 02:38:14.600 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (18ms).
2025-03-24 02:38:14.613 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:38:14.673 -04:00 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:38:14.731 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:38:14.746 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 60ms reading results.
2025-03-24 02:38:14.751 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:38:14.761 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (10ms).
2025-03-24 02:38:14.767 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 02:38:14.773 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:38:14.777 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-24 02:42:42.296 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 02:42:42.787 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:42:42.856 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:42:43.121 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:42:43.231 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:42:43.530 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:42:43.614 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:42:43.644 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:42:43.784 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 02:42:43.787 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 02:42:43.790 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 02:42:43.794 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 02:42:43.799 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 02:42:43.994 -04:00 [WRN] The foreign key property 'Booking.GuestId1' was created in shadow state because a conflicting property with the simple name 'GuestId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-03-24 02:42:44.003 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:42:44.022 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:42:44.025 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:42:44.187 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 02:42:45.179 -04:00 [DBG] Creating DbConnection.
2025-03-24 02:42:45.238 -04:00 [DBG] Created DbConnection. (56ms).
2025-03-24 02:42:45.246 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:42:45.448 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:42:45.456 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 02:42:45.468 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (9ms).
2025-03-24 02:42:45.473 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (19ms).
2025-03-24 02:42:45.483 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:42:45.546 -04:00 [INF] Executed DbCommand (62ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:42:45.598 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:42:45.612 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 55ms reading results.
2025-03-24 02:42:45.619 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:42:45.633 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (13ms).
2025-03-24 02:42:45.639 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 02:42:45.645 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:42:45.649 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-24 02:44:20.491 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 02:44:20.986 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:44:21.127 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:44:21.271 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:44:21.359 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:44:21.417 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:44:21.426 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:44:21.442 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:44:21.606 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 02:44:21.609 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 02:44:21.611 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 02:44:21.614 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 02:44:21.617 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 02:44:21.766 -04:00 [WRN] The foreign key property 'Booking.GuestId1' was created in shadow state because a conflicting property with the simple name 'GuestId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-03-24 02:44:21.776 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:44:21.780 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:44:21.784 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:44:21.987 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 02:44:22.773 -04:00 [DBG] Creating DbConnection.
2025-03-24 02:44:22.856 -04:00 [DBG] Created DbConnection. (76ms).
2025-03-24 02:44:22.881 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:44:23.105 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:44:23.129 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 02:44:23.146 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (21ms).
2025-03-24 02:44:23.152 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (36ms).
2025-03-24 02:44:23.171 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:44:23.250 -04:00 [INF] Executed DbCommand (76ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:44:23.411 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:44:23.441 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 160ms reading results.
2025-03-24 02:44:23.449 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:44:23.467 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (17ms).
2025-03-24 02:44:23.491 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 02:44:23.549 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:44:23.555 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (20ms).
2025-03-24 02:45:53.185 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 02:45:53.739 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:45:53.807 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:45:53.947 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:45:54.016 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:45:54.085 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:45:54.091 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:45:54.114 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:45:54.254 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 02:45:54.257 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 02:45:54.259 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 02:45:54.262 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 02:45:54.266 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 02:45:54.425 -04:00 [WRN] The foreign key property 'Booking.GuestId1' was created in shadow state because a conflicting property with the simple name 'GuestId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-03-24 02:45:54.434 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:45:54.439 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:45:54.442 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:45:54.577 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 02:45:55.400 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 02:46:25.581 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 02:46:26.135 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:46:26.206 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:46:26.399 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:46:26.509 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:46:26.599 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:46:26.604 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:46:26.626 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 02:46:26.762 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 02:46:26.766 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 02:46:26.769 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 02:46:26.772 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 02:46:26.775 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 02:46:27.014 -04:00 [WRN] The foreign key property 'Booking.GuestId1' was created in shadow state because a conflicting property with the simple name 'GuestId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-03-24 02:46:27.021 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:46:27.024 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:46:27.027 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 02:46:27.204 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 02:46:27.246 -04:00 [DBG] Creating DbConnection.
2025-03-24 02:46:27.298 -04:00 [DBG] Created DbConnection. (48ms).
2025-03-24 02:46:27.306 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:46:27.577 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:46:27.587 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 02:46:27.600 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (10ms).
2025-03-24 02:46:27.605 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (22ms).
2025-03-24 02:46:27.621 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:46:27.692 -04:00 [INF] Executed DbCommand (73ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:46:27.747 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:46:27.759 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 58ms reading results.
2025-03-24 02:46:27.767 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:46:27.775 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-24 02:46:28.018 -04:00 [DBG] Migrating using database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:46:28.023 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:46:28.028 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:46:28.082 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:46:28.084 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:46:28.090 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-24 02:46:28.095 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:46:28.097 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:46:28.166 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:46:28.167 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:46:28.169 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 02:46:28.172 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-24 02:46:28.193 -04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-24 02:46:28.203 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-24 02:46:28.209 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-24 02:46:28.214 -04:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-03-24 02:46:28.216 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:46:28.217 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:46:28.220 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-24 02:46:28.223 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-24 02:46:28.234 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-24 02:46:28.238 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 02:46:28.240 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 02:46:28.242 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 02:46:28.245 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:46:28.250 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 02:46:28.254 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:46:28.256 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 02:46:28.268 -04:00 [INF] Applying migration '20250324064555_LinkBookingToGuestAndStaff'.
2025-03-24 02:46:28.326 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:46:28.328 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-24 02:46:28.331 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-24 02:46:28.333 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "AspNetUsers" DROP COLUMN "CIN";
2025-03-24 02:46:28.355 -04:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "AspNetUsers" DROP COLUMN "CIN";
2025-03-24 02:46:28.359 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:46:28.361 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-24 02:46:28.363 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-24 02:46:28.365 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "CreatedById" text NOT NULL DEFAULT '';
2025-03-24 02:46:28.381 -04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "CreatedById" text NOT NULL DEFAULT '';
2025-03-24 02:46:28.384 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:46:28.386 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:46:28.388 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-24 02:46:28.390 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "GuestId" uuid;
2025-03-24 02:46:28.396 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "GuestId" uuid;
2025-03-24 02:46:28.401 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:46:28.402 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:46:28.404 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 02:46:28.406 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "GuestId1" uuid;
2025-03-24 02:46:28.412 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "GuestId1" uuid;
2025-03-24 02:46:28.415 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:46:28.417 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:46:28.419 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 02:46:28.421 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Guest" (
    "Id" uuid NOT NULL,
    "FirstName" character varying(50) NOT NULL,
    "LastName" character varying(50) NOT NULL,
    "CIN" text NOT NULL,
    "Email" text NOT NULL,
    CONSTRAINT "PK_Guest" PRIMARY KEY ("Id")
);
2025-03-24 02:46:28.465 -04:00 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Guest" (
    "Id" uuid NOT NULL,
    "FirstName" character varying(50) NOT NULL,
    "LastName" character varying(50) NOT NULL,
    "CIN" text NOT NULL,
    "Email" text NOT NULL,
    CONSTRAINT "PK_Guest" PRIMARY KEY ("Id")
);
2025-03-24 02:46:28.469 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:46:28.471 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:46:28.473 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 02:46:28.475 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_CreatedById" ON "Bookings" ("CreatedById");
2025-03-24 02:46:28.488 -04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_CreatedById" ON "Bookings" ("CreatedById");
2025-03-24 02:46:28.492 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:46:28.494 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:46:28.496 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-24 02:46:28.498 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_GuestId" ON "Bookings" ("GuestId");
2025-03-24 02:46:28.514 -04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_GuestId" ON "Bookings" ("GuestId");
2025-03-24 02:46:28.517 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:46:28.519 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-24 02:46:28.521 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 02:46:28.522 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_GuestId1" ON "Bookings" ("GuestId1");
2025-03-24 02:46:28.700 -04:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_GuestId1" ON "Bookings" ("GuestId1");
2025-03-24 02:46:28.704 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 02:46:28.705 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 02:46:28.708 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 02:46:28.710 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD CONSTRAINT "FK_Bookings_AspNetUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT;
2025-03-24 02:46:28.802 -04:00 [ERR] Failed executing DbCommand (91ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD CONSTRAINT "FK_Bookings_AspNetUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT;
2025-03-24 02:46:28.813 -04:00 [DBG] Disposing transaction.
2025-03-24 02:46:28.817 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:46:28.820 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 02:46:28.825 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 02:46:28.831 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 02:46:28.834 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-24 03:06:36.249 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 03:06:36.997 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:06:37.223 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:06:37.531 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:06:37.605 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:06:37.713 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:06:37.718 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:06:37.731 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:06:37.882 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 03:06:37.886 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 03:06:37.889 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 03:06:37.893 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 03:06:37.897 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 03:06:38.142 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:06:38.146 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:06:38.149 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:06:38.328 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 03:06:39.240 -04:00 [DBG] Creating DbConnection.
2025-03-24 03:06:39.292 -04:00 [DBG] Created DbConnection. (49ms).
2025-03-24 03:06:39.299 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:06:39.522 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:06:39.535 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:06:39.595 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (37ms).
2025-03-24 03:06:39.599 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (69ms).
2025-03-24 03:06:39.619 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:06:39.699 -04:00 [INF] Executed DbCommand (77ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:06:39.778 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:06:39.798 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 86ms reading results.
2025-03-24 03:06:39.806 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:06:39.819 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (13ms).
2025-03-24 03:06:40.035 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 03:06:40.041 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:06:40.044 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-24 03:09:35.697 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 03:09:36.293 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:09:36.370 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:09:36.580 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:09:36.631 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:09:36.701 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:09:36.707 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:09:36.730 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:09:36.842 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 03:09:36.846 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 03:09:36.848 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 03:09:36.852 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 03:09:36.856 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 03:09:37.032 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:09:37.034 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:09:37.038 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:09:37.194 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 03:09:38.098 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 03:10:49.844 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 03:10:50.531 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:10:50.601 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:10:50.749 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:10:50.808 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:10:50.871 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:10:50.879 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:10:50.888 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:10:50.990 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 03:10:50.994 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 03:10:50.997 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 03:10:50.999 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 03:10:51.001 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 03:10:51.152 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:10:51.154 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:10:51.156 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:10:51.281 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 03:10:51.320 -04:00 [DBG] Creating DbConnection.
2025-03-24 03:10:51.359 -04:00 [DBG] Created DbConnection. (36ms).
2025-03-24 03:10:51.369 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:10:51.540 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:10:51.550 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:10:51.563 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (9ms).
2025-03-24 03:10:51.568 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (20ms).
2025-03-24 03:10:51.580 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:10:51.634 -04:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:10:51.681 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:10:51.698 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 49ms reading results.
2025-03-24 03:10:51.706 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:10:51.721 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-03-24 03:10:51.913 -04:00 [DBG] Migrating using database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:10:51.947 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:10:51.954 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:10:52.005 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:10:52.009 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:10:52.016 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-24 03:10:52.021 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:10:52.023 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:10:52.097 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:10:52.099 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:10:52.101 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 03:10:52.103 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-24 03:10:52.122 -04:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-24 03:10:52.132 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-24 03:10:52.138 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-24 03:10:52.142 -04:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-03-24 03:10:52.144 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:10:52.146 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:10:52.148 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 03:10:52.150 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-24 03:10:52.166 -04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-24 03:10:52.169 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:10:52.171 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 03:10:52.173 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 03:10:52.176 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:10:52.190 -04:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:10:52.193 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:10:52.196 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 03:10:52.210 -04:00 [INF] Applying migration '20250324070937_LinkBookingToGuestAndStaff'.
2025-03-24 03:10:52.290 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:10:52.293 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-24 03:10:52.295 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-24 03:10:52.297 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "AspNetUsers" DROP COLUMN "CIN";
2025-03-24 03:10:52.314 -04:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "AspNetUsers" DROP COLUMN "CIN";
2025-03-24 03:10:52.318 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:10:52.319 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:10:52.322 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 03:10:52.324 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "CreatedById" text NOT NULL DEFAULT '';
2025-03-24 03:10:52.332 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "CreatedById" text NOT NULL DEFAULT '';
2025-03-24 03:10:52.335 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:10:52.337 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:10:52.339 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 03:10:52.341 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "GuestId" uuid;
2025-03-24 03:10:52.346 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "GuestId" uuid;
2025-03-24 03:10:52.349 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:10:52.351 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:10:52.353 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 03:10:52.355 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Guests" (
    "Id" uuid NOT NULL,
    "FirstName" character varying(50) NOT NULL,
    "LastName" character varying(50) NOT NULL,
    "CIN" text NOT NULL,
    "Email" text NOT NULL,
    CONSTRAINT "PK_Guests" PRIMARY KEY ("Id")
);
2025-03-24 03:10:52.392 -04:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Guests" (
    "Id" uuid NOT NULL,
    "FirstName" character varying(50) NOT NULL,
    "LastName" character varying(50) NOT NULL,
    "CIN" text NOT NULL,
    "Email" text NOT NULL,
    CONSTRAINT "PK_Guests" PRIMARY KEY ("Id")
);
2025-03-24 03:10:52.396 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:10:52.398 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:10:52.400 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 03:10:52.403 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_CreatedById" ON "Bookings" ("CreatedById");
2025-03-24 03:10:52.418 -04:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_CreatedById" ON "Bookings" ("CreatedById");
2025-03-24 03:10:52.422 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:10:52.423 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:10:52.426 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 03:10:52.428 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_GuestId" ON "Bookings" ("GuestId");
2025-03-24 03:10:52.446 -04:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_GuestId" ON "Bookings" ("GuestId");
2025-03-24 03:10:52.449 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:10:52.450 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:10:52.452 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 03:10:52.454 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD CONSTRAINT "FK_Bookings_AspNetUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT;
2025-03-24 03:10:52.481 -04:00 [ERR] Failed executing DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD CONSTRAINT "FK_Bookings_AspNetUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT;
2025-03-24 03:10:52.491 -04:00 [DBG] Disposing transaction.
2025-03-24 03:10:52.499 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:10:52.501 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 03:10:52.506 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 03:10:52.511 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:10:52.516 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-24 03:11:43.878 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 03:11:44.220 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:11:44.284 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:11:44.436 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:11:44.477 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:11:44.546 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:11:44.553 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:11:44.575 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:11:44.660 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 03:11:44.666 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 03:11:44.671 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 03:11:44.674 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 03:11:44.678 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 03:11:44.824 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:11:44.828 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:11:44.831 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:11:44.949 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 03:11:44.968 -04:00 [DBG] Creating DbConnection.
2025-03-24 03:11:45.011 -04:00 [DBG] Created DbConnection. (45ms).
2025-03-24 03:11:45.021 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 03:11:45.030 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:11:45.038 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-24 03:16:51.832 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 03:16:52.181 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:16:52.253 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:16:52.522 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:16:52.568 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:16:52.664 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:16:52.668 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:16:52.681 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:16:52.774 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 03:16:52.777 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 03:16:52.780 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 03:16:52.783 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 03:16:52.787 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 03:16:52.948 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:16:52.952 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:16:52.956 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:16:53.077 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 03:16:53.145 -04:00 [DBG] Creating DbConnection.
2025-03-24 03:16:53.187 -04:00 [DBG] Created DbConnection. (39ms).
2025-03-24 03:16:53.197 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:16:53.326 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:16:53.337 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:16:53.350 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (10ms).
2025-03-24 03:16:53.359 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (25ms).
2025-03-24 03:16:53.377 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:16:53.427 -04:00 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:16:53.470 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:16:53.484 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 48ms reading results.
2025-03-24 03:16:53.489 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:16:53.498 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-24 03:16:53.727 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:16:53.739 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:16:53.780 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:16:53.818 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:16:53.838 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:16:53.844 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:16:53.852 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:16:53.898 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 03:16:53.902 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 03:16:53.905 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 03:16:53.908 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 03:16:53.912 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 03:16:53.957 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:16:53.961 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:16:53.963 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:16:54.071 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 03:16:54.075 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:16:54.078 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 03:25:20.773 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 03:25:21.304 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:25:21.398 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:25:21.549 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:25:21.590 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:25:21.673 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:25:21.681 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:25:21.693 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:25:21.801 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 03:25:21.804 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 03:25:21.807 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 03:25:21.811 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 03:25:21.822 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 03:25:21.981 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:25:21.983 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:25:21.985 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:25:22.119 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 03:25:22.173 -04:00 [DBG] Creating DbConnection.
2025-03-24 03:25:22.222 -04:00 [DBG] Created DbConnection. (47ms).
2025-03-24 03:25:22.230 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:25:22.398 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:25:22.408 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:25:22.424 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (10ms).
2025-03-24 03:25:22.430 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (24ms).
2025-03-24 03:25:22.444 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:25:22.487 -04:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:25:22.628 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:25:22.649 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 147ms reading results.
2025-03-24 03:25:22.659 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:25:22.677 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (18ms).
2025-03-24 03:25:22.879 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:25:22.889 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:25:22.938 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:25:22.987 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:25:23.004 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:25:23.008 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:25:23.017 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:25:23.063 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 03:25:23.070 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 03:25:23.073 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 03:25:23.076 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 03:25:23.079 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 03:25:23.126 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:25:23.129 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:25:23.131 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:25:23.234 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 03:25:23.238 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:25:23.241 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 03:26:12.542 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 03:26:12.898 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:12.961 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:13.135 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:13.219 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:13.289 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:13.293 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:13.306 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:13.395 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 03:26:13.400 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 03:26:13.402 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 03:26:13.406 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 03:26:13.411 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 03:26:13.558 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:26:13.563 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:26:13.567 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:26:13.703 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 03:26:13.746 -04:00 [DBG] Creating DbConnection.
2025-03-24 03:26:13.785 -04:00 [DBG] Created DbConnection. (34ms).
2025-03-24 03:26:13.793 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:26:13.942 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:26:13.950 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:26:13.962 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (9ms).
2025-03-24 03:26:13.965 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (18ms).
2025-03-24 03:26:13.976 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:26:14.023 -04:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:26:14.076 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:26:14.092 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 59ms reading results.
2025-03-24 03:26:14.098 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:26:14.114 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (15ms).
2025-03-24 03:26:14.323 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:14.333 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:14.396 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:14.433 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:14.462 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:14.468 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:14.480 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:14.558 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 03:26:14.561 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 03:26:14.564 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 03:26:14.567 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 03:26:14.570 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 03:26:14.647 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:26:14.650 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:26:14.659 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:26:14.808 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 03:26:14.811 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:26:14.816 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-24 03:26:35.008 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 03:26:35.361 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:35.446 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:35.841 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:35.907 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:35.970 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:35.974 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:35.985 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:26:36.074 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 03:26:36.081 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 03:26:36.084 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 03:26:36.087 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 03:26:36.089 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 03:26:36.232 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:26:36.236 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:26:36.240 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:26:36.356 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 03:26:37.509 -04:00 [DBG] Creating DbConnection.
2025-03-24 03:26:37.547 -04:00 [DBG] Created DbConnection. (36ms).
2025-03-24 03:26:37.556 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:26:37.702 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:26:37.712 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:26:37.726 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-03-24 03:26:37.730 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (20ms).
2025-03-24 03:26:37.759 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:26:37.853 -04:00 [INF] Executed DbCommand (98ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:26:37.900 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:26:37.916 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 52ms reading results.
2025-03-24 03:26:37.922 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:26:37.930 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-24 03:26:38.045 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 03:26:38.051 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:26:38.054 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-24 03:28:29.521 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 03:28:29.891 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:28:29.957 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:28:30.214 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:28:30.264 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:28:30.345 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:28:30.350 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:28:30.371 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:28:30.519 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 03:28:30.523 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 03:28:30.527 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 03:28:30.533 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 03:28:30.537 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 03:28:30.870 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:28:30.872 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:28:30.875 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:28:31.026 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 03:28:31.808 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 03:29:00.063 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 03:29:00.402 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:29:00.488 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:29:00.820 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:29:00.893 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:29:00.950 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:29:00.954 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:29:00.970 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:29:01.057 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 03:29:01.063 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 03:29:01.066 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 03:29:01.071 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 03:29:01.075 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 03:29:01.242 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:29:01.246 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:29:01.248 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:29:01.445 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 03:29:01.498 -04:00 [DBG] Creating DbConnection.
2025-03-24 03:29:01.545 -04:00 [DBG] Created DbConnection. (42ms).
2025-03-24 03:29:01.552 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:29:01.729 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:29:01.737 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:29:01.750 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (10ms).
2025-03-24 03:29:01.754 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (19ms).
2025-03-24 03:29:01.767 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:29:01.825 -04:00 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:29:01.886 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:29:01.899 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 66ms reading results.
2025-03-24 03:29:01.905 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:29:01.921 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (15ms).
2025-03-24 03:29:02.141 -04:00 [DBG] Migrating using database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:29:02.147 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:29:02.154 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:29:02.212 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:29:02.214 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:29:02.220 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-24 03:29:02.224 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:29:02.227 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:29:02.392 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:29:02.394 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (2ms).
2025-03-24 03:29:02.396 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-03-24 03:29:02.399 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-24 03:29:02.419 -04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-03-24 03:29:02.435 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-24 03:29:02.445 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-24 03:29:02.452 -04:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-03-24 03:29:02.455 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:29:02.457 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:29:02.462 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (6ms).
2025-03-24 03:29:02.464 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-24 03:29:02.471 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-03-24 03:29:02.475 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:29:02.477 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 03:29:02.479 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 03:29:02.481 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:29:02.489 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-03-24 03:29:02.493 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:29:02.496 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 03:29:02.514 -04:00 [INF] Applying migration '20250324072831_LinkBookingToGuestAndStaff'.
2025-03-24 03:29:02.570 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:29:02.572 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:29:02.574 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 03:29:02.576 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "AspNetUsers" DROP COLUMN "CIN";
2025-03-24 03:29:02.592 -04:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "AspNetUsers" DROP COLUMN "CIN";
2025-03-24 03:29:02.597 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:29:02.599 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:29:02.601 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 03:29:02.603 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "CreatedById" text;
2025-03-24 03:29:02.610 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "CreatedById" text;
2025-03-24 03:29:02.614 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:29:02.616 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:29:02.618 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 03:29:02.620 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "GuestId" uuid;
2025-03-24 03:29:02.625 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD "GuestId" uuid;
2025-03-24 03:29:02.629 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:29:02.631 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:29:02.633 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 03:29:02.635 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Guests" (
    "Id" uuid NOT NULL,
    "FirstName" character varying(50) NOT NULL,
    "LastName" character varying(50) NOT NULL,
    "CIN" text NOT NULL,
    "Email" text NOT NULL,
    CONSTRAINT "PK_Guests" PRIMARY KEY ("Id")
);
2025-03-24 03:29:02.784 -04:00 [INF] Executed DbCommand (149ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Guests" (
    "Id" uuid NOT NULL,
    "FirstName" character varying(50) NOT NULL,
    "LastName" character varying(50) NOT NULL,
    "CIN" text NOT NULL,
    "Email" text NOT NULL,
    CONSTRAINT "PK_Guests" PRIMARY KEY ("Id")
);
2025-03-24 03:29:02.788 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:29:02.790 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:29:02.792 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 03:29:02.794 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_CreatedById" ON "Bookings" ("CreatedById");
2025-03-24 03:29:02.838 -04:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_CreatedById" ON "Bookings" ("CreatedById");
2025-03-24 03:29:02.842 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:29:02.843 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:29:02.845 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 03:29:02.848 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_GuestId" ON "Bookings" ("GuestId");
2025-03-24 03:29:02.881 -04:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Bookings_GuestId" ON "Bookings" ("GuestId");
2025-03-24 03:29:02.884 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:29:02.886 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:29:02.888 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 03:29:02.890 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD CONSTRAINT "FK_Bookings_AspNetUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT;
2025-03-24 03:29:02.934 -04:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD CONSTRAINT "FK_Bookings_AspNetUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT;
2025-03-24 03:29:02.937 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:29:02.939 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:29:02.941 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 03:29:02.943 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD CONSTRAINT "FK_Bookings_Guests_GuestId" FOREIGN KEY ("GuestId") REFERENCES "Guests" ("Id") ON DELETE RESTRICT;
2025-03-24 03:29:02.974 -04:00 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Bookings" ADD CONSTRAINT "FK_Bookings_Guests_GuestId" FOREIGN KEY ("GuestId") REFERENCES "Guests" ("Id") ON DELETE RESTRICT;
2025-03-24 03:29:02.979 -04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-03-24 03:29:02.980 -04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-03-24 03:29:02.982 -04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-03-24 03:29:02.984 -04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250324072831_LinkBookingToGuestAndStaff', '9.0.2');
2025-03-24 03:29:03.027 -04:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250324072831_LinkBookingToGuestAndStaff', '9.0.2');
2025-03-24 03:29:03.034 -04:00 [DBG] Committing transaction.
2025-03-24 03:29:03.045 -04:00 [DBG] Committed transaction.
2025-03-24 03:29:03.048 -04:00 [DBG] Disposing transaction.
2025-03-24 03:29:03.050 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:29:03.053 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 03:29:03.060 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 03:29:03.064 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:29:03.067 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 03:36:04.300 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-24 03:36:04.511 -04:00 [DBG] Hosting starting
2025-03-24 03:36:04.538 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-24 03:36:04.556 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-24 03:36:04.587 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-24 03:36:04.609 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-24 03:36:04.617 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-24 03:36:04.626 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-24 03:36:04.631 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-24 03:36:04.641 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-24 03:36:04.652 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-24 03:36:04.659 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-24 03:36:04.663 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-24 03:36:04.769 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-24 03:36:04.771 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-24 03:36:04.773 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-24 03:36:04.774 -04:00 [INF] Hosting environment: Development
2025-03-24 03:36:04.776 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-24 03:36:04.778 -04:00 [DBG] Hosting started
2025-03-24 03:36:14.344 -04:00 [DBG] Connection id "0HNBAKQ774C56" accepted.
2025-03-24 03:36:14.347 -04:00 [DBG] Connection id "0HNBAKQ774C56" started.
2025-03-24 03:36:14.386 -04:00 [DBG] Connection id "0HNBAKQ774C57" accepted.
2025-03-24 03:36:14.389 -04:00 [DBG] Connection id "0HNBAKQ774C57" started.
2025-03-24 03:36:14.463 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-03-24 03:36:14.471 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-24 03:36:14.515 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-03-24 03:36:14.517 -04:00 [DBG] Request did not match any endpoints
2025-03-24 03:36:14.641 -04:00 [DBG] Connection id "0HNBAKQ774C56" completed keep alive response.
2025-03-24 03:36:14.645 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 187.9263ms
2025-03-24 03:36:14.687 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-03-24 03:36:14.701 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-03-24 03:36:14.704 -04:00 [DBG] Request did not match any endpoints
2025-03-24 03:36:14.708 -04:00 [DBG] Connection id "0HNBAKQ774C56" completed keep alive response.
2025-03-24 03:36:14.716 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 29.7448ms
2025-03-24 03:36:14.950 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-24 03:36:14.972 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-24 03:36:14.981 -04:00 [DBG] Request did not match any endpoints
2025-03-24 03:36:15.279 -04:00 [DBG] Connection id "0HNBAKQ774C56" completed keep alive response.
2025-03-24 03:36:15.282 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 331.5552ms
2025-03-24 03:36:16.362 -04:00 [DBG] Connection id "0HNBAKQ774C56" received FIN.
2025-03-24 03:36:16.362 -04:00 [DBG] Connection id "0HNBAKQ774C57" received FIN.
2025-03-24 03:36:16.366 -04:00 [DBG] Connection id "0HNBAKQ774C56" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 03:36:16.366 -04:00 [DBG] Connection id "0HNBAKQ774C57" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 03:36:16.370 -04:00 [DBG] Connection id "0HNBAKQ774C56" disconnecting.
2025-03-24 03:36:16.371 -04:00 [DBG] Connection id "0HNBAKQ774C57" disconnecting.
2025-03-24 03:36:16.374 -04:00 [DBG] Connection id "0HNBAKQ774C56" stopped.
2025-03-24 03:36:16.374 -04:00 [DBG] Connection id "0HNBAKQ774C57" stopped.
2025-03-24 03:37:17.966 -04:00 [DBG] Connection id "0HNBAKQ774C58" accepted.
2025-03-24 03:37:17.969 -04:00 [DBG] Connection id "0HNBAKQ774C58" started.
2025-03-24 03:37:17.971 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/register - application/json 131
2025-03-24 03:37:17.994 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/register'
2025-03-24 03:37:18.005 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/register' is valid for the request path '/api/auth/register'
2025-03-24 03:37:18.008 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-24 03:37:18.012 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 03:37:18.018 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 03:37:18.021 -04:00 [WRN] Failed to determine the https port for redirect.
2025-03-24 03:37:18.080 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-24 03:37:18.085 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-24 03:37:18.128 -04:00 [INF] Route matched with {action = "Register", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RegisterAsync(HotelBookingPlatform.Domain.Helpers.RegisterModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-24 03:37:18.137 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 03:37:18.139 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 03:37:18.143 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-24 03:37:18.152 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 03:37:18.156 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 03:37:18.162 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-24 03:37:18.285 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 03:37:18.325 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-24 03:37:18.336 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-24 03:37:18.340 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' using the name '' in request data ...
2025-03-24 03:37:18.344 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 03:37:18.365 -04:00 [DBG] Connection id "0HNBAKQ774C58", Request id "0HNBAKQ774C58:00000001": started reading request body.
2025-03-24 03:37:18.368 -04:00 [DBG] Connection id "0HNBAKQ774C58", Request id "0HNBAKQ774C58:00000001": done reading request body.
2025-03-24 03:37:18.386 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'
2025-03-24 03:37:18.389 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-24 03:37:18.391 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-24 03:37:18.393 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-24 03:37:18.409 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-24 03:37:18.752 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:37:18.805 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:37:18.952 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:37:19.008 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:37:19.067 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:37:19.072 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:37:19.086 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 03:37:19.178 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 03:37:19.183 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 03:37:19.186 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 03:37:19.188 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 03:37:19.191 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 03:37:19.337 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:37:19.339 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:37:19.341 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 03:37:19.462 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 03:37:19.554 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-24 03:37:19.608 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-24 03:37:19.968 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 03:37:20.044 -04:00 [DBG] Creating DbConnection.
2025-03-24 03:37:20.078 -04:00 [DBG] Created DbConnection. (33ms).
2025-03-24 03:37:20.085 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:20.344 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:20.353 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:37:20.378 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (17ms).
2025-03-24 03:37:20.406 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (52ms).
2025-03-24 03:37:20.425 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 03:37:20.527 -04:00 [INF] Executed DbCommand (111ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 03:37:20.545 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:20.563 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 25ms reading results.
2025-03-24 03:37:20.577 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:20.594 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (15ms).
2025-03-24 03:37:20.736 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-03-24 03:37:20.739 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-24 03:37:20.771 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 03:37:20.859 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:20.866 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:20.876 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:37:20.878 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-24 03:37:20.884 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-24 03:37:20.889 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 03:37:20.909 -04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 03:37:20.926 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:20.929 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 03:37:20.938 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:20.945 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-24 03:37:21.301 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 03:37:21.311 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-24 03:37:21.327 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-24 03:37:21.390 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-24 03:37:21.492 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.494 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.498 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:37:21.500 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 03:37:21.502 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 03:37:21.505 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-03-24 03:37:21.525 -04:00 [INF] Executed DbCommand (21ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-03-24 03:37:21.535 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.537 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-03-24 03:37:21.544 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.548 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-24 03:37:21.560 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 03:37:21.569 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-24 03:37:21.575 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-03-24 03:37:21.593 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 03:37:21.604 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.610 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.615 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:37:21.616 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 03:37:21.619 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 03:37:21.621 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-24 03:37:21.636 -04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-24 03:37:21.640 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.643 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 03:37:21.649 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.652 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 03:37:21.666 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.669 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.671 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:37:21.672 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 03:37:21.674 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 03:37:21.676 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-24 03:37:21.687 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-24 03:37:21.691 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.694 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 03:37:21.699 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.701 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 03:37:21.726 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 03:37:21.733 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-24 03:37:21.735 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-24 03:37:21.740 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-24 03:37:21.744 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.749 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.751 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:37:21.753 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 03:37:21.755 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 03:37:21.757 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (@p0, @p1, @p2, @p3);
2025-03-24 03:37:21.772 -04:00 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (@p0, @p1, @p2, @p3);
2025-03-24 03:37:21.775 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.777 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 03:37:21.784 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.786 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 03:37:21.789 -04:00 [DBG] An entity of type 'IdentityRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 03:37:21.792 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-24 03:37:21.803 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-03-24 03:37:21.810 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 03:37:21.823 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.826 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.828 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:37:21.832 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-24 03:37:21.835 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-03-24 03:37:21.837 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-24 03:37:21.842 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-24 03:37:21.855 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.857 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-03-24 03:37:21.860 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:21.865 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-24 03:37:21.886 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .FirstOrDefault(e => EF.Property<string>(e, "UserId") == __p_0 && EF.Property<string>(e, "RoleId") == __p_1)'
2025-03-24 03:37:21.911 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<string>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<string>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<string> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<string> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<string>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<string>.UserId, IdentityUserRole<string>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetString(0), 
                        (object)dataReader.GetString(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<string>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]: 
                            {
                                return 
                                {
                                    IdentityUserRole<string> instance;
                                    instance = new IdentityUserRole<string>();
                                    instance.<UserId>k__BackingField = dataReader.GetString(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetString(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityUserRole<string>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 03:37:22.003 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.018 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.041 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:37:22.043 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 03:37:22.045 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 03:37:22.067 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-03-24 03:37:22.075 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-03-24 03:37:22.080 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.085 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-03-24 03:37:22.088 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.090 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 03:37:22.099 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.101 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.103 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:37:22.128 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (25ms).
2025-03-24 03:37:22.133 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (30ms).
2025-03-24 03:37:22.135 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-24 03:37:22.140 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-24 03:37:22.144 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.148 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-24 03:37:22.151 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.152 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-24 03:37:22.173 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityUserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 03:37:22.178 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.181 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.184 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:37:22.185 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 03:37:22.187 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 03:37:22.191 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 03:37:22.200 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 03:37:22.215 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.217 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 12ms reading results.
2025-03-24 03:37:22.219 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.221 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 03:37:22.232 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 03:37:22.235 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-24 03:37:22.236 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-24 03:37:22.239 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-24 03:37:22.257 -04:00 [DBG] Executing 2 update commands as a batch.
2025-03-24 03:37:22.261 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.265 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.273 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-24 03:37:22.278 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-24 03:37:22.283 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:37:22.286 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-24 03:37:22.289 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-24 03:37:22.295 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-03-24 03:37:22.319 -04:00 [INF] Executed DbCommand (24ms) [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-03-24 03:37:22.324 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.326 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 03:37:22.333 -04:00 [DBG] Committing transaction.
2025-03-24 03:37:22.344 -04:00 [DBG] Committed transaction.
2025-03-24 03:37:22.352 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.355 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 03:37:22.359 -04:00 [DBG] Disposing transaction.
2025-03-24 03:37:22.361 -04:00 [DBG] An entity of type 'IdentityUserRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 03:37:22.368 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 03:37:22.371 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-03-24 03:37:22.388 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-03-24 03:37:22.410 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-24 03:37:22.434 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.440 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.444 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:37:22.455 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (10ms).
2025-03-24 03:37:22.476 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (31ms).
2025-03-24 03:37:22.483 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-24 03:37:22.501 -04:00 [INF] Executed DbCommand (18ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-24 03:37:22.507 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.510 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-03-24 03:37:22.519 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.521 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 03:37:22.542 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-03-24 03:37:22.576 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-24 03:37:22.592 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.594 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.600 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:37:22.602 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 03:37:22.605 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 03:37:22.608 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 03:37:22.620 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 03:37:22.627 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.633 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-03-24 03:37:22.636 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.638 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 03:37:22.653 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.655 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.658 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:37:22.660 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-24 03:37:22.667 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-03-24 03:37:22.670 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 03:37:22.678 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 03:37:22.687 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.690 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 03:37:22.693 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.695 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 03:37:22.702 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 03:37:22.706 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-24 03:37:22.708 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-24 03:37:22.720 -04:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LocalUser.RefreshTokens'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 03:37:22.753 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'RefreshToken.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 03:37:22.794 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 03:37:22.803 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-24 03:37:22.822 -04:00 [DBG] Executing 2 update commands as a batch.
2025-03-24 03:37:22.825 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.828 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.842 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-24 03:37:22.894 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-24 03:37:22.903 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 03:37:22.906 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-24 03:37:22.908 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-24 03:37:22.911 -04:00 [DBG] Executing DbCommand [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-03-24 03:37:22.934 -04:00 [INF] Executed DbCommand (23ms) [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-03-24 03:37:22.960 -04:00 [DBG] The foreign key property 'RefreshToken.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-24 03:37:22.973 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:22.976 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 37ms reading results.
2025-03-24 03:37:22.985 -04:00 [DBG] Committing transaction.
2025-03-24 03:37:22.991 -04:00 [DBG] Committed transaction.
2025-03-24 03:37:22.994 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:23.000 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-24 03:37:23.005 -04:00 [DBG] Disposing transaction.
2025-03-24 03:37:23.007 -04:00 [DBG] An entity of type 'RefreshToken' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 03:37:23.012 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 03:37:23.020 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-03-24 03:37:23.078 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 03:37:23.087 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 03:37:23.089 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-24 03:37:23.090 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-24 03:37:23.094 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-24 03:37:23.102 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-24 03:37:23.158 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API) in 4994.7523ms
2025-03-24 03:37:23.161 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-24 03:37:23.167 -04:00 [DBG] Connection id "0HNBAKQ774C58" completed keep alive response.
2025-03-24 03:37:23.173 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 03:37:23.182 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 03:37:23.190 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-24 03:37:23.197 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/register - 200 null application/json; charset=utf-8 5225.6958ms
2025-03-24 03:37:31.439 -04:00 [DBG] Connection id "0HNBAKQ774C58" received FIN.
2025-03-24 03:37:31.445 -04:00 [DBG] Connection id "0HNBAKQ774C58" disconnecting.
2025-03-24 03:37:31.455 -04:00 [DBG] Connection id "0HNBAKQ774C58" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 03:37:31.466 -04:00 [DBG] Connection id "0HNBAKQ774C58" stopped.
2025-03-24 07:50:22.755 -04:00 [DBG] Connection id "0HNBAKQ774C59" accepted.
2025-03-24 07:50:22.765 -04:00 [DBG] Connection id "0HNBAKQ774C59" started.
2025-03-24 07:50:22.793 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 66
2025-03-24 07:50:22.814 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-24 07:50:22.817 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-24 07:50:22.829 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 07:50:22.840 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 07:50:22.849 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 07:50:22.864 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-24 07:50:22.867 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 07:50:22.908 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-24 07:50:22.911 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 07:50:22.913 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 07:50:22.915 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-24 07:50:22.918 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 07:50:22.924 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 07:50:22.927 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-24 07:50:22.957 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-24 07:50:22.963 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-24 07:50:22.966 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-24 07:50:22.969 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 07:50:22.992 -04:00 [DBG] Connection id "0HNBAKQ774C59", Request id "0HNBAKQ774C59:00000001": started reading request body.
2025-03-24 07:50:22.994 -04:00 [DBG] Connection id "0HNBAKQ774C59", Request id "0HNBAKQ774C59:00000001": done reading request body.
2025-03-24 07:50:23.000 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-24 07:50:23.002 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 07:50:23.008 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 07:50:23.011 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-24 07:50:23.019 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 07:50:23.171 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 07:50:23.178 -04:00 [DBG] Creating DbConnection.
2025-03-24 07:50:23.181 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-24 07:50:23.182 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:50:23.260 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:50:23.262 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 07:50:23.263 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 07:50:23.266 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 07:50:23.268 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 07:50:23.308 -04:00 [INF] Executed DbCommand (40ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 07:50:23.328 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 07:50:23.349 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 07:50:23.352 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:50:23.356 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 41ms reading results.
2025-03-24 07:50:23.359 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:50:23.361 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 07:50:23.473 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:50:23.475 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:50:23.477 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 07:50:23.478 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 07:50:23.479 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-03-24 07:50:23.481 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-24 07:50:23.491 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-24 07:50:23.496 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:50:23.498 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 07:50:23.500 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:50:23.506 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-24 07:50:23.514 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:50:23.516 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:50:23.522 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 07:50:23.525 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-24 07:50:23.529 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-03-24 07:50:23.531 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 07:50:23.542 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 07:50:23.545 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:50:23.549 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-24 07:50:23.552 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:50:23.556 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-24 07:50:23.560 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:50:23.562 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:50:23.564 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 07:50:23.566 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 07:50:23.567 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 07:50:23.574 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 07:50:23.578 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 07:50:23.582 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:50:23.584 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 07:50:23.591 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:50:23.593 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 07:50:23.604 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 07:50:23.610 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 07:50:23.611 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-24 07:50:23.612 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-24 07:50:23.613 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-24 07:50:23.616 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-24 07:50:23.619 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 692.1843ms
2025-03-24 07:50:23.626 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 07:50:23.628 -04:00 [DBG] Connection id "0HNBAKQ774C59" completed keep alive response.
2025-03-24 07:50:23.630 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 07:50:23.633 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:50:23.636 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 07:50:23.643 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 856.8777ms
2025-03-24 07:51:30.226 -04:00 [DBG] Connection id "0HNBAKQ774C59" received FIN.
2025-03-24 07:51:30.229 -04:00 [DBG] Connection id "0HNBAKQ774C59" disconnecting.
2025-03-24 07:51:30.232 -04:00 [DBG] Connection id "0HNBAKQ774C59" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 07:51:30.235 -04:00 [DBG] Connection id "0HNBAKQ774C59" stopped.
2025-03-24 07:52:05.476 -04:00 [DBG] Connection id "0HNBAKQ774C5A" accepted.
2025-03-24 07:52:05.478 -04:00 [DBG] Connection id "0HNBAKQ774C5A" started.
2025-03-24 07:52:05.480 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/RoomClass/1/rooms - null null
2025-03-24 07:52:05.551 -04:00 [DBG] 1 candidate(s) found for the request path '/api/RoomClass/1/rooms'
2025-03-24 07:52:05.554 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.GetRoomsByRoomClassId (HotelBookingPlatform.API)' with route pattern 'api/RoomClass/{roomClassId}/rooms' is valid for the request path '/api/RoomClass/1/rooms'
2025-03-24 07:52:05.563 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.GetRoomsByRoomClassId (HotelBookingPlatform.API)'
2025-03-24 07:52:05.569 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 07:52:05.684 -04:00 [DBG] Successfully validated the token.
2025-03-24 07:52:05.688 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 07:52:05.691 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.GetRoomsByRoomClassId (HotelBookingPlatform.API)'
2025-03-24 07:52:05.705 -04:00 [INF] Route matched with {action = "GetRoomsByRoomClassId", controller = "RoomClass"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRoomsByRoomClassId(Int32) on controller HotelBookingPlatform.API.Controllers.RoomClassController (HotelBookingPlatform.API).
2025-03-24 07:52:05.713 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 07:52:05.715 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 07:52:05.717 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-24 07:52:05.721 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 07:52:05.724 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 07:52:05.729 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.RoomClassController (HotelBookingPlatform.API)
2025-03-24 07:52:05.978 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.RoomClassController (HotelBookingPlatform.API)
2025-03-24 07:52:05.981 -04:00 [DBG] Attempting to bind parameter 'roomClassId' of type 'System.Int32' ...
2025-03-24 07:52:05.983 -04:00 [DBG] Attempting to bind parameter 'roomClassId' of type 'System.Int32' using the name 'roomClassId' in request data ...
2025-03-24 07:52:05.988 -04:00 [DBG] Done attempting to bind parameter 'roomClassId' of type 'System.Int32'.
2025-03-24 07:52:05.990 -04:00 [DBG] Done attempting to bind parameter 'roomClassId' of type 'System.Int32'.
2025-03-24 07:52:05.994 -04:00 [DBG] Attempting to validate the bound parameter 'roomClassId' of type 'System.Int32' ...
2025-03-24 07:52:05.998 -04:00 [DBG] Done attempting to validate the bound parameter 'roomClassId' of type 'System.Int32'.
2025-03-24 07:52:06.047 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 07:52:06.130 -04:00 [DBG] Compiling query expression: 
'DbSet<RoomClass>()
    .Include(rc => rc.Rooms)
    .FirstOrDefault(rc => rc.RoomClassID == __id_0)'
2025-03-24 07:52:06.204 -04:00 [DBG] Including navigation: 'RoomClass.Rooms'.
2025-03-24 07:52:06.295 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<RoomClass>(
    asyncEnumerable: SingleQueryingEnumerable.Create<RoomClass>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 1], [Property: RoomClass.Description (string) MaxLength(500), 2], [Property: RoomClass.HotelId (int) Required FK Index, 3], [Property: RoomClass.Name (string) Required, 4], [Property: RoomClass.RoomType (RoomType) Required, 5] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Room.AdultsCapacity (int) Required, 7], [Property: Room.ChildrenCapacity (int) Required, 8], [Property: Room.CreatedAtUtc (DateTime) Required, 9], [Property: Room.Number (string) Required MaxLength(50), 10], [Property: Room.PricePerNight (decimal) Required, 11], [Property: Room.RoomClassID (int) Required FK Index, 12] }
                3 -> 6
            SELECT r1.RoomClassID, r1.CreatedAtUtc, r1.Description, r1.HotelId, r1.Name, r1.RoomType, r0.RoomID, r0.AdultsCapacity, r0.ChildrenCapacity, r0.CreatedAtUtc, r0.Number, r0.PricePerNight, r0.RoomClassID
            FROM 
            (
                SELECT TOP(1) r.RoomClassID, r.CreatedAtUtc, r.Description, r.HotelId, r.Name, r.RoomType
                FROM RoomClasses AS r
                WHERE r.RoomClassID == @__id_0
            ) AS r1
            LEFT JOIN Rooms AS r0 ON r1.RoomClassID == r0.RoomClassID
            ORDER BY r1.RoomClassID ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 1], [Property: RoomClass.Description (string) MaxLength(500), 2], [Property: RoomClass.HotelId (int) Required FK Index, 3], [Property: RoomClass.Name (string) Required, 4], [Property: RoomClass.RoomType (RoomType) Required, 5] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Room.AdultsCapacity (int) Required, 7], [Property: Room.ChildrenCapacity (int) Required, 8], [Property: Room.CreatedAtUtc (DateTime) Required, 9], [Property: Room.Number (string) Required MaxLength(50), 10], [Property: Room.PricePerNight (decimal) Required, 11], [Property: Room.RoomClassID (int) Required FK Index, 12] }
                3 -> 6
            SELECT r1.RoomClassID, r1.CreatedAtUtc, r1.Description, r1.HotelId, r1.Name, r1.RoomType, r0.RoomID, r0.AdultsCapacity, r0.ChildrenCapacity, r0.CreatedAtUtc, r0.Number, r0.PricePerNight, r0.RoomClassID
            FROM 
            (
                SELECT TOP(1) r.RoomClassID, r.CreatedAtUtc, r.Description, r.HotelId, r.Name, r.RoomType
                FROM RoomClasses AS r
                WHERE r.RoomClassID == @__id_0
            ) AS r1
            LEFT JOIN Rooms AS r0 ON r1.RoomClassID == r0.RoomClassID
            ORDER BY r1.RoomClassID ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                RoomClass entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    RoomClass instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(RoomClass);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: RoomClass.RoomClassID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (RoomClass)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]: 
                                {
                                    return 
                                    {
                                        RoomClass instance;
                                        instance = new RoomClass();
                                        instance.<RoomClassID>k__BackingField = dataReader.GetInt32(0);
                                        instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(1);
                                        instance.<Description>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<HotelId>k__BackingField = dataReader.GetInt32(3);
                                        instance.<Name>k__BackingField = dataReader.GetString(4);
                                        instance.<RoomType>k__BackingField = Invoke(((EnumToNumberConverter<RoomType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: RoomClass.RoomType (RoomType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("RoomType")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(RoomClass)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<RoomClass, RoomClass>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (RoomClass)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: RoomClass.Rooms (ICollection<Room>) Collection ToDependent Room Inverse: RoomClass | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<RoomClass, ICollection<Room>, Room> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<RoomClass, Room>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(int?) : (int?)dataReader.GetInt32(6) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Room entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Room instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Room);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Room.RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetInt32(6) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Room)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]: 
                                    {
                                        return 
                                        {
                                            Room instance;
                                            instance = new Room();
                                            instance.<RoomID>k__BackingField = dataReader.IsDBNull(6) ? default(int) : dataReader.GetInt32(6);
                                            instance.<AdultsCapacity>k__BackingField = dataReader.IsDBNull(7) ? default(int) : dataReader.GetInt32(7);
                                            instance.<ChildrenCapacity>k__BackingField = dataReader.IsDBNull(8) ? default(int) : dataReader.GetInt32(8);
                                            instance.<CreatedAtUtc>k__BackingField = dataReader.IsDBNull(9) ? default(DateTime) : dataReader.GetDateTime(9);
                                            instance.<Number>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                            instance.<PricePerNight>k__BackingField = dataReader.IsDBNull(11) ? default(decimal) : dataReader.GetDecimal(11);
                                            instance.<RoomClassID>k__BackingField = dataReader.IsDBNull(12) ? default(int) : dataReader.GetInt32(12);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Room)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Room.RoomClass (RoomClass) ToPrincipal RoomClass Inverse: Rooms | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindNavigation("RoomClass")], 
                fixup: (namelessParameter{10}, namelessParameter{11}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<RoomClass, ICollection<Room>, Room> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                    return namelessParameter{11}.<RoomClass>k__BackingField = namelessParameter{10};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (RoomClass)(resultContext.Values[0]) : default(RoomClass);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 07:52:06.330 -04:00 [DBG] Creating DbConnection.
2025-03-24 07:52:06.331 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-24 07:52:06.336 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:52:06.338 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:52:06.340 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 07:52:06.346 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-03-24 07:52:06.348 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-24 07:52:06.351 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r1."RoomClassID", r1."CreatedAtUtc", r1."Description", r1."HotelId", r1."Name", r1."RoomType", r0."RoomID", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID"
FROM (
    SELECT r."RoomClassID", r."CreatedAtUtc", r."Description", r."HotelId", r."Name", r."RoomType"
    FROM "RoomClasses" AS r
    WHERE r."RoomClassID" = @__id_0
    LIMIT 1
) AS r1
LEFT JOIN "Rooms" AS r0 ON r1."RoomClassID" = r0."RoomClassID"
ORDER BY r1."RoomClassID"
2025-03-24 07:52:06.386 -04:00 [INF] Executed DbCommand (35ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r1."RoomClassID", r1."CreatedAtUtc", r1."Description", r1."HotelId", r1."Name", r1."RoomType", r0."RoomID", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID"
FROM (
    SELECT r."RoomClassID", r."CreatedAtUtc", r."Description", r."HotelId", r."Name", r."RoomType"
    FROM "RoomClasses" AS r
    WHERE r."RoomClassID" = @__id_0
    LIMIT 1
) AS r1
LEFT JOIN "Rooms" AS r0 ON r1."RoomClassID" = r0."RoomClassID"
ORDER BY r1."RoomClassID"
2025-03-24 07:52:06.424 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 07:52:06.470 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 07:52:06.489 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:52:06.492 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 102ms reading results.
2025-03-24 07:52:06.496 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:52:06.498 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 07:52:06.530 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 07:52:06.535 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 07:52:06.536 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-24 07:52:06.538 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-24 07:52:06.540 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-24 07:52:06.552 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.Room.RoomResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-24 07:52:06.591 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.RoomClassController.GetRoomsByRoomClassId (HotelBookingPlatform.API) in 861.3715ms
2025-03-24 07:52:06.603 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.RoomClassController.GetRoomsByRoomClassId (HotelBookingPlatform.API)'
2025-03-24 07:52:06.604 -04:00 [DBG] Connection id "0HNBAKQ774C5A" completed keep alive response.
2025-03-24 07:52:06.613 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 07:52:06.617 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:52:06.619 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 07:52:06.634 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/RoomClass/1/rooms - 200 null application/json; charset=utf-8 1153.8246ms
2025-03-24 07:52:10.277 -04:00 [DBG] Connection id "0HNBAKQ774C5A" received FIN.
2025-03-24 07:52:10.287 -04:00 [DBG] Connection id "0HNBAKQ774C5A" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 07:52:10.299 -04:00 [DBG] Connection id "0HNBAKQ774C5A" disconnecting.
2025-03-24 07:52:10.324 -04:00 [DBG] Connection id "0HNBAKQ774C5A" stopped.
2025-03-24 07:52:46.101 -04:00 [DBG] Connection id "0HNBAKQ774C5B" accepted.
2025-03-24 07:52:46.102 -04:00 [DBG] Connection id "0HNBAKQ774C5B" started.
2025-03-24 07:52:46.105 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Room/1 - null null
2025-03-24 07:52:46.109 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Room/1'
2025-03-24 07:52:46.137 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)' with route pattern 'api/Room/{id}' is valid for the request path '/api/Room/1'
2025-03-24 07:52:46.149 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)'
2025-03-24 07:52:46.150 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 07:52:46.152 -04:00 [DBG] Successfully validated the token.
2025-03-24 07:52:46.153 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 07:52:46.155 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)'
2025-03-24 07:52:46.164 -04:00 [INF] Route matched with {action = "GetRoom", controller = "Room"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRoom(Int32) on controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API).
2025-03-24 07:52:46.166 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 07:52:46.168 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 07:52:46.170 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-24 07:52:46.173 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 07:52:46.176 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 07:52:46.180 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-24 07:52:46.185 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.RoomController (HotelBookingPlatform.API)
2025-03-24 07:52:46.187 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-24 07:52:46.189 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-24 07:52:46.192 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-24 07:52:46.195 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-24 07:52:46.197 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-24 07:52:46.200 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-24 07:52:46.207 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 07:52:46.215 -04:00 [DBG] Compiling query expression: 
'DbSet<Room>()
    .Include(r => r.RoomClass)
    .FirstOrDefault(r => r.RoomID == __id_0)'
2025-03-24 07:52:46.221 -04:00 [DBG] Including navigation: 'Room.RoomClass'.
2025-03-24 07:52:46.242 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Room>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Room>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
                1 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 8], [Property: RoomClass.Description (string) MaxLength(500), 9], [Property: RoomClass.HotelId (int) Required FK Index, 10], [Property: RoomClass.Name (string) Required, 11], [Property: RoomClass.RoomType (RoomType) Required, 12] }
            SELECT TOP(1) r.RoomID, r.AdultsCapacity, r.ChildrenCapacity, r.CreatedAtUtc, r.Number, r.PricePerNight, r.RoomClassID, r0.RoomClassID, r0.CreatedAtUtc, r0.Description, r0.HotelId, r0.Name, r0.RoomType
            FROM Rooms AS r
            INNER JOIN RoomClasses AS r0 ON r.RoomClassID == r0.RoomClassID
            WHERE r.RoomID == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
                1 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 8], [Property: RoomClass.Description (string) MaxLength(500), 9], [Property: RoomClass.HotelId (int) Required FK Index, 10], [Property: RoomClass.Name (string) Required, 11], [Property: RoomClass.RoomType (RoomType) Required, 12] }
            SELECT TOP(1) r.RoomID, r.AdultsCapacity, r.ChildrenCapacity, r.CreatedAtUtc, r.Number, r.PricePerNight, r.RoomClassID, r0.RoomClassID, r0.CreatedAtUtc, r0.Description, r0.HotelId, r0.Name, r0.RoomType
            FROM Rooms AS r
            INNER JOIN RoomClasses AS r0 ON r.RoomClassID == r0.RoomClassID
            WHERE r.RoomID == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Room entity;
            RoomClass entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Room instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Room);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Room.RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Room)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]: 
                            {
                                return 
                                {
                                    Room instance;
                                    instance = new Room();
                                    instance.<RoomID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AdultsCapacity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ChildrenCapacity>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<Number>k__BackingField = dataReader.GetString(4);
                                    instance.<PricePerNight>k__BackingField = dataReader.GetDecimal(5);
                                    instance.<RoomClassID>k__BackingField = dataReader.GetInt32(6);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Room)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                RoomClass instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(RoomClass);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: RoomClass.RoomClassID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(7) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (RoomClass)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]: 
                            {
                                return 
                                {
                                    RoomClass instance;
                                    instance = new RoomClass();
                                    instance.<RoomClassID>k__BackingField = dataReader.GetInt32(7);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(8);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(10);
                                    instance.<Name>k__BackingField = dataReader.GetString(11);
                                    instance.<RoomType>k__BackingField = Invoke(((EnumToNumberConverter<RoomType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: RoomClass.RoomType (RoomType) Required | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("RoomType")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(12));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(RoomClass)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Room, Room, RoomClass>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Room.RoomClass (RoomClass) ToPrincipal RoomClass Inverse: Rooms | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindNavigation("RoomClass")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: RoomClass.Rooms (ICollection<Room>) Collection ToDependent Room Inverse: RoomClass | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms")], 
                fixup: (namelessParameter{9}, namelessParameter{10}) => 
                {
                    namelessParameter{9}.<RoomClass>k__BackingField = namelessParameter{10};
                    return [LIFTABLE Constant: ClrICollectionAccessor<RoomClass, ICollection<Room>, Room> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 07:52:46.266 -04:00 [DBG] Creating DbConnection.
2025-03-24 07:52:46.268 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-24 07:52:46.269 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:52:46.271 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:52:46.273 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 07:52:46.275 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 07:52:46.280 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-03-24 07:52:46.283 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 07:52:46.289 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 07:52:46.298 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 07:52:46.308 -04:00 [DBG] The navigation 'Room.RoomClass' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 07:52:46.319 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 07:52:46.322 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:52:46.324 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 26ms reading results.
2025-03-24 07:52:46.332 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:52:46.334 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 07:52:46.339 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 07:52:46.347 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 07:52:46.349 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-24 07:52:46.350 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-24 07:52:46.351 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-24 07:52:46.354 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Room.RoomResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-24 07:52:46.359 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API) in 179.0746ms
2025-03-24 07:52:46.370 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.RoomController.GetRoom (HotelBookingPlatform.API)'
2025-03-24 07:52:46.371 -04:00 [DBG] Connection id "0HNBAKQ774C5B" completed keep alive response.
2025-03-24 07:52:46.373 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 07:52:46.375 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:52:46.384 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-03-24 07:52:46.388 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Room/1 - 200 null application/json; charset=utf-8 283.1711ms
2025-03-24 07:53:32.218 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Hotel/1/roomclasses - null null
2025-03-24 07:53:32.222 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Hotel/1/roomclasses'
2025-03-24 07:53:32.225 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetRoomClassesByHotelId (HotelBookingPlatform.API)' with route pattern 'api/Hotel/{hotelId}/roomclasses' is valid for the request path '/api/Hotel/1/roomclasses'
2025-03-24 07:53:32.260 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetRoomClassesByHotelId (HotelBookingPlatform.API)'
2025-03-24 07:53:32.276 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 07:53:32.277 -04:00 [DBG] Successfully validated the token.
2025-03-24 07:53:32.281 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 07:53:32.284 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetRoomClassesByHotelId (HotelBookingPlatform.API)'
2025-03-24 07:53:32.291 -04:00 [INF] Route matched with {action = "GetRoomClassesByHotelId", controller = "Hotel"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRoomClassesByHotelId(Int32) on controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API).
2025-03-24 07:53:32.303 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 07:53:32.305 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 07:53:32.307 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-24 07:53:32.311 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 07:53:32.315 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 07:53:32.318 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-24 07:53:32.334 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.HotelController (HotelBookingPlatform.API)
2025-03-24 07:53:32.336 -04:00 [DBG] Attempting to bind parameter 'hotelId' of type 'System.Int32' ...
2025-03-24 07:53:32.338 -04:00 [DBG] Attempting to bind parameter 'hotelId' of type 'System.Int32' using the name 'hotelId' in request data ...
2025-03-24 07:53:32.341 -04:00 [DBG] Done attempting to bind parameter 'hotelId' of type 'System.Int32'.
2025-03-24 07:53:32.344 -04:00 [DBG] Done attempting to bind parameter 'hotelId' of type 'System.Int32'.
2025-03-24 07:53:32.352 -04:00 [DBG] Attempting to validate the bound parameter 'hotelId' of type 'System.Int32' ...
2025-03-24 07:53:32.354 -04:00 [DBG] Done attempting to validate the bound parameter 'hotelId' of type 'System.Int32'.
2025-03-24 07:53:32.367 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 07:53:32.374 -04:00 [DBG] Compiling query expression: 
'DbSet<Hotel>()
    .Include(h => h.City)
    .Include(h => h.Owner)
    .Include(h => h.Reviews)
    .AsSplitQuery()
    .FirstOrDefault(h => h.HotelId == __id_0)'
2025-03-24 07:53:32.383 -04:00 [DBG] Including navigation: 'Hotel.City'.
2025-03-24 07:53:32.386 -04:00 [DBG] Including navigation: 'Hotel.Owner'.
2025-03-24 07:53:32.388 -04:00 [DBG] Including navigation: 'Hotel.Reviews'.
2025-03-24 07:53:32.460 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Hotel>(
    asyncEnumerable: SplitQueryingEnumerable.Create<Hotel>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
                1 -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: City.Country (string) Required, 9], [Property: City.CreatedAtUtc (DateTime) Required, 10], [Property: City.Description (string) Required, 11], [Property: City.Name (string) Required, 12], [Property: City.PostOffice (string) Required, 13], [Property: City.VisitCount (int) Required, 14] }
                2 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: Owner.Email (string) Required, 16], [Property: Owner.FirstName (string) Required MaxLength(50), 17], [Property: Owner.LastName (string) Required MaxLength(50), 18], [Property: Owner.PhoneNumber (string) Required, 19] }
                3 -> 0
                4 -> 8
                5 -> 15
            SELECT TOP(1) h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Hotels AS h
            INNER JOIN Cities AS c ON h.CityID == c.CityID
            INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
            WHERE h.HotelId == @__id_0
            ORDER BY h.HotelId ASC, c.CityID ASC, o.OwnerID ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
                1 -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: City.Country (string) Required, 9], [Property: City.CreatedAtUtc (DateTime) Required, 10], [Property: City.Description (string) Required, 11], [Property: City.Name (string) Required, 12], [Property: City.PostOffice (string) Required, 13], [Property: City.VisitCount (int) Required, 14] }
                2 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: Owner.Email (string) Required, 16], [Property: Owner.FirstName (string) Required MaxLength(50), 17], [Property: Owner.LastName (string) Required MaxLength(50), 18], [Property: Owner.PhoneNumber (string) Required, 19] }
                3 -> 0
                4 -> 8
                5 -> 15
            SELECT TOP(1) h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Hotels AS h
            INNER JOIN Cities AS c ON h.CityID == c.CityID
            INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
            WHERE h.HotelId == @__id_0
            ORDER BY h.HotelId ASC, c.CityID ASC, o.OwnerID ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object> } | Resolver: namelessParameter{0} => new ReaderColumn[]
        { 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("HotelId"), 
                (dataReader, indexMap) => dataReader.GetInt32(0)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CityID"), 
                (dataReader, indexMap) => dataReader.GetInt32(1)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CreatedAtUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(2)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Description"), 
                (dataReader, indexMap) => (object)dataReader.GetString(3)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Name"), 
                (dataReader, indexMap) => (object)dataReader.GetString(4)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("OwnerID"), 
                (dataReader, indexMap) => dataReader.GetInt32(5)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(6)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("StarRating"), 
                (dataReader, indexMap) => dataReader.GetInt32(7)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("CityID"), 
                (dataReader, indexMap) => dataReader.GetInt32(8)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Country"), 
                (dataReader, indexMap) => (object)dataReader.GetString(9)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("CreatedAtUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(10)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Description"), 
                (dataReader, indexMap) => (object)dataReader.GetString(11)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Name"), 
                (dataReader, indexMap) => (object)dataReader.GetString(12)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("PostOffice"), 
                (dataReader, indexMap) => (object)dataReader.GetString(13)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("VisitCount"), 
                (dataReader, indexMap) => dataReader.GetInt32(14)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("OwnerID"), 
                (dataReader, indexMap) => dataReader.GetInt32(15)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("Email"), 
                (dataReader, indexMap) => (object)dataReader.GetString(16)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("FirstName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(17)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("LastName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(18)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(19)
            ) 
        }], 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => resultContext.Values == null ? 
        {
            Hotel entity;
            City entity;
            Owner entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Hotel instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Hotel);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Hotel)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                            {
                                return 
                                {
                                    Hotel instance;
                                    instance = new Hotel();
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(0);
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(3) ? default(string) : (string)dataReader.GetFieldValue<object>(3);
                                    instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(4);
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(5);
                                    instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                    instance.<StarRating>k__BackingField = dataReader.GetInt32(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Hotel)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                City instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(City);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: City.CityID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(8) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (City)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]: 
                            {
                                return 
                                {
                                    City instance;
                                    instance = new City();
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Country>k__BackingField = (string)dataReader.GetFieldValue<object>(9);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(10);
                                    instance.<Description>k__BackingField = (string)dataReader.GetFieldValue<object>(11);
                                    instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(12);
                                    instance.<PostOffice>k__BackingField = (string)dataReader.GetFieldValue<object>(13);
                                    instance.<VisitCount>k__BackingField = dataReader.GetInt32(14);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(City)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                Owner instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(Owner);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Owner.OwnerID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(15) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (Owner)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                            {
                                return 
                                {
                                    Owner instance;
                                    instance = new Owner();
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(15);
                                    instance.<Email>k__BackingField = (string)dataReader.GetFieldValue<object>(16);
                                    instance.<FirstName>k__BackingField = (string)dataReader.GetFieldValue<object>(17);
                                    instance.<LastName>k__BackingField = (string)dataReader.GetFieldValue<object>(18);
                                    instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(19);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Owner)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, City>(
                queryContext: queryContext, 
                entity: (Hotel)(resultContext.Values[0]), 
                relatedEntity: (City)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Hotel.City (City) ToPrincipal City Inverse: Hotels | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("City")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: City.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: City | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindNavigation("Hotels")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<City>k__BackingField = namelessParameter{13};
                    return [LIFTABLE Constant: ClrICollectionAccessor<City, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                        entity: namelessParameter{13}, 
                        value: namelessParameter{12}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, Owner>(
                queryContext: queryContext, 
                entity: (Hotel)(resultContext.Values[0]), 
                relatedEntity: (Owner)(resultContext.Values[2]), 
                navigation: [LIFTABLE Constant: Navigation: Hotel.Owner (Owner) ToPrincipal Owner Inverse: Hotels | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Owner")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Owner.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: Owner | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels")], 
                fixup: (namelessParameter{17}, namelessParameter{18}) => 
                {
                    namelessParameter{17}.<Owner>k__BackingField = namelessParameter{18};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Owner, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                        entity: namelessParameter{18}, 
                        value: namelessParameter{17}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeSplitIncludeCollection<Hotel, Hotel>(
                collectionId: 0, 
                queryContext: queryContext, 
                parentDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Hotel)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(0), 
                    (object)(int?)dataReader.GetInt32(8), 
                    (object)(int?)dataReader.GetInt32(15) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Hotel.Reviews (ICollection<Review>) Collection ToDependent Review Inverse: Hotel | Resolver: namelessParameter{20} => namelessParameter{20}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<Review>, Review> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
            return } : (Hotel)(resultContext.Values[0]), 
        relatedDataLoaders: null, 
        relatedDataLoadersAsync: (queryContext, executionStrategy, resultCoordinator) => ShaperProcessingExpressionVisitor.TaskAwaiter(new Func<Task>[]{ () => ShaperProcessingExpressionVisitor.PopulateSplitIncludeCollectionAsync<Hotel, Review>(
            collectionId: 0, 
            queryContext: (RelationalQueryContext)queryContext, 
            executionStrategy: executionStrategy, 
            relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
                Client Projections:
                    0 -> Dictionary<IProperty, int> { [Property: Review.ReviewID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Review.Content (string) Required, 1], [Property: Review.CreatedAtUtc (DateTime) Required, 2], [Property: Review.HotelId (int) Required FK Index, 3], [Property: Review.ModifiedAtUtc (DateTime?), 4], [Property: Review.Rating (int) Required, 5], [Property: Review.UserId (string) Required FK Index, 6] }
                    1 -> 7
                    2 -> 8
                    3 -> 9
                SELECT r.ReviewID, r.Content, r.CreatedAtUtc, r.HotelId, r.ModifiedAtUtc, r.Rating, r.UserId, s.HotelId, s.CityID, s.OwnerID
                FROM 
                (
                    SELECT TOP(1) h.HotelId, c.CityID, o.OwnerID
                    FROM Hotels AS h
                    INNER JOIN Cities AS c ON h.CityID == c.CityID
                    INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
                    WHERE h.HotelId == @__id_0
                ) AS s
                INNER JOIN Reviews AS r ON s.HotelId == r.HotelId
                ORDER BY s.HotelId ASC, s.CityID ASC, s.OwnerID ASC) | Resolver: c => new RelationalCommandCache(
                c.Dependencies.MemoryCache, 
                c.RelationalDependencies.QuerySqlGeneratorFactory, 
                c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
                Client Projections:
                    0 -> Dictionary<IProperty, int> { [Property: Review.ReviewID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Review.Content (string) Required, 1], [Property: Review.CreatedAtUtc (DateTime) Required, 2], [Property: Review.HotelId (int) Required FK Index, 3], [Property: Review.ModifiedAtUtc (DateTime?), 4], [Property: Review.Rating (int) Required, 5], [Property: Review.UserId (string) Required FK Index, 6] }
                    1 -> 7
                    2 -> 8
                    3 -> 9
                SELECT r.ReviewID, r.Content, r.CreatedAtUtc, r.HotelId, r.ModifiedAtUtc, r.Rating, r.UserId, s.HotelId, s.CityID, s.OwnerID
                FROM 
                (
                    SELECT TOP(1) h.HotelId, c.CityID, o.OwnerID
                    FROM Hotels AS h
                    INNER JOIN Cities AS c ON h.CityID == c.CityID
                    INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
                    WHERE h.HotelId == @__id_0
                ) AS s
                INNER JOIN Reviews AS r ON s.HotelId == r.HotelId
                ORDER BY s.HotelId ASC, s.CityID ASC, s.OwnerID ASC, 
                False, 
                new HashSet<string>(
                    new string[]{ }, 
                    StringComparer.Ordinal
                )
            )].GetRelationalCommandTemplate(parameters), 
            readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<DateTime>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int> } | Resolver: namelessParameter{22} => new ReaderColumn[]
            { 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("ReviewID"), 
                    (dataReader, indexMap) => dataReader.GetInt32(0)
                ), 
                new ReaderColumn<object>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("Content"), 
                    (dataReader, indexMap) => (object)dataReader.GetString(1)
                ), 
                new ReaderColumn<DateTime>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("CreatedAtUtc"), 
                    (dataReader, indexMap) => dataReader.GetDateTime(2)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("HotelId"), 
                    (dataReader, indexMap) => dataReader.GetInt32(3)
                ), 
                new ReaderColumn<DateTime>(
                    True, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("ModifiedAtUtc"), 
                    (dataReader, indexMap) => dataReader.GetDateTime(4)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("Rating"), 
                    (dataReader, indexMap) => dataReader.GetInt32(5)
                ), 
                new ReaderColumn<object>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("UserId"), 
                    (dataReader, indexMap) => (object)dataReader.GetString(6)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(7)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(8)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(9)
                ) 
            }], 
            detailedErrorsEnabled: False, 
            resultCoordinator: resultCoordinator, 
            childIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(int?)dataReader.GetInt32(7), 
                (object)(int?)dataReader.GetInt32(8), 
                (object)(int?)dataReader.GetInt32(9) 
            }], 
            identifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
            }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Review entity;
                entity = 
                {
                    MaterializationContext materializationContext4;
                    IEntityType entityType4;
                    Review instance4;
                    InternalEntityEntry entry4;
                    bool hasNullKey4;
                    materializationContext4 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance4 = default(Review);
                    entry4 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Review.ReviewID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey4);
                    !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                    {
                        entityType4 = entry4.EntityType;
                        return instance4 = (Review)entry4.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot4;
                        shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType4 = [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")];
                        instance4 = switch (entityType4)
                        {
                            case [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{24} => namelessParameter{24}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")]: 
                                {
                                    return 
                                    {
                                        Review instance;
                                        instance = new Review();
                                        instance.<ReviewID>k__BackingField = dataReader.GetInt32(0);
                                        instance.<Content>k__BackingField = (string)dataReader.GetFieldValue<object>(1);
                                        instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<HotelId>k__BackingField = dataReader.GetInt32(3);
                                        instance.<ModifiedAtUtc>k__BackingField = dataReader.IsDBNull(4) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(4);
                                        instance.<Rating>k__BackingField = dataReader.GetInt32(5);
                                        instance.<UserId>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext4.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{25} => namelessParameter{25}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Review)
                        }
                        ;
                        entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType4, 
                            entity: instance4, 
                            snapshot: shadowSnapshot4);
                        return instance4;
                    } : default(void);
                    return instance4;
                };
                return entity;
            }, 
            relatedDataLoaders: null, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Review.Hotel (Hotel) ToPrincipal Hotel Inverse: Reviews | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindNavigation("Hotel")], 
            fixup: (namelessParameter{27}, namelessParameter{28}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<Review>, Review> | Resolver: namelessParameter{29} => namelessParameter{29}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews").GetCollectionAccessor()].Add(
                    entity: namelessParameter{27}, 
                    value: namelessParameter{28}, 
                    forMaterialization: True);
                return namelessParameter{28}.<Hotel>k__BackingField = namelessParameter{27};
            }, 
            trackingQuery: True) }), 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 07:53:32.527 -04:00 [DBG] Creating DbConnection.
2025-03-24 07:53:32.528 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-24 07:53:32.532 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:53:32.537 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:53:32.544 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 07:53:32.546 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-24 07:53:32.549 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-24 07:53:32.551 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-24 07:53:32.606 -04:00 [INF] Executed DbCommand (55ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-24 07:53:32.706 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 07:53:32.754 -04:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 07:53:32.757 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 07:53:32.775 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 07:53:32.777 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 07:53:32.805 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 07:53:32.807 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 07:53:32.808 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-03-24 07:53:32.810 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-24 07:53:32.824 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-24 07:53:32.845 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:53:32.852 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 160ms reading results.
2025-03-24 07:53:32.857 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:53:32.858 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 20ms reading results.
2025-03-24 07:53:32.861 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:53:32.867 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-24 07:53:32.873 -04:00 [DBG] Compiling query expression: 
'DbSet<RoomClass>()
    .Where(rc => rc.HotelId == __hotelId_0)'
2025-03-24 07:53:32.888 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<RoomClass>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 1], [Property: RoomClass.Description (string) MaxLength(500), 2], [Property: RoomClass.HotelId (int) Required FK Index, 3], [Property: RoomClass.Name (string) Required, 4], [Property: RoomClass.RoomType (RoomType) Required, 5] }
        SELECT r.RoomClassID, r.CreatedAtUtc, r.Description, r.HotelId, r.Name, r.RoomType
        FROM RoomClasses AS r
        WHERE r.HotelId == @__hotelId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 1], [Property: RoomClass.Description (string) MaxLength(500), 2], [Property: RoomClass.HotelId (int) Required FK Index, 3], [Property: RoomClass.Name (string) Required, 4], [Property: RoomClass.RoomType (RoomType) Required, 5] }
        SELECT r.RoomClassID, r.CreatedAtUtc, r.Description, r.HotelId, r.Name, r.RoomType
        FROM RoomClasses AS r
        WHERE r.HotelId == @__hotelId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        RoomClass entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            RoomClass instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(RoomClass);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: RoomClass.RoomClassID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (RoomClass)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]: 
                        {
                            return 
                            {
                                RoomClass instance;
                                instance = new RoomClass();
                                instance.<RoomClassID>k__BackingField = dataReader.GetInt32(0);
                                instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(1);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<HotelId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Name>k__BackingField = dataReader.GetString(4);
                                instance.<RoomType>k__BackingField = Invoke(((EnumToNumberConverter<RoomType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: RoomClass.RoomType (RoomType) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("RoomType")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(5));
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(RoomClass)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-24 07:53:32.902 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:53:32.904 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:53:32.909 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 07:53:32.910 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 07:53:32.917 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-24 07:53:32.919 -04:00 [DBG] Executing DbCommand [Parameters=[@__hotelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomClassID", r."CreatedAtUtc", r."Description", r."HotelId", r."Name", r."RoomType"
FROM "RoomClasses" AS r
WHERE r."HotelId" = @__hotelId_0
2025-03-24 07:53:32.926 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__hotelId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomClassID", r."CreatedAtUtc", r."Description", r."HotelId", r."Name", r."RoomType"
FROM "RoomClasses" AS r
WHERE r."HotelId" = @__hotelId_0
2025-03-24 07:53:32.938 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 07:53:32.941 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 07:53:32.943 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:53:32.949 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 14ms reading results.
2025-03-24 07:53:32.952 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:53:32.955 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-24 07:53:32.969 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 07:53:32.975 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 07:53:32.976 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-24 07:53:32.978 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-24 07:53:32.986 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-24 07:53:32.990 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.RoomClass.RoomClassResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-24 07:53:33.002 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.HotelController.GetRoomClassesByHotelId (HotelBookingPlatform.API) in 684.0617ms
2025-03-24 07:53:33.006 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.HotelController.GetRoomClassesByHotelId (HotelBookingPlatform.API)'
2025-03-24 07:53:33.009 -04:00 [DBG] Connection id "0HNBAKQ774C5B" completed keep alive response.
2025-03-24 07:53:33.010 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 07:53:33.014 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:53:33.020 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-24 07:53:33.030 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Hotel/1/roomclasses - 200 null application/json; charset=utf-8 811.6329ms
2025-03-24 07:53:35.484 -04:00 [DBG] Connection id "0HNBAKQ774C5B" received FIN.
2025-03-24 07:53:35.486 -04:00 [DBG] Connection id "0HNBAKQ774C5B" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 07:53:35.488 -04:00 [DBG] Connection id "0HNBAKQ774C5B" disconnecting.
2025-03-24 07:53:35.490 -04:00 [DBG] Connection id "0HNBAKQ774C5B" stopped.
2025-03-24 07:54:12.489 -04:00 [DBG] Connection id "0HNBAKQ774C5C" accepted.
2025-03-24 07:54:12.490 -04:00 [DBG] Connection id "0HNBAKQ774C5C" started.
2025-03-24 07:54:12.492 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City/1/hotels - null null
2025-03-24 07:54:12.496 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/1/hotels'
2025-03-24 07:54:12.498 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/1/hotels'
2025-03-24 07:54:12.540 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-24 07:54:12.541 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 07:54:12.543 -04:00 [DBG] Successfully validated the token.
2025-03-24 07:54:12.544 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 07:54:12.546 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-24 07:54:12.562 -04:00 [INF] Route matched with {action = "GetHotelsForCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotelsForCity(Int32) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-24 07:54:12.589 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 07:54:12.613 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 07:54:12.618 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-24 07:54:12.629 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 07:54:12.645 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 07:54:12.648 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-24 07:54:12.655 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-24 07:54:12.680 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-03-24 07:54:12.691 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-03-24 07:54:12.693 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-24 07:54:12.695 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-24 07:54:12.703 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-03-24 07:54:12.705 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-03-24 07:54:12.757 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 07:54:12.763 -04:00 [DBG] Compiling query expression: 
'DbSet<Hotel>()
    .Where(h => h.CityID == __cityId_0)
    .Include(h => h.Owner)'
2025-03-24 07:54:12.776 -04:00 [DBG] Including navigation: 'Hotel.Owner'.
2025-03-24 07:54:12.796 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Hotel>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
            1 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: Owner.Email (string) Required, 9], [Property: Owner.FirstName (string) Required MaxLength(50), 10], [Property: Owner.LastName (string) Required MaxLength(50), 11], [Property: Owner.PhoneNumber (string) Required, 12] }
        SELECT h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
        FROM Hotels AS h
        INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
        WHERE h.CityID == @__cityId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
            1 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: Owner.Email (string) Required, 9], [Property: Owner.FirstName (string) Required MaxLength(50), 10], [Property: Owner.LastName (string) Required MaxLength(50), 11], [Property: Owner.PhoneNumber (string) Required, 12] }
        SELECT h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
        FROM Hotels AS h
        INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
        WHERE h.CityID == @__cityId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Hotel entity;
        Owner entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Hotel instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Hotel);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Hotel)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                        {
                            return 
                            {
                                Hotel instance;
                                instance = new Hotel();
                                instance.<HotelId>k__BackingField = dataReader.GetInt32(0);
                                instance.<CityID>k__BackingField = dataReader.GetInt32(1);
                                instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                instance.<Name>k__BackingField = dataReader.GetString(4);
                                instance.<OwnerID>k__BackingField = dataReader.GetInt32(5);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(6);
                                instance.<StarRating>k__BackingField = dataReader.GetInt32(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Hotel)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Owner instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Owner);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Owner.OwnerID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(8) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Owner)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                        {
                            return 
                            {
                                Owner instance;
                                instance = new Owner();
                                instance.<OwnerID>k__BackingField = dataReader.GetInt32(8);
                                instance.<Email>k__BackingField = dataReader.GetString(9);
                                instance.<FirstName>k__BackingField = dataReader.GetString(10);
                                instance.<LastName>k__BackingField = dataReader.GetString(11);
                                instance.<PhoneNumber>k__BackingField = dataReader.GetString(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Owner)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, Owner>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Hotel.Owner (Owner) ToPrincipal Owner Inverse: Hotels | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Owner")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Owner.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: Owner | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels")], 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                namelessParameter{8}.<Owner>k__BackingField = namelessParameter{9};
                return [LIFTABLE Constant: ClrICollectionAccessor<Owner, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                    entity: namelessParameter{9}, 
                    value: namelessParameter{8}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-24 07:54:12.836 -04:00 [DBG] Creating DbConnection.
2025-03-24 07:54:12.840 -04:00 [DBG] Created DbConnection. (3ms).
2025-03-24 07:54:12.841 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:54:12.844 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:54:12.880 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 07:54:12.891 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (11ms).
2025-03-24 07:54:12.893 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (12ms).
2025-03-24 07:54:12.895 -04:00 [DBG] Executing DbCommand [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-03-24 07:54:12.906 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-03-24 07:54:12.912 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:54:12.920 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-03-24 07:54:12.922 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:54:12.925 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 07:54:12.941 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API) in 292.6143ms
2025-03-24 07:54:12.944 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-24 07:54:13.062 -04:00 [DBG] Connection id "0HNBAKQ774C5C" completed keep alive response.
2025-03-24 07:54:13.065 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 07:54:13.067 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:54:13.069 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 07:54:13.072 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City/1/hotels - 400 null application/json 580.0995ms
2025-03-24 07:54:22.863 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City/2/hotels - null null
2025-03-24 07:54:22.870 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/2/hotels'
2025-03-24 07:54:22.871 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/2/hotels'
2025-03-24 07:54:22.893 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-24 07:54:22.895 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 07:54:22.899 -04:00 [DBG] Successfully validated the token.
2025-03-24 07:54:22.902 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 07:54:22.904 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-24 07:54:22.906 -04:00 [INF] Route matched with {action = "GetHotelsForCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotelsForCity(Int32) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-24 07:54:22.909 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 07:54:22.913 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 07:54:22.920 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-24 07:54:22.924 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 07:54:22.926 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 07:54:22.929 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-24 07:54:22.938 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-24 07:54:22.940 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-03-24 07:54:22.943 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-03-24 07:54:22.945 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-24 07:54:22.947 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-24 07:54:22.951 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-03-24 07:54:22.955 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-03-24 07:54:22.958 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 07:54:22.961 -04:00 [DBG] Creating DbConnection.
2025-03-24 07:54:22.962 -04:00 [DBG] Created DbConnection. (0ms).
2025-03-24 07:54:22.964 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:54:22.969 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:54:22.971 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 07:54:22.972 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 07:54:22.974 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 07:54:22.976 -04:00 [DBG] Executing DbCommand [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-03-24 07:54:22.983 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-03-24 07:54:22.990 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:54:22.992 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 07:54:22.994 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:54:22.996 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 07:54:23.001 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API) in 72.6534ms
2025-03-24 07:54:23.004 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-24 07:54:23.006 -04:00 [DBG] Connection id "0HNBAKQ774C5C" completed keep alive response.
2025-03-24 07:54:23.012 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 07:54:23.020 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:54:23.022 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 07:54:23.025 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City/2/hotels - 400 null application/json 161.7657ms
2025-03-24 07:54:32.194 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/City/3/hotels - null null
2025-03-24 07:54:32.308 -04:00 [DBG] 1 candidate(s) found for the request path '/api/City/3/hotels'
2025-03-24 07:54:32.325 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)' with route pattern 'api/City/{cityId}/hotels' is valid for the request path '/api/City/3/hotels'
2025-03-24 07:54:32.330 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-24 07:54:32.340 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 07:54:32.342 -04:00 [DBG] Successfully validated the token.
2025-03-24 07:54:32.355 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 07:54:32.386 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-24 07:54:32.390 -04:00 [INF] Route matched with {action = "GetHotelsForCity", controller = "City"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetHotelsForCity(Int32) on controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API).
2025-03-24 07:54:32.396 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 07:54:32.406 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 07:54:32.411 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-24 07:54:32.423 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 07:54:32.425 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 07:54:32.430 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-24 07:54:32.458 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.CityController (HotelBookingPlatform.API)
2025-03-24 07:54:32.460 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' ...
2025-03-24 07:54:32.462 -04:00 [DBG] Attempting to bind parameter 'cityId' of type 'System.Int32' using the name 'cityId' in request data ...
2025-03-24 07:54:32.471 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-24 07:54:32.475 -04:00 [DBG] Done attempting to bind parameter 'cityId' of type 'System.Int32'.
2025-03-24 07:54:32.477 -04:00 [DBG] Attempting to validate the bound parameter 'cityId' of type 'System.Int32' ...
2025-03-24 07:54:32.479 -04:00 [DBG] Done attempting to validate the bound parameter 'cityId' of type 'System.Int32'.
2025-03-24 07:54:32.488 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 07:54:32.495 -04:00 [DBG] Creating DbConnection.
2025-03-24 07:54:32.497 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-24 07:54:32.503 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:54:32.508 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:54:32.521 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 07:54:32.527 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-03-24 07:54:32.536 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (14ms).
2025-03-24 07:54:32.538 -04:00 [DBG] Executing DbCommand [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-03-24 07:54:32.562 -04:00 [INF] Executed DbCommand (23ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."CityID" = @__cityId_0
2025-03-24 07:54:32.571 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 07:54:32.574 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 07:54:32.577 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 07:54:32.580 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:54:32.588 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 17ms reading results.
2025-03-24 07:54:32.591 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:54:32.596 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-24 07:54:32.611 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 07:54:32.621 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 07:54:32.622 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-24 07:54:32.624 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-24 07:54:32.626 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-24 07:54:32.628 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[HotelBookingPlatform.Domain.DTOs.Hotel.HotelBasicResponseDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-24 07:54:32.638 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API) in 208.6661ms
2025-03-24 07:54:32.641 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.CityController.GetHotelsForCity (HotelBookingPlatform.API)'
2025-03-24 07:54:32.643 -04:00 [DBG] Connection id "0HNBAKQ774C5C" completed keep alive response.
2025-03-24 07:54:32.646 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 07:54:32.650 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 07:54:32.671 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (20ms).
2025-03-24 07:54:32.674 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/City/3/hotels - 200 null application/json; charset=utf-8 480.437ms
2025-03-24 07:55:20.568 -04:00 [DBG] Connection id "0HNBAKQ774C5C" received FIN.
2025-03-24 07:55:20.574 -04:00 [DBG] Connection id "0HNBAKQ774C5C" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 07:55:20.577 -04:00 [DBG] Connection id "0HNBAKQ774C5C" disconnecting.
2025-03-24 07:55:20.579 -04:00 [DBG] Connection id "0HNBAKQ774C5C" stopped.
2025-03-24 07:57:16.458 -04:00 [DBG] Connection id "0HNBAKQ774C5D" accepted.
2025-03-24 07:57:16.464 -04:00 [DBG] Connection id "0HNBAKQ774C5D" started.
2025-03-24 07:57:16.529 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Booking/create - application/json 166
2025-03-24 07:57:16.533 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/create'
2025-03-24 07:57:16.537 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/create' is valid for the request path '/api/Booking/create'
2025-03-24 07:57:16.545 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 07:57:16.559 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 07:57:16.562 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 07:57:16.564 -04:00 [DBG] Successfully validated the token.
2025-03-24 07:57:16.570 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 07:57:16.575 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 07:57:16.629 -04:00 [INF] Route matched with {action = "CreateBooking", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateBooking(HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-03-24 07:57:16.684 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 07:57:16.725 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 07:57:16.728 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-24 07:57:16.753 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 07:57:16.758 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 07:57:16.762 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 07:57:16.769 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 07:57:16.771 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 07:57:16.775 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' using the name '' in request data ...
2025-03-24 07:57:16.783 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 07:57:16.816 -04:00 [DBG] Connection id "0HNBAKQ774C5D", Request id "0HNBAKQ774C5D:00000001": started reading request body.
2025-03-24 07:57:16.818 -04:00 [DBG] Connection id "0HNBAKQ774C5D", Request id "0HNBAKQ774C5D:00000001": done reading request body.
2025-03-24 07:57:16.859 -04:00 [DBG] JSON input formatter threw an exception: 'c' is an invalid start of a value. Path: $.paymentMethod | LineNumber: 7 | BytePositionInLine: 19.
2025-03-24 07:57:16.866 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 07:57:16.869 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 07:57:16.877 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 07:57:16.885 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 07:57:16.894 -04:00 [DBG] The request has model state errors, returning an error response.
2025-03-24 07:57:16.900 -04:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-03-24 07:57:16.903 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 07:57:16.914 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 07:57:16.917 -04:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-03-24 07:57:16.925 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-03-24 07:57:16.928 -04:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-03-24 07:57:16.984 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API) in 222.6058ms
2025-03-24 07:57:16.992 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 07:57:16.993 -04:00 [DBG] Connection id "0HNBAKQ774C5D" completed keep alive response.
2025-03-24 07:57:16.996 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Booking/create - 400 null application/problem+json; charset=utf-8 466.4751ms
2025-03-24 07:57:20.692 -04:00 [DBG] Connection id "0HNBAKQ774C5D" received FIN.
2025-03-24 07:57:20.700 -04:00 [DBG] Connection id "0HNBAKQ774C5D" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 07:57:20.728 -04:00 [DBG] Connection id "0HNBAKQ774C5D" disconnecting.
2025-03-24 07:57:20.744 -04:00 [DBG] Connection id "0HNBAKQ774C5D" stopped.
2025-03-24 08:13:36.531 -04:00 [DBG] Connection id "0HNBAKQ774C5E" accepted.
2025-03-24 08:13:36.532 -04:00 [DBG] Connection id "0HNBAKQ774C5E" started.
2025-03-24 08:13:36.535 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Booking/create - application/json 168
2025-03-24 08:13:36.540 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/create'
2025-03-24 08:13:36.551 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/create' is valid for the request path '/api/Booking/create'
2025-03-24 08:13:36.558 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 08:13:36.560 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 08:13:36.562 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 08:13:36.564 -04:00 [DBG] Successfully validated the token.
2025-03-24 08:13:36.565 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 08:13:36.567 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 08:13:36.570 -04:00 [INF] Route matched with {action = "CreateBooking", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateBooking(HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-03-24 08:13:36.574 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 08:13:36.576 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 08:13:36.578 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-24 08:13:36.581 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 08:13:36.585 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 08:13:36.588 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 08:13:36.591 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 08:13:36.593 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 08:13:36.596 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' using the name '' in request data ...
2025-03-24 08:13:36.598 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 08:13:36.603 -04:00 [DBG] Connection id "0HNBAKQ774C5E", Request id "0HNBAKQ774C5E:00000001": started reading request body.
2025-03-24 08:13:36.604 -04:00 [DBG] Connection id "0HNBAKQ774C5E", Request id "0HNBAKQ774C5E:00000001": done reading request body.
2025-03-24 08:13:36.610 -04:00 [DBG] JSON input formatter threw an exception: The JSON value could not be converted to HotelBookingPlatform.Domain.Enums.PaymentMethod. Path: $.paymentMethod | LineNumber: 7 | BytePositionInLine: 25.
2025-03-24 08:13:36.611 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 08:13:36.613 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 08:13:36.616 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 08:13:36.620 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 08:13:36.622 -04:00 [DBG] The request has model state errors, returning an error response.
2025-03-24 08:13:36.623 -04:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-03-24 08:13:36.625 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 08:13:36.629 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 08:13:36.630 -04:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-03-24 08:13:36.636 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-03-24 08:13:36.638 -04:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-03-24 08:13:36.640 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API) in 52.7218ms
2025-03-24 08:13:36.643 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 08:13:36.644 -04:00 [DBG] Connection id "0HNBAKQ774C5E" completed keep alive response.
2025-03-24 08:13:36.647 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Booking/create - 400 null application/problem+json; charset=utf-8 112.6095ms
2025-03-24 08:15:48.572 -04:00 [DBG] Connection id "0HNBAKQ774C5E" disconnecting.
2025-03-24 08:15:48.583 -04:00 [DBG] Connection id "0HNBAKQ774C5E" stopped.
2025-03-24 08:15:48.591 -04:00 [DBG] Connection id "0HNBAKQ774C5E" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 08:17:21.600 -04:00 [DBG] Connection id "0HNBAKQ774C5F" accepted.
2025-03-24 08:17:21.602 -04:00 [DBG] Connection id "0HNBAKQ774C5F" started.
2025-03-24 08:17:21.604 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Booking/create - application/json 170
2025-03-24 08:17:21.620 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/create'
2025-03-24 08:17:21.632 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/create' is valid for the request path '/api/Booking/create'
2025-03-24 08:17:21.640 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 08:17:21.657 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 08:17:21.669 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 08:17:21.671 -04:00 [DBG] Successfully validated the token.
2025-03-24 08:17:21.697 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 08:17:21.729 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 08:17:21.731 -04:00 [INF] Route matched with {action = "CreateBooking", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateBooking(HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-03-24 08:17:21.756 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 08:17:21.758 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 08:17:21.783 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-24 08:17:21.807 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 08:17:21.811 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 08:17:21.821 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 08:17:21.841 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 08:17:21.846 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 08:17:21.849 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' using the name '' in request data ...
2025-03-24 08:17:21.854 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 08:17:21.856 -04:00 [DBG] Connection id "0HNBAKQ774C5F", Request id "0HNBAKQ774C5F:00000001": started reading request body.
2025-03-24 08:17:21.858 -04:00 [DBG] Connection id "0HNBAKQ774C5F", Request id "0HNBAKQ774C5F:00000001": done reading request body.
2025-03-24 08:17:21.863 -04:00 [DBG] JSON input formatter threw an exception: The JSON value could not be converted to HotelBookingPlatform.Domain.Enums.PaymentMethod. Path: $.paymentMethod | LineNumber: 7 | BytePositionInLine: 27.
2025-03-24 08:17:21.865 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 08:17:21.869 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 08:17:21.872 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 08:17:21.874 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 08:17:21.879 -04:00 [DBG] The request has model state errors, returning an error response.
2025-03-24 08:17:21.883 -04:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-03-24 08:17:21.909 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 08:17:21.918 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 08:17:21.920 -04:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-03-24 08:17:21.924 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-03-24 08:17:21.927 -04:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-03-24 08:17:21.933 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API) in 111.7134ms
2025-03-24 08:17:21.936 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 08:17:21.937 -04:00 [DBG] Connection id "0HNBAKQ774C5F" completed keep alive response.
2025-03-24 08:17:21.941 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Booking/create - 400 null application/problem+json; charset=utf-8 337.6272ms
2025-03-24 08:19:33.081 -04:00 [DBG] Connection id "0HNBAKQ774C5F" disconnecting.
2025-03-24 08:19:33.087 -04:00 [DBG] Connection id "0HNBAKQ774C5F" stopped.
2025-03-24 08:19:33.090 -04:00 [DBG] Connection id "0HNBAKQ774C5F" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 08:54:45.587 -04:00 [DBG] Config reload token fired. Checking for changes...
2025-03-24 08:56:53.501 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-24 08:56:53.690 -04:00 [DBG] Hosting starting
2025-03-24 08:56:53.714 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-24 08:56:53.736 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-24 08:56:53.766 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-24 08:56:53.789 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-24 08:56:53.800 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-24 08:56:53.804 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-24 08:56:53.808 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-24 08:56:53.818 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-24 08:56:53.825 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-24 08:56:53.833 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-24 08:56:53.836 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-24 08:56:53.933 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-24 08:56:53.935 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-24 08:56:53.936 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-24 08:56:53.938 -04:00 [INF] Hosting environment: Development
2025-03-24 08:56:53.939 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-24 08:56:53.940 -04:00 [DBG] Hosting started
2025-03-24 08:56:58.738 -04:00 [DBG] Connection id "0HNBAQDEFUGHM" accepted.
2025-03-24 08:56:58.771 -04:00 [DBG] Connection id "0HNBAQDEFUGHN" accepted.
2025-03-24 08:56:58.775 -04:00 [DBG] Connection id "0HNBAQDEFUGHM" started.
2025-03-24 08:56:58.786 -04:00 [DBG] Connection id "0HNBAQDEFUGHN" started.
2025-03-24 08:56:58.994 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-03-24 08:56:59.002 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-24 08:56:59.056 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-03-24 08:56:59.059 -04:00 [DBG] Request did not match any endpoints
2025-03-24 08:56:59.220 -04:00 [DBG] Connection id "0HNBAQDEFUGHM" completed keep alive response.
2025-03-24 08:56:59.225 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 234.6147ms
2025-03-24 08:56:59.354 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-03-24 08:56:59.387 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-03-24 08:56:59.498 -04:00 [DBG] Request did not match any endpoints
2025-03-24 08:56:59.563 -04:00 [DBG] Connection id "0HNBAQDEFUGHM" completed keep alive response.
2025-03-24 08:56:59.565 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 210.8148ms
2025-03-24 08:56:59.706 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-24 08:56:59.821 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-24 08:56:59.823 -04:00 [DBG] Request did not match any endpoints
2025-03-24 08:57:00.153 -04:00 [DBG] Connection id "0HNBAQDEFUGHM" completed keep alive response.
2025-03-24 08:57:00.155 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 449.0454ms
2025-03-24 08:57:00.927 -04:00 [DBG] Connection id "0HNBAQDEFUGHN" received FIN.
2025-03-24 08:57:00.927 -04:00 [DBG] Connection id "0HNBAQDEFUGHM" received FIN.
2025-03-24 08:57:00.932 -04:00 [DBG] Connection id "0HNBAQDEFUGHN" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 08:57:00.932 -04:00 [DBG] Connection id "0HNBAQDEFUGHM" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 08:57:00.936 -04:00 [DBG] Connection id "0HNBAQDEFUGHN" disconnecting.
2025-03-24 08:57:00.938 -04:00 [DBG] Connection id "0HNBAQDEFUGHM" disconnecting.
2025-03-24 08:57:00.942 -04:00 [DBG] Connection id "0HNBAQDEFUGHN" stopped.
2025-03-24 08:57:00.943 -04:00 [DBG] Connection id "0HNBAQDEFUGHM" stopped.
2025-03-24 08:57:40.921 -04:00 [DBG] Connection id "0HNBAQDEFUGHO" accepted.
2025-03-24 08:57:40.924 -04:00 [DBG] Connection id "0HNBAQDEFUGHO" started.
2025-03-24 08:57:40.930 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 66
2025-03-24 08:57:40.951 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-24 08:57:40.963 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-24 08:57:40.967 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 08:57:40.980 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 08:57:40.983 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 08:57:40.986 -04:00 [WRN] Failed to determine the https port for redirect.
2025-03-24 08:57:41.037 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-24 08:57:41.041 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 08:57:41.081 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-24 08:57:41.085 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 08:57:41.088 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 08:57:41.092 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-24 08:57:41.098 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 08:57:41.101 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 08:57:41.105 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-24 08:57:41.297 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 08:57:41.347 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-24 08:57:41.353 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-24 08:57:41.358 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-24 08:57:41.363 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 08:57:41.390 -04:00 [DBG] Connection id "0HNBAQDEFUGHO", Request id "0HNBAQDEFUGHO:00000001": started reading request body.
2025-03-24 08:57:41.393 -04:00 [DBG] Connection id "0HNBAQDEFUGHO", Request id "0HNBAQDEFUGHO:00000001": done reading request body.
2025-03-24 08:57:41.414 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-24 08:57:41.417 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 08:57:41.420 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 08:57:41.422 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-24 08:57:41.437 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 08:57:41.753 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 08:57:41.807 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 08:57:41.974 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 08:57:42.061 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 08:57:42.137 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 08:57:42.142 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 08:57:42.156 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 08:57:42.252 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 08:57:42.255 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 08:57:42.258 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 08:57:42.263 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 08:57:42.265 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 08:57:42.423 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 08:57:42.427 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 08:57:42.429 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 08:57:42.569 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 08:57:42.657 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-24 08:57:42.725 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-24 08:57:43.093 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 08:57:43.205 -04:00 [DBG] Creating DbConnection.
2025-03-24 08:57:43.258 -04:00 [DBG] Created DbConnection. (52ms).
2025-03-24 08:57:43.266 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 08:57:43.752 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 08:57:43.757 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 08:57:43.769 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (8ms).
2025-03-24 08:57:43.782 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (24ms).
2025-03-24 08:57:43.795 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 08:57:43.988 -04:00 [INF] Executed DbCommand (199ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 08:57:44.057 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 08:57:44.136 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 08:57:44.175 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 08:57:44.199 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 194ms reading results.
2025-03-24 08:57:44.216 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 08:57:44.230 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (14ms).
2025-03-24 08:57:44.358 -04:00 [DBG] Invalid password for user.
2025-03-24 08:57:44.367 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 3261.372ms
2025-03-24 08:57:44.373 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 08:57:44.437 -04:00 [DBG] Connection id "0HNBAQDEFUGHO" completed keep alive response.
2025-03-24 08:57:44.445 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 08:57:44.457 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 08:57:44.472 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (14ms).
2025-03-24 08:57:44.478 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 500 null application/json 3548.3896ms
2025-03-24 08:57:50.989 -04:00 [DBG] Connection id "0HNBAQDEFUGHO" received FIN.
2025-03-24 08:57:51.003 -04:00 [DBG] Connection id "0HNBAQDEFUGHO" disconnecting.
2025-03-24 08:57:51.012 -04:00 [DBG] Connection id "0HNBAQDEFUGHO" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 08:57:51.031 -04:00 [DBG] Connection id "0HNBAQDEFUGHO" stopped.
2025-03-24 08:59:47.936 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-24 08:59:48.335 -04:00 [DBG] Hosting starting
2025-03-24 08:59:48.359 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-24 08:59:48.379 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-24 08:59:48.397 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-24 08:59:48.462 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-24 08:59:48.478 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-24 08:59:48.488 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-24 08:59:48.512 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-24 08:59:48.574 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-24 08:59:48.674 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-24 08:59:48.858 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-24 08:59:48.863 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-24 08:59:48.992 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-24 08:59:48.994 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-24 08:59:48.995 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-24 08:59:48.996 -04:00 [INF] Hosting environment: Development
2025-03-24 08:59:48.997 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-24 08:59:48.999 -04:00 [DBG] Hosting started
2025-03-24 08:59:53.793 -04:00 [DBG] Connection id "0HNBAQF2LDT43" accepted.
2025-03-24 08:59:53.796 -04:00 [DBG] Connection id "0HNBAQF2LDT43" started.
2025-03-24 08:59:53.814 -04:00 [DBG] Connection id "0HNBAQF2LDT44" accepted.
2025-03-24 08:59:53.857 -04:00 [DBG] Connection id "0HNBAQF2LDT44" started.
2025-03-24 08:59:53.992 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-03-24 08:59:54.002 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-24 08:59:54.094 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-03-24 08:59:54.097 -04:00 [DBG] Request did not match any endpoints
2025-03-24 08:59:54.397 -04:00 [DBG] Connection id "0HNBAQF2LDT43" completed keep alive response.
2025-03-24 08:59:54.402 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 412.8553ms
2025-03-24 08:59:54.547 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-03-24 08:59:54.574 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-03-24 08:59:54.592 -04:00 [DBG] Request did not match any endpoints
2025-03-24 08:59:54.597 -04:00 [DBG] Connection id "0HNBAQF2LDT43" completed keep alive response.
2025-03-24 08:59:54.614 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 67.0187ms
2025-03-24 08:59:54.829 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-24 08:59:54.835 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-24 08:59:54.838 -04:00 [DBG] Request did not match any endpoints
2025-03-24 08:59:55.160 -04:00 [DBG] Connection id "0HNBAQF2LDT43" completed keep alive response.
2025-03-24 08:59:55.163 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 333.101ms
2025-03-24 09:00:01.180 -04:00 [DBG] Connection id "0HNBAQF2LDT44" received FIN.
2025-03-24 09:00:01.180 -04:00 [DBG] Connection id "0HNBAQF2LDT43" received FIN.
2025-03-24 09:00:01.212 -04:00 [DBG] Connection id "0HNBAQF2LDT43" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 09:00:01.212 -04:00 [DBG] Connection id "0HNBAQF2LDT44" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 09:00:01.217 -04:00 [DBG] Connection id "0HNBAQF2LDT43" disconnecting.
2025-03-24 09:00:01.220 -04:00 [DBG] Connection id "0HNBAQF2LDT44" disconnecting.
2025-03-24 09:00:01.224 -04:00 [DBG] Connection id "0HNBAQF2LDT43" stopped.
2025-03-24 09:00:01.231 -04:00 [DBG] Connection id "0HNBAQF2LDT44" stopped.
2025-03-24 09:00:42.261 -04:00 [DBG] Connection id "0HNBAQF2LDT45" accepted.
2025-03-24 09:00:42.262 -04:00 [DBG] Connection id "0HNBAQF2LDT45" started.
2025-03-24 09:00:42.266 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/register - application/json 125
2025-03-24 09:00:42.313 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/register'
2025-03-24 09:00:42.327 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/register' is valid for the request path '/api/auth/register'
2025-03-24 09:00:42.335 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-24 09:00:42.342 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 09:00:42.346 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 09:00:42.355 -04:00 [WRN] Failed to determine the https port for redirect.
2025-03-24 09:00:42.409 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-24 09:00:42.413 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-24 09:00:42.457 -04:00 [INF] Route matched with {action = "Register", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RegisterAsync(HotelBookingPlatform.Domain.Helpers.RegisterModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-24 09:00:42.461 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 09:00:42.465 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 09:00:42.471 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-24 09:00:42.475 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 09:00:42.483 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 09:00:42.494 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-24 09:00:42.690 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 09:00:42.732 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-24 09:00:42.742 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-24 09:00:42.747 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' using the name '' in request data ...
2025-03-24 09:00:42.752 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 09:00:42.779 -04:00 [DBG] Connection id "0HNBAQF2LDT45", Request id "0HNBAQF2LDT45:00000001": started reading request body.
2025-03-24 09:00:42.781 -04:00 [DBG] Connection id "0HNBAQF2LDT45", Request id "0HNBAQF2LDT45:00000001": done reading request body.
2025-03-24 09:00:42.799 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'
2025-03-24 09:00:42.804 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-24 09:00:42.806 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-24 09:00:42.808 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-24 09:00:42.819 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-24 09:00:43.189 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 09:00:43.265 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 09:00:43.487 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 09:00:43.545 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 09:00:43.616 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 09:00:43.625 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 09:00:43.640 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 09:00:43.746 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 09:00:43.759 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 09:00:43.762 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 09:00:43.765 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 09:00:43.770 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 09:00:44.141 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 09:00:44.143 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 09:00:44.147 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 09:00:44.289 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 09:00:44.355 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-24 09:00:44.410 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-24 09:00:44.807 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 09:00:44.888 -04:00 [DBG] Creating DbConnection.
2025-03-24 09:00:44.926 -04:00 [DBG] Created DbConnection. (40ms).
2025-03-24 09:00:44.931 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:45.197 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:45.203 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:00:45.213 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-03-24 09:00:45.224 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (21ms).
2025-03-24 09:00:45.240 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 09:00:45.338 -04:00 [INF] Executed DbCommand (105ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 09:00:45.347 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:45.361 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 14ms reading results.
2025-03-24 09:00:45.371 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:45.380 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-24 09:00:45.503 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-03-24 09:00:45.506 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-24 09:00:45.530 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 09:00:45.579 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:45.610 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:45.638 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:00:45.639 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:00:45.655 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (17ms).
2025-03-24 09:00:45.663 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 09:00:45.693 -04:00 [INF] Executed DbCommand (30ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 09:00:45.697 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:45.703 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-03-24 09:00:45.705 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:45.708 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:00:45.858 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:00:45.863 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-24 09:00:45.870 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-24 09:00:45.894 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-24 09:00:45.962 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:45.964 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:45.970 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:00:45.972 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:00:45.974 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:00:45.977 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-03-24 09:00:46.014 -04:00 [INF] Executed DbCommand (37ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-03-24 09:00:46.026 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.028 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-03-24 09:00:46.031 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.036 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-24 09:00:46.047 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:00:46.054 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-24 09:00:46.061 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-03-24 09:00:46.074 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 09:00:46.089 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.091 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.093 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:00:46.095 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:00:46.097 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:00:46.099 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-24 09:00:46.113 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-24 09:00:46.143 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:00:46.159 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.161 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 44ms reading results.
2025-03-24 09:00:46.164 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.165 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-24 09:00:46.176 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-03-24 09:00:46.187 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 09:00:46.197 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.200 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.204 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:00:46.206 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-24 09:00:46.208 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 09:00:46.211 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-24 09:00:46.219 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-24 09:00:46.228 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.231 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 09:00:46.237 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.240 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-24 09:00:46.262 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .FirstOrDefault(e => EF.Property<string>(e, "UserId") == __p_0 && EF.Property<string>(e, "RoleId") == __p_1)'
2025-03-24 09:00:46.279 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<string>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<string>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<string> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<string> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<string>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<string>.UserId, IdentityUserRole<string>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetString(0), 
                        (object)dataReader.GetString(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<string>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]: 
                            {
                                return 
                                {
                                    IdentityUserRole<string> instance;
                                    instance = new IdentityUserRole<string>();
                                    instance.<UserId>k__BackingField = dataReader.GetString(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetString(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityUserRole<string>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 09:00:46.293 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.295 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.297 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:00:46.298 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:00:46.303 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-24 09:00:46.306 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-03-24 09:00:46.315 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-03-24 09:00:46.322 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.324 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 09:00:46.326 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.328 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:00:46.340 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.342 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.345 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:00:46.347 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:00:46.348 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:00:46.352 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-24 09:00:46.358 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-24 09:00:46.362 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.366 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-24 09:00:46.371 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.373 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:00:46.393 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityUserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:00:46.397 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.399 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.404 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:00:46.406 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:00:46.408 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:00:46.409 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 09:00:46.419 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 09:00:46.430 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.432 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-03-24 09:00:46.439 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.441 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:00:46.450 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:00:46.456 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-24 09:00:46.457 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-24 09:00:46.470 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-24 09:00:46.497 -04:00 [DBG] Executing 2 update commands as a batch.
2025-03-24 09:00:46.505 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.507 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.511 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-24 09:00:46.516 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-24 09:00:46.521 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:00:46.523 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:00:46.525 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:00:46.528 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-03-24 09:00:46.552 -04:00 [INF] Executed DbCommand (24ms) [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-03-24 09:00:46.557 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.559 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 09:00:46.563 -04:00 [DBG] Committing transaction.
2025-03-24 09:00:46.577 -04:00 [DBG] Committed transaction.
2025-03-24 09:00:46.580 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.582 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:00:46.589 -04:00 [DBG] Disposing transaction.
2025-03-24 09:00:46.591 -04:00 [DBG] An entity of type 'IdentityUserRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:00:46.594 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:00:46.597 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-03-24 09:00:46.614 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-03-24 09:00:46.629 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-24 09:00:46.643 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.646 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.663 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:00:46.666 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-24 09:00:46.671 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-24 09:00:46.673 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-24 09:00:46.683 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-24 09:00:46.691 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.693 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-24 09:00:46.695 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.697 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-24 09:00:46.723 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-03-24 09:00:46.757 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-24 09:00:46.788 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.797 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.799 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:00:46.804 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-24 09:00:46.806 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-24 09:00:46.809 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 09:00:46.821 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 09:00:46.826 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.829 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-24 09:00:46.838 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.840 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:00:46.856 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.859 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.862 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:00:46.863 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:00:46.866 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 09:00:46.872 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 09:00:46.882 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 09:00:46.890 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.895 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-03-24 09:00:46.899 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.905 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-24 09:00:46.907 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:00:46.910 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-24 09:00:46.912 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-24 09:00:46.923 -04:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LocalUser.RefreshTokens'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:00:46.942 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'RefreshToken.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:00:46.975 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:00:46.978 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-24 09:00:46.991 -04:00 [DBG] Executing 2 update commands as a batch.
2025-03-24 09:00:46.994 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.996 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:46.998 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-24 09:00:47.000 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-24 09:00:47.005 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:00:47.007 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:00:47.009 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:00:47.011 -04:00 [DBG] Executing DbCommand [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-03-24 09:00:47.029 -04:00 [INF] Executed DbCommand (18ms) [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-03-24 09:00:47.044 -04:00 [DBG] The foreign key property 'RefreshToken.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-24 09:00:47.051 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:47.055 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 17ms reading results.
2025-03-24 09:00:47.058 -04:00 [DBG] Committing transaction.
2025-03-24 09:00:47.065 -04:00 [DBG] Committed transaction.
2025-03-24 09:00:47.079 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:47.089 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-03-24 09:00:47.092 -04:00 [DBG] Disposing transaction.
2025-03-24 09:00:47.095 -04:00 [DBG] An entity of type 'RefreshToken' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:00:47.098 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:00:47.104 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-03-24 09:00:47.158 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 09:00:47.163 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 09:00:47.164 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-24 09:00:47.165 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-24 09:00:47.169 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-24 09:00:47.173 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-24 09:00:47.223 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API) in 4725.027ms
2025-03-24 09:00:47.226 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-24 09:00:47.228 -04:00 [DBG] Connection id "0HNBAQF2LDT45" completed keep alive response.
2025-03-24 09:00:47.241 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 09:00:47.257 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:00:47.262 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-24 09:00:47.270 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/register - 200 null application/json; charset=utf-8 5003.8807ms
2025-03-24 09:00:51.242 -04:00 [DBG] Connection id "0HNBAQF2LDT45" received FIN.
2025-03-24 09:00:51.251 -04:00 [DBG] Connection id "0HNBAQF2LDT45" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 09:00:51.261 -04:00 [DBG] Connection id "0HNBAQF2LDT45" disconnecting.
2025-03-24 09:00:51.275 -04:00 [DBG] Connection id "0HNBAQF2LDT45" stopped.
2025-03-24 09:01:22.744 -04:00 [DBG] Connection id "0HNBAQF2LDT46" accepted.
2025-03-24 09:01:22.746 -04:00 [DBG] Connection id "0HNBAQF2LDT46" started.
2025-03-24 09:01:22.748 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 62
2025-03-24 09:01:22.802 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-24 09:01:22.806 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-24 09:01:22.809 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 09:01:22.811 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 09:01:22.814 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 09:01:22.816 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-24 09:01:22.818 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 09:01:22.866 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-24 09:01:22.874 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 09:01:22.876 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 09:01:22.879 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-24 09:01:22.883 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 09:01:22.886 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 09:01:22.891 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-24 09:01:22.912 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-24 09:01:22.925 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-24 09:01:22.944 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-24 09:01:22.962 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 09:01:22.974 -04:00 [DBG] Connection id "0HNBAQF2LDT46", Request id "0HNBAQF2LDT46:00000001": started reading request body.
2025-03-24 09:01:22.999 -04:00 [DBG] Connection id "0HNBAQF2LDT46", Request id "0HNBAQF2LDT46:00000001": done reading request body.
2025-03-24 09:01:23.013 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-24 09:01:23.015 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 09:01:23.024 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 09:01:23.027 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-24 09:01:23.032 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 09:01:23.131 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 09:01:23.135 -04:00 [DBG] Creating DbConnection.
2025-03-24 09:01:23.138 -04:00 [DBG] Created DbConnection. (2ms).
2025-03-24 09:01:23.139 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:01:23.141 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:01:23.143 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:01:23.145 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:01:23.147 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:01:23.149 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 09:01:23.161 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 09:01:23.166 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:01:23.183 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:01:23.192 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:01:23.194 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 28ms reading results.
2025-03-24 09:01:23.197 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:01:23.199 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:01:23.293 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:01:23.295 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:01:23.297 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:01:23.299 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-24 09:01:23.305 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-24 09:01:23.308 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-24 09:01:23.314 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-24 09:01:23.318 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:01:23.322 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-03-24 09:01:23.325 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:01:23.328 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:01:23.331 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:01:23.334 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:01:23.339 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:01:23.341 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-24 09:01:23.343 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 09:01:23.346 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 09:01:23.351 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 09:01:23.358 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:01:23.360 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 09:01:23.363 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:01:23.365 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:01:23.368 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:01:23.374 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:01:23.376 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:01:23.377 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:01:23.380 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 09:01:23.382 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 09:01:23.390 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 09:01:23.393 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:01:23.395 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 09:01:23.398 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:01:23.400 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-24 09:01:23.408 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 09:01:23.412 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 09:01:23.413 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-24 09:01:23.414 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-24 09:01:23.417 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-24 09:01:23.421 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-24 09:01:23.424 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 533.6333ms
2025-03-24 09:01:23.427 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 09:01:23.429 -04:00 [DBG] Connection id "0HNBAQF2LDT46" completed keep alive response.
2025-03-24 09:01:23.432 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 09:01:23.444 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:01:23.446 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:01:23.450 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 702.2409ms
2025-03-24 09:01:31.303 -04:00 [DBG] Connection id "0HNBAQF2LDT46" received FIN.
2025-03-24 09:01:31.305 -04:00 [DBG] Connection id "0HNBAQF2LDT46" disconnecting.
2025-03-24 09:01:31.307 -04:00 [DBG] Connection id "0HNBAQF2LDT46" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 09:01:31.317 -04:00 [DBG] Connection id "0HNBAQF2LDT46" stopped.
2025-03-24 09:02:25.654 -04:00 [DBG] Connection id "0HNBAQF2LDT47" accepted.
2025-03-24 09:02:25.656 -04:00 [DBG] Connection id "0HNBAQF2LDT47" started.
2025-03-24 09:02:25.658 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Booking/create - application/json 165
2025-03-24 09:02:25.664 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/create'
2025-03-24 09:02:25.666 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/create' is valid for the request path '/api/Booking/create'
2025-03-24 09:02:25.728 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 09:02:25.729 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 09:02:25.731 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 09:02:25.796 -04:00 [DBG] Successfully validated the token.
2025-03-24 09:02:25.799 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 09:02:25.801 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 09:02:25.810 -04:00 [INF] Route matched with {action = "CreateBooking", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateBooking(HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-03-24 09:02:25.815 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 09:02:25.819 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 09:02:25.826 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-24 09:02:25.830 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 09:02:25.834 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 09:02:25.837 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 09:02:26.027 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 09:02:26.030 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 09:02:26.034 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' using the name '' in request data ...
2025-03-24 09:02:26.036 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 09:02:26.052 -04:00 [DBG] Connection id "0HNBAQF2LDT47", Request id "0HNBAQF2LDT47:00000001": started reading request body.
2025-03-24 09:02:26.059 -04:00 [DBG] Connection id "0HNBAQF2LDT47", Request id "0HNBAQF2LDT47:00000001": done reading request body.
2025-03-24 09:02:26.096 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'
2025-03-24 09:02:26.101 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 09:02:26.110 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 09:02:26.117 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 09:02:26.132 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 09:02:26.165 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 09:02:26.169 -04:00 [DBG] Creating DbConnection.
2025-03-24 09:02:26.170 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-24 09:02:26.175 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:26.178 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:26.181 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:02:26.183 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:02:26.185 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:02:26.186 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 09:02:26.201 -04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 09:02:26.208 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:26.212 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:26.219 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:26.233 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 28ms reading results.
2025-03-24 09:02:26.237 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:26.246 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-24 09:02:26.275 -04:00 [DBG] Compiling query expression: 
'DbSet<Room>()
    .Include(r => r.RoomClass)
    .FirstOrDefault(r => r.RoomID == __id_0)'
2025-03-24 09:02:26.285 -04:00 [DBG] Including navigation: 'Room.RoomClass'.
2025-03-24 09:02:26.310 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Room>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Room>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
                1 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 8], [Property: RoomClass.Description (string) MaxLength(500), 9], [Property: RoomClass.HotelId (int) Required FK Index, 10], [Property: RoomClass.Name (string) Required, 11], [Property: RoomClass.RoomType (RoomType) Required, 12] }
            SELECT TOP(1) r.RoomID, r.AdultsCapacity, r.ChildrenCapacity, r.CreatedAtUtc, r.Number, r.PricePerNight, r.RoomClassID, r0.RoomClassID, r0.CreatedAtUtc, r0.Description, r0.HotelId, r0.Name, r0.RoomType
            FROM Rooms AS r
            INNER JOIN RoomClasses AS r0 ON r.RoomClassID == r0.RoomClassID
            WHERE r.RoomID == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
                1 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 8], [Property: RoomClass.Description (string) MaxLength(500), 9], [Property: RoomClass.HotelId (int) Required FK Index, 10], [Property: RoomClass.Name (string) Required, 11], [Property: RoomClass.RoomType (RoomType) Required, 12] }
            SELECT TOP(1) r.RoomID, r.AdultsCapacity, r.ChildrenCapacity, r.CreatedAtUtc, r.Number, r.PricePerNight, r.RoomClassID, r0.RoomClassID, r0.CreatedAtUtc, r0.Description, r0.HotelId, r0.Name, r0.RoomType
            FROM Rooms AS r
            INNER JOIN RoomClasses AS r0 ON r.RoomClassID == r0.RoomClassID
            WHERE r.RoomID == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Room entity;
            RoomClass entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Room instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Room);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Room.RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Room)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]: 
                            {
                                return 
                                {
                                    Room instance;
                                    instance = new Room();
                                    instance.<RoomID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AdultsCapacity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ChildrenCapacity>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<Number>k__BackingField = dataReader.GetString(4);
                                    instance.<PricePerNight>k__BackingField = dataReader.GetDecimal(5);
                                    instance.<RoomClassID>k__BackingField = dataReader.GetInt32(6);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Room)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                RoomClass instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(RoomClass);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: RoomClass.RoomClassID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(7) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (RoomClass)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]: 
                            {
                                return 
                                {
                                    RoomClass instance;
                                    instance = new RoomClass();
                                    instance.<RoomClassID>k__BackingField = dataReader.GetInt32(7);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(8);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(10);
                                    instance.<Name>k__BackingField = dataReader.GetString(11);
                                    instance.<RoomType>k__BackingField = Invoke(((EnumToNumberConverter<RoomType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: RoomClass.RoomType (RoomType) Required | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("RoomType")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(12));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(RoomClass)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Room, Room, RoomClass>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Room.RoomClass (RoomClass) ToPrincipal RoomClass Inverse: Rooms | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindNavigation("RoomClass")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: RoomClass.Rooms (ICollection<Room>) Collection ToDependent Room Inverse: RoomClass | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms")], 
                fixup: (namelessParameter{9}, namelessParameter{10}) => 
                {
                    namelessParameter{9}.<RoomClass>k__BackingField = namelessParameter{10};
                    return [LIFTABLE Constant: ClrICollectionAccessor<RoomClass, ICollection<Room>, Room> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 09:02:26.331 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:26.334 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:26.336 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:02:26.341 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-24 09:02:26.344 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-24 09:02:26.346 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 09:02:26.367 -04:00 [INF] Executed DbCommand (21ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 09:02:26.394 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:26.429 -04:00 [DBG] The navigation 'Room.RoomClass' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:26.435 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:26.454 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:26.460 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 89ms reading results.
2025-03-24 09:02:26.462 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:26.464 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-24 09:02:26.475 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:26.477 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:26.480 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:02:26.481 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:02:26.483 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:02:26.485 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 09:02:26.493 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 09:02:26.498 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:26.501 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 09:02:26.503 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:26.509 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-24 09:02:26.516 -04:00 [DBG] Compiling query expression: 
'DbSet<Discount>()
    .Where(d => d.RoomID == __roomId_0 && d.StartDateUtc <= __checkOutDate_1 && d.EndDateUtc >= __checkInDate_2 && DateTime.UtcNow >= d.StartDateUtc && DateTime.UtcNow <= d.EndDateUtc)
    .FirstOrDefault()'
2025-03-24 09:02:26.538 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Discount>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Discount>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Discount.DiscountID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Discount.CreatedAtUtc (DateTime) Required, 1], [Property: Discount.EndDateUtc (DateTime) Required, 2], [Property: Discount.IsActive (bool) Required, 3], [Property: Discount.Percentage (decimal) Required, 4], [Property: Discount.RoomClassID (no field, int?) Shadow FK Index, 5], [Property: Discount.RoomID (int) Required FK Index, 6], [Property: Discount.StartDateUtc (DateTime) Required, 7] }
            SELECT TOP(1) d.DiscountID, d.CreatedAtUtc, d.EndDateUtc, d.IsActive, d.Percentage, d.RoomClassID, d.RoomID, d.StartDateUtc
            FROM Discounts AS d
            WHERE ((((d.RoomID == @__roomId_0) && (d.StartDateUtc <= @__checkOutDate_1)) && (d.EndDateUtc >= @__checkInDate_2)) && (now() >= d.StartDateUtc)) && (now() <= d.EndDateUtc)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Discount.DiscountID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Discount.CreatedAtUtc (DateTime) Required, 1], [Property: Discount.EndDateUtc (DateTime) Required, 2], [Property: Discount.IsActive (bool) Required, 3], [Property: Discount.Percentage (decimal) Required, 4], [Property: Discount.RoomClassID (no field, int?) Shadow FK Index, 5], [Property: Discount.RoomID (int) Required FK Index, 6], [Property: Discount.StartDateUtc (DateTime) Required, 7] }
            SELECT TOP(1) d.DiscountID, d.CreatedAtUtc, d.EndDateUtc, d.IsActive, d.Percentage, d.RoomClassID, d.RoomID, d.StartDateUtc
            FROM Discounts AS d
            WHERE ((((d.RoomID == @__roomId_0) && (d.StartDateUtc <= @__checkOutDate_1)) && (d.EndDateUtc >= @__checkInDate_2)) && (now() >= d.StartDateUtc)) && (now() <= d.EndDateUtc), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Discount entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Discount instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Discount);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Discount.DiscountID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Discount").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Discount)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Discount | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Discount")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Discount | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Discount")]: 
                            {
                                shadowSnapshot1 = (ISnapshot)new Snapshot<int?>(dataReader.IsDBNull(5) ? default(int?) : (int?)dataReader.GetInt32(5));
                                return 
                                {
                                    Discount instance;
                                    instance = new Discount();
                                    instance.<DiscountID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EndDateUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<IsActive>k__BackingField = dataReader.GetBoolean(3);
                                    instance.<Percentage>k__BackingField = dataReader.GetDecimal(4);
                                    instance.<RoomID>k__BackingField = dataReader.GetInt32(6);
                                    instance.<StartDateUtc>k__BackingField = dataReader.GetDateTime(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Discount | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Discount")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Discount)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 09:02:26.558 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:26.561 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:26.564 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:02:26.598 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (34ms).
2025-03-24 09:02:26.647 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (83ms).
2025-03-24 09:02:26.649 -04:00 [DBG] Executing DbCommand [Parameters=[@__roomId_0='?' (DbType = Int32), @__checkOutDate_1='?' (DbType = DateTime), @__checkInDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT d."DiscountID", d."CreatedAtUtc", d."EndDateUtc", d."IsActive", d."Percentage", d."RoomClassID", d."RoomID", d."StartDateUtc"
FROM "Discounts" AS d
WHERE d."RoomID" = @__roomId_0 AND d."StartDateUtc" <= @__checkOutDate_1 AND d."EndDateUtc" >= @__checkInDate_2 AND now() >= d."StartDateUtc" AND now() <= d."EndDateUtc"
LIMIT 1
2025-03-24 09:02:26.738 -04:00 [INF] Executed DbCommand (88ms) [Parameters=[@__roomId_0='?' (DbType = Int32), @__checkOutDate_1='?' (DbType = DateTime), @__checkInDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT d."DiscountID", d."CreatedAtUtc", d."EndDateUtc", d."IsActive", d."Percentage", d."RoomClassID", d."RoomID", d."StartDateUtc"
FROM "Discounts" AS d
WHERE d."RoomID" = @__roomId_0 AND d."StartDateUtc" <= @__checkOutDate_1 AND d."EndDateUtc" >= @__checkInDate_2 AND now() >= d."StartDateUtc" AND now() <= d."EndDateUtc"
LIMIT 1
2025-03-24 09:02:26.848 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:26.850 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 09:02:26.854 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:26.861 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-24 09:02:26.871 -04:00 [DBG] Compiling query expression: 
'DbSet<Hotel>()
    .Include(h => h.City)
    .Include(h => h.Owner)
    .Include(h => h.Reviews)
    .AsSplitQuery()
    .FirstOrDefault(h => h.HotelId == __id_0)'
2025-03-24 09:02:26.878 -04:00 [DBG] Including navigation: 'Hotel.City'.
2025-03-24 09:02:26.882 -04:00 [DBG] Including navigation: 'Hotel.Owner'.
2025-03-24 09:02:26.885 -04:00 [DBG] Including navigation: 'Hotel.Reviews'.
2025-03-24 09:02:26.974 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Hotel>(
    asyncEnumerable: SplitQueryingEnumerable.Create<Hotel>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
                1 -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: City.Country (string) Required, 9], [Property: City.CreatedAtUtc (DateTime) Required, 10], [Property: City.Description (string) Required, 11], [Property: City.Name (string) Required, 12], [Property: City.PostOffice (string) Required, 13], [Property: City.VisitCount (int) Required, 14] }
                2 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: Owner.Email (string) Required, 16], [Property: Owner.FirstName (string) Required MaxLength(50), 17], [Property: Owner.LastName (string) Required MaxLength(50), 18], [Property: Owner.PhoneNumber (string) Required, 19] }
                3 -> 0
                4 -> 8
                5 -> 15
            SELECT TOP(1) h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Hotels AS h
            INNER JOIN Cities AS c ON h.CityID == c.CityID
            INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
            WHERE h.HotelId == @__id_0
            ORDER BY h.HotelId ASC, c.CityID ASC, o.OwnerID ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
                1 -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: City.Country (string) Required, 9], [Property: City.CreatedAtUtc (DateTime) Required, 10], [Property: City.Description (string) Required, 11], [Property: City.Name (string) Required, 12], [Property: City.PostOffice (string) Required, 13], [Property: City.VisitCount (int) Required, 14] }
                2 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: Owner.Email (string) Required, 16], [Property: Owner.FirstName (string) Required MaxLength(50), 17], [Property: Owner.LastName (string) Required MaxLength(50), 18], [Property: Owner.PhoneNumber (string) Required, 19] }
                3 -> 0
                4 -> 8
                5 -> 15
            SELECT TOP(1) h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Hotels AS h
            INNER JOIN Cities AS c ON h.CityID == c.CityID
            INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
            WHERE h.HotelId == @__id_0
            ORDER BY h.HotelId ASC, c.CityID ASC, o.OwnerID ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object> } | Resolver: namelessParameter{0} => new ReaderColumn[]
        { 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("HotelId"), 
                (dataReader, indexMap) => dataReader.GetInt32(0)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CityID"), 
                (dataReader, indexMap) => dataReader.GetInt32(1)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CreatedAtUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(2)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Description"), 
                (dataReader, indexMap) => (object)dataReader.GetString(3)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Name"), 
                (dataReader, indexMap) => (object)dataReader.GetString(4)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("OwnerID"), 
                (dataReader, indexMap) => dataReader.GetInt32(5)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(6)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("StarRating"), 
                (dataReader, indexMap) => dataReader.GetInt32(7)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("CityID"), 
                (dataReader, indexMap) => dataReader.GetInt32(8)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Country"), 
                (dataReader, indexMap) => (object)dataReader.GetString(9)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("CreatedAtUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(10)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Description"), 
                (dataReader, indexMap) => (object)dataReader.GetString(11)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Name"), 
                (dataReader, indexMap) => (object)dataReader.GetString(12)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("PostOffice"), 
                (dataReader, indexMap) => (object)dataReader.GetString(13)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("VisitCount"), 
                (dataReader, indexMap) => dataReader.GetInt32(14)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("OwnerID"), 
                (dataReader, indexMap) => dataReader.GetInt32(15)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("Email"), 
                (dataReader, indexMap) => (object)dataReader.GetString(16)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("FirstName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(17)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("LastName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(18)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(19)
            ) 
        }], 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => resultContext.Values == null ? 
        {
            Hotel entity;
            City entity;
            Owner entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Hotel instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Hotel);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Hotel)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                            {
                                return 
                                {
                                    Hotel instance;
                                    instance = new Hotel();
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(0);
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(3) ? default(string) : (string)dataReader.GetFieldValue<object>(3);
                                    instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(4);
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(5);
                                    instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                    instance.<StarRating>k__BackingField = dataReader.GetInt32(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Hotel)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                City instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(City);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: City.CityID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(8) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (City)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]: 
                            {
                                return 
                                {
                                    City instance;
                                    instance = new City();
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Country>k__BackingField = (string)dataReader.GetFieldValue<object>(9);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(10);
                                    instance.<Description>k__BackingField = (string)dataReader.GetFieldValue<object>(11);
                                    instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(12);
                                    instance.<PostOffice>k__BackingField = (string)dataReader.GetFieldValue<object>(13);
                                    instance.<VisitCount>k__BackingField = dataReader.GetInt32(14);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(City)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                Owner instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(Owner);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Owner.OwnerID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(15) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (Owner)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                            {
                                return 
                                {
                                    Owner instance;
                                    instance = new Owner();
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(15);
                                    instance.<Email>k__BackingField = (string)dataReader.GetFieldValue<object>(16);
                                    instance.<FirstName>k__BackingField = (string)dataReader.GetFieldValue<object>(17);
                                    instance.<LastName>k__BackingField = (string)dataReader.GetFieldValue<object>(18);
                                    instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(19);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Owner)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, City>(
                queryContext: queryContext, 
                entity: (Hotel)(resultContext.Values[0]), 
                relatedEntity: (City)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Hotel.City (City) ToPrincipal City Inverse: Hotels | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("City")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: City.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: City | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindNavigation("Hotels")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<City>k__BackingField = namelessParameter{13};
                    return [LIFTABLE Constant: ClrICollectionAccessor<City, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                        entity: namelessParameter{13}, 
                        value: namelessParameter{12}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, Owner>(
                queryContext: queryContext, 
                entity: (Hotel)(resultContext.Values[0]), 
                relatedEntity: (Owner)(resultContext.Values[2]), 
                navigation: [LIFTABLE Constant: Navigation: Hotel.Owner (Owner) ToPrincipal Owner Inverse: Hotels | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Owner")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Owner.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: Owner | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels")], 
                fixup: (namelessParameter{17}, namelessParameter{18}) => 
                {
                    namelessParameter{17}.<Owner>k__BackingField = namelessParameter{18};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Owner, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                        entity: namelessParameter{18}, 
                        value: namelessParameter{17}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeSplitIncludeCollection<Hotel, Hotel>(
                collectionId: 0, 
                queryContext: queryContext, 
                parentDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Hotel)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(0), 
                    (object)(int?)dataReader.GetInt32(8), 
                    (object)(int?)dataReader.GetInt32(15) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Hotel.Reviews (ICollection<Review>) Collection ToDependent Review Inverse: Hotel | Resolver: namelessParameter{20} => namelessParameter{20}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<Review>, Review> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
            return } : (Hotel)(resultContext.Values[0]), 
        relatedDataLoaders: null, 
        relatedDataLoadersAsync: (queryContext, executionStrategy, resultCoordinator) => ShaperProcessingExpressionVisitor.TaskAwaiter(new Func<Task>[]{ () => ShaperProcessingExpressionVisitor.PopulateSplitIncludeCollectionAsync<Hotel, Review>(
            collectionId: 0, 
            queryContext: (RelationalQueryContext)queryContext, 
            executionStrategy: executionStrategy, 
            relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
                Client Projections:
                    0 -> Dictionary<IProperty, int> { [Property: Review.ReviewID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Review.Content (string) Required, 1], [Property: Review.CreatedAtUtc (DateTime) Required, 2], [Property: Review.HotelId (int) Required FK Index, 3], [Property: Review.ModifiedAtUtc (DateTime?), 4], [Property: Review.Rating (int) Required, 5], [Property: Review.UserId (string) Required FK Index, 6] }
                    1 -> 7
                    2 -> 8
                    3 -> 9
                SELECT r.ReviewID, r.Content, r.CreatedAtUtc, r.HotelId, r.ModifiedAtUtc, r.Rating, r.UserId, s.HotelId, s.CityID, s.OwnerID
                FROM 
                (
                    SELECT TOP(1) h.HotelId, c.CityID, o.OwnerID
                    FROM Hotels AS h
                    INNER JOIN Cities AS c ON h.CityID == c.CityID
                    INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
                    WHERE h.HotelId == @__id_0
                ) AS s
                INNER JOIN Reviews AS r ON s.HotelId == r.HotelId
                ORDER BY s.HotelId ASC, s.CityID ASC, s.OwnerID ASC) | Resolver: c => new RelationalCommandCache(
                c.Dependencies.MemoryCache, 
                c.RelationalDependencies.QuerySqlGeneratorFactory, 
                c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
                Client Projections:
                    0 -> Dictionary<IProperty, int> { [Property: Review.ReviewID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Review.Content (string) Required, 1], [Property: Review.CreatedAtUtc (DateTime) Required, 2], [Property: Review.HotelId (int) Required FK Index, 3], [Property: Review.ModifiedAtUtc (DateTime?), 4], [Property: Review.Rating (int) Required, 5], [Property: Review.UserId (string) Required FK Index, 6] }
                    1 -> 7
                    2 -> 8
                    3 -> 9
                SELECT r.ReviewID, r.Content, r.CreatedAtUtc, r.HotelId, r.ModifiedAtUtc, r.Rating, r.UserId, s.HotelId, s.CityID, s.OwnerID
                FROM 
                (
                    SELECT TOP(1) h.HotelId, c.CityID, o.OwnerID
                    FROM Hotels AS h
                    INNER JOIN Cities AS c ON h.CityID == c.CityID
                    INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
                    WHERE h.HotelId == @__id_0
                ) AS s
                INNER JOIN Reviews AS r ON s.HotelId == r.HotelId
                ORDER BY s.HotelId ASC, s.CityID ASC, s.OwnerID ASC, 
                False, 
                new HashSet<string>(
                    new string[]{ }, 
                    StringComparer.Ordinal
                )
            )].GetRelationalCommandTemplate(parameters), 
            readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<DateTime>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int> } | Resolver: namelessParameter{22} => new ReaderColumn[]
            { 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("ReviewID"), 
                    (dataReader, indexMap) => dataReader.GetInt32(0)
                ), 
                new ReaderColumn<object>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("Content"), 
                    (dataReader, indexMap) => (object)dataReader.GetString(1)
                ), 
                new ReaderColumn<DateTime>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("CreatedAtUtc"), 
                    (dataReader, indexMap) => dataReader.GetDateTime(2)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("HotelId"), 
                    (dataReader, indexMap) => dataReader.GetInt32(3)
                ), 
                new ReaderColumn<DateTime>(
                    True, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("ModifiedAtUtc"), 
                    (dataReader, indexMap) => dataReader.GetDateTime(4)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("Rating"), 
                    (dataReader, indexMap) => dataReader.GetInt32(5)
                ), 
                new ReaderColumn<object>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("UserId"), 
                    (dataReader, indexMap) => (object)dataReader.GetString(6)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(7)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(8)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(9)
                ) 
            }], 
            detailedErrorsEnabled: False, 
            resultCoordinator: resultCoordinator, 
            childIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(int?)dataReader.GetInt32(7), 
                (object)(int?)dataReader.GetInt32(8), 
                (object)(int?)dataReader.GetInt32(9) 
            }], 
            identifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
            }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Review entity;
                entity = 
                {
                    MaterializationContext materializationContext4;
                    IEntityType entityType4;
                    Review instance4;
                    InternalEntityEntry entry4;
                    bool hasNullKey4;
                    materializationContext4 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance4 = default(Review);
                    entry4 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Review.ReviewID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey4);
                    !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                    {
                        entityType4 = entry4.EntityType;
                        return instance4 = (Review)entry4.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot4;
                        shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType4 = [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")];
                        instance4 = switch (entityType4)
                        {
                            case [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{24} => namelessParameter{24}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")]: 
                                {
                                    return 
                                    {
                                        Review instance;
                                        instance = new Review();
                                        instance.<ReviewID>k__BackingField = dataReader.GetInt32(0);
                                        instance.<Content>k__BackingField = (string)dataReader.GetFieldValue<object>(1);
                                        instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<HotelId>k__BackingField = dataReader.GetInt32(3);
                                        instance.<ModifiedAtUtc>k__BackingField = dataReader.IsDBNull(4) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(4);
                                        instance.<Rating>k__BackingField = dataReader.GetInt32(5);
                                        instance.<UserId>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext4.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{25} => namelessParameter{25}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Review)
                        }
                        ;
                        entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType4, 
                            entity: instance4, 
                            snapshot: shadowSnapshot4);
                        return instance4;
                    } : default(void);
                    return instance4;
                };
                return entity;
            }, 
            relatedDataLoaders: null, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Review.Hotel (Hotel) ToPrincipal Hotel Inverse: Reviews | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindNavigation("Hotel")], 
            fixup: (namelessParameter{27}, namelessParameter{28}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<Review>, Review> | Resolver: namelessParameter{29} => namelessParameter{29}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews").GetCollectionAccessor()].Add(
                    entity: namelessParameter{27}, 
                    value: namelessParameter{28}, 
                    forMaterialization: True);
                return namelessParameter{28}.<Hotel>k__BackingField = namelessParameter{27};
            }, 
            trackingQuery: True) }), 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 09:02:27.033 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:27.035 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:27.037 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:02:27.041 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:02:27.045 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-24 09:02:27.048 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-24 09:02:27.069 -04:00 [INF] Executed DbCommand (21ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-24 09:02:27.101 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:27.103 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-03-24 09:02:27.110 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:27.112 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:02:27.117 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API) in 1280.024ms
2025-03-24 09:02:27.120 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 09:02:27.203 -04:00 [DBG] Connection id "0HNBAQF2LDT47" completed keep alive response.
2025-03-24 09:02:27.208 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 09:02:27.211 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:27.217 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-24 09:02:27.224 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Booking/create - 404 null application/json 1566.7413ms
2025-03-24 09:02:31.391 -04:00 [DBG] Connection id "0HNBAQF2LDT47" received FIN.
2025-03-24 09:02:31.399 -04:00 [DBG] Connection id "0HNBAQF2LDT47" disconnecting.
2025-03-24 09:02:31.405 -04:00 [DBG] Connection id "0HNBAQF2LDT47" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 09:02:31.416 -04:00 [DBG] Connection id "0HNBAQF2LDT47" stopped.
2025-03-24 09:02:44.270 -04:00 [DBG] Connection id "0HNBAQF2LDT48" accepted.
2025-03-24 09:02:44.271 -04:00 [DBG] Connection id "0HNBAQF2LDT48" started.
2025-03-24 09:02:44.273 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Booking/create - application/json 165
2025-03-24 09:02:44.277 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/create'
2025-03-24 09:02:44.278 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/create' is valid for the request path '/api/Booking/create'
2025-03-24 09:02:44.280 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 09:02:44.281 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 09:02:44.283 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 09:02:44.285 -04:00 [DBG] Successfully validated the token.
2025-03-24 09:02:44.287 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 09:02:44.289 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 09:02:44.291 -04:00 [INF] Route matched with {action = "CreateBooking", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateBooking(HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-03-24 09:02:44.293 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 09:02:44.295 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 09:02:44.297 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-24 09:02:44.302 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 09:02:44.305 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 09:02:44.336 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 09:02:44.344 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 09:02:44.347 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 09:02:44.355 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' using the name '' in request data ...
2025-03-24 09:02:44.359 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 09:02:44.365 -04:00 [DBG] Connection id "0HNBAQF2LDT48", Request id "0HNBAQF2LDT48:00000001": started reading request body.
2025-03-24 09:02:44.367 -04:00 [DBG] Connection id "0HNBAQF2LDT48", Request id "0HNBAQF2LDT48:00000001": done reading request body.
2025-03-24 09:02:44.370 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'
2025-03-24 09:02:44.371 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 09:02:44.376 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 09:02:44.378 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 09:02:44.380 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 09:02:44.385 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 09:02:44.388 -04:00 [DBG] Creating DbConnection.
2025-03-24 09:02:44.393 -04:00 [DBG] Created DbConnection. (4ms).
2025-03-24 09:02:44.395 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.397 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.400 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:02:44.401 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:02:44.403 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:02:44.409 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 09:02:44.416 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 09:02:44.420 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:44.427 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:44.429 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.431 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 11ms reading results.
2025-03-24 09:02:44.434 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.436 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-24 09:02:44.438 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.444 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.446 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:02:44.448 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:02:44.449 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:02:44.451 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 09:02:44.460 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 09:02:44.464 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:44.467 -04:00 [DBG] The navigation 'Room.RoomClass' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:44.469 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:44.471 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.478 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 14ms reading results.
2025-03-24 09:02:44.481 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.484 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:02:44.487 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.491 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.495 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:02:44.497 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:02:44.499 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 09:02:44.501 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 09:02:44.510 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 09:02:44.514 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.515 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-03-24 09:02:44.518 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.520 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:02:44.524 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.529 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.531 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:02:44.533 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:02:44.535 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 09:02:44.538 -04:00 [DBG] Executing DbCommand [Parameters=[@__roomId_0='?' (DbType = Int32), @__checkOutDate_1='?' (DbType = DateTime), @__checkInDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT d."DiscountID", d."CreatedAtUtc", d."EndDateUtc", d."IsActive", d."Percentage", d."RoomClassID", d."RoomID", d."StartDateUtc"
FROM "Discounts" AS d
WHERE d."RoomID" = @__roomId_0 AND d."StartDateUtc" <= @__checkOutDate_1 AND d."EndDateUtc" >= @__checkInDate_2 AND now() >= d."StartDateUtc" AND now() <= d."EndDateUtc"
LIMIT 1
2025-03-24 09:02:44.547 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__roomId_0='?' (DbType = Int32), @__checkOutDate_1='?' (DbType = DateTime), @__checkInDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT d."DiscountID", d."CreatedAtUtc", d."EndDateUtc", d."IsActive", d."Percentage", d."RoomClassID", d."RoomID", d."StartDateUtc"
FROM "Discounts" AS d
WHERE d."RoomID" = @__roomId_0 AND d."StartDateUtc" <= @__checkOutDate_1 AND d."EndDateUtc" >= @__checkInDate_2 AND now() >= d."StartDateUtc" AND now() <= d."EndDateUtc"
LIMIT 1
2025-03-24 09:02:44.551 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.554 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 09:02:44.560 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.563 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:02:44.568 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.570 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.577 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:02:44.579 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-24 09:02:44.581 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 09:02:44.583 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-24 09:02:44.603 -04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-24 09:02:44.622 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:44.650 -04:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:44.654 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:44.677 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:44.680 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:44.701 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:02:44.703 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:02:44.705 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:02:44.710 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-24 09:02:44.721 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-24 09:02:44.732 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.735 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 120ms reading results.
2025-03-24 09:02:44.738 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.742 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 13ms reading results.
2025-03-24 09:02:44.745 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.747 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:02:44.750 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.752 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.755 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:02:44.759 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-24 09:02:44.761 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-03-24 09:02:44.763 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 09:02:44.769 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 09:02:44.780 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.783 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 09:02:44.785 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:44.788 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:02:44.827 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Booking.BookingID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:44.911 -04:00 [DBG] Context 'AppDbContext' started tracking 'Booking' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:44.932 -04:00 [DBG] Context 'AppDbContext' started tracking 'BookingRoom' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:44.936 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-24 09:02:44.938 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-24 09:02:45.115 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-24 09:02:45.135 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:45.137 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:45.143 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-24 09:02:45.145 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-24 09:02:45.147 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:02:45.149 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:02:45.159 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (11ms).
2025-03-24 09:02:45.162 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Decimal), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?', @p6='?' (DbType = Guid), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Decimal), @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Bookings" ("AfterDiscountedPrice", "BookingDateUtc", "CheckInDateUtc", "CheckOutDateUtc", "ConfirmationNumber", "CreatedById", "GuestId", "HotelId", "PaymentMethod", "Status", "TotalPrice", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11)
RETURNING "BookingID";
2025-03-24 09:02:45.203 -04:00 [INF] Executed DbCommand (41ms) [Parameters=[@p0='?' (DbType = Decimal), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?', @p6='?' (DbType = Guid), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Decimal), @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Bookings" ("AfterDiscountedPrice", "BookingDateUtc", "CheckInDateUtc", "CheckOutDateUtc", "ConfirmationNumber", "CreatedById", "GuestId", "HotelId", "PaymentMethod", "Status", "TotalPrice", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11)
RETURNING "BookingID";
2025-03-24 09:02:45.212 -04:00 [DBG] The foreign key property 'Booking.BookingID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-24 09:02:45.217 -04:00 [DBG] The foreign key property 'BookingRoom.BookingID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-24 09:02:45.222 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:45.226 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 16ms reading results.
2025-03-24 09:02:45.229 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:02:45.230 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:02:45.232 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:02:45.234 -04:00 [DBG] Executing DbCommand [Parameters=[@p12='?' (DbType = Int32), @p13='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "BookingRoom" ("BookingID", "RoomID")
VALUES (@p12, @p13);
2025-03-24 09:02:45.246 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@p12='?' (DbType = Int32), @p13='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "BookingRoom" ("BookingID", "RoomID")
VALUES (@p12, @p13);
2025-03-24 09:02:45.249 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:45.252 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 09:02:45.259 -04:00 [DBG] Committing transaction.
2025-03-24 09:02:45.270 -04:00 [DBG] Committed transaction.
2025-03-24 09:02:45.272 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:45.278 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-24 09:02:45.281 -04:00 [DBG] Disposing transaction.
2025-03-24 09:02:45.284 -04:00 [DBG] An entity of type 'Booking' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:45.295 -04:00 [DBG] An entity of type 'BookingRoom' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:02:45.298 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-03-24 09:02:45.302 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-24 09:02:45.309 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-24 09:02:45.311 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-24 09:02:45.313 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 0 entities written to the database.
2025-03-24 09:02:45.332 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 09:02:45.336 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 09:02:45.337 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-24 09:02:45.338 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-24 09:02:45.342 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-24 09:02:45.344 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Booking.BookingDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-24 09:02:45.368 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API) in 1031.7497ms
2025-03-24 09:02:45.370 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 09:02:45.372 -04:00 [DBG] Connection id "0HNBAQF2LDT48" completed keep alive response.
2025-03-24 09:02:45.381 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 09:02:45.383 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:02:45.386 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-24 09:02:45.395 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Booking/create - 200 null application/json; charset=utf-8 1121.6413ms
2025-03-24 09:02:51.407 -04:00 [DBG] Connection id "0HNBAQF2LDT48" received FIN.
2025-03-24 09:02:51.411 -04:00 [DBG] Connection id "0HNBAQF2LDT48" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 09:02:51.413 -04:00 [DBG] Connection id "0HNBAQF2LDT48" disconnecting.
2025-03-24 09:02:51.415 -04:00 [DBG] Connection id "0HNBAQF2LDT48" stopped.
2025-03-24 09:03:21.225 -04:00 [DBG] Connection id "0HNBAQF2LDT49" accepted.
2025-03-24 09:03:21.227 -04:00 [DBG] Connection id "0HNBAQF2LDT49" started.
2025-03-24 09:03:21.229 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Booking/create - application/json 166
2025-03-24 09:03:21.251 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/create'
2025-03-24 09:03:21.255 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/create' is valid for the request path '/api/Booking/create'
2025-03-24 09:03:21.266 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 09:03:21.268 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 09:03:21.269 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 09:03:21.271 -04:00 [DBG] Successfully validated the token.
2025-03-24 09:03:21.272 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 09:03:21.278 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 09:03:21.281 -04:00 [INF] Route matched with {action = "CreateBooking", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateBooking(HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-03-24 09:03:21.285 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 09:03:21.288 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 09:03:21.297 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-24 09:03:21.301 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 09:03:21.303 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 09:03:21.305 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 09:03:21.322 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 09:03:21.328 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 09:03:21.330 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' using the name '' in request data ...
2025-03-24 09:03:21.333 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 09:03:21.336 -04:00 [DBG] Connection id "0HNBAQF2LDT49", Request id "0HNBAQF2LDT49:00000001": started reading request body.
2025-03-24 09:03:21.339 -04:00 [DBG] Connection id "0HNBAQF2LDT49", Request id "0HNBAQF2LDT49:00000001": done reading request body.
2025-03-24 09:03:21.349 -04:00 [DBG] JSON input formatter threw an exception: 'C' is an invalid start of a value. Path: $.paymentMethod | LineNumber: 7 | BytePositionInLine: 19.
2025-03-24 09:03:21.351 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 09:03:21.353 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 09:03:21.355 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 09:03:21.361 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 09:03:21.363 -04:00 [DBG] The request has model state errors, returning an error response.
2025-03-24 09:03:21.367 -04:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-03-24 09:03:21.369 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 09:03:21.373 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 09:03:21.377 -04:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-03-24 09:03:21.381 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-03-24 09:03:21.383 -04:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-03-24 09:03:21.412 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API) in 107.0108ms
2025-03-24 09:03:21.415 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 09:03:21.417 -04:00 [DBG] Connection id "0HNBAQF2LDT49" completed keep alive response.
2025-03-24 09:03:21.418 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Booking/create - 400 null application/problem+json; charset=utf-8 189.2613ms
2025-03-24 09:03:21.471 -04:00 [DBG] Connection id "0HNBAQF2LDT49" received FIN.
2025-03-24 09:03:21.473 -04:00 [DBG] Connection id "0HNBAQF2LDT49" disconnecting.
2025-03-24 09:03:21.478 -04:00 [DBG] Connection id "0HNBAQF2LDT49" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 09:03:21.490 -04:00 [DBG] Connection id "0HNBAQF2LDT49" stopped.
2025-03-24 09:03:33.819 -04:00 [DBG] Connection id "0HNBAQF2LDT4A" accepted.
2025-03-24 09:03:33.820 -04:00 [DBG] Connection id "0HNBAQF2LDT4A" started.
2025-03-24 09:03:33.822 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Booking/create - application/json 165
2025-03-24 09:03:33.828 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/create'
2025-03-24 09:03:33.830 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/create' is valid for the request path '/api/Booking/create'
2025-03-24 09:03:33.851 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 09:03:33.856 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 09:03:33.863 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 09:03:33.865 -04:00 [DBG] Successfully validated the token.
2025-03-24 09:03:33.866 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 09:03:33.867 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 09:03:33.868 -04:00 [INF] Route matched with {action = "CreateBooking", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateBooking(HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-03-24 09:03:33.871 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 09:03:33.872 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 09:03:33.879 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-24 09:03:33.881 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 09:03:33.883 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 09:03:33.885 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 09:03:33.891 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 09:03:33.895 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 09:03:33.898 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' using the name '' in request data ...
2025-03-24 09:03:33.902 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 09:03:33.904 -04:00 [DBG] Connection id "0HNBAQF2LDT4A", Request id "0HNBAQF2LDT4A:00000001": started reading request body.
2025-03-24 09:03:33.905 -04:00 [DBG] Connection id "0HNBAQF2LDT4A", Request id "0HNBAQF2LDT4A:00000001": done reading request body.
2025-03-24 09:03:33.907 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'
2025-03-24 09:03:33.910 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 09:03:33.912 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 09:03:33.914 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 09:03:33.917 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 09:03:33.919 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 09:03:33.924 -04:00 [DBG] Creating DbConnection.
2025-03-24 09:03:33.928 -04:00 [DBG] Created DbConnection. (4ms).
2025-03-24 09:03:33.929 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:33.931 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:33.933 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:03:33.934 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:03:33.936 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:03:33.939 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 09:03:33.955 -04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 09:03:33.966 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:03:33.968 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:03:33.971 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:33.974 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-03-24 09:03:33.981 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:33.983 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:03:33.986 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:33.989 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:33.995 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:03:33.997 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:03:33.999 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:03:34.001 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 09:03:34.038 -04:00 [INF] Executed DbCommand (37ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 09:03:34.069 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:03:34.087 -04:00 [DBG] The navigation 'Room.RoomClass' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:03:34.107 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:03:34.115 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.127 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 55ms reading results.
2025-03-24 09:03:34.133 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.138 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-24 09:03:34.144 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.147 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.150 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:03:34.153 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:03:34.156 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-03-24 09:03:34.161 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 09:03:34.169 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 09:03:34.203 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.219 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 14ms reading results.
2025-03-24 09:03:34.224 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.239 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (14ms).
2025-03-24 09:03:34.250 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.255 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.269 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:03:34.271 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-24 09:03:34.284 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (15ms).
2025-03-24 09:03:34.287 -04:00 [DBG] Executing DbCommand [Parameters=[@__roomId_0='?' (DbType = Int32), @__checkOutDate_1='?' (DbType = DateTime), @__checkInDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT d."DiscountID", d."CreatedAtUtc", d."EndDateUtc", d."IsActive", d."Percentage", d."RoomClassID", d."RoomID", d."StartDateUtc"
FROM "Discounts" AS d
WHERE d."RoomID" = @__roomId_0 AND d."StartDateUtc" <= @__checkOutDate_1 AND d."EndDateUtc" >= @__checkInDate_2 AND now() >= d."StartDateUtc" AND now() <= d."EndDateUtc"
LIMIT 1
2025-03-24 09:03:34.307 -04:00 [INF] Executed DbCommand (20ms) [Parameters=[@__roomId_0='?' (DbType = Int32), @__checkOutDate_1='?' (DbType = DateTime), @__checkInDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT d."DiscountID", d."CreatedAtUtc", d."EndDateUtc", d."IsActive", d."Percentage", d."RoomClassID", d."RoomID", d."StartDateUtc"
FROM "Discounts" AS d
WHERE d."RoomID" = @__roomId_0 AND d."StartDateUtc" <= @__checkOutDate_1 AND d."EndDateUtc" >= @__checkInDate_2 AND now() >= d."StartDateUtc" AND now() <= d."EndDateUtc"
LIMIT 1
2025-03-24 09:03:34.402 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.412 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 10ms reading results.
2025-03-24 09:03:34.418 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.422 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-24 09:03:34.435 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.437 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.439 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:03:34.440 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:03:34.454 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (15ms).
2025-03-24 09:03:34.473 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-24 09:03:34.499 -04:00 [INF] Executed DbCommand (26ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-24 09:03:34.505 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:03:34.511 -04:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:03:34.513 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:03:34.516 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:03:34.523 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:03:34.531 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:03:34.533 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:03:34.535 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 09:03:34.536 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-24 09:03:34.546 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-24 09:03:34.578 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.583 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 77ms reading results.
2025-03-24 09:03:34.597 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.599 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 26ms reading results.
2025-03-24 09:03:34.603 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.605 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 09:03:34.614 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.619 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.621 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:03:34.622 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 09:03:34.626 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 09:03:34.629 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 09:03:34.642 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 09:03:34.650 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.656 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-03-24 09:03:34.683 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.689 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-24 09:03:34.695 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Booking.BookingID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:03:34.701 -04:00 [DBG] Context 'AppDbContext' started tracking 'Booking' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:03:34.707 -04:00 [DBG] Context 'AppDbContext' started tracking 'BookingRoom' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:03:34.712 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-24 09:03:34.714 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-24 09:03:34.722 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-24 09:03:34.738 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.749 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:34.786 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-24 09:03:34.790 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-24 09:03:34.821 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:03:35.053 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (231ms).
2025-03-24 09:03:35.315 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (494ms).
2025-03-24 09:03:35.438 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Decimal), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?', @p6='?' (DbType = Guid), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Decimal), @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Bookings" ("AfterDiscountedPrice", "BookingDateUtc", "CheckInDateUtc", "CheckOutDateUtc", "ConfirmationNumber", "CreatedById", "GuestId", "HotelId", "PaymentMethod", "Status", "TotalPrice", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11)
RETURNING "BookingID";
2025-03-24 09:03:35.517 -04:00 [INF] Executed DbCommand (80ms) [Parameters=[@p0='?' (DbType = Decimal), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?', @p6='?' (DbType = Guid), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Decimal), @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Bookings" ("AfterDiscountedPrice", "BookingDateUtc", "CheckInDateUtc", "CheckOutDateUtc", "ConfirmationNumber", "CreatedById", "GuestId", "HotelId", "PaymentMethod", "Status", "TotalPrice", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11)
RETURNING "BookingID";
2025-03-24 09:03:35.538 -04:00 [DBG] The foreign key property 'Booking.BookingID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-24 09:03:35.552 -04:00 [DBG] The foreign key property 'BookingRoom.BookingID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-24 09:03:35.560 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:35.566 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 28ms reading results.
2025-03-24 09:03:35.572 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 09:03:35.578 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-03-24 09:03:35.582 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-03-24 09:03:35.584 -04:00 [DBG] Executing DbCommand [Parameters=[@p12='?' (DbType = Int32), @p13='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "BookingRoom" ("BookingID", "RoomID")
VALUES (@p12, @p13);
2025-03-24 09:03:35.590 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p12='?' (DbType = Int32), @p13='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "BookingRoom" ("BookingID", "RoomID")
VALUES (@p12, @p13);
2025-03-24 09:03:35.597 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:35.613 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 15ms reading results.
2025-03-24 09:03:35.619 -04:00 [DBG] Committing transaction.
2025-03-24 09:03:35.628 -04:00 [DBG] Committed transaction.
2025-03-24 09:03:35.637 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:35.644 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-24 09:03:35.646 -04:00 [DBG] Disposing transaction.
2025-03-24 09:03:35.648 -04:00 [DBG] An entity of type 'Booking' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:03:35.651 -04:00 [DBG] An entity of type 'BookingRoom' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 09:03:35.656 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-03-24 09:03:35.660 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-24 09:03:35.661 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-24 09:03:35.665 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-24 09:03:35.667 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 0 entities written to the database.
2025-03-24 09:03:35.670 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 09:03:35.673 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 09:03:35.676 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-24 09:03:35.678 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-24 09:03:35.679 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-24 09:03:35.681 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Booking.BookingDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-24 09:03:35.685 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API) in 1800.0485ms
2025-03-24 09:03:35.704 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 09:03:35.712 -04:00 [DBG] Connection id "0HNBAQF2LDT4A" completed keep alive response.
2025-03-24 09:03:35.726 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 09:03:35.737 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 09:03:35.758 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (21ms).
2025-03-24 09:03:35.777 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Booking/create - 200 null application/json; charset=utf-8 1955.2898ms
2025-03-24 09:03:41.494 -04:00 [DBG] Connection id "0HNBAQF2LDT4A" received FIN.
2025-03-24 09:03:41.503 -04:00 [DBG] Connection id "0HNBAQF2LDT4A" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 09:03:41.512 -04:00 [DBG] Connection id "0HNBAQF2LDT4A" disconnecting.
2025-03-24 09:03:41.515 -04:00 [DBG] Connection id "0HNBAQF2LDT4A" stopped.
2025-03-24 12:22:54.399 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-24 12:22:54.714 -04:00 [DBG] Hosting starting
2025-03-24 12:22:54.752 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-24 12:22:54.773 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-24 12:22:54.846 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-24 12:22:54.860 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-24 12:22:54.868 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-24 12:22:54.873 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-24 12:22:54.877 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-24 12:22:54.960 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-24 12:22:54.969 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-24 12:22:54.977 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-24 12:22:54.981 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-24 12:22:55.107 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-24 12:22:55.109 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-24 12:22:55.110 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-24 12:22:55.113 -04:00 [INF] Hosting environment: Development
2025-03-24 12:22:55.116 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-24 12:22:55.118 -04:00 [DBG] Hosting started
2025-03-24 12:23:27.383 -04:00 [DBG] Connection id "0HNBAU0QJ9BKA" accepted.
2025-03-24 12:23:27.386 -04:00 [DBG] Connection id "0HNBAU0QJ9BKA" started.
2025-03-24 12:23:27.387 -04:00 [DBG] Connection id "0HNBAU0QJ9BKB" accepted.
2025-03-24 12:23:27.404 -04:00 [DBG] Connection id "0HNBAU0QJ9BKB" started.
2025-03-24 12:23:27.997 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-24 12:23:28.015 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-24 12:23:28.166 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-24 12:23:28.169 -04:00 [DBG] Request did not match any endpoints
2025-03-24 12:23:28.925 -04:00 [DBG] Connection id "0HNBAU0QJ9BKA" completed keep alive response.
2025-03-24 12:23:28.947 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 973.8255ms
2025-03-24 12:24:02.879 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 62
2025-03-24 12:24:02.891 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-24 12:24:02.908 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-24 12:24:02.920 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 12:24:02.927 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 12:24:02.935 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 12:24:02.940 -04:00 [WRN] Failed to determine the https port for redirect.
2025-03-24 12:24:03.008 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-24 12:24:03.011 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 12:24:03.049 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-24 12:24:03.054 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 12:24:03.057 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 12:24:03.060 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-24 12:24:03.065 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 12:24:03.069 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 12:24:03.074 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-24 12:24:03.254 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 12:24:03.294 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-24 12:24:03.303 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-24 12:24:03.307 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-24 12:24:03.311 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 12:24:03.346 -04:00 [DBG] Connection id "0HNBAU0QJ9BKA", Request id "0HNBAU0QJ9BKA:00000002": started reading request body.
2025-03-24 12:24:03.349 -04:00 [DBG] Connection id "0HNBAU0QJ9BKA", Request id "0HNBAU0QJ9BKA:00000002": done reading request body.
2025-03-24 12:24:03.363 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-24 12:24:03.367 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 12:24:03.369 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 12:24:03.371 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-24 12:24:03.382 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 12:24:03.728 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 12:24:03.791 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 12:24:03.950 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 12:24:04.003 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 12:24:04.069 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 12:24:04.073 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 12:24:04.088 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 12:24:04.189 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 12:24:04.193 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 12:24:04.196 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 12:24:04.200 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 12:24:04.203 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 12:24:04.378 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 12:24:04.381 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 12:24:04.384 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 12:24:04.524 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 12:24:04.614 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-24 12:24:04.684 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-24 12:24:05.025 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 12:24:05.118 -04:00 [DBG] Creating DbConnection.
2025-03-24 12:24:05.166 -04:00 [DBG] Created DbConnection. (46ms).
2025-03-24 12:24:05.172 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:24:05.437 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:24:05.442 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:24:05.451 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-03-24 12:24:05.457 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (15ms).
2025-03-24 12:24:05.468 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 12:24:05.547 -04:00 [INF] Executed DbCommand (82ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 12:24:05.683 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:24:05.746 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:24:05.769 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:24:05.780 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 223ms reading results.
2025-03-24 12:24:05.787 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:24:05.792 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-24 12:24:05.893 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-03-24 12:24:05.906 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-24 12:24:05.950 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:24:05.953 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:24:05.955 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:24:05.957 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 12:24:05.960 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 12:24:05.966 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-24 12:24:05.974 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-24 12:24:05.979 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:24:05.983 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-03-24 12:24:05.986 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:24:05.988 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-24 12:24:06.006 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-03-24 12:24:06.034 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-24 12:24:06.039 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:24:06.041 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:24:06.043 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:24:06.044 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 12:24:06.051 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-24 12:24:06.053 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 12:24:06.065 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 12:24:06.069 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:24:06.072 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 12:24:06.074 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:24:06.076 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 12:24:06.092 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:24:06.094 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:24:06.098 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:24:06.099 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 12:24:06.101 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 12:24:06.104 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 12:24:06.110 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 12:24:06.120 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:24:06.121 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 12:24:06.124 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:24:06.126 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-24 12:24:06.183 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 12:24:06.188 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 12:24:06.190 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-24 12:24:06.191 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-24 12:24:06.193 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-24 12:24:06.199 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-24 12:24:06.254 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 3179.2958ms
2025-03-24 12:24:06.257 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 12:24:06.260 -04:00 [DBG] Connection id "0HNBAU0QJ9BKA" completed keep alive response.
2025-03-24 12:24:06.269 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 12:24:06.275 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:24:06.280 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-24 12:24:06.289 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 3410.5658ms
2025-03-24 12:24:34.133 -04:00 [DBG] Connection id "0HNBAU0QJ9BKB" received FIN.
2025-03-24 12:24:34.137 -04:00 [DBG] Connection id "0HNBAU0QJ9BKB" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 12:24:34.141 -04:00 [DBG] Connection id "0HNBAU0QJ9BKB" disconnecting.
2025-03-24 12:24:34.144 -04:00 [DBG] Connection id "0HNBAU0QJ9BKB" stopped.
2025-03-24 12:25:48.633 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Booking/create - application/json 260
2025-03-24 12:25:48.641 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/create'
2025-03-24 12:25:48.642 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/create' is valid for the request path '/api/Booking/create'
2025-03-24 12:25:48.701 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 12:25:48.704 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 12:25:48.707 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 12:25:48.792 -04:00 [DBG] Successfully validated the token.
2025-03-24 12:25:48.795 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 12:25:48.797 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 12:25:48.810 -04:00 [INF] Route matched with {action = "CreateBooking", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateBooking(HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-03-24 12:25:48.813 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 12:25:48.815 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 12:25:48.821 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-24 12:25:48.826 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 12:25:48.828 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 12:25:48.830 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 12:25:49.026 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 12:25:49.029 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 12:25:49.031 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' using the name '' in request data ...
2025-03-24 12:25:49.035 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 12:25:49.048 -04:00 [DBG] Connection id "0HNBAU0QJ9BKA", Request id "0HNBAU0QJ9BKA:00000003": started reading request body.
2025-03-24 12:25:49.055 -04:00 [DBG] Connection id "0HNBAU0QJ9BKA", Request id "0HNBAU0QJ9BKA:00000003": done reading request body.
2025-03-24 12:25:49.070 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'
2025-03-24 12:25:49.071 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 12:25:49.074 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 12:25:49.077 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 12:25:49.088 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 12:25:49.170 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 12:25:49.174 -04:00 [DBG] Creating DbConnection.
2025-03-24 12:25:49.176 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-24 12:25:49.177 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.179 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.181 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:25:49.186 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-03-24 12:25:49.189 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-24 12:25:49.191 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 12:25:49.198 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 12:25:49.205 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:25:49.207 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:25:49.210 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.211 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-03-24 12:25:49.214 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.220 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-24 12:25:49.234 -04:00 [DBG] Compiling query expression: 
'DbSet<Room>()
    .Include(r => r.RoomClass)
    .FirstOrDefault(r => r.RoomID == __id_0)'
2025-03-24 12:25:49.248 -04:00 [DBG] Including navigation: 'Room.RoomClass'.
2025-03-24 12:25:49.280 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Room>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Room>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
                1 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 8], [Property: RoomClass.Description (string) MaxLength(500), 9], [Property: RoomClass.HotelId (int) Required FK Index, 10], [Property: RoomClass.Name (string) Required, 11], [Property: RoomClass.RoomType (RoomType) Required, 12] }
            SELECT TOP(1) r.RoomID, r.AdultsCapacity, r.ChildrenCapacity, r.CreatedAtUtc, r.Number, r.PricePerNight, r.RoomClassID, r0.RoomClassID, r0.CreatedAtUtc, r0.Description, r0.HotelId, r0.Name, r0.RoomType
            FROM Rooms AS r
            INNER JOIN RoomClasses AS r0 ON r.RoomClassID == r0.RoomClassID
            WHERE r.RoomID == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Room.AdultsCapacity (int) Required, 1], [Property: Room.ChildrenCapacity (int) Required, 2], [Property: Room.CreatedAtUtc (DateTime) Required, 3], [Property: Room.Number (string) Required MaxLength(50), 4], [Property: Room.PricePerNight (decimal) Required, 5], [Property: Room.RoomClassID (int) Required FK Index, 6] }
                1 -> Dictionary<IProperty, int> { [Property: RoomClass.RoomClassID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: RoomClass.CreatedAtUtc (DateTime) Required, 8], [Property: RoomClass.Description (string) MaxLength(500), 9], [Property: RoomClass.HotelId (int) Required FK Index, 10], [Property: RoomClass.Name (string) Required, 11], [Property: RoomClass.RoomType (RoomType) Required, 12] }
            SELECT TOP(1) r.RoomID, r.AdultsCapacity, r.ChildrenCapacity, r.CreatedAtUtc, r.Number, r.PricePerNight, r.RoomClassID, r0.RoomClassID, r0.CreatedAtUtc, r0.Description, r0.HotelId, r0.Name, r0.RoomType
            FROM Rooms AS r
            INNER JOIN RoomClasses AS r0 ON r.RoomClassID == r0.RoomClassID
            WHERE r.RoomID == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Room entity;
            RoomClass entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Room instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Room);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Room.RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Room)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]: 
                            {
                                return 
                                {
                                    Room instance;
                                    instance = new Room();
                                    instance.<RoomID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AdultsCapacity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ChildrenCapacity>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<Number>k__BackingField = dataReader.GetString(4);
                                    instance.<PricePerNight>k__BackingField = dataReader.GetDecimal(5);
                                    instance.<RoomClassID>k__BackingField = dataReader.GetInt32(6);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Room)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                RoomClass instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(RoomClass);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: RoomClass.RoomClassID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(7) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (RoomClass)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]: 
                            {
                                return 
                                {
                                    RoomClass instance;
                                    instance = new RoomClass();
                                    instance.<RoomClassID>k__BackingField = dataReader.GetInt32(7);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(8);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(10);
                                    instance.<Name>k__BackingField = dataReader.GetString(11);
                                    instance.<RoomType>k__BackingField = Invoke(((EnumToNumberConverter<RoomType, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: RoomClass.RoomType (RoomType) Required | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindProperty("RoomType")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(12));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: RoomClass | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(RoomClass)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Room, Room, RoomClass>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Room.RoomClass (RoomClass) ToPrincipal RoomClass Inverse: Rooms | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindNavigation("RoomClass")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: RoomClass.Rooms (ICollection<Room>) Collection ToDependent Room Inverse: RoomClass | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms")], 
                fixup: (namelessParameter{9}, namelessParameter{10}) => 
                {
                    namelessParameter{9}.<RoomClass>k__BackingField = namelessParameter{10};
                    return [LIFTABLE Constant: ClrICollectionAccessor<RoomClass, ICollection<Room>, Room> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.RoomClass").FindNavigation("Rooms").GetCollectionAccessor()].Add(
                        entity: namelessParameter{10}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 12:25:49.299 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.303 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.306 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:25:49.307 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 12:25:49.309 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 12:25:49.312 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 12:25:49.326 -04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 12:25:49.353 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:25:49.399 -04:00 [DBG] The navigation 'Room.RoomClass' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:25:49.408 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:25:49.425 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.430 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 99ms reading results.
2025-03-24 12:25:49.432 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.436 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-24 12:25:49.442 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.444 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.449 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:25:49.453 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-24 12:25:49.455 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-24 12:25:49.457 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 12:25:49.464 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 12:25:49.471 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.476 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-03-24 12:25:49.478 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.480 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-24 12:25:49.488 -04:00 [DBG] Compiling query expression: 
'DbSet<Discount>()
    .Where(d => d.RoomID == __roomId_0 && d.StartDateUtc <= __checkOutDate_1 && d.EndDateUtc >= __checkInDate_2 && DateTime.UtcNow >= d.StartDateUtc && DateTime.UtcNow <= d.EndDateUtc)
    .FirstOrDefault()'
2025-03-24 12:25:49.512 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Discount>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Discount>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Discount.DiscountID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Discount.CreatedAtUtc (DateTime) Required, 1], [Property: Discount.EndDateUtc (DateTime) Required, 2], [Property: Discount.IsActive (bool) Required, 3], [Property: Discount.Percentage (decimal) Required, 4], [Property: Discount.RoomClassID (no field, int?) Shadow FK Index, 5], [Property: Discount.RoomID (int) Required FK Index, 6], [Property: Discount.StartDateUtc (DateTime) Required, 7] }
            SELECT TOP(1) d.DiscountID, d.CreatedAtUtc, d.EndDateUtc, d.IsActive, d.Percentage, d.RoomClassID, d.RoomID, d.StartDateUtc
            FROM Discounts AS d
            WHERE ((((d.RoomID == @__roomId_0) && (d.StartDateUtc <= @__checkOutDate_1)) && (d.EndDateUtc >= @__checkInDate_2)) && (now() >= d.StartDateUtc)) && (now() <= d.EndDateUtc)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Discount.DiscountID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Discount.CreatedAtUtc (DateTime) Required, 1], [Property: Discount.EndDateUtc (DateTime) Required, 2], [Property: Discount.IsActive (bool) Required, 3], [Property: Discount.Percentage (decimal) Required, 4], [Property: Discount.RoomClassID (no field, int?) Shadow FK Index, 5], [Property: Discount.RoomID (int) Required FK Index, 6], [Property: Discount.StartDateUtc (DateTime) Required, 7] }
            SELECT TOP(1) d.DiscountID, d.CreatedAtUtc, d.EndDateUtc, d.IsActive, d.Percentage, d.RoomClassID, d.RoomID, d.StartDateUtc
            FROM Discounts AS d
            WHERE ((((d.RoomID == @__roomId_0) && (d.StartDateUtc <= @__checkOutDate_1)) && (d.EndDateUtc >= @__checkInDate_2)) && (now() >= d.StartDateUtc)) && (now() <= d.EndDateUtc), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Discount entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Discount instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Discount);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Discount.DiscountID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Discount").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Discount)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Discount | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Discount")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Discount | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Discount")]: 
                            {
                                shadowSnapshot1 = (ISnapshot)new Snapshot<int?>(dataReader.IsDBNull(5) ? default(int?) : (int?)dataReader.GetInt32(5));
                                return 
                                {
                                    Discount instance;
                                    instance = new Discount();
                                    instance.<DiscountID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EndDateUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<IsActive>k__BackingField = dataReader.GetBoolean(3);
                                    instance.<Percentage>k__BackingField = dataReader.GetDecimal(4);
                                    instance.<RoomID>k__BackingField = dataReader.GetInt32(6);
                                    instance.<StartDateUtc>k__BackingField = dataReader.GetDateTime(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Discount | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Discount")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Discount)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 12:25:49.532 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.535 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.537 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:25:49.539 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 12:25:49.541 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 12:25:49.543 -04:00 [DBG] Executing DbCommand [Parameters=[@__roomId_0='?' (DbType = Int32), @__checkOutDate_1='?' (DbType = DateTime), @__checkInDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT d."DiscountID", d."CreatedAtUtc", d."EndDateUtc", d."IsActive", d."Percentage", d."RoomClassID", d."RoomID", d."StartDateUtc"
FROM "Discounts" AS d
WHERE d."RoomID" = @__roomId_0 AND d."StartDateUtc" <= @__checkOutDate_1 AND d."EndDateUtc" >= @__checkInDate_2 AND now() >= d."StartDateUtc" AND now() <= d."EndDateUtc"
LIMIT 1
2025-03-24 12:25:49.580 -04:00 [INF] Executed DbCommand (38ms) [Parameters=[@__roomId_0='?' (DbType = Int32), @__checkOutDate_1='?' (DbType = DateTime), @__checkInDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT d."DiscountID", d."CreatedAtUtc", d."EndDateUtc", d."IsActive", d."Percentage", d."RoomClassID", d."RoomID", d."StartDateUtc"
FROM "Discounts" AS d
WHERE d."RoomID" = @__roomId_0 AND d."StartDateUtc" <= @__checkOutDate_1 AND d."EndDateUtc" >= @__checkInDate_2 AND now() >= d."StartDateUtc" AND now() <= d."EndDateUtc"
LIMIT 1
2025-03-24 12:25:49.628 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.652 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 25ms reading results.
2025-03-24 12:25:49.675 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.677 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 12:25:49.711 -04:00 [DBG] Compiling query expression: 
'DbSet<Hotel>()
    .Include(h => h.City)
    .Include(h => h.Owner)
    .Include(h => h.Reviews)
    .AsSplitQuery()
    .FirstOrDefault(h => h.HotelId == __id_0)'
2025-03-24 12:25:49.715 -04:00 [DBG] Including navigation: 'Hotel.City'.
2025-03-24 12:25:49.721 -04:00 [DBG] Including navigation: 'Hotel.Owner'.
2025-03-24 12:25:49.725 -04:00 [DBG] Including navigation: 'Hotel.Reviews'.
2025-03-24 12:25:49.788 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Hotel>(
    asyncEnumerable: SplitQueryingEnumerable.Create<Hotel>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
                1 -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: City.Country (string) Required, 9], [Property: City.CreatedAtUtc (DateTime) Required, 10], [Property: City.Description (string) Required, 11], [Property: City.Name (string) Required, 12], [Property: City.PostOffice (string) Required, 13], [Property: City.VisitCount (int) Required, 14] }
                2 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: Owner.Email (string) Required, 16], [Property: Owner.FirstName (string) Required MaxLength(50), 17], [Property: Owner.LastName (string) Required MaxLength(50), 18], [Property: Owner.PhoneNumber (string) Required, 19] }
                3 -> 0
                4 -> 8
                5 -> 15
            SELECT TOP(1) h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Hotels AS h
            INNER JOIN Cities AS c ON h.CityID == c.CityID
            INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
            WHERE h.HotelId == @__id_0
            ORDER BY h.HotelId ASC, c.CityID ASC, o.OwnerID ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Hotel.CityID (int) Required FK Index, 1], [Property: Hotel.CreatedAtUtc (DateTime) Required, 2], [Property: Hotel.Description (string) MaxLength(500), 3], [Property: Hotel.Name (string) Required MaxLength(100), 4], [Property: Hotel.OwnerID (int) Required FK Index, 5], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 6], [Property: Hotel.StarRating (int) Required, 7] }
                1 -> Dictionary<IProperty, int> { [Property: City.CityID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: City.Country (string) Required, 9], [Property: City.CreatedAtUtc (DateTime) Required, 10], [Property: City.Description (string) Required, 11], [Property: City.Name (string) Required, 12], [Property: City.PostOffice (string) Required, 13], [Property: City.VisitCount (int) Required, 14] }
                2 -> Dictionary<IProperty, int> { [Property: Owner.OwnerID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: Owner.Email (string) Required, 16], [Property: Owner.FirstName (string) Required MaxLength(50), 17], [Property: Owner.LastName (string) Required MaxLength(50), 18], [Property: Owner.PhoneNumber (string) Required, 19] }
                3 -> 0
                4 -> 8
                5 -> 15
            SELECT TOP(1) h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, c.CityID, c.Country, c.CreatedAtUtc, c.Description, c.Name, c.PostOffice, c.VisitCount, o.OwnerID, o.Email, o.FirstName, o.LastName, o.PhoneNumber
            FROM Hotels AS h
            INNER JOIN Cities AS c ON h.CityID == c.CityID
            INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
            WHERE h.HotelId == @__id_0
            ORDER BY h.HotelId ASC, c.CityID ASC, o.OwnerID ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object> } | Resolver: namelessParameter{0} => new ReaderColumn[]
        { 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("HotelId"), 
                (dataReader, indexMap) => dataReader.GetInt32(0)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CityID"), 
                (dataReader, indexMap) => dataReader.GetInt32(1)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CreatedAtUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(2)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Description"), 
                (dataReader, indexMap) => (object)dataReader.GetString(3)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Name"), 
                (dataReader, indexMap) => (object)dataReader.GetString(4)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("OwnerID"), 
                (dataReader, indexMap) => dataReader.GetInt32(5)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(6)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("StarRating"), 
                (dataReader, indexMap) => dataReader.GetInt32(7)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("CityID"), 
                (dataReader, indexMap) => dataReader.GetInt32(8)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Country"), 
                (dataReader, indexMap) => (object)dataReader.GetString(9)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("CreatedAtUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(10)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Description"), 
                (dataReader, indexMap) => (object)dataReader.GetString(11)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("Name"), 
                (dataReader, indexMap) => (object)dataReader.GetString(12)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("PostOffice"), 
                (dataReader, indexMap) => (object)dataReader.GetString(13)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindProperty("VisitCount"), 
                (dataReader, indexMap) => dataReader.GetInt32(14)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("OwnerID"), 
                (dataReader, indexMap) => dataReader.GetInt32(15)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("Email"), 
                (dataReader, indexMap) => (object)dataReader.GetString(16)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("FirstName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(17)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("LastName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(18)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(19)
            ) 
        }], 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => resultContext.Values == null ? 
        {
            Hotel entity;
            City entity;
            Owner entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Hotel instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Hotel);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Hotel)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                            {
                                return 
                                {
                                    Hotel instance;
                                    instance = new Hotel();
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(0);
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(3) ? default(string) : (string)dataReader.GetFieldValue<object>(3);
                                    instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(4);
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(5);
                                    instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                    instance.<StarRating>k__BackingField = dataReader.GetInt32(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Hotel)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                City instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(City);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: City.CityID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(8) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (City)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]: 
                            {
                                return 
                                {
                                    City instance;
                                    instance = new City();
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Country>k__BackingField = (string)dataReader.GetFieldValue<object>(9);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(10);
                                    instance.<Description>k__BackingField = (string)dataReader.GetFieldValue<object>(11);
                                    instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(12);
                                    instance.<PostOffice>k__BackingField = (string)dataReader.GetFieldValue<object>(13);
                                    instance.<VisitCount>k__BackingField = dataReader.GetInt32(14);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: City | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(City)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                Owner instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(Owner);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Owner.OwnerID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(15) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (Owner)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]: 
                            {
                                return 
                                {
                                    Owner instance;
                                    instance = new Owner();
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(15);
                                    instance.<Email>k__BackingField = (string)dataReader.GetFieldValue<object>(16);
                                    instance.<FirstName>k__BackingField = (string)dataReader.GetFieldValue<object>(17);
                                    instance.<LastName>k__BackingField = (string)dataReader.GetFieldValue<object>(18);
                                    instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(19);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Owner | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Owner)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, City>(
                queryContext: queryContext, 
                entity: (Hotel)(resultContext.Values[0]), 
                relatedEntity: (City)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Hotel.City (City) ToPrincipal City Inverse: Hotels | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("City")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: City.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: City | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindNavigation("Hotels")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<City>k__BackingField = namelessParameter{13};
                    return [LIFTABLE Constant: ClrICollectionAccessor<City, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.City").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                        entity: namelessParameter{13}, 
                        value: namelessParameter{12}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Hotel, Hotel, Owner>(
                queryContext: queryContext, 
                entity: (Hotel)(resultContext.Values[0]), 
                relatedEntity: (Owner)(resultContext.Values[2]), 
                navigation: [LIFTABLE Constant: Navigation: Hotel.Owner (Owner) ToPrincipal Owner Inverse: Hotels | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Owner")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Owner.Hotels (ICollection<Hotel>) Collection ToDependent Hotel Inverse: Owner | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels")], 
                fixup: (namelessParameter{17}, namelessParameter{18}) => 
                {
                    namelessParameter{17}.<Owner>k__BackingField = namelessParameter{18};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Owner, ICollection<Hotel>, Hotel> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Owner").FindNavigation("Hotels").GetCollectionAccessor()].Add(
                        entity: namelessParameter{18}, 
                        value: namelessParameter{17}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeSplitIncludeCollection<Hotel, Hotel>(
                collectionId: 0, 
                queryContext: queryContext, 
                parentDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Hotel)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(0), 
                    (object)(int?)dataReader.GetInt32(8), 
                    (object)(int?)dataReader.GetInt32(15) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Hotel.Reviews (ICollection<Review>) Collection ToDependent Review Inverse: Hotel | Resolver: namelessParameter{20} => namelessParameter{20}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<Review>, Review> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
            return } : (Hotel)(resultContext.Values[0]), 
        relatedDataLoaders: null, 
        relatedDataLoadersAsync: (queryContext, executionStrategy, resultCoordinator) => ShaperProcessingExpressionVisitor.TaskAwaiter(new Func<Task>[]{ () => ShaperProcessingExpressionVisitor.PopulateSplitIncludeCollectionAsync<Hotel, Review>(
            collectionId: 0, 
            queryContext: (RelationalQueryContext)queryContext, 
            executionStrategy: executionStrategy, 
            relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
                Client Projections:
                    0 -> Dictionary<IProperty, int> { [Property: Review.ReviewID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Review.Content (string) Required, 1], [Property: Review.CreatedAtUtc (DateTime) Required, 2], [Property: Review.HotelId (int) Required FK Index, 3], [Property: Review.ModifiedAtUtc (DateTime?), 4], [Property: Review.Rating (int) Required, 5], [Property: Review.UserId (string) Required FK Index, 6] }
                    1 -> 7
                    2 -> 8
                    3 -> 9
                SELECT r.ReviewID, r.Content, r.CreatedAtUtc, r.HotelId, r.ModifiedAtUtc, r.Rating, r.UserId, s.HotelId, s.CityID, s.OwnerID
                FROM 
                (
                    SELECT TOP(1) h.HotelId, c.CityID, o.OwnerID
                    FROM Hotels AS h
                    INNER JOIN Cities AS c ON h.CityID == c.CityID
                    INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
                    WHERE h.HotelId == @__id_0
                ) AS s
                INNER JOIN Reviews AS r ON s.HotelId == r.HotelId
                ORDER BY s.HotelId ASC, s.CityID ASC, s.OwnerID ASC) | Resolver: c => new RelationalCommandCache(
                c.Dependencies.MemoryCache, 
                c.RelationalDependencies.QuerySqlGeneratorFactory, 
                c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
                Client Projections:
                    0 -> Dictionary<IProperty, int> { [Property: Review.ReviewID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Review.Content (string) Required, 1], [Property: Review.CreatedAtUtc (DateTime) Required, 2], [Property: Review.HotelId (int) Required FK Index, 3], [Property: Review.ModifiedAtUtc (DateTime?), 4], [Property: Review.Rating (int) Required, 5], [Property: Review.UserId (string) Required FK Index, 6] }
                    1 -> 7
                    2 -> 8
                    3 -> 9
                SELECT r.ReviewID, r.Content, r.CreatedAtUtc, r.HotelId, r.ModifiedAtUtc, r.Rating, r.UserId, s.HotelId, s.CityID, s.OwnerID
                FROM 
                (
                    SELECT TOP(1) h.HotelId, c.CityID, o.OwnerID
                    FROM Hotels AS h
                    INNER JOIN Cities AS c ON h.CityID == c.CityID
                    INNER JOIN Owners AS o ON h.OwnerID == o.OwnerID
                    WHERE h.HotelId == @__id_0
                ) AS s
                INNER JOIN Reviews AS r ON s.HotelId == r.HotelId
                ORDER BY s.HotelId ASC, s.CityID ASC, s.OwnerID ASC, 
                False, 
                new HashSet<string>(
                    new string[]{ }, 
                    StringComparer.Ordinal
                )
            )].GetRelationalCommandTemplate(parameters), 
            readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<DateTime>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int> } | Resolver: namelessParameter{22} => new ReaderColumn[]
            { 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("ReviewID"), 
                    (dataReader, indexMap) => dataReader.GetInt32(0)
                ), 
                new ReaderColumn<object>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("Content"), 
                    (dataReader, indexMap) => (object)dataReader.GetString(1)
                ), 
                new ReaderColumn<DateTime>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("CreatedAtUtc"), 
                    (dataReader, indexMap) => dataReader.GetDateTime(2)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("HotelId"), 
                    (dataReader, indexMap) => dataReader.GetInt32(3)
                ), 
                new ReaderColumn<DateTime>(
                    True, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("ModifiedAtUtc"), 
                    (dataReader, indexMap) => dataReader.GetDateTime(4)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("Rating"), 
                    (dataReader, indexMap) => dataReader.GetInt32(5)
                ), 
                new ReaderColumn<object>(
                    False, 
                    null, 
                    namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindProperty("UserId"), 
                    (dataReader, indexMap) => (object)dataReader.GetString(6)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(7)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(8)
                ), 
                new ReaderColumn<int>(
                    False, 
                    null, 
                    default(IPropertyBase), 
                    (dataReader, indexMap) => dataReader.GetInt32(9)
                ) 
            }], 
            detailedErrorsEnabled: False, 
            resultCoordinator: resultCoordinator, 
            childIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(int?)dataReader.GetInt32(7), 
                (object)(int?)dataReader.GetInt32(8), 
                (object)(int?)dataReader.GetInt32(9) 
            }], 
            identifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
            }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Review entity;
                entity = 
                {
                    MaterializationContext materializationContext4;
                    IEntityType entityType4;
                    Review instance4;
                    InternalEntityEntry entry4;
                    bool hasNullKey4;
                    materializationContext4 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance4 = default(Review);
                    entry4 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Review.ReviewID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey4);
                    !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                    {
                        entityType4 = entry4.EntityType;
                        return instance4 = (Review)entry4.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot4;
                        shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType4 = [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")];
                        instance4 = switch (entityType4)
                        {
                            case [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{24} => namelessParameter{24}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")]: 
                                {
                                    return 
                                    {
                                        Review instance;
                                        instance = new Review();
                                        instance.<ReviewID>k__BackingField = dataReader.GetInt32(0);
                                        instance.<Content>k__BackingField = (string)dataReader.GetFieldValue<object>(1);
                                        instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<HotelId>k__BackingField = dataReader.GetInt32(3);
                                        instance.<ModifiedAtUtc>k__BackingField = dataReader.IsDBNull(4) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(4);
                                        instance.<Rating>k__BackingField = dataReader.GetInt32(5);
                                        instance.<UserId>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext4.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Review | Resolver: namelessParameter{25} => namelessParameter{25}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Review)
                        }
                        ;
                        entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType4, 
                            entity: instance4, 
                            snapshot: shadowSnapshot4);
                        return instance4;
                    } : default(void);
                    return instance4;
                };
                return entity;
            }, 
            relatedDataLoaders: null, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Review.Hotel (Hotel) ToPrincipal Hotel Inverse: Reviews | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Review").FindNavigation("Hotel")], 
            fixup: (namelessParameter{27}, namelessParameter{28}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<Review>, Review> | Resolver: namelessParameter{29} => namelessParameter{29}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Reviews").GetCollectionAccessor()].Add(
                    entity: namelessParameter{27}, 
                    value: namelessParameter{28}, 
                    forMaterialization: True);
                return namelessParameter{28}.<Hotel>k__BackingField = namelessParameter{27};
            }, 
            trackingQuery: True) }), 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 12:25:49.846 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.848 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.854 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:25:49.855 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-24 12:25:49.857 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-24 12:25:49.859 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-24 12:25:49.872 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-24 12:25:49.896 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.898 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-03-24 12:25:49.906 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:49.908 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-24 12:25:49.913 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API) in 1082.3972ms
2025-03-24 12:25:49.916 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 12:25:50.019 -04:00 [DBG] Connection id "0HNBAU0QJ9BKA" completed keep alive response.
2025-03-24 12:25:50.022 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 12:25:50.023 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:25:50.026 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 12:25:50.031 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Booking/create - 404 null application/json 1397.2952ms
2025-03-24 12:26:05.598 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/Booking/create - application/json 260
2025-03-24 12:26:05.603 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/create'
2025-03-24 12:26:05.605 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/create' is valid for the request path '/api/Booking/create'
2025-03-24 12:26:05.648 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 12:26:05.655 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 12:26:05.657 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 12:26:05.662 -04:00 [DBG] Successfully validated the token.
2025-03-24 12:26:05.663 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 12:26:05.665 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 12:26:05.673 -04:00 [INF] Route matched with {action = "CreateBooking", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateBooking(HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-03-24 12:26:05.678 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 12:26:05.682 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 12:26:05.686 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-24 12:26:05.692 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 12:26:05.695 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 12:26:05.698 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 12:26:05.709 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 12:26:05.711 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 12:26:05.714 -04:00 [DBG] Attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' using the name '' in request data ...
2025-03-24 12:26:05.721 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 12:26:05.723 -04:00 [DBG] Connection id "0HNBAU0QJ9BKA", Request id "0HNBAU0QJ9BKA:00000004": started reading request body.
2025-03-24 12:26:05.725 -04:00 [DBG] Connection id "0HNBAU0QJ9BKA", Request id "0HNBAU0QJ9BKA:00000004": done reading request body.
2025-03-24 12:26:05.727 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'
2025-03-24 12:26:05.729 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 12:26:05.731 -04:00 [DBG] Done attempting to bind parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 12:26:05.733 -04:00 [DBG] Attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest' ...
2025-03-24 12:26:05.738 -04:00 [DBG] Done attempting to validate the bound parameter 'request' of type 'HotelBookingPlatform.Domain.DTOs.Booking.BookingCreateRequest'.
2025-03-24 12:26:05.762 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 12:26:05.766 -04:00 [DBG] Creating DbConnection.
2025-03-24 12:26:05.770 -04:00 [DBG] Created DbConnection. (3ms).
2025-03-24 12:26:05.772 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.776 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.778 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:26:05.780 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 12:26:05.781 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 12:26:05.783 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 12:26:05.792 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 12:26:05.798 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:26:05.800 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:26:05.805 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.806 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-03-24 12:26:05.810 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.812 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 12:26:05.815 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.816 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.819 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:26:05.821 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 12:26:05.823 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 12:26:05.825 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 12:26:05.830 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 12:26:05.836 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:26:05.841 -04:00 [DBG] The navigation 'Room.RoomClass' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:26:05.844 -04:00 [DBG] Context 'AppDbContext' started tracking 'RoomClass' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:26:05.846 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.848 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 12ms reading results.
2025-03-24 12:26:05.850 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.855 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-24 12:26:05.858 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.860 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.862 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:26:05.863 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 12:26:05.865 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 12:26:05.867 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 12:26:05.874 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 12:26:05.878 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.880 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 12:26:05.883 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.890 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-24 12:26:05.894 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.896 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.898 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:26:05.900 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 12:26:05.904 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-03-24 12:26:05.907 -04:00 [DBG] Executing DbCommand [Parameters=[@__roomId_0='?' (DbType = Int32), @__checkOutDate_1='?' (DbType = DateTime), @__checkInDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT d."DiscountID", d."CreatedAtUtc", d."EndDateUtc", d."IsActive", d."Percentage", d."RoomClassID", d."RoomID", d."StartDateUtc"
FROM "Discounts" AS d
WHERE d."RoomID" = @__roomId_0 AND d."StartDateUtc" <= @__checkOutDate_1 AND d."EndDateUtc" >= @__checkInDate_2 AND now() >= d."StartDateUtc" AND now() <= d."EndDateUtc"
LIMIT 1
2025-03-24 12:26:05.917 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__roomId_0='?' (DbType = Int32), @__checkOutDate_1='?' (DbType = DateTime), @__checkInDate_2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT d."DiscountID", d."CreatedAtUtc", d."EndDateUtc", d."IsActive", d."Percentage", d."RoomClassID", d."RoomID", d."StartDateUtc"
FROM "Discounts" AS d
WHERE d."RoomID" = @__roomId_0 AND d."StartDateUtc" <= @__checkOutDate_1 AND d."EndDateUtc" >= @__checkInDate_2 AND now() >= d."StartDateUtc" AND now() <= d."EndDateUtc"
LIMIT 1
2025-03-24 12:26:05.923 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.925 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 12:26:05.928 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.930 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 12:26:05.938 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.940 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:05.942 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:26:05.943 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 12:26:05.945 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 12:26:05.947 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-24 12:26:05.955 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", c."CityID", c."Country", c."CreatedAtUtc", c."Description", c."Name", c."PostOffice", c."VisitCount", o."OwnerID", o."Email", o."FirstName", o."LastName", o."PhoneNumber"
FROM "Hotels" AS h
INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
WHERE h."HotelId" = @__id_0
ORDER BY h."HotelId", c."CityID", o."OwnerID"
LIMIT 1
2025-03-24 12:26:05.980 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:26:06.022 -04:00 [DBG] The navigation 'Hotel.City' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:26:06.029 -04:00 [DBG] Context 'AppDbContext' started tracking 'City' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:26:06.062 -04:00 [DBG] The navigation 'Hotel.Owner' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:26:06.065 -04:00 [DBG] Context 'AppDbContext' started tracking 'Owner' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:26:06.097 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:26:06.099 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 12:26:06.103 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-24 12:26:06.104 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-24 12:26:06.113 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."ReviewID", r."Content", r."CreatedAtUtc", r."HotelId", r."ModifiedAtUtc", r."Rating", r."UserId", s."HotelId", s."CityID", s."OwnerID"
FROM (
    SELECT h."HotelId", c."CityID", o."OwnerID"
    FROM "Hotels" AS h
    INNER JOIN "Cities" AS c ON h."CityID" = c."CityID"
    INNER JOIN "Owners" AS o ON h."OwnerID" = o."OwnerID"
    WHERE h."HotelId" = @__id_0
    LIMIT 1
) AS s
INNER JOIN "Reviews" AS r ON s."HotelId" = r."HotelId"
ORDER BY s."HotelId", s."CityID", s."OwnerID"
2025-03-24 12:26:06.120 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:06.122 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 152ms reading results.
2025-03-24 12:26:06.124 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:06.126 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 10ms reading results.
2025-03-24 12:26:06.128 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:06.130 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 12:26:06.133 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:06.137 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:06.139 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:26:06.140 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 12:26:06.142 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 12:26:06.144 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 12:26:06.149 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r."RoomID", r."AdultsCapacity", r."ChildrenCapacity", r."CreatedAtUtc", r."Number", r."PricePerNight", r."RoomClassID", r0."RoomClassID", r0."CreatedAtUtc", r0."Description", r0."HotelId", r0."Name", r0."RoomType"
FROM "Rooms" AS r
INNER JOIN "RoomClasses" AS r0 ON r."RoomClassID" = r0."RoomClassID"
WHERE r."RoomID" = @__id_0
LIMIT 1
2025-03-24 12:26:06.155 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:06.157 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-03-24 12:26:06.159 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:06.161 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-24 12:26:06.199 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'Booking.BookingID'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:26:06.254 -04:00 [DBG] Context 'AppDbContext' started tracking 'Booking' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:26:06.269 -04:00 [DBG] Context 'AppDbContext' started tracking 'BookingRoom' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:26:06.275 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-24 12:26:06.280 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-24 12:26:06.346 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-24 12:26:06.430 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:06.432 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:06.437 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-24 12:26:06.443 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-24 12:26:06.447 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:26:06.448 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 12:26:06.455 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-24 12:26:06.457 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Decimal), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?', @p6='?' (DbType = Guid), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Decimal), @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Bookings" ("AfterDiscountedPrice", "BookingDateUtc", "CheckInDateUtc", "CheckOutDateUtc", "ConfirmationNumber", "CreatedById", "GuestId", "HotelId", "PaymentMethod", "Status", "TotalPrice", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11)
RETURNING "BookingID";
2025-03-24 12:26:06.536 -04:00 [INF] Executed DbCommand (79ms) [Parameters=[@p0='?' (DbType = Decimal), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?', @p6='?' (DbType = Guid), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Decimal), @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Bookings" ("AfterDiscountedPrice", "BookingDateUtc", "CheckInDateUtc", "CheckOutDateUtc", "ConfirmationNumber", "CreatedById", "GuestId", "HotelId", "PaymentMethod", "Status", "TotalPrice", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11)
RETURNING "BookingID";
2025-03-24 12:26:06.572 -04:00 [DBG] The foreign key property 'Booking.BookingID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-24 12:26:06.579 -04:00 [DBG] The foreign key property 'BookingRoom.BookingID' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-24 12:26:06.587 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:06.590 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 43ms reading results.
2025-03-24 12:26:06.593 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 12:26:06.594 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 12:26:06.604 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (11ms).
2025-03-24 12:26:06.607 -04:00 [DBG] Executing DbCommand [Parameters=[@p12='?' (DbType = Int32), @p13='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "BookingRoom" ("BookingID", "RoomID")
VALUES (@p12, @p13);
2025-03-24 12:26:06.622 -04:00 [INF] Executed DbCommand (15ms) [Parameters=[@p12='?' (DbType = Int32), @p13='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "BookingRoom" ("BookingID", "RoomID")
VALUES (@p12, @p13);
2025-03-24 12:26:06.631 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:06.633 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 12:26:06.640 -04:00 [DBG] Committing transaction.
2025-03-24 12:26:06.652 -04:00 [DBG] Committed transaction.
2025-03-24 12:26:06.655 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:06.657 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 12:26:06.663 -04:00 [DBG] Disposing transaction.
2025-03-24 12:26:06.676 -04:00 [DBG] An entity of type 'Booking' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:26:06.680 -04:00 [DBG] An entity of type 'BookingRoom' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 12:26:06.685 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-03-24 12:26:06.688 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-24 12:26:06.691 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-24 12:26:06.693 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-24 12:26:06.695 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 0 entities written to the database.
2025-03-24 12:26:06.712 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 12:26:06.716 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 12:26:06.717 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-24 12:26:06.719 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-24 12:26:06.721 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-24 12:26:06.724 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Booking.BookingDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-24 12:26:06.745 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API) in 1046.687ms
2025-03-24 12:26:06.747 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.CreateBooking (HotelBookingPlatform.API)'
2025-03-24 12:26:06.748 -04:00 [DBG] Connection id "0HNBAU0QJ9BKA" completed keep alive response.
2025-03-24 12:26:06.751 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 12:26:06.754 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 12:26:06.756 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 12:26:06.759 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/Booking/create - 200 null application/json; charset=utf-8 1161.1424ms
2025-03-24 12:28:17.167 -04:00 [DBG] Connection id "0HNBAU0QJ9BKA" disconnecting.
2025-03-24 12:28:17.170 -04:00 [DBG] Connection id "0HNBAU0QJ9BKA" stopped.
2025-03-24 12:28:17.173 -04:00 [DBG] Connection id "0HNBAU0QJ9BKA" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 17:15:36.916 -04:00 [DBG] Connection id "0HNBAU0QJ9BKC" accepted.
2025-03-24 17:15:36.958 -04:00 [DBG] Connection id "0HNBAU0QJ9BKC" started.
2025-03-24 17:15:37.199 -04:00 [INF] Request starting HTTP/1.1 PUT http://localhost:5004/api/Booking/4/Update_status - application/json 1
2025-03-24 17:15:37.288 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/4/Update_status'
2025-03-24 17:15:37.299 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)' with route pattern 'api/Booking/{id}/Update_status' is valid for the request path '/api/Booking/4/Update_status'
2025-03-24 17:15:37.308 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)'
2025-03-24 17:15:37.338 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 17:15:37.344 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 17:15:37.412 -04:00 [DBG] Successfully validated the token.
2025-03-24 17:15:37.417 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 17:15:37.621 -04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (User)
2025-03-24 17:15:37.630 -04:00 [INF] AuthenticationScheme: Bearer was forbidden.
2025-03-24 17:15:37.636 -04:00 [DBG] Connection id "0HNBAU0QJ9BKC" completed keep alive response.
2025-03-24 17:15:37.639 -04:00 [INF] Request finished HTTP/1.1 PUT http://localhost:5004/api/Booking/4/Update_status - 403 0 null 447.1528ms
2025-03-24 17:15:37.655 -04:00 [DBG] Connection id "0HNBAU0QJ9BKC", Request id "0HNBAU0QJ9BKC:00000001": started reading request body.
2025-03-24 17:15:37.661 -04:00 [DBG] Connection id "0HNBAU0QJ9BKC", Request id "0HNBAU0QJ9BKC:00000001": done reading request body.
2025-03-24 17:17:48.479 -04:00 [DBG] Connection id "0HNBAU0QJ9BKC" disconnecting.
2025-03-24 17:17:48.481 -04:00 [DBG] Connection id "0HNBAU0QJ9BKC" stopped.
2025-03-24 17:17:48.484 -04:00 [DBG] Connection id "0HNBAU0QJ9BKC" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 22:18:30.678 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-24 22:18:30.896 -04:00 [DBG] Hosting starting
2025-03-24 22:18:30.934 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-24 22:18:30.987 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-24 22:18:31.087 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-24 22:18:31.151 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-24 22:18:31.159 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-24 22:18:31.166 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-24 22:18:31.172 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-24 22:18:31.191 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-24 22:18:31.197 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-24 22:18:31.205 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-24 22:18:31.209 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-24 22:18:31.336 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-24 22:18:31.338 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-24 22:18:31.339 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-24 22:18:31.340 -04:00 [INF] Hosting environment: Development
2025-03-24 22:18:31.342 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-24 22:18:31.344 -04:00 [DBG] Hosting started
2025-03-24 22:52:24.786 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-24 22:52:25.148 -04:00 [DBG] Hosting starting
2025-03-24 22:52:25.181 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-24 22:52:25.203 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-24 22:52:25.230 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-24 22:52:25.259 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-24 22:52:25.268 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-24 22:52:25.280 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-24 22:52:25.284 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-24 22:52:25.297 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-24 22:52:25.307 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-24 22:52:25.313 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-24 22:52:25.315 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-24 22:52:25.440 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-24 22:52:25.441 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-24 22:52:25.443 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-24 22:52:25.444 -04:00 [INF] Hosting environment: Development
2025-03-24 22:52:25.446 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-24 22:52:25.447 -04:00 [DBG] Hosting started
2025-03-24 22:53:25.863 -04:00 [DBG] Connection id "0HNBB90RDM5N1" accepted.
2025-03-24 22:53:25.867 -04:00 [DBG] Connection id "0HNBB90RDM5N1" started.
2025-03-24 22:53:25.927 -04:00 [DBG] Connection id "0HNBB90RDM5N2" accepted.
2025-03-24 22:53:25.929 -04:00 [DBG] Connection id "0HNBB90RDM5N2" started.
2025-03-24 22:53:26.033 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-03-24 22:53:26.042 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-24 22:53:26.096 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-03-24 22:53:26.098 -04:00 [DBG] Request did not match any endpoints
2025-03-24 22:53:26.276 -04:00 [DBG] Connection id "0HNBB90RDM5N1" completed keep alive response.
2025-03-24 22:53:26.281 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 250.6784ms
2025-03-24 22:53:26.468 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-03-24 22:53:26.477 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-03-24 22:53:26.487 -04:00 [DBG] Request did not match any endpoints
2025-03-24 22:53:26.509 -04:00 [DBG] Connection id "0HNBB90RDM5N1" completed keep alive response.
2025-03-24 22:53:26.520 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 51.5009ms
2025-03-24 22:53:27.014 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-24 22:53:27.019 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-24 22:53:27.023 -04:00 [DBG] Request did not match any endpoints
2025-03-24 22:53:27.463 -04:00 [DBG] Connection id "0HNBB90RDM5N1" completed keep alive response.
2025-03-24 22:53:27.466 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 451.6942ms
2025-03-24 22:53:29.808 -04:00 [DBG] Connection id "0HNBB90RDM5N2" received FIN.
2025-03-24 22:53:29.808 -04:00 [DBG] Connection id "0HNBB90RDM5N1" received FIN.
2025-03-24 22:53:29.812 -04:00 [DBG] Connection id "0HNBB90RDM5N2" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 22:53:29.812 -04:00 [DBG] Connection id "0HNBB90RDM5N1" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 22:53:29.816 -04:00 [DBG] Connection id "0HNBB90RDM5N2" disconnecting.
2025-03-24 22:53:29.817 -04:00 [DBG] Connection id "0HNBB90RDM5N1" disconnecting.
2025-03-24 22:53:29.821 -04:00 [DBG] Connection id "0HNBB90RDM5N2" stopped.
2025-03-24 22:53:29.821 -04:00 [DBG] Connection id "0HNBB90RDM5N1" stopped.
2025-03-24 22:54:11.307 -04:00 [DBG] Connection id "0HNBB90RDM5N3" accepted.
2025-03-24 22:54:11.312 -04:00 [DBG] Connection id "0HNBB90RDM5N3" started.
2025-03-24 22:54:11.317 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 62
2025-03-24 22:54:11.338 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-24 22:54:11.354 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-24 22:54:11.360 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 22:54:11.369 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 22:54:11.378 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 22:54:11.386 -04:00 [WRN] Failed to determine the https port for redirect.
2025-03-24 22:54:11.462 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-24 22:54:11.466 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 22:54:11.515 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-24 22:54:11.520 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 22:54:11.523 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 22:54:11.530 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-24 22:54:11.535 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 22:54:11.538 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 22:54:11.546 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-24 22:54:12.007 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-24 22:54:12.056 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-24 22:54:12.067 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-24 22:54:12.073 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-24 22:54:12.077 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 22:54:12.105 -04:00 [DBG] Connection id "0HNBB90RDM5N3", Request id "0HNBB90RDM5N3:00000001": started reading request body.
2025-03-24 22:54:12.108 -04:00 [DBG] Connection id "0HNBB90RDM5N3", Request id "0HNBB90RDM5N3:00000001": done reading request body.
2025-03-24 22:54:12.129 -04:00 [DBG] JSON input formatter threw an exception: 'J' is invalid after a value. Expected either ',', '}', or ']'. Path: $ | LineNumber: 2 | BytePositionInLine: 16.
2025-03-24 22:54:12.132 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 22:54:12.135 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 22:54:12.138 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-24 22:54:12.151 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 22:54:12.160 -04:00 [DBG] The request has model state errors, returning an error response.
2025-03-24 22:54:12.164 -04:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-03-24 22:54:12.169 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 22:54:12.175 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 22:54:12.177 -04:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-03-24 22:54:12.183 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-03-24 22:54:12.187 -04:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-03-24 22:54:12.244 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 697.636ms
2025-03-24 22:54:12.247 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 22:54:12.249 -04:00 [DBG] Connection id "0HNBB90RDM5N3" completed keep alive response.
2025-03-24 22:54:12.256 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 400 null application/problem+json; charset=utf-8 938.691ms
2025-03-24 22:54:19.895 -04:00 [DBG] Connection id "0HNBB90RDM5N3" received FIN.
2025-03-24 22:54:19.900 -04:00 [DBG] Connection id "0HNBB90RDM5N3" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 22:54:19.914 -04:00 [DBG] Connection id "0HNBB90RDM5N3" disconnecting.
2025-03-24 22:54:19.928 -04:00 [DBG] Connection id "0HNBB90RDM5N3" stopped.
2025-03-24 22:54:45.765 -04:00 [DBG] Connection id "0HNBB90RDM5N4" accepted.
2025-03-24 22:54:45.767 -04:00 [DBG] Connection id "0HNBB90RDM5N4" started.
2025-03-24 22:54:45.769 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 62
2025-03-24 22:54:45.837 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-24 22:54:45.839 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-24 22:54:45.849 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 22:54:45.855 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 22:54:45.857 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 22:54:45.866 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-24 22:54:45.868 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 22:54:45.871 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-24 22:54:45.875 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 22:54:45.881 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 22:54:45.884 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-24 22:54:45.886 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 22:54:45.890 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 22:54:45.892 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-24 22:54:45.923 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-24 22:54:45.926 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-24 22:54:45.932 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-24 22:54:45.935 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 22:54:45.937 -04:00 [DBG] Connection id "0HNBB90RDM5N4", Request id "0HNBB90RDM5N4:00000001": started reading request body.
2025-03-24 22:54:45.940 -04:00 [DBG] Connection id "0HNBB90RDM5N4", Request id "0HNBB90RDM5N4:00000001": done reading request body.
2025-03-24 22:54:45.947 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-24 22:54:45.950 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 22:54:45.953 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 22:54:45.955 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-24 22:54:45.959 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-24 22:54:46.312 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 22:54:46.364 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 22:54:46.517 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 22:54:46.559 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 22:54:46.635 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 22:54:46.639 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 22:54:46.653 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-24 22:54:46.747 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-24 22:54:46.750 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-24 22:54:46.752 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-24 22:54:46.755 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-24 22:54:46.757 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-24 22:54:46.926 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 22:54:46.930 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 22:54:46.933 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-24 22:54:47.071 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 22:54:47.145 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-24 22:54:47.200 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-24 22:54:47.580 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 22:54:47.670 -04:00 [DBG] Creating DbConnection.
2025-03-24 22:54:47.729 -04:00 [DBG] Created DbConnection. (55ms).
2025-03-24 22:54:47.736 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:54:48.349 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:54:48.356 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 22:54:48.382 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (19ms).
2025-03-24 22:54:48.419 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (42ms).
2025-03-24 22:54:48.470 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 22:54:48.641 -04:00 [INF] Executed DbCommand (190ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 22:54:48.789 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 22:54:48.908 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 22:54:48.932 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:54:48.945 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 289ms reading results.
2025-03-24 22:54:48.951 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:54:48.957 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-24 22:54:49.074 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-03-24 22:54:49.087 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-24 22:54:49.101 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:54:49.104 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:54:49.106 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 22:54:49.108 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 22:54:49.112 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 22:54:49.115 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-24 22:54:49.132 -04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-24 22:54:49.136 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:54:49.138 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 22:54:49.142 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:54:49.149 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-24 22:54:49.166 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-03-24 22:54:49.188 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-24 22:54:49.194 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:54:49.197 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:54:49.199 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 22:54:49.200 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 22:54:49.202 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 22:54:49.204 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 22:54:49.220 -04:00 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 22:54:49.223 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:54:49.225 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 22:54:49.232 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:54:49.234 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-24 22:54:49.249 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:54:49.251 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:54:49.254 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 22:54:49.255 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 22:54:49.257 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-03-24 22:54:49.258 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 22:54:49.267 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-24 22:54:49.271 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:54:49.272 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-03-24 22:54:49.275 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:54:49.281 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-24 22:54:49.336 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 22:54:49.339 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 22:54:49.340 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-24 22:54:49.341 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-24 22:54:49.342 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-24 22:54:49.348 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-24 22:54:49.384 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 3491.9969ms
2025-03-24 22:54:49.387 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-24 22:54:49.391 -04:00 [DBG] Connection id "0HNBB90RDM5N4" completed keep alive response.
2025-03-24 22:54:49.401 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 22:54:49.417 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:54:49.420 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-24 22:54:49.424 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 3654.2864ms
2025-03-24 22:54:49.925 -04:00 [DBG] Connection id "0HNBB90RDM5N4" received FIN.
2025-03-24 22:54:49.931 -04:00 [DBG] Connection id "0HNBB90RDM5N4" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 22:54:49.936 -04:00 [DBG] Connection id "0HNBB90RDM5N4" disconnecting.
2025-03-24 22:54:49.938 -04:00 [DBG] Connection id "0HNBB90RDM5N4" stopped.
2025-03-24 22:55:50.910 -04:00 [DBG] Connection id "0HNBB90RDM5N5" accepted.
2025-03-24 22:55:50.912 -04:00 [DBG] Connection id "0HNBB90RDM5N5" started.
2025-03-24 22:55:50.915 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Booking/1 - null null
2025-03-24 22:55:50.960 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/1'
2025-03-24 22:55:50.970 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/{id}' is valid for the request path '/api/Booking/1'
2025-03-24 22:55:50.974 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)'
2025-03-24 22:55:50.976 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 22:55:51.054 -04:00 [DBG] Successfully validated the token.
2025-03-24 22:55:51.056 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 22:55:51.061 -04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-03-24 22:55:51.068 -04:00 [INF] AuthenticationScheme: Bearer was forbidden.
2025-03-24 22:55:51.069 -04:00 [DBG] Connection id "0HNBB90RDM5N5" completed keep alive response.
2025-03-24 22:55:51.071 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Booking/1 - 403 0 null 156.0982ms
2025-03-24 22:56:21.765 -04:00 [INF] Request starting HTTP/1.1 PUT http://localhost:5004/api/Booking/1/Update_status - application/json 1
2025-03-24 22:56:21.829 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/1/Update_status'
2025-03-24 22:56:21.837 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)' with route pattern 'api/Booking/{id}/Update_status' is valid for the request path '/api/Booking/1/Update_status'
2025-03-24 22:56:21.841 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)'
2025-03-24 22:56:21.843 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 22:56:21.845 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 22:56:21.851 -04:00 [DBG] Successfully validated the token.
2025-03-24 22:56:21.853 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 22:56:21.859 -04:00 [DBG] Authorization was successful.
2025-03-24 22:56:21.869 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)'
2025-03-24 22:56:21.893 -04:00 [INF] Route matched with {action = "UpdateBookingStatus", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateBookingStatus(Int32, HotelBookingPlatform.Domain.Enums.BookingStatus) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-03-24 22:56:21.895 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 22:56:21.900 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 22:56:21.903 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-24 22:56:21.910 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 22:56:21.919 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 22:56:21.923 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 22:56:22.105 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 22:56:22.107 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-24 22:56:22.109 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-24 22:56:22.111 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-24 22:56:22.113 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-24 22:56:22.118 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-24 22:56:22.120 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-24 22:56:22.122 -04:00 [DBG] Attempting to bind parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus' ...
2025-03-24 22:56:22.124 -04:00 [DBG] Attempting to bind parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus' using the name '' in request data ...
2025-03-24 22:56:22.127 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 22:56:22.137 -04:00 [DBG] Connection id "0HNBB90RDM5N5", Request id "0HNBB90RDM5N5:00000002": started reading request body.
2025-03-24 22:56:22.138 -04:00 [DBG] Connection id "0HNBB90RDM5N5", Request id "0HNBB90RDM5N5:00000002": done reading request body.
2025-03-24 22:56:22.143 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Enums.BookingStatus'
2025-03-24 22:56:22.145 -04:00 [DBG] Done attempting to bind parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus'.
2025-03-24 22:56:22.153 -04:00 [DBG] Done attempting to bind parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus'.
2025-03-24 22:56:22.155 -04:00 [DBG] Attempting to validate the bound parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus' ...
2025-03-24 22:56:22.157 -04:00 [DBG] Done attempting to validate the bound parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus'.
2025-03-24 22:56:22.249 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 22:56:22.256 -04:00 [DBG] Compiling query expression: 
'DbSet<Booking>()
    .Include(b => b.Hotel)
    .Include(b => b.Rooms)
    .Include(b => b.User)
    .AsSplitQuery()
    .FirstOrDefault(b => b.BookingID == __id_0)'
2025-03-24 22:56:22.271 -04:00 [DBG] Including navigation: 'Booking.Hotel'.
2025-03-24 22:56:22.275 -04:00 [DBG] Including navigation: 'Booking.Rooms'.
2025-03-24 22:56:22.277 -04:00 [DBG] Including navigation: 'Booking.User'.
2025-03-24 22:56:22.279 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-24 22:56:22.377 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Booking>(
    asyncEnumerable: SplitQueryingEnumerable.Create<Booking>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Booking.BookingID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Booking.AfterDiscountedPrice (decimal) Required, 1], [Property: Booking.BookingDateUtc (DateTime) Required, 2], [Property: Booking.CheckInDateUtc (DateTime) Required, 3], [Property: Booking.CheckOutDateUtc (DateTime) Required, 4], [Property: Booking.ConfirmationNumber (string) Required Index MaxLength(50), 5], [Property: Booking.CreatedById (string) FK Index, 6], [Property: Booking.GuestId (Guid?) FK Index, 7], [Property: Booking.HotelId (int) Required FK Index, 8], [Property: Booking.PaymentMethod (PaymentMethod) Required, 9], [Property: Booking.Status (BookingStatus) Required, 10], [Property: Booking.TotalPrice (decimal) Required, 11], [Property: Booking.UserId (string) Required FK Index, 12] }
                1 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Hotel.CityID (int) Required FK Index, 14], [Property: Hotel.CreatedAtUtc (DateTime) Required, 15], [Property: Hotel.Description (string) MaxLength(500), 16], [Property: Hotel.Name (string) Required MaxLength(100), 17], [Property: Hotel.OwnerID (int) Required FK Index, 18], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 19], [Property: Hotel.StarRating (int) Required, 20] }
                2 -> 0
                3 -> 13
                4 -> 21
                5 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 21], [Property: LocalUser.AccessFailedCount (int) Required, 22], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 23], [Property: LocalUser.Email (string) MaxLength(256), 24], [Property: LocalUser.EmailConfirmed (bool) Required, 25], [Property: LocalUser.FirstName (string) Required, 26], [Property: LocalUser.LastName (string) Required, 27], [Property: LocalUser.LockoutEnabled (bool) Required, 28], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 29], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 30], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 31], [Property: LocalUser.PasswordHash (string), 32], [Property: LocalUser.PhoneNumber (string), 33], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 34], [Property: LocalUser.SecurityStamp (string), 35], [Property: LocalUser.TwoFactorEnabled (bool) Required, 36], [Property: LocalUser.UserName (string) MaxLength(256), 37] }
            SELECT TOP(1) b.BookingID, b.AfterDiscountedPrice, b.BookingDateUtc, b.CheckInDateUtc, b.CheckOutDateUtc, b.ConfirmationNumber, b.CreatedById, b.GuestId, b.HotelId, b.PaymentMethod, b.Status, b.TotalPrice, b.UserId, h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM Bookings AS b
            INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
            INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
            WHERE b.BookingID == @__id_0
            ORDER BY b.BookingID ASC, h.HotelId ASC, a.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Booking.BookingID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Booking.AfterDiscountedPrice (decimal) Required, 1], [Property: Booking.BookingDateUtc (DateTime) Required, 2], [Property: Booking.CheckInDateUtc (DateTime) Required, 3], [Property: Booking.CheckOutDateUtc (DateTime) Required, 4], [Property: Booking.ConfirmationNumber (string) Required Index MaxLength(50), 5], [Property: Booking.CreatedById (string) FK Index, 6], [Property: Booking.GuestId (Guid?) FK Index, 7], [Property: Booking.HotelId (int) Required FK Index, 8], [Property: Booking.PaymentMethod (PaymentMethod) Required, 9], [Property: Booking.Status (BookingStatus) Required, 10], [Property: Booking.TotalPrice (decimal) Required, 11], [Property: Booking.UserId (string) Required FK Index, 12] }
                1 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Hotel.CityID (int) Required FK Index, 14], [Property: Hotel.CreatedAtUtc (DateTime) Required, 15], [Property: Hotel.Description (string) MaxLength(500), 16], [Property: Hotel.Name (string) Required MaxLength(100), 17], [Property: Hotel.OwnerID (int) Required FK Index, 18], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 19], [Property: Hotel.StarRating (int) Required, 20] }
                2 -> 0
                3 -> 13
                4 -> 21
                5 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 21], [Property: LocalUser.AccessFailedCount (int) Required, 22], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 23], [Property: LocalUser.Email (string) MaxLength(256), 24], [Property: LocalUser.EmailConfirmed (bool) Required, 25], [Property: LocalUser.FirstName (string) Required, 26], [Property: LocalUser.LastName (string) Required, 27], [Property: LocalUser.LockoutEnabled (bool) Required, 28], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 29], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 30], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 31], [Property: LocalUser.PasswordHash (string), 32], [Property: LocalUser.PhoneNumber (string), 33], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 34], [Property: LocalUser.SecurityStamp (string), 35], [Property: LocalUser.TwoFactorEnabled (bool) Required, 36], [Property: LocalUser.UserName (string) MaxLength(256), 37] }
            SELECT TOP(1) b.BookingID, b.AfterDiscountedPrice, b.BookingDateUtc, b.CheckInDateUtc, b.CheckOutDateUtc, b.ConfirmationNumber, b.CreatedById, b.GuestId, b.HotelId, b.PaymentMethod, b.Status, b.TotalPrice, b.UserId, h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM Bookings AS b
            INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
            INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
            WHERE b.BookingID == @__id_0
            ORDER BY b.BookingID ASC, h.HotelId ASC, a.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<decimal>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<Guid>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<decimal>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<DateTimeOffset>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<object> } | Resolver: namelessParameter{0} => new ReaderColumn[]
        { 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("BookingID"), 
                (dataReader, indexMap) => dataReader.GetInt32(0)
            ), 
            new ReaderColumn<decimal>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("AfterDiscountedPrice"), 
                (dataReader, indexMap) => dataReader.GetDecimal(1)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("BookingDateUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(2)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("CheckInDateUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(3)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("CheckOutDateUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(4)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("ConfirmationNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(5)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("CreatedById"), 
                (dataReader, indexMap) => (object)dataReader.GetString(6)
            ), 
            new ReaderColumn<Guid>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("GuestId"), 
                (dataReader, indexMap) => dataReader.GetGuid(7)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("HotelId"), 
                (dataReader, indexMap) => dataReader.GetInt32(8)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("PaymentMethod"), 
                (dataReader, indexMap) => dataReader.GetInt32(9)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("Status"), 
                (dataReader, indexMap) => dataReader.GetInt32(10)
            ), 
            new ReaderColumn<decimal>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("TotalPrice"), 
                (dataReader, indexMap) => dataReader.GetDecimal(11)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("UserId"), 
                (dataReader, indexMap) => (object)dataReader.GetString(12)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("HotelId"), 
                (dataReader, indexMap) => dataReader.GetInt32(13)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CityID"), 
                (dataReader, indexMap) => dataReader.GetInt32(14)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CreatedAtUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(15)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Description"), 
                (dataReader, indexMap) => (object)dataReader.GetString(16)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Name"), 
                (dataReader, indexMap) => (object)dataReader.GetString(17)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("OwnerID"), 
                (dataReader, indexMap) => dataReader.GetInt32(18)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(19)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("StarRating"), 
                (dataReader, indexMap) => dataReader.GetInt32(20)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                default(IPropertyBase), 
                (dataReader, indexMap) => (object)dataReader.GetString(21)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("AccessFailedCount"), 
                (dataReader, indexMap) => dataReader.GetInt32(22)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("ConcurrencyStamp"), 
                (dataReader, indexMap) => (object)dataReader.GetString(23)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("Email"), 
                (dataReader, indexMap) => (object)dataReader.GetString(24)
            ), 
            new ReaderColumn<bool>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("EmailConfirmed"), 
                (dataReader, indexMap) => dataReader.GetBoolean(25)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("FirstName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(26)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("LastName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(27)
            ), 
            new ReaderColumn<bool>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("LockoutEnabled"), 
                (dataReader, indexMap) => dataReader.GetBoolean(28)
            ), 
            new ReaderColumn<DateTimeOffset>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("LockoutEnd"), 
                (dataReader, indexMap) => dataReader.GetFieldValue<DateTimeOffset>(29)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("NormalizedEmail"), 
                (dataReader, indexMap) => (object)dataReader.GetString(30)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("NormalizedUserName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(31)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("PasswordHash"), 
                (dataReader, indexMap) => (object)dataReader.GetString(32)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(33)
            ), 
            new ReaderColumn<bool>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("PhoneNumberConfirmed"), 
                (dataReader, indexMap) => dataReader.GetBoolean(34)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("SecurityStamp"), 
                (dataReader, indexMap) => (object)dataReader.GetString(35)
            ), 
            new ReaderColumn<bool>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("TwoFactorEnabled"), 
                (dataReader, indexMap) => dataReader.GetBoolean(36)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("UserName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(37)
            ) 
        }], 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => resultContext.Values == null ? 
        {
            Booking entity;
            Hotel entity;
            LocalUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Booking instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Booking);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Booking.BookingID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Booking)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Booking | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Booking | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking")]: 
                            {
                                return 
                                {
                                    Booking instance;
                                    instance = new Booking();
                                    instance.<BookingID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AfterDiscountedPrice>k__BackingField = dataReader.GetDecimal(1);
                                    instance.<BookingDateUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CheckInDateUtc>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CheckOutDateUtc>k__BackingField = dataReader.GetDateTime(4);
                                    instance.<ConfirmationNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(5);
                                    instance.<CreatedById>k__BackingField = dataReader.IsDBNull(6) ? default(string) : (string)dataReader.GetFieldValue<object>(6);
                                    instance.<GuestId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(8);
                                    instance.<PaymentMethod>k__BackingField = Invoke(((EnumToNumberConverter<PaymentMethod, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Booking.PaymentMethod (PaymentMethod) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("PaymentMethod")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(9));
                                    instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookingStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Booking.Status (BookingStatus) Required | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(10));
                                    instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(11);
                                    instance.<UserId>k__BackingField = (string)dataReader.GetFieldValue<object>(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Booking | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Booking)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Hotel instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Hotel);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(13) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Hotel)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                            {
                                return 
                                {
                                    Hotel instance;
                                    instance = new Hotel();
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(13);
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(14);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(15);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(16) ? default(string) : (string)dataReader.GetFieldValue<object>(16);
                                    instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(17);
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(18);
                                    instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(19);
                                    instance.<StarRating>k__BackingField = dataReader.GetInt32(20);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Hotel)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext5;
                IEntityType entityType5;
                LocalUser instance5;
                InternalEntityEntry entry5;
                bool hasNullKey5;
                materializationContext5 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance5 = default(LocalUser);
                entry5 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)(string)dataReader.GetFieldValue<object>(21) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey5);
                !(hasNullKey5) ? entry5 != default(InternalEntityEntry) ? 
                {
                    entityType5 = entry5.EntityType;
                    return instance5 = (LocalUser)entry5.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot5;
                    shadowSnapshot5 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType5 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                    instance5 = switch (entityType5)
                    {
                        case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                            {
                                return 
                                {
                                    LocalUser instance;
                                    instance = new LocalUser();
                                    instance.<Id>k__BackingField = (string)dataReader.GetFieldValue<object>(21);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(22);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(23) ? default(string) : (string)dataReader.GetFieldValue<object>(23);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(24) ? default(string) : (string)dataReader.GetFieldValue<object>(24);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(25);
                                    instance.<FirstName>k__BackingField = (string)dataReader.GetFieldValue<object>(26);
                                    instance.<LastName>k__BackingField = (string)dataReader.GetFieldValue<object>(27);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(28);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(29) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(29);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(30) ? default(string) : (string)dataReader.GetFieldValue<object>(30);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(31) ? default(string) : (string)dataReader.GetFieldValue<object>(31);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(32) ? default(string) : (string)dataReader.GetFieldValue<object>(32);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(33) ? default(string) : (string)dataReader.GetFieldValue<object>(33);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(34);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(35) ? default(string) : (string)dataReader.GetFieldValue<object>(35);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(36);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(37) ? default(string) : (string)dataReader.GetFieldValue<object>(37);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext5.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(LocalUser)
                    }
                    ;
                    entry5 = entityType5 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType5, 
                        entity: instance5, 
                        snapshot: shadowSnapshot5);
                    return instance5;
                } : default(void);
                return instance5;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Booking, Booking, Hotel>(
                queryContext: queryContext, 
                entity: (Booking)(resultContext.Values[0]), 
                relatedEntity: (Hotel)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Booking.Hotel (Hotel) ToPrincipal Hotel Inverse: Bookings | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindNavigation("Hotel")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Hotel.Bookings (ICollection<Booking>) Collection ToDependent Booking Inverse: Hotel | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Bookings")], 
                fixup: (namelessParameter{14}, namelessParameter{15}) => 
                {
                    namelessParameter{14}.<Hotel>k__BackingField = namelessParameter{15};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<Booking>, Booking> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Bookings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{15}, 
                        value: namelessParameter{14}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeSplitIncludeCollection<Booking, Booking>(
                collectionId: 0, 
                queryContext: queryContext, 
                parentDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Booking)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(0), 
                    (object)(int?)dataReader.GetInt32(13), 
                    (string)dataReader.GetFieldValue<object>(21) 
                }], 
                navigation: [LIFTABLE Constant: SkipNavigation: Booking.Rooms (ICollection<Room>) CollectionRoom Inverse: Bookings | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindSkipNavigation("Rooms")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Booking, ICollection<Room>, Room> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindSkipNavigation("Rooms").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
            ShaperProcessingExpressionVisitor.InitializeSplitIncludeCollection<LocalUser, LocalUser>(
                collectionId: 1, 
                queryContext: queryContext, 
                parentDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (LocalUser)(resultContext.Values[2]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(0), 
                    (object)(int?)dataReader.GetInt32(13), 
                    (string)dataReader.GetFieldValue<object>(21) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{20} => namelessParameter{20}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Booking, Booking, LocalUser>(
                queryContext: queryContext, 
                entity: (Booking)(resultContext.Values[0]), 
                relatedEntity: (LocalUser)(resultContext.Values[2]), 
                navigation: [LIFTABLE Constant: Navigation: Booking.User (LocalUser) ToPrincipal LocalUser Inverse: Bookings | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindNavigation("User")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: LocalUser.Bookings (ICollection<Booking>) Collection ToDependent Booking Inverse: User | Resolver: namelessParameter{22} => namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("Bookings")], 
                fixup: (namelessParameter{23}, namelessParameter{24}) => 
                {
                    namelessParameter{23}.<User>k__BackingField = namelessParameter{24};
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, ICollection<Booking>, Booking> | Resolver: namelessParameter{25} => namelessParameter{25}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("Bookings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{24}, 
                        value: namelessParameter{23}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return } : (Booking)(resultContext.Values[0]), 
        relatedDataLoaders: null, 
        relatedDataLoadersAsync: (queryContext, executionStrategy, resultCoordinator) => ShaperProcessingExpressionVisitor.TaskAwaiter(new Func<Task>[]
        { 
            () => ShaperProcessingExpressionVisitor.PopulateSplitIncludeCollectionAsync<Booking, Room>(
                collectionId: 0, 
                queryContext: (RelationalQueryContext)queryContext, 
                executionStrategy: executionStrategy, 
                relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: BookingRoom (Dictionary<string, object>).BookingID (no field, int) Indexer Required PK FK AfterSave:Throw, 0], [Property: BookingRoom (Dictionary<string, object>).RoomID (no field, int) Indexer Required PK FK Index AfterSave:Throw, 1] }
                        1 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 2], [Property: Room.AdultsCapacity (int) Required, 3], [Property: Room.ChildrenCapacity (int) Required, 4], [Property: Room.CreatedAtUtc (DateTime) Required, 5], [Property: Room.Number (string) Required MaxLength(50), 6], [Property: Room.PricePerNight (decimal) Required, 7], [Property: Room.RoomClassID (int) Required FK Index, 8] }
                        2 -> 9
                        3 -> 10
                        4 -> 11
                    SELECT s0.BookingID, s0.RoomID, s0.RoomID0, s0.AdultsCapacity, s0.ChildrenCapacity, s0.CreatedAtUtc, s0.Number, s0.PricePerNight, s0.RoomClassID, s.BookingID, s.HotelId, s.Id
                    FROM 
                    (
                        SELECT TOP(1) b.BookingID, h.HotelId, a.Id
                        FROM Bookings AS b
                        INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
                        INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
                        WHERE b.BookingID == @__id_0
                    ) AS s
                    INNER JOIN 
                    (
                        SELECT b0.BookingID, b0.RoomID, r0.RoomID AS RoomID0, r0.AdultsCapacity, r0.ChildrenCapacity, r0.CreatedAtUtc, r0.Number, r0.PricePerNight, r0.RoomClassID
                        FROM BookingRoom AS b0
                        INNER JOIN Rooms AS r0 ON b0.RoomID == r0.RoomID
                    ) AS s0 ON s.BookingID == s0.BookingID
                    ORDER BY s.BookingID ASC, s.HotelId ASC, s.Id ASC) | Resolver: c => new RelationalCommandCache(
                    c.Dependencies.MemoryCache, 
                    c.RelationalDependencies.QuerySqlGeneratorFactory, 
                    c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: BookingRoom (Dictionary<string, object>).BookingID (no field, int) Indexer Required PK FK AfterSave:Throw, 0], [Property: BookingRoom (Dictionary<string, object>).RoomID (no field, int) Indexer Required PK FK Index AfterSave:Throw, 1] }
                        1 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 2], [Property: Room.AdultsCapacity (int) Required, 3], [Property: Room.ChildrenCapacity (int) Required, 4], [Property: Room.CreatedAtUtc (DateTime) Required, 5], [Property: Room.Number (string) Required MaxLength(50), 6], [Property: Room.PricePerNight (decimal) Required, 7], [Property: Room.RoomClassID (int) Required FK Index, 8] }
                        2 -> 9
                        3 -> 10
                        4 -> 11
                    SELECT s0.BookingID, s0.RoomID, s0.RoomID0, s0.AdultsCapacity, s0.ChildrenCapacity, s0.CreatedAtUtc, s0.Number, s0.PricePerNight, s0.RoomClassID, s.BookingID, s.HotelId, s.Id
                    FROM 
                    (
                        SELECT TOP(1) b.BookingID, h.HotelId, a.Id
                        FROM Bookings AS b
                        INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
                        INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
                        WHERE b.BookingID == @__id_0
                    ) AS s
                    INNER JOIN 
                    (
                        SELECT b0.BookingID, b0.RoomID, r0.RoomID AS RoomID0, r0.AdultsCapacity, r0.ChildrenCapacity, r0.CreatedAtUtc, r0.Number, r0.PricePerNight, r0.RoomClassID
                        FROM BookingRoom AS b0
                        INNER JOIN Rooms AS r0 ON b0.RoomID == r0.RoomID
                    ) AS s0 ON s.BookingID == s0.BookingID
                    ORDER BY s.BookingID ASC, s.HotelId ASC, s.Id ASC, 
                    False, 
                    new HashSet<string>(
                        new string[]{ }, 
                        StringComparer.Ordinal
                    )
                )].GetRelationalCommandTemplate(parameters), 
                readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<decimal>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object> } | Resolver: namelessParameter{26} => new ReaderColumn[]
                { 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("BookingRoom").FindProperty("BookingID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(0)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("BookingRoom").FindProperty("RoomID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(1)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("RoomID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(2)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("AdultsCapacity"), 
                        (dataReader, indexMap) => dataReader.GetInt32(3)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("ChildrenCapacity"), 
                        (dataReader, indexMap) => dataReader.GetInt32(4)
                    ), 
                    new ReaderColumn<DateTime>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("CreatedAtUtc"), 
                        (dataReader, indexMap) => dataReader.GetDateTime(5)
                    ), 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("Number"), 
                        (dataReader, indexMap) => (object)dataReader.GetString(6)
                    ), 
                    new ReaderColumn<decimal>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("PricePerNight"), 
                        (dataReader, indexMap) => dataReader.GetDecimal(7)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("RoomClassID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(8)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(9)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(10)
                    ), 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => (object)dataReader.GetString(11)
                    ) 
                }], 
                detailedErrorsEnabled: False, 
                resultCoordinator: resultCoordinator, 
                childIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(9), 
                    (object)(int?)dataReader.GetInt32(10), 
                    (string)dataReader.GetFieldValue<object>(11) 
                }], 
                identifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Dictionary<string, object> entity;
                    Room entity;
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Dictionary<string, object> instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Dictionary<string, object>);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: BookingRoom (Dictionary<string, object>).BookingID, BookingRoom (Dictionary<string, object>).RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("BookingRoom").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                (object)dataReader.GetInt32(0), 
                                (object)dataReader.GetInt32(1) 
                            }, 
                            throwOnNullKey: True, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Dictionary<string, object>)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: BookingRoom (Dictionary<string, object>) CLR Type: Dictionary<string, object> | Resolver: namelessParameter{27} => namelessParameter{27}.Dependencies.Model.FindEntityType("BookingRoom")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: BookingRoom (Dictionary<string, object>) CLR Type: Dictionary<string, object> | Resolver: namelessParameter{28} => namelessParameter{28}.Dependencies.Model.FindEntityType("BookingRoom")]: 
                                    {
                                        return 
                                        {
                                            Dictionary<string, object> instance;
                                            instance = new Dictionary<string, object>();
                                            instance["BookingID"] = (object)dataReader.GetInt32(0);
                                            instance["RoomID"] = (object)dataReader.GetInt32(1);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: BookingRoom (Dictionary<string, object>) CLR Type: Dictionary<string, object> | Resolver: namelessParameter{29} => namelessParameter{29}.Dependencies.Model.FindEntityType("BookingRoom")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Dictionary<string, object>)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    entity = 
                    {
                        MaterializationContext materializationContext4;
                        IEntityType entityType4;
                        Room instance4;
                        InternalEntityEntry entry4;
                        bool hasNullKey4;
                        materializationContext4 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance4 = default(Room);
                        entry4 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Room.RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindPrimaryKey()], 
                            keyValues: new object[]{ (object)dataReader.GetInt32(2) }, 
                            throwOnNullKey: True, 
                            hasNullKey: hasNullKey4);
                        !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                        {
                            entityType4 = entry4.EntityType;
                            return instance4 = (Room)entry4.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot4;
                            shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType4 = [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{30} => namelessParameter{30}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")];
                            instance4 = switch (entityType4)
                            {
                                case [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{31} => namelessParameter{31}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]: 
                                    {
                                        return 
                                        {
                                            Room instance;
                                            instance = new Room();
                                            instance.<RoomID>k__BackingField = dataReader.GetInt32(2);
                                            instance.<AdultsCapacity>k__BackingField = dataReader.GetInt32(3);
                                            instance.<ChildrenCapacity>k__BackingField = dataReader.GetInt32(4);
                                            instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(5);
                                            instance.<Number>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                            instance.<PricePerNight>k__BackingField = dataReader.GetDecimal(7);
                                            instance.<RoomClassID>k__BackingField = dataReader.GetInt32(8);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext4.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{32} => namelessParameter{32}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Room)
                            }
                            ;
                            entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType4, 
                                entity: instance4, 
                                snapshot: shadowSnapshot4);
                            return instance4;
                        } : default(void);
                        return instance4;
                    };
                    return NavigationExpandingExpressionVisitor.FetchJoinEntity<Dictionary<string, object>, Room>(
                        joinEntity: entity, 
                        targetEntity: entity);
                }, 
                relatedDataLoaders: null, 
                inverseNavigation: [LIFTABLE Constant: SkipNavigation: Room.Bookings (ICollection<Booking>) CollectionBooking Inverse: Rooms | Resolver: namelessParameter{33} => namelessParameter{33}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindSkipNavigation("Bookings")], 
                fixup: (namelessParameter{34}, namelessParameter{35}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Booking, ICollection<Room>, Room> | Resolver: namelessParameter{36} => namelessParameter{36}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindSkipNavigation("Rooms").GetCollectionAccessor()].Add(
                        entity: namelessParameter{34}, 
                        value: namelessParameter{35}, 
                        forMaterialization: True);
                    return [LIFTABLE Constant: ClrICollectionAccessor<Room, ICollection<Booking>, Booking> | Resolver: namelessParameter{37} => namelessParameter{37}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindSkipNavigation("Bookings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{35}, 
                        value: namelessParameter{34}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True), 
            () => ShaperProcessingExpressionVisitor.PopulateSplitIncludeCollectionAsync<LocalUser, RefreshToken>(
                collectionId: 1, 
                queryContext: (RelationalQueryContext)queryContext, 
                executionStrategy: executionStrategy, 
                relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 0], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 1], [Property: RefreshToken.CreatedOn (DateTime) Required, 2], [Property: RefreshToken.ExpiresOn (DateTime) Required, 3], [Property: RefreshToken.RevokedOn (DateTime?), 4], [Property: RefreshToken.Token (string) Required, 5] }
                        1 -> 6
                        2 -> 7
                        3 -> 8
                    SELECT r1.LocalUserId, r1.Id, r1.CreatedOn, r1.ExpiresOn, r1.RevokedOn, r1.Token, s1.BookingID, s1.HotelId, s1.Id
                    FROM 
                    (
                        SELECT TOP(1) b.BookingID, h.HotelId, a.Id
                        FROM Bookings AS b
                        INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
                        INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
                        WHERE b.BookingID == @__id_0
                    ) AS s1
                    INNER JOIN RefreshToken AS r1 ON s1.Id == r1.LocalUserId
                    ORDER BY s1.BookingID ASC, s1.HotelId ASC, s1.Id ASC) | Resolver: c => new RelationalCommandCache(
                    c.Dependencies.MemoryCache, 
                    c.RelationalDependencies.QuerySqlGeneratorFactory, 
                    c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 0], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 1], [Property: RefreshToken.CreatedOn (DateTime) Required, 2], [Property: RefreshToken.ExpiresOn (DateTime) Required, 3], [Property: RefreshToken.RevokedOn (DateTime?), 4], [Property: RefreshToken.Token (string) Required, 5] }
                        1 -> 6
                        2 -> 7
                        3 -> 8
                    SELECT r1.LocalUserId, r1.Id, r1.CreatedOn, r1.ExpiresOn, r1.RevokedOn, r1.Token, s1.BookingID, s1.HotelId, s1.Id
                    FROM 
                    (
                        SELECT TOP(1) b.BookingID, h.HotelId, a.Id
                        FROM Bookings AS b
                        INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
                        INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
                        WHERE b.BookingID == @__id_0
                    ) AS s1
                    INNER JOIN RefreshToken AS r1 ON s1.Id == r1.LocalUserId
                    ORDER BY s1.BookingID ASC, s1.HotelId ASC, s1.Id ASC, 
                    False, 
                    new HashSet<string>(
                        new string[]{ }, 
                        StringComparer.Ordinal
                    )
                )].GetRelationalCommandTemplate(parameters), 
                readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object> } | Resolver: namelessParameter{38} => new ReaderColumn[]
                { 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("LocalUserId"), 
                        (dataReader, indexMap) => (object)dataReader.GetString(0)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("Id"), 
                        (dataReader, indexMap) => dataReader.GetInt32(1)
                    ), 
                    new ReaderColumn<DateTime>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("CreatedOn"), 
                        (dataReader, indexMap) => dataReader.GetDateTime(2)
                    ), 
                    new ReaderColumn<DateTime>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("ExpiresOn"), 
                        (dataReader, indexMap) => dataReader.GetDateTime(3)
                    ), 
                    new ReaderColumn<DateTime>(
                        True, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("RevokedOn"), 
                        (dataReader, indexMap) => dataReader.GetDateTime(4)
                    ), 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("Token"), 
                        (dataReader, indexMap) => (object)dataReader.GetString(5)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(6)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(7)
                    ), 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => (object)dataReader.GetString(8)
                    ) 
                }], 
                detailedErrorsEnabled: False, 
                resultCoordinator: resultCoordinator, 
                childIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(6), 
                    (object)(int?)dataReader.GetInt32(7), 
                    (string)dataReader.GetFieldValue<object>(8) 
                }], 
                identifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext6;
                        IEntityType entityType6;
                        RefreshToken instance6;
                        InternalEntityEntry entry6;
                        bool hasNullKey6;
                        materializationContext6 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance6 = default(RefreshToken);
                        entry6 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                (object)(string)dataReader.GetFieldValue<object>(0), 
                                (object)dataReader.GetInt32(1) 
                            }, 
                            throwOnNullKey: True, 
                            hasNullKey: hasNullKey6);
                        !(hasNullKey6) ? entry6 != default(InternalEntityEntry) ? 
                        {
                            entityType6 = entry6.EntityType;
                            return instance6 = (RefreshToken)entry6.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot6;
                            shadowSnapshot6 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType6 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{39} => namelessParameter{39}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance6 = switch (entityType6)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{40} => namelessParameter{40}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot6 = (ISnapshot)new Snapshot<string, int>(
                                            (string)dataReader.GetFieldValue<object>(0), 
                                            dataReader.GetInt32(1)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.GetDateTime(2);
                                            instance.<ExpiresOn>k__BackingField = dataReader.GetDateTime(3);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(4) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(4);
                                            instance.<Token>k__BackingField = (string)dataReader.GetFieldValue<object>(5);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext6.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{41} => namelessParameter{41}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry6 = entityType6 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType6, 
                                entity: instance6, 
                                snapshot: shadowSnapshot6);
                            return instance6;
                        } : default(void);
                        return instance6;
                    };
                    return entity;
                }, 
                relatedDataLoaders: null, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{42}, namelessParameter{43}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{44} => namelessParameter{44}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{42}, 
                        value: namelessParameter{43}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True) 
        }), 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 22:56:22.494 -04:00 [DBG] Creating DbConnection.
2025-03-24 22:56:22.496 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-24 22:56:22.500 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:56:22.503 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:56:22.504 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 22:56:22.506 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 22:56:22.507 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 22:56:22.509 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."BookingID", b."AfterDiscountedPrice", b."BookingDateUtc", b."CheckInDateUtc", b."CheckOutDateUtc", b."ConfirmationNumber", b."CreatedById", b."GuestId", b."HotelId", b."PaymentMethod", b."Status", b."TotalPrice", b."UserId", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "Bookings" AS b
INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
WHERE b."BookingID" = @__id_0
ORDER BY b."BookingID", h."HotelId", a."Id"
LIMIT 1
2025-03-24 22:56:22.555 -04:00 [INF] Executed DbCommand (46ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."BookingID", b."AfterDiscountedPrice", b."BookingDateUtc", b."CheckInDateUtc", b."CheckOutDateUtc", b."ConfirmationNumber", b."CreatedById", b."GuestId", b."HotelId", b."PaymentMethod", b."Status", b."TotalPrice", b."UserId", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "Bookings" AS b
INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
WHERE b."BookingID" = @__id_0
ORDER BY b."BookingID", h."HotelId", a."Id"
LIMIT 1
2025-03-24 22:56:22.596 -04:00 [DBG] Context 'AppDbContext' started tracking 'Booking' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 22:56:22.663 -04:00 [DBG] The navigation 'Booking.Hotel' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 22:56:22.678 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 22:56:22.710 -04:00 [DBG] The navigation 'Booking.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 22:56:22.713 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 22:56:22.743 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 22:56:22.745 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 22:56:22.753 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-03-24 22:56:22.755 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s0."BookingID", s0."RoomID", s0."RoomID0", s0."AdultsCapacity", s0."ChildrenCapacity", s0."CreatedAtUtc", s0."Number", s0."PricePerNight", s0."RoomClassID", s."BookingID", s."HotelId", s."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s
INNER JOIN (
    SELECT b0."BookingID", b0."RoomID", r0."RoomID" AS "RoomID0", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID"
    FROM "BookingRoom" AS b0
    INNER JOIN "Rooms" AS r0 ON b0."RoomID" = r0."RoomID"
) AS s0 ON s."BookingID" = s0."BookingID"
ORDER BY s."BookingID", s."HotelId", s."Id"
2025-03-24 22:56:22.778 -04:00 [INF] Executed DbCommand (23ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s0."BookingID", s0."RoomID", s0."RoomID0", s0."AdultsCapacity", s0."ChildrenCapacity", s0."CreatedAtUtc", s0."Number", s0."PricePerNight", s0."RoomClassID", s."BookingID", s."HotelId", s."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s
INNER JOIN (
    SELECT b0."BookingID", b0."RoomID", r0."RoomID" AS "RoomID0", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID"
    FROM "BookingRoom" AS b0
    INNER JOIN "Rooms" AS r0 ON b0."RoomID" = r0."RoomID"
) AS s0 ON s."BookingID" = s0."BookingID"
ORDER BY s."BookingID", s."HotelId", s."Id"
2025-03-24 22:56:22.805 -04:00 [DBG] Context 'AppDbContext' started tracking 'BookingRoom' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 22:56:22.826 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 22:56:22.844 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 22:56:22.845 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 22:56:22.847 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-03-24 22:56:22.853 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r1."LocalUserId", r1."Id", r1."CreatedOn", r1."ExpiresOn", r1."RevokedOn", r1."Token", s1."BookingID", s1."HotelId", s1."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s1
INNER JOIN "RefreshToken" AS r1 ON s1."Id" = r1."LocalUserId"
ORDER BY s1."BookingID", s1."HotelId", s1."Id"
2025-03-24 22:56:22.859 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r1."LocalUserId", r1."Id", r1."CreatedOn", r1."ExpiresOn", r1."RevokedOn", r1."Token", s1."BookingID", s1."HotelId", s1."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s1
INNER JOIN "RefreshToken" AS r1 ON s1."Id" = r1."LocalUserId"
ORDER BY s1."BookingID", s1."HotelId", s1."Id"
2025-03-24 22:56:22.868 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 22:56:22.873 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:56:22.876 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 296ms reading results.
2025-03-24 22:56:22.878 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:56:22.884 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 93ms reading results.
2025-03-24 22:56:22.887 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:56:22.888 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 21ms reading results.
2025-03-24 22:56:22.890 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:56:22.893 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 22:56:22.904 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .AsNoTracking()
    .FirstOrDefault(user => user.Id == __userId_0)'
2025-03-24 22:56:22.907 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-24 22:56:22.929 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.Id == @__userId_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.Id == @__userId_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    (object)dataReader.GetString(0) != null ? 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: NoTracking, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        return instance1;
                    } : 
                    {
                        object[] keyValues1;
                        keyValues1 = new object[]{ (object)dataReader.GetString(0) };
                        return ShapedQueryCompilingExpressionVisitor.CreateNullKeyValueInNoTrackingQuery(
                            entityType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")], 
                            properties: [LIFTABLE Constant: List<RuntimeProperty> { Property: LocalUser.Id (string) Required PK AfterSave:Throw } | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey().Properties], 
                            keyValues: keyValues1);
                    };
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: False, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17) != null && dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) != null ? 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: NoTracking, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{9}, namelessParameter{10}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{10}, 
                        forMaterialization: True);
                }, 
                trackingQuery: False);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-24 22:56:22.969 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:56:22.971 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:56:22.973 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 22:56:22.974 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 22:56:22.976 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 22:56:22.978 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__userId_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 22:56:22.988 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__userId_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 22:56:22.997 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:56:23.004 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 11ms reading results.
2025-03-24 22:56:23.006 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:56:23.008 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-24 22:56:23.086 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 22:56:23.113 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 22:56:23.144 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-24 22:56:23.145 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-24 22:56:23.146 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
2025-03-24 22:56:23.151 -04:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2025-03-24 22:56:23.155 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API) in 1231.6378ms
2025-03-24 22:56:23.159 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)'
2025-03-24 22:56:23.161 -04:00 [DBG] Connection id "0HNBB90RDM5N5" completed keep alive response.
2025-03-24 22:56:23.163 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 22:56:23.201 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 22:56:23.204 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 22:56:23.208 -04:00 [INF] Request finished HTTP/1.1 PUT http://localhost:5004/api/Booking/1/Update_status - 400 null text/plain; charset=utf-8 1442.1527ms
2025-03-24 22:57:20.184 -04:00 [DBG] Connection id "0HNBB90RDM5N5" received FIN.
2025-03-24 22:57:20.187 -04:00 [DBG] Connection id "0HNBB90RDM5N5" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 22:57:20.190 -04:00 [DBG] Connection id "0HNBB90RDM5N5" disconnecting.
2025-03-24 22:57:20.192 -04:00 [DBG] Connection id "0HNBB90RDM5N5" stopped.
2025-03-24 23:00:38.735 -04:00 [DBG] Connection id "0HNBB90RDM5N6" accepted.
2025-03-24 23:00:38.738 -04:00 [DBG] Connection id "0HNBB90RDM5N6" started.
2025-03-24 23:00:38.740 -04:00 [INF] Request starting HTTP/1.1 PUT http://localhost:5004/api/Booking/3/Update_status - application/json 1
2025-03-24 23:00:38.819 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/3/Update_status'
2025-03-24 23:00:38.827 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)' with route pattern 'api/Booking/{id}/Update_status' is valid for the request path '/api/Booking/3/Update_status'
2025-03-24 23:00:38.830 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)'
2025-03-24 23:00:38.834 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 23:00:38.835 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 23:00:38.837 -04:00 [DBG] Successfully validated the token.
2025-03-24 23:00:38.839 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 23:00:38.852 -04:00 [DBG] Authorization was successful.
2025-03-24 23:00:38.894 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)'
2025-03-24 23:00:38.897 -04:00 [INF] Route matched with {action = "UpdateBookingStatus", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateBookingStatus(Int32, HotelBookingPlatform.Domain.Enums.BookingStatus) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-03-24 23:00:38.901 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 23:00:38.903 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 23:00:38.933 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-24 23:00:38.950 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 23:00:38.989 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 23:00:39.013 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 23:00:39.025 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 23:00:39.043 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-24 23:00:39.096 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-24 23:00:39.119 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-24 23:00:39.157 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-24 23:00:39.165 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-24 23:00:39.169 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-24 23:00:39.173 -04:00 [DBG] Attempting to bind parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus' ...
2025-03-24 23:00:39.180 -04:00 [DBG] Attempting to bind parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus' using the name '' in request data ...
2025-03-24 23:00:39.198 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 23:00:39.201 -04:00 [DBG] Connection id "0HNBB90RDM5N6", Request id "0HNBB90RDM5N6:00000001": started reading request body.
2025-03-24 23:00:39.205 -04:00 [DBG] Connection id "0HNBB90RDM5N6", Request id "0HNBB90RDM5N6:00000001": done reading request body.
2025-03-24 23:00:39.212 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Enums.BookingStatus'
2025-03-24 23:00:39.215 -04:00 [DBG] Done attempting to bind parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus'.
2025-03-24 23:00:39.224 -04:00 [DBG] Done attempting to bind parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus'.
2025-03-24 23:00:39.228 -04:00 [DBG] Attempting to validate the bound parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus' ...
2025-03-24 23:00:39.231 -04:00 [DBG] Done attempting to validate the bound parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus'.
2025-03-24 23:00:39.356 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 23:00:39.427 -04:00 [DBG] Creating DbConnection.
2025-03-24 23:00:39.429 -04:00 [DBG] Created DbConnection. (3ms).
2025-03-24 23:00:39.431 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:00:39.483 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:00:39.486 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 23:00:39.488 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-24 23:00:39.491 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 23:00:39.495 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."BookingID", b."AfterDiscountedPrice", b."BookingDateUtc", b."CheckInDateUtc", b."CheckOutDateUtc", b."ConfirmationNumber", b."CreatedById", b."GuestId", b."HotelId", b."PaymentMethod", b."Status", b."TotalPrice", b."UserId", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "Bookings" AS b
INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
WHERE b."BookingID" = @__id_0
ORDER BY b."BookingID", h."HotelId", a."Id"
LIMIT 1
2025-03-24 23:00:39.517 -04:00 [INF] Executed DbCommand (21ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."BookingID", b."AfterDiscountedPrice", b."BookingDateUtc", b."CheckInDateUtc", b."CheckOutDateUtc", b."ConfirmationNumber", b."CreatedById", b."GuestId", b."HotelId", b."PaymentMethod", b."Status", b."TotalPrice", b."UserId", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "Bookings" AS b
INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
WHERE b."BookingID" = @__id_0
ORDER BY b."BookingID", h."HotelId", a."Id"
LIMIT 1
2025-03-24 23:00:39.528 -04:00 [DBG] Context 'AppDbContext' started tracking 'Booking' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:00:39.537 -04:00 [DBG] The navigation 'Booking.Hotel' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:00:39.540 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:00:39.547 -04:00 [DBG] The navigation 'Booking.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:00:39.550 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:00:39.555 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 23:00:39.556 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 23:00:39.558 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-24 23:00:39.567 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s0."BookingID", s0."RoomID", s0."RoomID0", s0."AdultsCapacity", s0."ChildrenCapacity", s0."CreatedAtUtc", s0."Number", s0."PricePerNight", s0."RoomClassID", s."BookingID", s."HotelId", s."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s
INNER JOIN (
    SELECT b0."BookingID", b0."RoomID", r0."RoomID" AS "RoomID0", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID"
    FROM "BookingRoom" AS b0
    INNER JOIN "Rooms" AS r0 ON b0."RoomID" = r0."RoomID"
) AS s0 ON s."BookingID" = s0."BookingID"
ORDER BY s."BookingID", s."HotelId", s."Id"
2025-03-24 23:00:39.577 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s0."BookingID", s0."RoomID", s0."RoomID0", s0."AdultsCapacity", s0."ChildrenCapacity", s0."CreatedAtUtc", s0."Number", s0."PricePerNight", s0."RoomClassID", s."BookingID", s."HotelId", s."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s
INNER JOIN (
    SELECT b0."BookingID", b0."RoomID", r0."RoomID" AS "RoomID0", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID"
    FROM "BookingRoom" AS b0
    INNER JOIN "Rooms" AS r0 ON b0."RoomID" = r0."RoomID"
) AS s0 ON s."BookingID" = s0."BookingID"
ORDER BY s."BookingID", s."HotelId", s."Id"
2025-03-24 23:00:39.590 -04:00 [DBG] Context 'AppDbContext' started tracking 'BookingRoom' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:00:39.596 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:00:39.602 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 23:00:39.603 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 23:00:39.606 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 23:00:39.608 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r1."LocalUserId", r1."Id", r1."CreatedOn", r1."ExpiresOn", r1."RevokedOn", r1."Token", s1."BookingID", s1."HotelId", s1."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s1
INNER JOIN "RefreshToken" AS r1 ON s1."Id" = r1."LocalUserId"
ORDER BY s1."BookingID", s1."HotelId", s1."Id"
2025-03-24 23:00:39.621 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r1."LocalUserId", r1."Id", r1."CreatedOn", r1."ExpiresOn", r1."RevokedOn", r1."Token", s1."BookingID", s1."HotelId", s1."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s1
INNER JOIN "RefreshToken" AS r1 ON s1."Id" = r1."LocalUserId"
ORDER BY s1."BookingID", s1."HotelId", s1."Id"
2025-03-24 23:00:39.632 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:00:39.637 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:00:39.640 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 111ms reading results.
2025-03-24 23:00:39.646 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:00:39.648 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 59ms reading results.
2025-03-24 23:00:39.652 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:00:39.656 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 24ms reading results.
2025-03-24 23:00:39.662 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:00:39.665 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 23:00:39.669 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:00:39.671 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:00:39.674 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 23:00:39.680 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-03-24 23:00:39.682 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-24 23:00:39.684 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__userId_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 23:00:39.695 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__userId_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 23:00:39.704 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:00:39.706 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 23:00:39.715 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:00:39.721 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-24 23:00:39.727 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 23:00:39.733 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 23:00:39.734 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-24 23:00:39.736 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-24 23:00:39.738 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
2025-03-24 23:00:39.741 -04:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2025-03-24 23:00:39.751 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API) in 737.7538ms
2025-03-24 23:00:39.755 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)'
2025-03-24 23:00:39.757 -04:00 [DBG] Connection id "0HNBB90RDM5N6" completed keep alive response.
2025-03-24 23:00:39.769 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 23:00:39.778 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:00:39.785 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (10ms).
2025-03-24 23:00:39.789 -04:00 [INF] Request finished HTTP/1.1 PUT http://localhost:5004/api/Booking/3/Update_status - 400 null text/plain; charset=utf-8 1049.6059ms
2025-03-24 23:00:40.513 -04:00 [DBG] Connection id "0HNBB90RDM5N6" received FIN.
2025-03-24 23:00:40.523 -04:00 [DBG] Connection id "0HNBB90RDM5N6" disconnecting.
2025-03-24 23:00:40.534 -04:00 [DBG] Connection id "0HNBB90RDM5N6" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 23:00:40.557 -04:00 [DBG] Connection id "0HNBB90RDM5N6" stopped.
2025-03-24 23:03:56.135 -04:00 [DBG] Connection id "0HNBB90RDM5N7" accepted.
2025-03-24 23:03:56.137 -04:00 [DBG] Connection id "0HNBB90RDM5N7" started.
2025-03-24 23:03:56.139 -04:00 [INF] Request starting HTTP/1.1 PUT http://localhost:5004/api/Booking/3/Update_status - application/json 11
2025-03-24 23:03:56.144 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/3/Update_status'
2025-03-24 23:03:56.147 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)' with route pattern 'api/Booking/{id}/Update_status' is valid for the request path '/api/Booking/3/Update_status'
2025-03-24 23:03:56.154 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)'
2025-03-24 23:03:56.156 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 23:03:56.158 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 23:03:56.167 -04:00 [DBG] Successfully validated the token.
2025-03-24 23:03:56.171 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 23:03:56.173 -04:00 [DBG] Authorization was successful.
2025-03-24 23:03:56.175 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)'
2025-03-24 23:03:56.182 -04:00 [INF] Route matched with {action = "UpdateBookingStatus", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateBookingStatus(Int32, HotelBookingPlatform.Domain.Enums.BookingStatus) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-03-24 23:03:56.193 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 23:03:56.196 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 23:03:56.198 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-24 23:03:56.207 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 23:03:56.209 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 23:03:56.211 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 23:03:56.230 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 23:03:56.233 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-24 23:03:56.415 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-24 23:03:56.429 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-24 23:03:56.430 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-24 23:03:56.432 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-24 23:03:56.442 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-24 23:03:56.444 -04:00 [DBG] Attempting to bind parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus' ...
2025-03-24 23:03:56.468 -04:00 [DBG] Attempting to bind parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus' using the name '' in request data ...
2025-03-24 23:03:56.472 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 23:03:56.474 -04:00 [DBG] Connection id "0HNBB90RDM5N7", Request id "0HNBB90RDM5N7:00000001": started reading request body.
2025-03-24 23:03:56.476 -04:00 [DBG] Connection id "0HNBB90RDM5N7", Request id "0HNBB90RDM5N7:00000001": done reading request body.
2025-03-24 23:03:56.480 -04:00 [DBG] JSON input formatter threw an exception: The JSON value could not be converted to HotelBookingPlatform.Domain.Enums.BookingStatus. Path: $ | LineNumber: 0 | BytePositionInLine: 11.
2025-03-24 23:03:56.482 -04:00 [DBG] Done attempting to bind parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus'.
2025-03-24 23:03:56.486 -04:00 [DBG] Done attempting to bind parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus'.
2025-03-24 23:03:56.488 -04:00 [DBG] Attempting to validate the bound parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus' ...
2025-03-24 23:03:56.490 -04:00 [DBG] Done attempting to validate the bound parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus'.
2025-03-24 23:03:56.492 -04:00 [DBG] The request has model state errors, returning an error response.
2025-03-24 23:03:56.493 -04:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-03-24 23:03:56.495 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 23:03:56.521 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 23:03:56.522 -04:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-03-24 23:03:56.525 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-03-24 23:03:56.527 -04:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-03-24 23:03:56.530 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API) in 318.9836ms
2025-03-24 23:03:56.535 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)'
2025-03-24 23:03:56.537 -04:00 [DBG] Connection id "0HNBB90RDM5N7" completed keep alive response.
2025-03-24 23:03:56.539 -04:00 [INF] Request finished HTTP/1.1 PUT http://localhost:5004/api/Booking/3/Update_status - 400 null application/problem+json; charset=utf-8 399.869ms
2025-03-24 23:04:00.838 -04:00 [DBG] Connection id "0HNBB90RDM5N7" received FIN.
2025-03-24 23:04:00.865 -04:00 [DBG] Connection id "0HNBB90RDM5N7" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 23:04:00.867 -04:00 [DBG] Connection id "0HNBB90RDM5N7" disconnecting.
2025-03-24 23:04:00.885 -04:00 [DBG] Connection id "0HNBB90RDM5N7" stopped.
2025-03-24 23:05:35.925 -04:00 [DBG] Connection id "0HNBB90RDM5N8" accepted.
2025-03-24 23:05:35.927 -04:00 [DBG] Connection id "0HNBB90RDM5N8" started.
2025-03-24 23:05:35.930 -04:00 [INF] Request starting HTTP/1.1 PUT http://localhost:5004/api/Booking/3/Update_status - application/json 1
2025-03-24 23:05:35.996 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/3/Update_status'
2025-03-24 23:05:35.999 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)' with route pattern 'api/Booking/{id}/Update_status' is valid for the request path '/api/Booking/3/Update_status'
2025-03-24 23:05:36.002 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)'
2025-03-24 23:05:36.003 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-24 23:05:36.005 -04:00 [INF] No CORS policy found for the specified request.
2025-03-24 23:05:36.008 -04:00 [DBG] Successfully validated the token.
2025-03-24 23:05:36.009 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-24 23:05:36.012 -04:00 [DBG] Authorization was successful.
2025-03-24 23:05:36.013 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)'
2025-03-24 23:05:36.015 -04:00 [INF] Route matched with {action = "UpdateBookingStatus", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateBookingStatus(Int32, HotelBookingPlatform.Domain.Enums.BookingStatus) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-03-24 23:05:36.024 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-24 23:05:36.026 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-24 23:05:36.029 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-24 23:05:36.034 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-24 23:05:36.036 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-24 23:05:36.043 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 23:05:36.045 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-24 23:05:36.048 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-24 23:05:36.051 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-24 23:05:36.054 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-24 23:05:36.058 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-24 23:05:36.062 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-24 23:05:36.064 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-24 23:05:36.066 -04:00 [DBG] Attempting to bind parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus' ...
2025-03-24 23:05:36.068 -04:00 [DBG] Attempting to bind parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus' using the name '' in request data ...
2025-03-24 23:05:36.071 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-24 23:05:36.076 -04:00 [DBG] Connection id "0HNBB90RDM5N8", Request id "0HNBB90RDM5N8:00000001": started reading request body.
2025-03-24 23:05:36.095 -04:00 [DBG] Connection id "0HNBB90RDM5N8", Request id "0HNBB90RDM5N8:00000001": done reading request body.
2025-03-24 23:05:36.098 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Enums.BookingStatus'
2025-03-24 23:05:36.144 -04:00 [DBG] Done attempting to bind parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus'.
2025-03-24 23:05:36.146 -04:00 [DBG] Done attempting to bind parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus'.
2025-03-24 23:05:36.147 -04:00 [DBG] Attempting to validate the bound parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus' ...
2025-03-24 23:05:36.167 -04:00 [DBG] Done attempting to validate the bound parameter 'newStatus' of type 'HotelBookingPlatform.Domain.Enums.BookingStatus'.
2025-03-24 23:05:36.243 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-24 23:05:36.254 -04:00 [DBG] Creating DbConnection.
2025-03-24 23:05:36.260 -04:00 [DBG] Created DbConnection. (5ms).
2025-03-24 23:05:36.262 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.265 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.268 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 23:05:36.269 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 23:05:36.275 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-03-24 23:05:36.277 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."BookingID", b."AfterDiscountedPrice", b."BookingDateUtc", b."CheckInDateUtc", b."CheckOutDateUtc", b."ConfirmationNumber", b."CreatedById", b."GuestId", b."HotelId", b."PaymentMethod", b."Status", b."TotalPrice", b."UserId", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "Bookings" AS b
INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
WHERE b."BookingID" = @__id_0
ORDER BY b."BookingID", h."HotelId", a."Id"
LIMIT 1
2025-03-24 23:05:36.293 -04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."BookingID", b."AfterDiscountedPrice", b."BookingDateUtc", b."CheckInDateUtc", b."CheckOutDateUtc", b."ConfirmationNumber", b."CreatedById", b."GuestId", b."HotelId", b."PaymentMethod", b."Status", b."TotalPrice", b."UserId", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "Bookings" AS b
INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
WHERE b."BookingID" = @__id_0
ORDER BY b."BookingID", h."HotelId", a."Id"
LIMIT 1
2025-03-24 23:05:36.299 -04:00 [DBG] Context 'AppDbContext' started tracking 'Booking' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:05:36.308 -04:00 [DBG] The navigation 'Booking.Hotel' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:05:36.314 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:05:36.353 -04:00 [DBG] The navigation 'Booking.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:05:36.360 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:05:36.364 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 23:05:36.368 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-24 23:05:36.417 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (52ms).
2025-03-24 23:05:36.420 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s0."BookingID", s0."RoomID", s0."RoomID0", s0."AdultsCapacity", s0."ChildrenCapacity", s0."CreatedAtUtc", s0."Number", s0."PricePerNight", s0."RoomClassID", s."BookingID", s."HotelId", s."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s
INNER JOIN (
    SELECT b0."BookingID", b0."RoomID", r0."RoomID" AS "RoomID0", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID"
    FROM "BookingRoom" AS b0
    INNER JOIN "Rooms" AS r0 ON b0."RoomID" = r0."RoomID"
) AS s0 ON s."BookingID" = s0."BookingID"
ORDER BY s."BookingID", s."HotelId", s."Id"
2025-03-24 23:05:36.430 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s0."BookingID", s0."RoomID", s0."RoomID0", s0."AdultsCapacity", s0."ChildrenCapacity", s0."CreatedAtUtc", s0."Number", s0."PricePerNight", s0."RoomClassID", s."BookingID", s."HotelId", s."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s
INNER JOIN (
    SELECT b0."BookingID", b0."RoomID", r0."RoomID" AS "RoomID0", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID"
    FROM "BookingRoom" AS b0
    INNER JOIN "Rooms" AS r0 ON b0."RoomID" = r0."RoomID"
) AS s0 ON s."BookingID" = s0."BookingID"
ORDER BY s."BookingID", s."HotelId", s."Id"
2025-03-24 23:05:36.438 -04:00 [DBG] Context 'AppDbContext' started tracking 'BookingRoom' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:05:36.444 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:05:36.447 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 23:05:36.452 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-24 23:05:36.462 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (14ms).
2025-03-24 23:05:36.464 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r1."LocalUserId", r1."Id", r1."CreatedOn", r1."ExpiresOn", r1."RevokedOn", r1."Token", s1."BookingID", s1."HotelId", s1."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s1
INNER JOIN "RefreshToken" AS r1 ON s1."Id" = r1."LocalUserId"
ORDER BY s1."BookingID", s1."HotelId", s1."Id"
2025-03-24 23:05:36.474 -04:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r1."LocalUserId", r1."Id", r1."CreatedOn", r1."ExpiresOn", r1."RevokedOn", r1."Token", s1."BookingID", s1."HotelId", s1."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s1
INNER JOIN "RefreshToken" AS r1 ON s1."Id" = r1."LocalUserId"
ORDER BY s1."BookingID", s1."HotelId", s1."Id"
2025-03-24 23:05:36.480 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:05:36.483 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.485 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 186ms reading results.
2025-03-24 23:05:36.491 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.494 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 56ms reading results.
2025-03-24 23:05:36.497 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.499 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 19ms reading results.
2025-03-24 23:05:36.502 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.504 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-24 23:05:36.511 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.514 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.516 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 23:05:36.518 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-24 23:05:36.521 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 23:05:36.528 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__userId_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 23:05:36.544 -04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__userId_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-24 23:05:36.550 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.552 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-24 23:05:36.557 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.562 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-24 23:05:36.566 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.569 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.574 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 23:05:36.577 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-24 23:05:36.579 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 23:05:36.581 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."BookingID", b."AfterDiscountedPrice", b."BookingDateUtc", b."CheckInDateUtc", b."CheckOutDateUtc", b."ConfirmationNumber", b."CreatedById", b."GuestId", b."HotelId", b."PaymentMethod", b."Status", b."TotalPrice", b."UserId", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "Bookings" AS b
INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
WHERE b."BookingID" = @__id_0
ORDER BY b."BookingID", h."HotelId", a."Id"
LIMIT 1
2025-03-24 23:05:36.587 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."BookingID", b."AfterDiscountedPrice", b."BookingDateUtc", b."CheckInDateUtc", b."CheckOutDateUtc", b."ConfirmationNumber", b."CreatedById", b."GuestId", b."HotelId", b."PaymentMethod", b."Status", b."TotalPrice", b."UserId", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "Bookings" AS b
INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
WHERE b."BookingID" = @__id_0
ORDER BY b."BookingID", h."HotelId", a."Id"
LIMIT 1
2025-03-24 23:05:36.593 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 23:05:36.595 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-24 23:05:36.597 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 23:05:36.599 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s0."BookingID", s0."RoomID", s0."RoomID0", s0."AdultsCapacity", s0."ChildrenCapacity", s0."CreatedAtUtc", s0."Number", s0."PricePerNight", s0."RoomClassID", s."BookingID", s."HotelId", s."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s
INNER JOIN (
    SELECT b0."BookingID", b0."RoomID", r0."RoomID" AS "RoomID0", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID"
    FROM "BookingRoom" AS b0
    INNER JOIN "Rooms" AS r0 ON b0."RoomID" = r0."RoomID"
) AS s0 ON s."BookingID" = s0."BookingID"
ORDER BY s."BookingID", s."HotelId", s."Id"
2025-03-24 23:05:36.606 -04:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s0."BookingID", s0."RoomID", s0."RoomID0", s0."AdultsCapacity", s0."ChildrenCapacity", s0."CreatedAtUtc", s0."Number", s0."PricePerNight", s0."RoomClassID", s."BookingID", s."HotelId", s."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s
INNER JOIN (
    SELECT b0."BookingID", b0."RoomID", r0."RoomID" AS "RoomID0", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID"
    FROM "BookingRoom" AS b0
    INNER JOIN "Rooms" AS r0 ON b0."RoomID" = r0."RoomID"
) AS s0 ON s."BookingID" = s0."BookingID"
ORDER BY s."BookingID", s."HotelId", s."Id"
2025-03-24 23:05:36.611 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 23:05:36.613 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-24 23:05:36.615 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-24 23:05:36.617 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r1."LocalUserId", r1."Id", r1."CreatedOn", r1."ExpiresOn", r1."RevokedOn", r1."Token", s1."BookingID", s1."HotelId", s1."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s1
INNER JOIN "RefreshToken" AS r1 ON s1."Id" = r1."LocalUserId"
ORDER BY s1."BookingID", s1."HotelId", s1."Id"
2025-03-24 23:05:36.649 -04:00 [INF] Executed DbCommand (32ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r1."LocalUserId", r1."Id", r1."CreatedOn", r1."ExpiresOn", r1."RevokedOn", r1."Token", s1."BookingID", s1."HotelId", s1."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s1
INNER JOIN "RefreshToken" AS r1 ON s1."Id" = r1."LocalUserId"
ORDER BY s1."BookingID", s1."HotelId", s1."Id"
2025-03-24 23:05:36.657 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.658 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 65ms reading results.
2025-03-24 23:05:36.661 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.662 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 51ms reading results.
2025-03-24 23:05:36.665 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.666 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-03-24 23:05:36.669 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.674 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (5ms).
2025-03-24 23:05:36.698 -04:00 [DBG] An entity of type 'Booking' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:05:36.704 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-24 23:05:36.711 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-24 23:05:36.767 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-24 23:05:36.915 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.917 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:36.921 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-24 23:05:36.924 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-24 23:05:36.934 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (12ms).
2025-03-24 23:05:36.937 -04:00 [DBG] Executing DbCommand [Parameters=[@p12='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?', @p6='?' (DbType = Guid), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Decimal), @p11='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Bookings" SET "AfterDiscountedPrice" = @p0, "BookingDateUtc" = @p1, "CheckInDateUtc" = @p2, "CheckOutDateUtc" = @p3, "ConfirmationNumber" = @p4, "CreatedById" = @p5, "GuestId" = @p6, "HotelId" = @p7, "PaymentMethod" = @p8, "Status" = @p9, "TotalPrice" = @p10, "UserId" = @p11
WHERE "BookingID" = @p12;
2025-03-24 23:05:37.014 -04:00 [INF] Executed DbCommand (77ms) [Parameters=[@p12='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?', @p6='?' (DbType = Guid), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Decimal), @p11='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Bookings" SET "AfterDiscountedPrice" = @p0, "BookingDateUtc" = @p1, "CheckInDateUtc" = @p2, "CheckOutDateUtc" = @p3, "ConfirmationNumber" = @p4, "CreatedById" = @p5, "GuestId" = @p6, "HotelId" = @p7, "PaymentMethod" = @p8, "Status" = @p9, "TotalPrice" = @p10, "UserId" = @p11
WHERE "BookingID" = @p12;
2025-03-24 23:05:37.020 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:37.025 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-03-24 23:05:37.028 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:37.032 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-24 23:05:37.051 -04:00 [DBG] An entity of type 'Booking' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-24 23:05:37.078 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-24 23:05:37.085 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-24 23:05:37.087 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-24 23:05:37.097 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-24 23:05:37.099 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 0 entities written to the database.
2025-03-24 23:05:37.104 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-24 23:05:37.111 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-24 23:05:37.114 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-24 23:05:37.117 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-24 23:05:37.119 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-24 23:05:37.184 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-24 23:05:37.201 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API) in 1158.9078ms
2025-03-24 23:05:37.209 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.UpdateBookingStatus (HotelBookingPlatform.API)'
2025-03-24 23:05:37.213 -04:00 [DBG] Connection id "0HNBB90RDM5N8" completed keep alive response.
2025-03-24 23:05:37.224 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-24 23:05:37.226 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-24 23:05:37.236 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (9ms).
2025-03-24 23:05:37.243 -04:00 [INF] Request finished HTTP/1.1 PUT http://localhost:5004/api/Booking/3/Update_status - 200 null application/json; charset=utf-8 1313.3808ms
2025-03-24 23:05:40.995 -04:00 [DBG] Connection id "0HNBB90RDM5N8" received FIN.
2025-03-24 23:05:40.997 -04:00 [DBG] Connection id "0HNBB90RDM5N8" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-24 23:05:41.000 -04:00 [DBG] Connection id "0HNBB90RDM5N8" disconnecting.
2025-03-24 23:05:41.003 -04:00 [DBG] Connection id "0HNBB90RDM5N8" stopped.
2025-03-25 08:44:31.064 -04:00 [DBG] Connection id "0HNBB90RDM5N9" accepted.
2025-03-25 08:44:31.098 -04:00 [DBG] Connection id "0HNBB90RDM5N9" started.
2025-03-25 08:44:31.133 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Booking/1 - null null
2025-03-25 08:44:31.149 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/1'
2025-03-25 08:44:31.156 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/{id}' is valid for the request path '/api/Booking/1'
2025-03-25 08:44:31.159 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)'
2025-03-25 08:44:31.176 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-25 08:44:31.243 -04:00 [DBG] Successfully validated the token.
2025-03-25 08:44:31.288 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-25 08:44:31.330 -04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-03-25 08:44:31.369 -04:00 [INF] AuthenticationScheme: Bearer was forbidden.
2025-03-25 08:44:31.391 -04:00 [DBG] Connection id "0HNBB90RDM5N9" completed keep alive response.
2025-03-25 08:44:31.393 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Booking/1 - 403 0 null 260.6184ms
2025-03-25 08:44:33.708 -04:00 [DBG] Connection id "0HNBB90RDM5N9" received FIN.
2025-03-25 08:44:33.710 -04:00 [DBG] Connection id "0HNBB90RDM5N9" disconnecting.
2025-03-25 08:44:33.713 -04:00 [DBG] Connection id "0HNBB90RDM5N9" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-25 08:44:33.720 -04:00 [DBG] Connection id "0HNBB90RDM5N9" stopped.
2025-03-25 08:53:17.548 -04:00 [DBG] Connection id "0HNBB90RDM5NA" accepted.
2025-03-25 08:53:17.549 -04:00 [DBG] Connection id "0HNBB90RDM5NA" started.
2025-03-25 08:53:17.554 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Booking/1 - null null
2025-03-25 08:53:17.559 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/1'
2025-03-25 08:53:17.561 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/{id}' is valid for the request path '/api/Booking/1'
2025-03-25 08:53:17.589 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)'
2025-03-25 08:53:17.593 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-25 08:53:17.598 -04:00 [DBG] Successfully validated the token.
2025-03-25 08:53:17.609 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-25 08:53:17.624 -04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-03-25 08:53:17.626 -04:00 [INF] AuthenticationScheme: Bearer was forbidden.
2025-03-25 08:53:17.629 -04:00 [DBG] Connection id "0HNBB90RDM5NA" completed keep alive response.
2025-03-25 08:53:17.640 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Booking/1 - 403 0 null 86.0644ms
2025-03-25 08:53:24.550 -04:00 [DBG] Connection id "0HNBB90RDM5NA" received FIN.
2025-03-25 08:53:24.555 -04:00 [DBG] Connection id "0HNBB90RDM5NA" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-25 08:53:24.562 -04:00 [DBG] Connection id "0HNBB90RDM5NA" disconnecting.
2025-03-25 08:53:24.571 -04:00 [DBG] Connection id "0HNBB90RDM5NA" stopped.
2025-03-25 08:53:38.447 -04:00 [DBG] Connection id "0HNBB90RDM5NB" accepted.
2025-03-25 08:53:38.448 -04:00 [DBG] Connection id "0HNBB90RDM5NB" started.
2025-03-25 08:53:38.452 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Booking/1 - null null
2025-03-25 08:53:38.457 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/1'
2025-03-25 08:53:38.509 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/{id}' is valid for the request path '/api/Booking/1'
2025-03-25 08:53:38.511 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)'
2025-03-25 08:53:38.514 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-25 08:53:38.522 -04:00 [DBG] Successfully validated the token.
2025-03-25 08:53:38.526 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-25 08:53:38.528 -04:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-03-25 08:53:38.530 -04:00 [INF] AuthenticationScheme: Bearer was forbidden.
2025-03-25 08:53:38.532 -04:00 [DBG] Connection id "0HNBB90RDM5NB" completed keep alive response.
2025-03-25 08:53:38.540 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Booking/1 - 403 0 null 88.4857ms
2025-03-25 08:53:44.578 -04:00 [DBG] Connection id "0HNBB90RDM5NB" received FIN.
2025-03-25 08:53:44.582 -04:00 [DBG] Connection id "0HNBB90RDM5NB" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-25 08:53:44.593 -04:00 [DBG] Connection id "0HNBB90RDM5NB" disconnecting.
2025-03-25 08:53:44.597 -04:00 [DBG] Connection id "0HNBB90RDM5NB" stopped.
2025-03-25 08:56:26.052 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-25 08:56:26.466 -04:00 [DBG] Hosting starting
2025-03-25 08:56:26.505 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-25 08:56:26.530 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-25 08:56:26.648 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-25 08:56:26.733 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-25 08:56:27.395 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-25 08:56:27.408 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-25 08:56:27.428 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-25 08:56:27.469 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-25 08:56:27.815 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-25 08:56:27.885 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-25 08:56:27.973 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-25 08:56:28.191 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-25 08:56:28.194 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-25 08:56:28.196 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-25 08:56:28.197 -04:00 [INF] Hosting environment: Development
2025-03-25 08:56:28.200 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-25 08:56:28.202 -04:00 [DBG] Hosting started
2025-03-25 08:56:37.285 -04:00 [DBG] Connection id "0HNBBJHT9VH1I" accepted.
2025-03-25 08:56:37.288 -04:00 [DBG] Connection id "0HNBBJHT9VH1I" started.
2025-03-25 08:56:37.357 -04:00 [DBG] Connection id "0HNBBJHT9VH1J" accepted.
2025-03-25 08:56:37.359 -04:00 [DBG] Connection id "0HNBBJHT9VH1J" started.
2025-03-25 08:56:37.420 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-03-25 08:56:37.425 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-25 08:56:37.473 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-03-25 08:56:37.475 -04:00 [DBG] Request did not match any endpoints
2025-03-25 08:56:37.613 -04:00 [DBG] Connection id "0HNBBJHT9VH1I" completed keep alive response.
2025-03-25 08:56:37.617 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 198.9651ms
2025-03-25 08:56:37.712 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-03-25 08:56:37.717 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-03-25 08:56:37.719 -04:00 [DBG] Request did not match any endpoints
2025-03-25 08:56:37.735 -04:00 [DBG] Connection id "0HNBBJHT9VH1I" completed keep alive response.
2025-03-25 08:56:37.738 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 26.568ms
2025-03-25 08:56:38.140 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-25 08:56:38.207 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-25 08:56:38.219 -04:00 [DBG] Request did not match any endpoints
2025-03-25 08:56:39.217 -04:00 [DBG] Connection id "0HNBBJHT9VH1I" completed keep alive response.
2025-03-25 08:56:39.220 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 1079.9879ms
2025-03-25 08:56:39.849 -04:00 [DBG] Connection id "0HNBBJHT9VH1I" received FIN.
2025-03-25 08:56:39.849 -04:00 [DBG] Connection id "0HNBBJHT9VH1J" received FIN.
2025-03-25 08:56:39.853 -04:00 [DBG] Connection id "0HNBBJHT9VH1J" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-25 08:56:39.853 -04:00 [DBG] Connection id "0HNBBJHT9VH1I" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-25 08:56:39.864 -04:00 [DBG] Connection id "0HNBBJHT9VH1I" disconnecting.
2025-03-25 08:56:39.859 -04:00 [DBG] Connection id "0HNBBJHT9VH1J" disconnecting.
2025-03-25 08:56:39.868 -04:00 [DBG] Connection id "0HNBBJHT9VH1I" stopped.
2025-03-25 08:56:39.869 -04:00 [DBG] Connection id "0HNBBJHT9VH1J" stopped.
2025-03-25 08:57:25.102 -04:00 [DBG] Connection id "0HNBBJHT9VH1K" accepted.
2025-03-25 08:57:25.103 -04:00 [DBG] Connection id "0HNBBJHT9VH1K" started.
2025-03-25 08:57:25.107 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 62
2025-03-25 08:57:25.133 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-25 08:57:25.139 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-25 08:57:25.144 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-25 08:57:25.154 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-25 08:57:25.156 -04:00 [INF] No CORS policy found for the specified request.
2025-03-25 08:57:25.160 -04:00 [WRN] Failed to determine the https port for redirect.
2025-03-25 08:57:25.215 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-25 08:57:25.218 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-25 08:57:25.286 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-25 08:57:25.290 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-25 08:57:25.303 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-25 08:57:25.306 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-25 08:57:25.316 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-25 08:57:25.318 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-25 08:57:25.351 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-25 08:57:25.751 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-25 08:57:25.799 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-25 08:57:25.808 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-25 08:57:25.814 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-25 08:57:25.818 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-25 08:57:25.846 -04:00 [DBG] Connection id "0HNBBJHT9VH1K", Request id "0HNBBJHT9VH1K:00000001": started reading request body.
2025-03-25 08:57:25.849 -04:00 [DBG] Connection id "0HNBBJHT9VH1K", Request id "0HNBBJHT9VH1K:00000001": done reading request body.
2025-03-25 08:57:25.867 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-25 08:57:25.870 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-25 08:57:25.873 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-25 08:57:25.876 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-25 08:57:25.888 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-25 08:57:26.204 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-25 08:57:26.253 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-25 08:57:26.389 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-25 08:57:26.433 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-25 08:57:26.486 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-25 08:57:26.491 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-25 08:57:26.506 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-25 08:57:26.594 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-25 08:57:26.602 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-25 08:57:26.623 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-25 08:57:26.632 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-25 08:57:26.640 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-25 08:57:26.993 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-25 08:57:26.995 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-25 08:57:26.998 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-25 08:57:27.267 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-25 08:57:27.357 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-25 08:57:27.406 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-25 08:57:27.778 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-25 08:57:27.862 -04:00 [DBG] Creating DbConnection.
2025-03-25 08:57:27.907 -04:00 [DBG] Created DbConnection. (44ms).
2025-03-25 08:57:27.912 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:57:28.325 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:57:28.332 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-25 08:57:28.341 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-03-25 08:57:28.350 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (18ms).
2025-03-25 08:57:28.359 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-25 08:57:28.459 -04:00 [INF] Executed DbCommand (100ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-25 08:57:28.544 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-25 08:57:28.617 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-25 08:57:28.642 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:57:28.655 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 184ms reading results.
2025-03-25 08:57:28.664 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:57:28.671 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-25 08:57:28.785 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-03-25 08:57:28.798 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-25 08:57:28.808 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:57:28.810 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:57:28.813 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-25 08:57:28.815 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-25 08:57:28.817 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-25 08:57:28.819 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-25 08:57:28.834 -04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-25 08:57:28.839 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:57:28.841 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-25 08:57:28.845 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:57:28.849 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-25 08:57:28.864 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-03-25 08:57:28.886 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-25 08:57:28.891 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:57:28.893 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:57:28.898 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-25 08:57:28.899 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-25 08:57:28.901 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-25 08:57:28.904 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-25 08:57:28.917 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-25 08:57:28.922 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:57:28.924 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-25 08:57:28.927 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:57:28.930 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-25 08:57:28.946 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:57:28.949 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:57:28.950 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-25 08:57:28.952 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-25 08:57:28.954 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-25 08:57:28.956 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-25 08:57:28.965 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-25 08:57:28.968 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:57:28.970 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-03-25 08:57:28.972 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:57:28.974 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-25 08:57:29.022 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-25 08:57:29.027 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-25 08:57:29.030 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-25 08:57:29.032 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-25 08:57:29.034 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-25 08:57:29.037 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-25 08:57:29.087 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 3734.5779ms
2025-03-25 08:57:29.089 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-25 08:57:29.092 -04:00 [DBG] Connection id "0HNBBJHT9VH1K" completed keep alive response.
2025-03-25 08:57:29.099 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-25 08:57:29.106 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:57:29.110 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-25 08:57:29.117 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 4010.4729ms
2025-03-25 08:57:34.929 -04:00 [DBG] Connection id "0HNBBJHT9VH1K" received FIN.
2025-03-25 08:57:34.931 -04:00 [DBG] Connection id "0HNBBJHT9VH1K" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-25 08:57:34.934 -04:00 [DBG] Connection id "0HNBBJHT9VH1K" disconnecting.
2025-03-25 08:57:34.940 -04:00 [DBG] Connection id "0HNBBJHT9VH1K" stopped.
2025-03-25 08:58:05.473 -04:00 [DBG] Connection id "0HNBBJHT9VH1L" accepted.
2025-03-25 08:58:05.475 -04:00 [DBG] Connection id "0HNBBJHT9VH1L" started.
2025-03-25 08:58:05.477 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/api/Booking/1 - null null
2025-03-25 08:58:05.510 -04:00 [DBG] 1 candidate(s) found for the request path '/api/Booking/1'
2025-03-25 08:58:05.512 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)' with route pattern 'api/Booking/{id}' is valid for the request path '/api/Booking/1'
2025-03-25 08:58:05.517 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)'
2025-03-25 08:58:05.520 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-25 08:58:05.645 -04:00 [DBG] Successfully validated the token.
2025-03-25 08:58:05.649 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-25 08:58:05.673 -04:00 [DBG] Authorization was successful.
2025-03-25 08:58:05.674 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)'
2025-03-25 08:58:05.686 -04:00 [INF] Route matched with {action = "GetBooking", controller = "Booking"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBooking(Int32) on controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API).
2025-03-25 08:58:05.689 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-25 08:58:05.691 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-25 08:58:05.693 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)","Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"]
2025-03-25 08:58:05.698 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-25 08:58:05.704 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-25 08:58:05.706 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-25 08:58:05.855 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.BookingController (HotelBookingPlatform.API)
2025-03-25 08:58:05.858 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-03-25 08:58:05.861 -04:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-03-25 08:58:05.865 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-25 08:58:05.867 -04:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-03-25 08:58:05.869 -04:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-03-25 08:58:05.872 -04:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-03-25 08:58:05.974 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-25 08:58:05.983 -04:00 [DBG] Compiling query expression: 
'DbSet<Booking>()
    .Include(b => b.Hotel)
    .Include(b => b.Rooms)
    .Include(b => b.User)
    .AsSplitQuery()
    .FirstOrDefault(b => b.BookingID == __id_0)'
2025-03-25 08:58:05.996 -04:00 [DBG] Including navigation: 'Booking.Hotel'.
2025-03-25 08:58:06.003 -04:00 [DBG] Including navigation: 'Booking.Rooms'.
2025-03-25 08:58:06.008 -04:00 [DBG] Including navigation: 'Booking.User'.
2025-03-25 08:58:06.009 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-25 08:58:06.151 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Booking>(
    asyncEnumerable: SplitQueryingEnumerable.Create<Booking>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Booking.BookingID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Booking.AfterDiscountedPrice (decimal) Required, 1], [Property: Booking.BookingDateUtc (DateTime) Required, 2], [Property: Booking.CheckInDateUtc (DateTime) Required, 3], [Property: Booking.CheckOutDateUtc (DateTime) Required, 4], [Property: Booking.ConfirmationNumber (string) Required Index MaxLength(50), 5], [Property: Booking.CreatedById (string) FK Index, 6], [Property: Booking.GuestId (Guid?) FK Index, 7], [Property: Booking.HotelId (int) Required FK Index, 8], [Property: Booking.PaymentMethod (PaymentMethod) Required, 9], [Property: Booking.Status (BookingStatus) Required, 10], [Property: Booking.TotalPrice (decimal) Required, 11], [Property: Booking.UserId (string) Required FK Index, 12] }
                1 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Hotel.CityID (int) Required FK Index, 14], [Property: Hotel.CreatedAtUtc (DateTime) Required, 15], [Property: Hotel.Description (string) MaxLength(500), 16], [Property: Hotel.Name (string) Required MaxLength(100), 17], [Property: Hotel.OwnerID (int) Required FK Index, 18], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 19], [Property: Hotel.StarRating (int) Required, 20] }
                2 -> 0
                3 -> 13
                4 -> 21
                5 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 21], [Property: LocalUser.AccessFailedCount (int) Required, 22], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 23], [Property: LocalUser.Email (string) MaxLength(256), 24], [Property: LocalUser.EmailConfirmed (bool) Required, 25], [Property: LocalUser.FirstName (string) Required, 26], [Property: LocalUser.LastName (string) Required, 27], [Property: LocalUser.LockoutEnabled (bool) Required, 28], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 29], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 30], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 31], [Property: LocalUser.PasswordHash (string), 32], [Property: LocalUser.PhoneNumber (string), 33], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 34], [Property: LocalUser.SecurityStamp (string), 35], [Property: LocalUser.TwoFactorEnabled (bool) Required, 36], [Property: LocalUser.UserName (string) MaxLength(256), 37] }
            SELECT TOP(1) b.BookingID, b.AfterDiscountedPrice, b.BookingDateUtc, b.CheckInDateUtc, b.CheckOutDateUtc, b.ConfirmationNumber, b.CreatedById, b.GuestId, b.HotelId, b.PaymentMethod, b.Status, b.TotalPrice, b.UserId, h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM Bookings AS b
            INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
            INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
            WHERE b.BookingID == @__id_0
            ORDER BY b.BookingID ASC, h.HotelId ASC, a.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Booking.BookingID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Booking.AfterDiscountedPrice (decimal) Required, 1], [Property: Booking.BookingDateUtc (DateTime) Required, 2], [Property: Booking.CheckInDateUtc (DateTime) Required, 3], [Property: Booking.CheckOutDateUtc (DateTime) Required, 4], [Property: Booking.ConfirmationNumber (string) Required Index MaxLength(50), 5], [Property: Booking.CreatedById (string) FK Index, 6], [Property: Booking.GuestId (Guid?) FK Index, 7], [Property: Booking.HotelId (int) Required FK Index, 8], [Property: Booking.PaymentMethod (PaymentMethod) Required, 9], [Property: Booking.Status (BookingStatus) Required, 10], [Property: Booking.TotalPrice (decimal) Required, 11], [Property: Booking.UserId (string) Required FK Index, 12] }
                1 -> Dictionary<IProperty, int> { [Property: Hotel.HotelId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Hotel.CityID (int) Required FK Index, 14], [Property: Hotel.CreatedAtUtc (DateTime) Required, 15], [Property: Hotel.Description (string) MaxLength(500), 16], [Property: Hotel.Name (string) Required MaxLength(100), 17], [Property: Hotel.OwnerID (int) Required FK Index, 18], [Property: Hotel.PhoneNumber (string) Required MaxLength(15), 19], [Property: Hotel.StarRating (int) Required, 20] }
                2 -> 0
                3 -> 13
                4 -> 21
                5 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 21], [Property: LocalUser.AccessFailedCount (int) Required, 22], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 23], [Property: LocalUser.Email (string) MaxLength(256), 24], [Property: LocalUser.EmailConfirmed (bool) Required, 25], [Property: LocalUser.FirstName (string) Required, 26], [Property: LocalUser.LastName (string) Required, 27], [Property: LocalUser.LockoutEnabled (bool) Required, 28], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 29], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 30], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 31], [Property: LocalUser.PasswordHash (string), 32], [Property: LocalUser.PhoneNumber (string), 33], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 34], [Property: LocalUser.SecurityStamp (string), 35], [Property: LocalUser.TwoFactorEnabled (bool) Required, 36], [Property: LocalUser.UserName (string) MaxLength(256), 37] }
            SELECT TOP(1) b.BookingID, b.AfterDiscountedPrice, b.BookingDateUtc, b.CheckInDateUtc, b.CheckOutDateUtc, b.ConfirmationNumber, b.CreatedById, b.GuestId, b.HotelId, b.PaymentMethod, b.Status, b.TotalPrice, b.UserId, h.HotelId, h.CityID, h.CreatedAtUtc, h.Description, h.Name, h.OwnerID, h.PhoneNumber, h.StarRating, a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM Bookings AS b
            INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
            INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
            WHERE b.BookingID == @__id_0
            ORDER BY b.BookingID ASC, h.HotelId ASC, a.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<decimal>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<Guid>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<decimal>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<DateTimeOffset>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<object>, ReaderColumn<bool>, ReaderColumn<object> } | Resolver: namelessParameter{0} => new ReaderColumn[]
        { 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("BookingID"), 
                (dataReader, indexMap) => dataReader.GetInt32(0)
            ), 
            new ReaderColumn<decimal>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("AfterDiscountedPrice"), 
                (dataReader, indexMap) => dataReader.GetDecimal(1)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("BookingDateUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(2)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("CheckInDateUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(3)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("CheckOutDateUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(4)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("ConfirmationNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(5)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("CreatedById"), 
                (dataReader, indexMap) => (object)dataReader.GetString(6)
            ), 
            new ReaderColumn<Guid>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("GuestId"), 
                (dataReader, indexMap) => dataReader.GetGuid(7)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("HotelId"), 
                (dataReader, indexMap) => dataReader.GetInt32(8)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("PaymentMethod"), 
                (dataReader, indexMap) => dataReader.GetInt32(9)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("Status"), 
                (dataReader, indexMap) => dataReader.GetInt32(10)
            ), 
            new ReaderColumn<decimal>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("TotalPrice"), 
                (dataReader, indexMap) => dataReader.GetDecimal(11)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("UserId"), 
                (dataReader, indexMap) => (object)dataReader.GetString(12)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("HotelId"), 
                (dataReader, indexMap) => dataReader.GetInt32(13)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CityID"), 
                (dataReader, indexMap) => dataReader.GetInt32(14)
            ), 
            new ReaderColumn<DateTime>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("CreatedAtUtc"), 
                (dataReader, indexMap) => dataReader.GetDateTime(15)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Description"), 
                (dataReader, indexMap) => (object)dataReader.GetString(16)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("Name"), 
                (dataReader, indexMap) => (object)dataReader.GetString(17)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("OwnerID"), 
                (dataReader, indexMap) => dataReader.GetInt32(18)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(19)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindProperty("StarRating"), 
                (dataReader, indexMap) => dataReader.GetInt32(20)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                default(IPropertyBase), 
                (dataReader, indexMap) => (object)dataReader.GetString(21)
            ), 
            new ReaderColumn<int>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("AccessFailedCount"), 
                (dataReader, indexMap) => dataReader.GetInt32(22)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("ConcurrencyStamp"), 
                (dataReader, indexMap) => (object)dataReader.GetString(23)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("Email"), 
                (dataReader, indexMap) => (object)dataReader.GetString(24)
            ), 
            new ReaderColumn<bool>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("EmailConfirmed"), 
                (dataReader, indexMap) => dataReader.GetBoolean(25)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("FirstName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(26)
            ), 
            new ReaderColumn<object>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("LastName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(27)
            ), 
            new ReaderColumn<bool>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("LockoutEnabled"), 
                (dataReader, indexMap) => dataReader.GetBoolean(28)
            ), 
            new ReaderColumn<DateTimeOffset>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("LockoutEnd"), 
                (dataReader, indexMap) => dataReader.GetFieldValue<DateTimeOffset>(29)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("NormalizedEmail"), 
                (dataReader, indexMap) => (object)dataReader.GetString(30)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("NormalizedUserName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(31)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("PasswordHash"), 
                (dataReader, indexMap) => (object)dataReader.GetString(32)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("PhoneNumber"), 
                (dataReader, indexMap) => (object)dataReader.GetString(33)
            ), 
            new ReaderColumn<bool>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("PhoneNumberConfirmed"), 
                (dataReader, indexMap) => dataReader.GetBoolean(34)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("SecurityStamp"), 
                (dataReader, indexMap) => (object)dataReader.GetString(35)
            ), 
            new ReaderColumn<bool>(
                False, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("TwoFactorEnabled"), 
                (dataReader, indexMap) => dataReader.GetBoolean(36)
            ), 
            new ReaderColumn<object>(
                True, 
                null, 
                namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindProperty("UserName"), 
                (dataReader, indexMap) => (object)dataReader.GetString(37)
            ) 
        }], 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => resultContext.Values == null ? 
        {
            Booking entity;
            Hotel entity;
            LocalUser entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Booking instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Booking);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Booking.BookingID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Booking)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Booking | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Booking | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking")]: 
                            {
                                return 
                                {
                                    Booking instance;
                                    instance = new Booking();
                                    instance.<BookingID>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AfterDiscountedPrice>k__BackingField = dataReader.GetDecimal(1);
                                    instance.<BookingDateUtc>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CheckInDateUtc>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CheckOutDateUtc>k__BackingField = dataReader.GetDateTime(4);
                                    instance.<ConfirmationNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(5);
                                    instance.<CreatedById>k__BackingField = dataReader.IsDBNull(6) ? default(string) : (string)dataReader.GetFieldValue<object>(6);
                                    instance.<GuestId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7);
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(8);
                                    instance.<PaymentMethod>k__BackingField = Invoke(((EnumToNumberConverter<PaymentMethod, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Booking.PaymentMethod (PaymentMethod) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("PaymentMethod")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(9));
                                    instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<BookingStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Booking.Status (BookingStatus) Required | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(10));
                                    instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(11);
                                    instance.<UserId>k__BackingField = (string)dataReader.GetFieldValue<object>(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Booking | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Booking)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Hotel instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Hotel);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Hotel.HotelId PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(13) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Hotel)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]: 
                            {
                                return 
                                {
                                    Hotel instance;
                                    instance = new Hotel();
                                    instance.<HotelId>k__BackingField = dataReader.GetInt32(13);
                                    instance.<CityID>k__BackingField = dataReader.GetInt32(14);
                                    instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(15);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(16) ? default(string) : (string)dataReader.GetFieldValue<object>(16);
                                    instance.<Name>k__BackingField = (string)dataReader.GetFieldValue<object>(17);
                                    instance.<OwnerID>k__BackingField = dataReader.GetInt32(18);
                                    instance.<PhoneNumber>k__BackingField = (string)dataReader.GetFieldValue<object>(19);
                                    instance.<StarRating>k__BackingField = dataReader.GetInt32(20);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Hotel | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Hotel)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext5;
                IEntityType entityType5;
                LocalUser instance5;
                InternalEntityEntry entry5;
                bool hasNullKey5;
                materializationContext5 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance5 = default(LocalUser);
                entry5 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)(string)dataReader.GetFieldValue<object>(21) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey5);
                !(hasNullKey5) ? entry5 != default(InternalEntityEntry) ? 
                {
                    entityType5 = entry5.EntityType;
                    return instance5 = (LocalUser)entry5.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot5;
                    shadowSnapshot5 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType5 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                    instance5 = switch (entityType5)
                    {
                        case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                            {
                                return 
                                {
                                    LocalUser instance;
                                    instance = new LocalUser();
                                    instance.<Id>k__BackingField = (string)dataReader.GetFieldValue<object>(21);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(22);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(23) ? default(string) : (string)dataReader.GetFieldValue<object>(23);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(24) ? default(string) : (string)dataReader.GetFieldValue<object>(24);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(25);
                                    instance.<FirstName>k__BackingField = (string)dataReader.GetFieldValue<object>(26);
                                    instance.<LastName>k__BackingField = (string)dataReader.GetFieldValue<object>(27);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(28);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(29) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(29);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(30) ? default(string) : (string)dataReader.GetFieldValue<object>(30);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(31) ? default(string) : (string)dataReader.GetFieldValue<object>(31);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(32) ? default(string) : (string)dataReader.GetFieldValue<object>(32);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(33) ? default(string) : (string)dataReader.GetFieldValue<object>(33);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(34);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(35) ? default(string) : (string)dataReader.GetFieldValue<object>(35);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(36);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(37) ? default(string) : (string)dataReader.GetFieldValue<object>(37);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext5.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(LocalUser)
                    }
                    ;
                    entry5 = entityType5 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType5, 
                        entity: instance5, 
                        snapshot: shadowSnapshot5);
                    return instance5;
                } : default(void);
                return instance5;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Booking, Booking, Hotel>(
                queryContext: queryContext, 
                entity: (Booking)(resultContext.Values[0]), 
                relatedEntity: (Hotel)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Booking.Hotel (Hotel) ToPrincipal Hotel Inverse: Bookings | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindNavigation("Hotel")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Hotel.Bookings (ICollection<Booking>) Collection ToDependent Booking Inverse: Hotel | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Bookings")], 
                fixup: (namelessParameter{14}, namelessParameter{15}) => 
                {
                    namelessParameter{14}.<Hotel>k__BackingField = namelessParameter{15};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Hotel, ICollection<Booking>, Booking> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Hotel").FindNavigation("Bookings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{15}, 
                        value: namelessParameter{14}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeSplitIncludeCollection<Booking, Booking>(
                collectionId: 0, 
                queryContext: queryContext, 
                parentDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Booking)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(0), 
                    (object)(int?)dataReader.GetInt32(13), 
                    (string)dataReader.GetFieldValue<object>(21) 
                }], 
                navigation: [LIFTABLE Constant: SkipNavigation: Booking.Rooms (ICollection<Room>) CollectionRoom Inverse: Bookings | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindSkipNavigation("Rooms")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Booking, ICollection<Room>, Room> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindSkipNavigation("Rooms").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
            ShaperProcessingExpressionVisitor.InitializeSplitIncludeCollection<LocalUser, LocalUser>(
                collectionId: 1, 
                queryContext: queryContext, 
                parentDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (LocalUser)(resultContext.Values[2]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(0), 
                    (object)(int?)dataReader.GetInt32(13), 
                    (string)dataReader.GetFieldValue<object>(21) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{20} => namelessParameter{20}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Booking, Booking, LocalUser>(
                queryContext: queryContext, 
                entity: (Booking)(resultContext.Values[0]), 
                relatedEntity: (LocalUser)(resultContext.Values[2]), 
                navigation: [LIFTABLE Constant: Navigation: Booking.User (LocalUser) ToPrincipal LocalUser Inverse: Bookings | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindNavigation("User")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: LocalUser.Bookings (ICollection<Booking>) Collection ToDependent Booking Inverse: User | Resolver: namelessParameter{22} => namelessParameter{22}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("Bookings")], 
                fixup: (namelessParameter{23}, namelessParameter{24}) => 
                {
                    namelessParameter{23}.<User>k__BackingField = namelessParameter{24};
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, ICollection<Booking>, Booking> | Resolver: namelessParameter{25} => namelessParameter{25}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("Bookings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{24}, 
                        value: namelessParameter{23}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return } : (Booking)(resultContext.Values[0]), 
        relatedDataLoaders: null, 
        relatedDataLoadersAsync: (queryContext, executionStrategy, resultCoordinator) => ShaperProcessingExpressionVisitor.TaskAwaiter(new Func<Task>[]
        { 
            () => ShaperProcessingExpressionVisitor.PopulateSplitIncludeCollectionAsync<Booking, Room>(
                collectionId: 0, 
                queryContext: (RelationalQueryContext)queryContext, 
                executionStrategy: executionStrategy, 
                relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: BookingRoom (Dictionary<string, object>).BookingID (no field, int) Indexer Required PK FK AfterSave:Throw, 0], [Property: BookingRoom (Dictionary<string, object>).RoomID (no field, int) Indexer Required PK FK Index AfterSave:Throw, 1] }
                        1 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 2], [Property: Room.AdultsCapacity (int) Required, 3], [Property: Room.ChildrenCapacity (int) Required, 4], [Property: Room.CreatedAtUtc (DateTime) Required, 5], [Property: Room.Number (string) Required MaxLength(50), 6], [Property: Room.PricePerNight (decimal) Required, 7], [Property: Room.RoomClassID (int) Required FK Index, 8] }
                        2 -> 9
                        3 -> 10
                        4 -> 11
                    SELECT s0.BookingID, s0.RoomID, s0.RoomID0, s0.AdultsCapacity, s0.ChildrenCapacity, s0.CreatedAtUtc, s0.Number, s0.PricePerNight, s0.RoomClassID, s.BookingID, s.HotelId, s.Id
                    FROM 
                    (
                        SELECT TOP(1) b.BookingID, h.HotelId, a.Id
                        FROM Bookings AS b
                        INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
                        INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
                        WHERE b.BookingID == @__id_0
                    ) AS s
                    INNER JOIN 
                    (
                        SELECT b0.BookingID, b0.RoomID, r0.RoomID AS RoomID0, r0.AdultsCapacity, r0.ChildrenCapacity, r0.CreatedAtUtc, r0.Number, r0.PricePerNight, r0.RoomClassID
                        FROM BookingRoom AS b0
                        INNER JOIN Rooms AS r0 ON b0.RoomID == r0.RoomID
                    ) AS s0 ON s.BookingID == s0.BookingID
                    ORDER BY s.BookingID ASC, s.HotelId ASC, s.Id ASC) | Resolver: c => new RelationalCommandCache(
                    c.Dependencies.MemoryCache, 
                    c.RelationalDependencies.QuerySqlGeneratorFactory, 
                    c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: BookingRoom (Dictionary<string, object>).BookingID (no field, int) Indexer Required PK FK AfterSave:Throw, 0], [Property: BookingRoom (Dictionary<string, object>).RoomID (no field, int) Indexer Required PK FK Index AfterSave:Throw, 1] }
                        1 -> Dictionary<IProperty, int> { [Property: Room.RoomID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 2], [Property: Room.AdultsCapacity (int) Required, 3], [Property: Room.ChildrenCapacity (int) Required, 4], [Property: Room.CreatedAtUtc (DateTime) Required, 5], [Property: Room.Number (string) Required MaxLength(50), 6], [Property: Room.PricePerNight (decimal) Required, 7], [Property: Room.RoomClassID (int) Required FK Index, 8] }
                        2 -> 9
                        3 -> 10
                        4 -> 11
                    SELECT s0.BookingID, s0.RoomID, s0.RoomID0, s0.AdultsCapacity, s0.ChildrenCapacity, s0.CreatedAtUtc, s0.Number, s0.PricePerNight, s0.RoomClassID, s.BookingID, s.HotelId, s.Id
                    FROM 
                    (
                        SELECT TOP(1) b.BookingID, h.HotelId, a.Id
                        FROM Bookings AS b
                        INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
                        INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
                        WHERE b.BookingID == @__id_0
                    ) AS s
                    INNER JOIN 
                    (
                        SELECT b0.BookingID, b0.RoomID, r0.RoomID AS RoomID0, r0.AdultsCapacity, r0.ChildrenCapacity, r0.CreatedAtUtc, r0.Number, r0.PricePerNight, r0.RoomClassID
                        FROM BookingRoom AS b0
                        INNER JOIN Rooms AS r0 ON b0.RoomID == r0.RoomID
                    ) AS s0 ON s.BookingID == s0.BookingID
                    ORDER BY s.BookingID ASC, s.HotelId ASC, s.Id ASC, 
                    False, 
                    new HashSet<string>(
                        new string[]{ }, 
                        StringComparer.Ordinal
                    )
                )].GetRelationalCommandTemplate(parameters), 
                readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<decimal>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object> } | Resolver: namelessParameter{26} => new ReaderColumn[]
                { 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("BookingRoom").FindProperty("BookingID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(0)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("BookingRoom").FindProperty("RoomID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(1)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("RoomID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(2)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("AdultsCapacity"), 
                        (dataReader, indexMap) => dataReader.GetInt32(3)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("ChildrenCapacity"), 
                        (dataReader, indexMap) => dataReader.GetInt32(4)
                    ), 
                    new ReaderColumn<DateTime>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("CreatedAtUtc"), 
                        (dataReader, indexMap) => dataReader.GetDateTime(5)
                    ), 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("Number"), 
                        (dataReader, indexMap) => (object)dataReader.GetString(6)
                    ), 
                    new ReaderColumn<decimal>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("PricePerNight"), 
                        (dataReader, indexMap) => dataReader.GetDecimal(7)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{26}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindProperty("RoomClassID"), 
                        (dataReader, indexMap) => dataReader.GetInt32(8)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(9)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(10)
                    ), 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => (object)dataReader.GetString(11)
                    ) 
                }], 
                detailedErrorsEnabled: False, 
                resultCoordinator: resultCoordinator, 
                childIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(9), 
                    (object)(int?)dataReader.GetInt32(10), 
                    (string)dataReader.GetFieldValue<object>(11) 
                }], 
                identifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Dictionary<string, object> entity;
                    Room entity;
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Dictionary<string, object> instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Dictionary<string, object>);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: BookingRoom (Dictionary<string, object>).BookingID, BookingRoom (Dictionary<string, object>).RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("BookingRoom").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                (object)dataReader.GetInt32(0), 
                                (object)dataReader.GetInt32(1) 
                            }, 
                            throwOnNullKey: True, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Dictionary<string, object>)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: BookingRoom (Dictionary<string, object>) CLR Type: Dictionary<string, object> | Resolver: namelessParameter{27} => namelessParameter{27}.Dependencies.Model.FindEntityType("BookingRoom")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: BookingRoom (Dictionary<string, object>) CLR Type: Dictionary<string, object> | Resolver: namelessParameter{28} => namelessParameter{28}.Dependencies.Model.FindEntityType("BookingRoom")]: 
                                    {
                                        return 
                                        {
                                            Dictionary<string, object> instance;
                                            instance = new Dictionary<string, object>();
                                            instance["BookingID"] = (object)dataReader.GetInt32(0);
                                            instance["RoomID"] = (object)dataReader.GetInt32(1);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: BookingRoom (Dictionary<string, object>) CLR Type: Dictionary<string, object> | Resolver: namelessParameter{29} => namelessParameter{29}.Dependencies.Model.FindEntityType("BookingRoom")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Dictionary<string, object>)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    entity = 
                    {
                        MaterializationContext materializationContext4;
                        IEntityType entityType4;
                        Room instance4;
                        InternalEntityEntry entry4;
                        bool hasNullKey4;
                        materializationContext4 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance4 = default(Room);
                        entry4 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Room.RoomID PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindPrimaryKey()], 
                            keyValues: new object[]{ (object)dataReader.GetInt32(2) }, 
                            throwOnNullKey: True, 
                            hasNullKey: hasNullKey4);
                        !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                        {
                            entityType4 = entry4.EntityType;
                            return instance4 = (Room)entry4.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot4;
                            shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType4 = [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{30} => namelessParameter{30}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")];
                            instance4 = switch (entityType4)
                            {
                                case [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{31} => namelessParameter{31}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]: 
                                    {
                                        return 
                                        {
                                            Room instance;
                                            instance = new Room();
                                            instance.<RoomID>k__BackingField = dataReader.GetInt32(2);
                                            instance.<AdultsCapacity>k__BackingField = dataReader.GetInt32(3);
                                            instance.<ChildrenCapacity>k__BackingField = dataReader.GetInt32(4);
                                            instance.<CreatedAtUtc>k__BackingField = dataReader.GetDateTime(5);
                                            instance.<Number>k__BackingField = (string)dataReader.GetFieldValue<object>(6);
                                            instance.<PricePerNight>k__BackingField = dataReader.GetDecimal(7);
                                            instance.<RoomClassID>k__BackingField = dataReader.GetInt32(8);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext4.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Room | Resolver: namelessParameter{32} => namelessParameter{32}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Room)
                            }
                            ;
                            entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType4, 
                                entity: instance4, 
                                snapshot: shadowSnapshot4);
                            return instance4;
                        } : default(void);
                        return instance4;
                    };
                    return NavigationExpandingExpressionVisitor.FetchJoinEntity<Dictionary<string, object>, Room>(
                        joinEntity: entity, 
                        targetEntity: entity);
                }, 
                relatedDataLoaders: null, 
                inverseNavigation: [LIFTABLE Constant: SkipNavigation: Room.Bookings (ICollection<Booking>) CollectionBooking Inverse: Rooms | Resolver: namelessParameter{33} => namelessParameter{33}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindSkipNavigation("Bookings")], 
                fixup: (namelessParameter{34}, namelessParameter{35}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Booking, ICollection<Room>, Room> | Resolver: namelessParameter{36} => namelessParameter{36}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Booking").FindSkipNavigation("Rooms").GetCollectionAccessor()].Add(
                        entity: namelessParameter{34}, 
                        value: namelessParameter{35}, 
                        forMaterialization: True);
                    return [LIFTABLE Constant: ClrICollectionAccessor<Room, ICollection<Booking>, Booking> | Resolver: namelessParameter{37} => namelessParameter{37}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.Room").FindSkipNavigation("Bookings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{35}, 
                        value: namelessParameter{34}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True), 
            () => ShaperProcessingExpressionVisitor.PopulateSplitIncludeCollectionAsync<LocalUser, RefreshToken>(
                collectionId: 1, 
                queryContext: (RelationalQueryContext)queryContext, 
                executionStrategy: executionStrategy, 
                relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 0], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 1], [Property: RefreshToken.CreatedOn (DateTime) Required, 2], [Property: RefreshToken.ExpiresOn (DateTime) Required, 3], [Property: RefreshToken.RevokedOn (DateTime?), 4], [Property: RefreshToken.Token (string) Required, 5] }
                        1 -> 6
                        2 -> 7
                        3 -> 8
                    SELECT r1.LocalUserId, r1.Id, r1.CreatedOn, r1.ExpiresOn, r1.RevokedOn, r1.Token, s1.BookingID, s1.HotelId, s1.Id
                    FROM 
                    (
                        SELECT TOP(1) b.BookingID, h.HotelId, a.Id
                        FROM Bookings AS b
                        INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
                        INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
                        WHERE b.BookingID == @__id_0
                    ) AS s1
                    INNER JOIN RefreshToken AS r1 ON s1.Id == r1.LocalUserId
                    ORDER BY s1.BookingID ASC, s1.HotelId ASC, s1.Id ASC) | Resolver: c => new RelationalCommandCache(
                    c.Dependencies.MemoryCache, 
                    c.RelationalDependencies.QuerySqlGeneratorFactory, 
                    c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
                    Client Projections:
                        0 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 0], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 1], [Property: RefreshToken.CreatedOn (DateTime) Required, 2], [Property: RefreshToken.ExpiresOn (DateTime) Required, 3], [Property: RefreshToken.RevokedOn (DateTime?), 4], [Property: RefreshToken.Token (string) Required, 5] }
                        1 -> 6
                        2 -> 7
                        3 -> 8
                    SELECT r1.LocalUserId, r1.Id, r1.CreatedOn, r1.ExpiresOn, r1.RevokedOn, r1.Token, s1.BookingID, s1.HotelId, s1.Id
                    FROM 
                    (
                        SELECT TOP(1) b.BookingID, h.HotelId, a.Id
                        FROM Bookings AS b
                        INNER JOIN Hotels AS h ON b.HotelId == h.HotelId
                        INNER JOIN AspNetUsers AS a ON b.UserId == a.Id
                        WHERE b.BookingID == @__id_0
                    ) AS s1
                    INNER JOIN RefreshToken AS r1 ON s1.Id == r1.LocalUserId
                    ORDER BY s1.BookingID ASC, s1.HotelId ASC, s1.Id ASC, 
                    False, 
                    new HashSet<string>(
                        new string[]{ }, 
                        StringComparer.Ordinal
                    )
                )].GetRelationalCommandTemplate(parameters), 
                readerColumns: [LIFTABLE Constant: ReaderColumn[] { ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<DateTime>, ReaderColumn<object>, ReaderColumn<int>, ReaderColumn<int>, ReaderColumn<object> } | Resolver: namelessParameter{38} => new ReaderColumn[]
                { 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("LocalUserId"), 
                        (dataReader, indexMap) => (object)dataReader.GetString(0)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("Id"), 
                        (dataReader, indexMap) => dataReader.GetInt32(1)
                    ), 
                    new ReaderColumn<DateTime>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("CreatedOn"), 
                        (dataReader, indexMap) => dataReader.GetDateTime(2)
                    ), 
                    new ReaderColumn<DateTime>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("ExpiresOn"), 
                        (dataReader, indexMap) => dataReader.GetDateTime(3)
                    ), 
                    new ReaderColumn<DateTime>(
                        True, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("RevokedOn"), 
                        (dataReader, indexMap) => dataReader.GetDateTime(4)
                    ), 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        namelessParameter{38}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindProperty("Token"), 
                        (dataReader, indexMap) => (object)dataReader.GetString(5)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(6)
                    ), 
                    new ReaderColumn<int>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => dataReader.GetInt32(7)
                    ), 
                    new ReaderColumn<object>(
                        False, 
                        null, 
                        default(IPropertyBase), 
                        (dataReader, indexMap) => (object)dataReader.GetString(8)
                    ) 
                }], 
                detailedErrorsEnabled: False, 
                resultCoordinator: resultCoordinator, 
                childIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(int?)dataReader.GetInt32(6), 
                    (object)(int?)dataReader.GetInt32(7), 
                    (string)dataReader.GetFieldValue<object>(8) 
                }], 
                identifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext6;
                        IEntityType entityType6;
                        RefreshToken instance6;
                        InternalEntityEntry entry6;
                        bool hasNullKey6;
                        materializationContext6 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance6 = default(RefreshToken);
                        entry6 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                (object)(string)dataReader.GetFieldValue<object>(0), 
                                (object)dataReader.GetInt32(1) 
                            }, 
                            throwOnNullKey: True, 
                            hasNullKey: hasNullKey6);
                        !(hasNullKey6) ? entry6 != default(InternalEntityEntry) ? 
                        {
                            entityType6 = entry6.EntityType;
                            return instance6 = (RefreshToken)entry6.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot6;
                            shadowSnapshot6 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType6 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{39} => namelessParameter{39}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance6 = switch (entityType6)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{40} => namelessParameter{40}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot6 = (ISnapshot)new Snapshot<string, int>(
                                            (string)dataReader.GetFieldValue<object>(0), 
                                            dataReader.GetInt32(1)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.GetDateTime(2);
                                            instance.<ExpiresOn>k__BackingField = dataReader.GetDateTime(3);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(4) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(4);
                                            instance.<Token>k__BackingField = (string)dataReader.GetFieldValue<object>(5);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext6.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{41} => namelessParameter{41}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry6 = entityType6 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType6, 
                                entity: instance6, 
                                snapshot: shadowSnapshot6);
                            return instance6;
                        } : default(void);
                        return instance6;
                    };
                    return entity;
                }, 
                relatedDataLoaders: null, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{42}, namelessParameter{43}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{44} => namelessParameter{44}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{42}, 
                        value: namelessParameter{43}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True) 
        }), 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-25 08:58:06.275 -04:00 [DBG] Creating DbConnection.
2025-03-25 08:58:06.289 -04:00 [DBG] Created DbConnection. (12ms).
2025-03-25 08:58:06.291 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:58:06.292 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:58:06.294 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-25 08:58:06.296 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-25 08:58:06.299 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-25 08:58:06.303 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."BookingID", b."AfterDiscountedPrice", b."BookingDateUtc", b."CheckInDateUtc", b."CheckOutDateUtc", b."ConfirmationNumber", b."CreatedById", b."GuestId", b."HotelId", b."PaymentMethod", b."Status", b."TotalPrice", b."UserId", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "Bookings" AS b
INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
WHERE b."BookingID" = @__id_0
ORDER BY b."BookingID", h."HotelId", a."Id"
LIMIT 1
2025-03-25 08:58:06.336 -04:00 [INF] Executed DbCommand (34ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."BookingID", b."AfterDiscountedPrice", b."BookingDateUtc", b."CheckInDateUtc", b."CheckOutDateUtc", b."ConfirmationNumber", b."CreatedById", b."GuestId", b."HotelId", b."PaymentMethod", b."Status", b."TotalPrice", b."UserId", h."HotelId", h."CityID", h."CreatedAtUtc", h."Description", h."Name", h."OwnerID", h."PhoneNumber", h."StarRating", a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "Bookings" AS b
INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
WHERE b."BookingID" = @__id_0
ORDER BY b."BookingID", h."HotelId", a."Id"
LIMIT 1
2025-03-25 08:58:06.383 -04:00 [DBG] Context 'AppDbContext' started tracking 'Booking' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-25 08:58:06.431 -04:00 [DBG] The navigation 'Booking.Hotel' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-25 08:58:06.439 -04:00 [DBG] Context 'AppDbContext' started tracking 'Hotel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-25 08:58:06.459 -04:00 [DBG] The navigation 'Booking.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-25 08:58:06.462 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-25 08:58:06.492 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-25 08:58:06.496 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-25 08:58:06.499 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-25 08:58:06.502 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s0."BookingID", s0."RoomID", s0."RoomID0", s0."AdultsCapacity", s0."ChildrenCapacity", s0."CreatedAtUtc", s0."Number", s0."PricePerNight", s0."RoomClassID", s."BookingID", s."HotelId", s."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s
INNER JOIN (
    SELECT b0."BookingID", b0."RoomID", r0."RoomID" AS "RoomID0", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID"
    FROM "BookingRoom" AS b0
    INNER JOIN "Rooms" AS r0 ON b0."RoomID" = r0."RoomID"
) AS s0 ON s."BookingID" = s0."BookingID"
ORDER BY s."BookingID", s."HotelId", s."Id"
2025-03-25 08:58:06.516 -04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s0."BookingID", s0."RoomID", s0."RoomID0", s0."AdultsCapacity", s0."ChildrenCapacity", s0."CreatedAtUtc", s0."Number", s0."PricePerNight", s0."RoomClassID", s."BookingID", s."HotelId", s."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s
INNER JOIN (
    SELECT b0."BookingID", b0."RoomID", r0."RoomID" AS "RoomID0", r0."AdultsCapacity", r0."ChildrenCapacity", r0."CreatedAtUtc", r0."Number", r0."PricePerNight", r0."RoomClassID"
    FROM "BookingRoom" AS b0
    INNER JOIN "Rooms" AS r0 ON b0."RoomID" = r0."RoomID"
) AS s0 ON s."BookingID" = s0."BookingID"
ORDER BY s."BookingID", s."HotelId", s."Id"
2025-03-25 08:58:06.537 -04:00 [DBG] Context 'AppDbContext' started tracking 'BookingRoom' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-25 08:58:06.557 -04:00 [DBG] Context 'AppDbContext' started tracking 'Room' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-25 08:58:06.575 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-25 08:58:06.577 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-25 08:58:06.579 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-25 08:58:06.583 -04:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r1."LocalUserId", r1."Id", r1."CreatedOn", r1."ExpiresOn", r1."RevokedOn", r1."Token", s1."BookingID", s1."HotelId", s1."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s1
INNER JOIN "RefreshToken" AS r1 ON s1."Id" = r1."LocalUserId"
ORDER BY s1."BookingID", s1."HotelId", s1."Id"
2025-03-25 08:58:06.596 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT r1."LocalUserId", r1."Id", r1."CreatedOn", r1."ExpiresOn", r1."RevokedOn", r1."Token", s1."BookingID", s1."HotelId", s1."Id"
FROM (
    SELECT b."BookingID", h."HotelId", a."Id"
    FROM "Bookings" AS b
    INNER JOIN "Hotels" AS h ON b."HotelId" = h."HotelId"
    INNER JOIN "AspNetUsers" AS a ON b."UserId" = a."Id"
    WHERE b."BookingID" = @__id_0
    LIMIT 1
) AS s1
INNER JOIN "RefreshToken" AS r1 ON s1."Id" = r1."LocalUserId"
ORDER BY s1."BookingID", s1."HotelId", s1."Id"
2025-03-25 08:58:06.605 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-25 08:58:06.612 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:58:06.691 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 323ms reading results.
2025-03-25 08:58:06.703 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:58:06.708 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 185ms reading results.
2025-03-25 08:58:06.722 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:58:06.788 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 183ms reading results.
2025-03-25 08:58:06.872 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:58:06.971 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (99ms).
2025-03-25 08:58:07.000 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .AsNoTracking()
    .FirstOrDefault(user => user.Id == __userId_0)'
2025-03-25 08:58:07.003 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-25 08:58:07.067 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.Id == @__userId_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.Id == @__userId_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    (object)dataReader.GetString(0) != null ? 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: NoTracking, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        return instance1;
                    } : 
                    {
                        object[] keyValues1;
                        keyValues1 = new object[]{ (object)dataReader.GetString(0) };
                        return ShapedQueryCompilingExpressionVisitor.CreateNullKeyValueInNoTrackingQuery(
                            entityType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")], 
                            properties: [LIFTABLE Constant: List<RuntimeProperty> { Property: LocalUser.Id (string) Required PK AfterSave:Throw } | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey().Properties], 
                            keyValues: keyValues1);
                    };
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: False, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17) != null && dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) != null ? 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: NoTracking, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{9}, namelessParameter{10}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{10}, 
                        forMaterialization: True);
                }, 
                trackingQuery: False);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-25 08:58:07.144 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:58:07.172 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:58:07.175 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-25 08:58:07.177 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-25 08:58:07.190 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (14ms).
2025-03-25 08:58:07.198 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__userId_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-25 08:58:07.225 -04:00 [INF] Executed DbCommand (28ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__userId_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-25 08:58:07.267 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:58:07.270 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 29ms reading results.
2025-03-25 08:58:07.280 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:58:07.284 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-25 08:58:07.317 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-25 08:58:07.324 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-25 08:58:07.325 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-25 08:58:07.326 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-25 08:58:07.329 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-25 08:58:07.335 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType6`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.DTOs.Booking.BookingDto, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-25 08:58:07.369 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API) in 1662.8556ms
2025-03-25 08:58:07.372 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.BookingController.GetBooking (HotelBookingPlatform.API)'
2025-03-25 08:58:07.374 -04:00 [DBG] Connection id "0HNBBJHT9VH1L" completed keep alive response.
2025-03-25 08:58:07.376 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-25 08:58:07.378 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-25 08:58:07.390 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (12ms).
2025-03-25 08:58:07.393 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/api/Booking/1 - 200 null application/json; charset=utf-8 1916.5875ms
2025-03-25 08:58:14.974 -04:00 [DBG] Connection id "0HNBBJHT9VH1L" received FIN.
2025-03-25 08:58:14.978 -04:00 [DBG] Connection id "0HNBBJHT9VH1L" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-25 08:58:14.982 -04:00 [DBG] Connection id "0HNBBJHT9VH1L" disconnecting.
2025-03-25 08:58:14.986 -04:00 [DBG] Connection id "0HNBBJHT9VH1L" stopped.
2025-03-25 11:58:37.546 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-25 11:58:37.841 -04:00 [DBG] Hosting starting
2025-03-25 11:58:37.883 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-25 11:58:37.901 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-25 11:58:37.972 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-25 11:58:37.986 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-25 11:58:37.993 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-25 11:58:37.998 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-25 11:58:38.003 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-25 11:58:38.018 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-25 11:58:38.023 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-25 11:58:38.032 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-25 11:58:38.038 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-25 11:58:38.176 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-25 11:58:38.178 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-25 11:58:38.179 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-25 11:58:38.181 -04:00 [INF] Hosting environment: Development
2025-03-25 11:58:38.182 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-25 11:58:38.184 -04:00 [DBG] Hosting started
2025-03-25 11:58:50.940 -04:00 [DBG] Connection id "0HNBBMNNPEA3D" accepted.
2025-03-25 11:58:50.946 -04:00 [DBG] Connection id "0HNBBMNNPEA3D" started.
2025-03-25 11:58:51.018 -04:00 [DBG] Connection id "0HNBBMNNPEA3E" accepted.
2025-03-25 11:58:51.027 -04:00 [DBG] Connection id "0HNBBMNNPEA3E" started.
2025-03-25 11:58:51.808 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-25 11:58:51.821 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-25 11:58:51.920 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-25 11:58:51.922 -04:00 [DBG] Request did not match any endpoints
2025-03-25 11:58:52.488 -04:00 [DBG] Connection id "0HNBBMNNPEA3D" completed keep alive response.
2025-03-25 11:58:52.501 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 689.5438ms
2025-03-25 11:59:20.967 -04:00 [DBG] Connection id "0HNBBMNNPEA3E" received FIN.
2025-03-25 11:59:21.010 -04:00 [DBG] Connection id "0HNBBMNNPEA3D" received FIN.
2025-03-25 11:59:21.607 -04:00 [DBG] Connection id "0HNBBMNNPEA3D" disconnecting.
2025-03-25 11:59:21.613 -04:00 [DBG] Connection id "0HNBBMNNPEA3D" stopped.
2025-03-25 11:59:21.621 -04:00 [DBG] Connection id "0HNBBMNNPEA3D" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-25 11:59:21.621 -04:00 [DBG] Connection id "0HNBBMNNPEA3E" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-25 11:59:21.627 -04:00 [DBG] Connection id "0HNBBMNNPEA3E" disconnecting.
2025-03-25 11:59:21.629 -04:00 [DBG] Connection id "0HNBBMNNPEA3E" stopped.
2025-03-26 11:35:18.957 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-26 11:35:19.295 -04:00 [DBG] Hosting starting
2025-03-26 11:35:19.353 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-26 11:35:19.379 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-26 11:35:19.452 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-26 11:35:19.469 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-26 11:35:19.480 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-26 11:35:19.487 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-26 11:35:19.492 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-26 11:35:19.514 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-26 11:35:19.521 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-26 11:35:19.531 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-26 11:35:19.535 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-26 11:35:19.674 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-26 11:35:19.676 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-26 11:35:19.678 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-26 11:35:19.679 -04:00 [INF] Hosting environment: Development
2025-03-26 11:35:19.681 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-26 11:35:19.683 -04:00 [DBG] Hosting started
2025-03-26 11:35:27.089 -04:00 [DBG] Connection id "0HNBCFFAJSBVA" accepted.
2025-03-26 11:35:27.092 -04:00 [DBG] Connection id "0HNBCFFAJSBVA" started.
2025-03-26 11:35:27.594 -04:00 [DBG] Connection id "0HNBCFFAJSBVB" accepted.
2025-03-26 11:35:27.598 -04:00 [DBG] Connection id "0HNBCFFAJSBVB" started.
2025-03-26 11:35:27.798 -04:00 [DBG] Connection id "0HNBCFFAJSBVB" received FIN.
2025-03-26 11:35:27.798 -04:00 [DBG] Connection id "0HNBCFFAJSBVA" received FIN.
2025-03-26 11:35:27.905 -04:00 [DBG] Connection id "0HNBCFFAJSBVB" disconnecting.
2025-03-26 11:35:28.288 -04:00 [DBG] Connection id "0HNBCFFAJSBVC" accepted.
2025-03-26 11:35:28.534 -04:00 [DBG] Connection id "0HNBCFFAJSBVB" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-26 11:35:28.536 -04:00 [DBG] Connection id "0HNBCFFAJSBVA" disconnecting.
2025-03-26 11:35:28.546 -04:00 [DBG] Connection id "0HNBCFFAJSBVA" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-26 11:35:28.549 -04:00 [DBG] Connection id "0HNBCFFAJSBVC" started.
2025-03-26 11:35:28.561 -04:00 [DBG] Connection id "0HNBCFFAJSBVB" stopped.
2025-03-26 11:35:28.576 -04:00 [DBG] Connection id "0HNBCFFAJSBVA" stopped.
2025-03-26 11:35:28.792 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-26 11:35:28.803 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-26 11:35:28.928 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-26 11:35:28.931 -04:00 [DBG] Request did not match any endpoints
2025-03-26 11:35:29.797 -04:00 [DBG] Connection id "0HNBCFFAJSBVC" completed keep alive response.
2025-03-26 11:35:29.802 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 1041.5309ms
2025-03-26 11:35:37.598 -04:00 [DBG] Connection id "0HNBCFFAJSBVC" received FIN.
2025-03-26 11:35:37.719 -04:00 [DBG] Connection id "0HNBCFFAJSBVC" disconnecting.
2025-03-26 11:35:37.729 -04:00 [DBG] Connection id "0HNBCFFAJSBVC" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-26 11:35:37.733 -04:00 [DBG] Connection id "0HNBCFFAJSBVC" stopped.
2025-03-26 12:24:41.683 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-26 12:24:42.014 -04:00 [DBG] Hosting starting
2025-03-26 12:24:42.045 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-26 12:24:42.065 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-26 12:24:42.098 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-26 12:24:42.119 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-26 12:24:42.130 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-26 12:24:42.135 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-26 12:24:42.141 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-26 12:24:42.152 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-26 12:24:42.161 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-26 12:24:42.176 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-26 12:24:42.181 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-26 12:24:42.330 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-26 12:24:42.336 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-26 12:24:42.344 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-26 12:24:42.346 -04:00 [INF] Hosting environment: Development
2025-03-26 12:24:42.346 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-26 12:24:42.348 -04:00 [DBG] Hosting started
2025-03-26 12:24:51.535 -04:00 [DBG] Connection id "0HNBCGAU31MVA" accepted.
2025-03-26 12:24:51.539 -04:00 [DBG] Connection id "0HNBCGAU31MVA" started.
2025-03-26 12:24:51.660 -04:00 [DBG] Connection id "0HNBCGAU31MVB" accepted.
2025-03-26 12:24:51.663 -04:00 [DBG] Connection id "0HNBCGAU31MVB" started.
2025-03-26 12:24:51.722 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-03-26 12:24:51.730 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-26 12:24:51.781 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-03-26 12:24:51.784 -04:00 [DBG] Request did not match any endpoints
2025-03-26 12:24:51.929 -04:00 [DBG] Connection id "0HNBCGAU31MVA" completed keep alive response.
2025-03-26 12:24:51.937 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 217.2857ms
2025-03-26 12:24:52.051 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-03-26 12:24:52.060 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-03-26 12:24:52.063 -04:00 [DBG] Request did not match any endpoints
2025-03-26 12:24:52.070 -04:00 [DBG] Connection id "0HNBCGAU31MVA" completed keep alive response.
2025-03-26 12:24:52.079 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 27.733ms
2025-03-26 12:24:52.315 -04:00 [DBG] Connection id "0HNBCGAU31MVB" received FIN.
2025-03-26 12:24:52.316 -04:00 [DBG] Connection id "0HNBCGAU31MVA" received FIN.
2025-03-26 12:24:52.331 -04:00 [DBG] Connection id "0HNBCGAU31MVB" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-26 12:24:52.330 -04:00 [DBG] Connection id "0HNBCGAU31MVA" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-26 12:24:52.347 -04:00 [DBG] Connection id "0HNBCGAU31MVB" disconnecting.
2025-03-26 12:24:52.349 -04:00 [DBG] Connection id "0HNBCGAU31MVA" disconnecting.
2025-03-26 12:24:52.354 -04:00 [DBG] Connection id "0HNBCGAU31MVA" stopped.
2025-03-26 12:24:52.354 -04:00 [DBG] Connection id "0HNBCGAU31MVB" stopped.
2025-03-26 12:24:52.559 -04:00 [DBG] Connection id "0HNBCGAU31MVC" accepted.
2025-03-26 12:24:52.563 -04:00 [DBG] Connection id "0HNBCGAU31MVC" started.
2025-03-26 12:24:52.566 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-26 12:24:52.572 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-26 12:24:52.574 -04:00 [DBG] Request did not match any endpoints
2025-03-26 12:24:52.952 -04:00 [DBG] Connection id "0HNBCGAU31MVC" completed keep alive response.
2025-03-26 12:24:52.955 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 389.2752ms
2025-03-26 12:25:02.322 -04:00 [DBG] Connection id "0HNBCGAU31MVC" received FIN.
2025-03-26 12:25:02.325 -04:00 [DBG] Connection id "0HNBCGAU31MVC" disconnecting.
2025-03-26 12:25:02.328 -04:00 [DBG] Connection id "0HNBCGAU31MVC" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-26 12:25:02.338 -04:00 [DBG] Connection id "0HNBCGAU31MVC" stopped.
2025-03-26 12:25:03.763 -04:00 [DBG] Connection id "0HNBCGAU31MVD" accepted.
2025-03-26 12:25:03.770 -04:00 [DBG] Connection id "0HNBCGAU31MVD" started.
2025-03-26 12:25:03.801 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-03-26 12:25:03.803 -04:00 [DBG] Connection id "0HNBCGAU31MVE" accepted.
2025-03-26 12:25:03.830 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-03-26 12:25:03.832 -04:00 [DBG] Connection id "0HNBCGAU31MVE" started.
2025-03-26 12:25:03.834 -04:00 [DBG] Request did not match any endpoints
2025-03-26 12:25:03.845 -04:00 [DBG] Connection id "0HNBCGAU31MVD" completed keep alive response.
2025-03-26 12:25:03.846 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 45.4133ms
2025-03-26 12:25:03.862 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-03-26 12:25:03.872 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-03-26 12:25:03.896 -04:00 [DBG] Request did not match any endpoints
2025-03-26 12:25:03.898 -04:00 [DBG] Connection id "0HNBCGAU31MVD" completed keep alive response.
2025-03-26 12:25:03.900 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 37.2763ms
2025-03-26 12:25:04.001 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-26 12:25:04.010 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-26 12:25:04.012 -04:00 [DBG] Request did not match any endpoints
2025-03-26 12:25:04.128 -04:00 [DBG] Connection id "0HNBCGAU31MVD" completed keep alive response.
2025-03-26 12:25:04.132 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 131.5581ms
2025-03-26 12:25:12.432 -04:00 [DBG] Connection id "0HNBCGAU31MVE" received FIN.
2025-03-26 12:25:12.441 -04:00 [DBG] Connection id "0HNBCGAU31MVD" received FIN.
2025-03-26 12:25:12.463 -04:00 [DBG] Connection id "0HNBCGAU31MVD" disconnecting.
2025-03-26 12:25:12.462 -04:00 [DBG] Connection id "0HNBCGAU31MVE" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-26 12:25:12.466 -04:00 [DBG] Connection id "0HNBCGAU31MVD" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-26 12:25:12.470 -04:00 [DBG] Connection id "0HNBCGAU31MVE" disconnecting.
2025-03-26 12:25:12.474 -04:00 [DBG] Connection id "0HNBCGAU31MVE" stopped.
2025-03-26 12:25:12.487 -04:00 [DBG] Connection id "0HNBCGAU31MVD" stopped.
2025-03-26 12:29:16.486 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-26 12:29:16.757 -04:00 [DBG] Hosting starting
2025-03-26 12:29:16.785 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-26 12:29:16.804 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-26 12:29:16.826 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-26 12:29:16.851 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-26 12:29:16.858 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-26 12:29:16.867 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-26 12:29:16.871 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-26 12:29:16.882 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-26 12:29:16.889 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-26 12:29:16.896 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-26 12:29:16.898 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-26 12:29:17.011 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-26 12:29:17.012 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-26 12:29:17.015 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-26 12:29:17.017 -04:00 [INF] Hosting environment: Development
2025-03-26 12:29:17.019 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-26 12:29:17.022 -04:00 [DBG] Hosting started
2025-03-27 00:25:07.374 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-27 00:25:07.700 -04:00 [DBG] Hosting starting
2025-03-27 00:25:07.735 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-27 00:25:07.759 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-27 00:25:07.844 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-27 00:25:07.872 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-27 00:25:07.959 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-27 00:25:07.966 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-27 00:25:07.973 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-27 00:25:07.995 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-27 00:25:08.090 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-27 00:25:08.108 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-27 00:25:08.110 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-27 00:25:08.264 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-27 00:25:08.268 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-27 00:25:08.276 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-27 00:25:08.279 -04:00 [INF] Hosting environment: Development
2025-03-27 00:25:08.281 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-27 00:25:08.282 -04:00 [DBG] Hosting started
2025-03-27 00:25:53.126 -04:00 [DBG] Connection id "0HNBCSTR1N139" accepted.
2025-03-27 00:25:53.134 -04:00 [DBG] Connection id "0HNBCSTR1N139" started.
2025-03-27 00:25:53.262 -04:00 [DBG] Connection id "0HNBCSTR1N13A" accepted.
2025-03-27 00:25:53.269 -04:00 [DBG] Connection id "0HNBCSTR1N13A" started.
2025-03-27 00:25:53.334 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-03-27 00:25:53.342 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-27 00:25:53.401 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-03-27 00:25:53.403 -04:00 [DBG] Request did not match any endpoints
2025-03-27 00:25:53.560 -04:00 [DBG] Connection id "0HNBCSTR1N139" completed keep alive response.
2025-03-27 00:25:53.564 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 235.8289ms
2025-03-27 00:25:53.706 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-03-27 00:25:53.711 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-03-27 00:25:53.713 -04:00 [DBG] Request did not match any endpoints
2025-03-27 00:25:53.718 -04:00 [DBG] Connection id "0HNBCSTR1N139" completed keep alive response.
2025-03-27 00:25:53.722 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 15.5112ms
2025-03-27 00:25:54.226 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-27 00:25:54.243 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-27 00:25:54.251 -04:00 [DBG] Request did not match any endpoints
2025-03-27 00:25:54.656 -04:00 [DBG] Connection id "0HNBCSTR1N139" completed keep alive response.
2025-03-27 00:25:54.658 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 432.8419ms
2025-03-27 00:25:58.330 -04:00 [DBG] Connection id "0HNBCSTR1N13A" received FIN.
2025-03-27 00:25:58.331 -04:00 [DBG] Connection id "0HNBCSTR1N139" received FIN.
2025-03-27 00:25:58.342 -04:00 [DBG] Connection id "0HNBCSTR1N139" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-27 00:25:58.343 -04:00 [DBG] Connection id "0HNBCSTR1N13A" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-27 00:25:58.774 -04:00 [DBG] Connection id "0HNBCSTR1N139" disconnecting.
2025-03-27 00:25:58.785 -04:00 [DBG] Connection id "0HNBCSTR1N13A" disconnecting.
2025-03-27 00:25:58.787 -04:00 [DBG] Connection id "0HNBCSTR1N139" stopped.
2025-03-27 00:25:58.787 -04:00 [DBG] Connection id "0HNBCSTR1N13A" stopped.
2025-03-27 00:27:29.654 -04:00 [DBG] Connection id "0HNBCSTR1N13B" accepted.
2025-03-27 00:27:29.657 -04:00 [DBG] Connection id "0HNBCSTR1N13B" started.
2025-03-27 00:27:29.660 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 62
2025-03-27 00:27:29.674 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-27 00:27:29.688 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-27 00:27:29.691 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 00:27:29.696 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-27 00:27:29.699 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-03-27 00:27:29.703 -04:00 [INF] CORS policy execution failed.
2025-03-27 00:27:29.705 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-03-27 00:27:29.709 -04:00 [WRN] Failed to determine the https port for redirect.
2025-03-27 00:27:29.780 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-27 00:27:29.785 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 00:27:29.820 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-27 00:27:29.826 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-27 00:27:29.829 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-27 00:27:29.834 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-27 00:27:29.837 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-27 00:27:29.839 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-27 00:27:29.844 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-27 00:27:30.754 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-27 00:27:30.813 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-27 00:27:30.823 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-27 00:27:30.827 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-27 00:27:30.831 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-27 00:27:30.856 -04:00 [DBG] Connection id "0HNBCSTR1N13B", Request id "0HNBCSTR1N13B:00000001": started reading request body.
2025-03-27 00:27:30.858 -04:00 [DBG] Connection id "0HNBCSTR1N13B", Request id "0HNBCSTR1N13B:00000001": done reading request body.
2025-03-27 00:27:30.877 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-27 00:27:30.879 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 00:27:30.881 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 00:27:30.884 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-27 00:27:30.893 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 00:27:31.274 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-27 00:27:31.329 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-27 00:27:31.470 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-27 00:27:31.508 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-27 00:27:31.569 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-27 00:27:31.574 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-27 00:27:31.587 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-27 00:27:31.665 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-27 00:27:31.670 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-27 00:27:31.673 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-27 00:27:31.676 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-27 00:27:31.678 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-27 00:27:31.837 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-27 00:27:31.840 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-27 00:27:31.842 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-27 00:27:31.985 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-27 00:27:32.061 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-27 00:27:32.135 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-27 00:27:32.923 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-27 00:27:33.045 -04:00 [DBG] Creating DbConnection.
2025-03-27 00:27:33.098 -04:00 [DBG] Created DbConnection. (52ms).
2025-03-27 00:27:33.105 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:27:33.965 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:27:33.971 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:27:33.981 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-03-27 00:27:33.990 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (19ms).
2025-03-27 00:27:34.001 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 00:27:34.108 -04:00 [INF] Executed DbCommand (110ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 00:27:34.185 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:27:34.247 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:27:34.270 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:27:34.280 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 162ms reading results.
2025-03-27 00:27:34.288 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:27:34.295 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-27 00:27:34.424 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-03-27 00:27:34.442 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-27 00:27:34.453 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:27:34.456 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:27:34.458 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:27:34.460 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:27:34.462 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-27 00:27:34.464 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-27 00:27:34.476 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-27 00:27:34.481 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:27:34.484 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-27 00:27:34.486 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:27:34.488 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-27 00:27:34.503 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-03-27 00:27:34.520 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-27 00:27:34.524 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:27:34.527 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:27:34.529 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:27:34.530 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:27:34.533 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-27 00:27:34.535 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:27:34.547 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:27:34.557 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:27:34.559 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-27 00:27:34.562 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:27:34.564 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 00:27:34.579 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:27:34.581 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:27:34.585 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:27:34.586 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:27:34.588 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-27 00:27:34.590 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:27:34.595 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:27:34.600 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:27:34.602 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-27 00:27:34.604 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:27:34.606 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-27 00:27:34.682 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-27 00:27:34.687 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-27 00:27:34.688 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-27 00:27:34.690 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-27 00:27:34.692 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-27 00:27:34.695 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType7`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-27 00:27:34.744 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 4897.8361ms
2025-03-27 00:27:34.746 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 00:27:34.750 -04:00 [DBG] Connection id "0HNBCSTR1N13B" completed keep alive response.
2025-03-27 00:27:34.755 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-27 00:27:34.763 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:27:34.771 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-27 00:27:34.774 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 5113.53ms
2025-03-27 00:27:43.371 -04:00 [DBG] Connection id "0HNBCSTR1N13B" received FIN.
2025-03-27 00:27:43.373 -04:00 [DBG] Connection id "0HNBCSTR1N13B" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-27 00:27:43.375 -04:00 [DBG] Connection id "0HNBCSTR1N13B" disconnecting.
2025-03-27 00:27:43.386 -04:00 [DBG] Connection id "0HNBCSTR1N13B" stopped.
2025-03-27 00:44:15.545 -04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-27 00:44:15.831 -04:00 [DBG] Hosting starting
2025-03-27 00:44:15.881 -04:00 [INF] User profile is available. Using 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-03-27 00:44:15.900 -04:00 [DBG] Reading data from file 'C:\Users\plais\AppData\Local\ASP.NET\DataProtection-Keys\key-e823be8a-c8ba-474a-8dae-32f6009b36bd.xml'.
2025-03-27 00:44:15.938 -04:00 [DBG] Found key {e823be8a-c8ba-474a-8dae-32f6009b36bd}.
2025-03-27 00:44:15.960 -04:00 [DBG] Considering key {e823be8a-c8ba-474a-8dae-32f6009b36bd} with expiration date 2025-04-04 23:12:29Z as default key.
2025-03-27 00:44:15.975 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-27 00:44:15.983 -04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-03-27 00:44:15.987 -04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-27 00:44:16.017 -04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-03-27 00:44:16.028 -04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-03-27 00:44:16.071 -04:00 [DBG] Using key {e823be8a-c8ba-474a-8dae-32f6009b36bd} as the default key.
2025-03-27 00:44:16.074 -04:00 [DBG] Key ring with default key {e823be8a-c8ba-474a-8dae-32f6009b36bd} was loaded during application startup.
2025-03-27 00:44:16.292 -04:00 [INF] Now listening on: http://localhost:5004
2025-03-27 00:44:16.295 -04:00 [DBG] Loaded hosting startup assembly HotelBookingPlatform.API
2025-03-27 00:44:16.297 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-27 00:44:16.299 -04:00 [INF] Hosting environment: Development
2025-03-27 00:44:16.302 -04:00 [INF] Content root path: C:\Users\plais\Downloads\hotel-booking-module\HotelBookingPlatform.API
2025-03-27 00:44:16.307 -04:00 [DBG] Hosting started
2025-03-27 00:45:55.782 -04:00 [DBG] Connection id "0HNBCT91F307E" accepted.
2025-03-27 00:45:55.793 -04:00 [DBG] Connection id "0HNBCT91F307E" started.
2025-03-27 00:45:55.795 -04:00 [DBG] Connection id "0HNBCT91F307F" accepted.
2025-03-27 00:45:55.801 -04:00 [DBG] Connection id "0HNBCT91F307F" started.
2025-03-27 00:45:55.895 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.html - null null
2025-03-27 00:45:55.905 -04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-27 00:45:55.976 -04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-03-27 00:45:55.978 -04:00 [DBG] Request did not match any endpoints
2025-03-27 00:45:56.165 -04:00 [DBG] Connection id "0HNBCT91F307E" completed keep alive response.
2025-03-27 00:45:56.171 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.html - 200 null text/html;charset=utf-8 278.4989ms
2025-03-27 00:45:56.252 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/index.js - null null
2025-03-27 00:45:56.290 -04:00 [DBG] No candidates found for the request path '/swagger/index.js'
2025-03-27 00:45:56.293 -04:00 [DBG] Request did not match any endpoints
2025-03-27 00:45:56.304 -04:00 [DBG] Connection id "0HNBCT91F307E" completed keep alive response.
2025-03-27 00:45:56.309 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/index.js - 200 null application/javascript;charset=utf-8 56.9553ms
2025-03-27 00:45:56.738 -04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - null null
2025-03-27 00:45:56.791 -04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-03-27 00:45:56.793 -04:00 [DBG] Request did not match any endpoints
2025-03-27 00:45:57.460 -04:00 [DBG] Connection id "0HNBCT91F307E" completed keep alive response.
2025-03-27 00:45:57.463 -04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5004/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 725.6886ms
2025-03-27 00:46:05.453 -04:00 [DBG] Connection id "0HNBCT91F307F" received FIN.
2025-03-27 00:46:05.453 -04:00 [DBG] Connection id "0HNBCT91F307E" received FIN.
2025-03-27 00:46:05.466 -04:00 [DBG] Connection id "0HNBCT91F307F" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-27 00:46:05.464 -04:00 [DBG] Connection id "0HNBCT91F307E" disconnecting.
2025-03-27 00:46:05.472 -04:00 [DBG] Connection id "0HNBCT91F307F" disconnecting.
2025-03-27 00:46:05.480 -04:00 [DBG] Connection id "0HNBCT91F307E" stopped.
2025-03-27 00:46:05.485 -04:00 [DBG] Connection id "0HNBCT91F307F" stopped.
2025-03-27 00:46:05.504 -04:00 [DBG] Connection id "0HNBCT91F307E" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-27 00:46:31.313 -04:00 [DBG] Connection id "0HNBCT91F307G" accepted.
2025-03-27 00:46:31.315 -04:00 [DBG] Connection id "0HNBCT91F307G" started.
2025-03-27 00:46:31.319 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 62
2025-03-27 00:46:31.342 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-27 00:46:31.348 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-27 00:46:31.354 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 00:46:31.377 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-27 00:46:31.381 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-03-27 00:46:31.383 -04:00 [INF] CORS policy execution failed.
2025-03-27 00:46:31.389 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-03-27 00:46:31.396 -04:00 [WRN] Failed to determine the https port for redirect.
2025-03-27 00:46:31.492 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-27 00:46:31.496 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 00:46:31.581 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-27 00:46:31.612 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-27 00:46:31.617 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-27 00:46:31.629 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-27 00:46:31.632 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-27 00:46:31.639 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-27 00:46:31.644 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-27 00:46:31.878 -04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-27 00:46:31.944 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-27 00:46:31.970 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-27 00:46:31.976 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-27 00:46:31.981 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-27 00:46:32.027 -04:00 [DBG] Connection id "0HNBCT91F307G", Request id "0HNBCT91F307G:00000001": started reading request body.
2025-03-27 00:46:32.029 -04:00 [DBG] Connection id "0HNBCT91F307G", Request id "0HNBCT91F307G:00000001": done reading request body.
2025-03-27 00:46:32.060 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-27 00:46:32.061 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 00:46:32.063 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 00:46:32.065 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-27 00:46:32.088 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 00:46:32.470 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-27 00:46:32.529 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-27 00:46:32.691 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-27 00:46:32.740 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-27 00:46:32.809 -04:00 [DBG] No relationship from 'Booking' to 'LocalUser' has been configured by convention because there are multiple properties on one entity type - {'CreatedBy', 'User'} that could be matched with the properties on the other entity type - {'Bookings'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-27 00:46:32.813 -04:00 [DBG] No relationship from 'LocalUser' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {'Bookings'} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-27 00:46:32.834 -04:00 [DBG] No relationship from 'Booking' to 'Booking' has been configured by convention because there are multiple properties on one entity type - {<null>} that could be matched with the properties on the other entity type - {'CreatedBy', 'User'}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
2025-03-27 00:46:32.935 -04:00 [DBG] The index {'BookingID'} was not created on entity type 'BookingRoom (Dictionary<string, object>)' as the properties are already covered by the index {'BookingID', 'RoomID'}.
2025-03-27 00:46:32.938 -04:00 [DBG] The index {'LocalUserId'} was not created on entity type 'RefreshToken' as the properties are already covered by the index {'LocalUserId', 'Id'}.
2025-03-27 00:46:32.940 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<string>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-27 00:46:32.943 -04:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<string>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-27 00:46:32.946 -04:00 [DBG] The index {'AmenityID'} was not created on entity type 'RoomClassAmenity (Dictionary<string, object>)' as the properties are already covered by the index {'AmenityID', 'RoomClassID'}.
2025-03-27 00:46:33.136 -04:00 [DBG] The property 'Discount.RoomClassID' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-27 00:46:33.139 -04:00 [DBG] The property 'RefreshToken.LocalUserId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-27 00:46:33.141 -04:00 [DBG] The property 'RefreshToken.Id' was created in shadow state because there are no eligible CLR members with a matching name.
2025-03-27 00:46:33.289 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-27 00:46:33.372 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-27 00:46:33.432 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-27 00:46:33.910 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedEmail == @__normalizedEmail_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-27 00:46:34.489 -04:00 [DBG] Creating DbConnection.
2025-03-27 00:46:34.579 -04:00 [DBG] Created DbConnection. (92ms).
2025-03-27 00:46:34.590 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:46:35.223 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:46:35.232 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:46:35.277 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (27ms).
2025-03-27 00:46:35.294 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (62ms).
2025-03-27 00:46:35.335 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 00:46:35.504 -04:00 [INF] Executed DbCommand (191ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 00:46:35.650 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:46:35.753 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:46:35.779 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:46:35.795 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 281ms reading results.
2025-03-27 00:46:35.805 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:46:35.812 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-27 00:46:35.927 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<string>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-03-27 00:46:35.943 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<string>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<string>.ClaimType (string), 1], [Property: IdentityUserClaim<string>.ClaimValue (string), 2], [Property: IdentityUserClaim<string>.UserId (string) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<string> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<string> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<string>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<string>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<string>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<string> instance;
                                instance = new IdentityUserClaim<string>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<string>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-27 00:46:35.960 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:46:35.962 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:46:35.965 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:46:35.970 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-03-27 00:46:35.973 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-27 00:46:35.975 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-27 00:46:35.988 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-27 00:46:35.993 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:46:35.996 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-27 00:46:36.004 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:46:36.007 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-27 00:46:36.040 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .Join(
        inner: DbSet<IdentityRole>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-03-27 00:46:36.078 -04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-27 00:46:36.082 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:46:36.088 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:46:36.090 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:46:36.091 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:46:36.093 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-27 00:46:36.096 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:46:36.108 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:46:36.112 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:46:36.114 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-27 00:46:36.120 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:46:36.122 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 00:46:36.141 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:46:36.144 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:46:36.146 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:46:36.148 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:46:36.155 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-03-27 00:46:36.157 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:46:36.163 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:46:36.170 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:46:36.174 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-27 00:46:36.178 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:46:36.180 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 00:46:36.264 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-27 00:46:36.278 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-27 00:46:36.288 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-27 00:46:36.297 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-27 00:46:36.345 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-27 00:46:36.370 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType7`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-27 00:46:36.498 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 4853.0943ms
2025-03-27 00:46:36.502 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 00:46:36.506 -04:00 [DBG] Connection id "0HNBCT91F307G" completed keep alive response.
2025-03-27 00:46:36.512 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-27 00:46:36.522 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:46:36.537 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (12ms).
2025-03-27 00:46:36.540 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 5221.8047ms
2025-03-27 00:46:45.514 -04:00 [DBG] Connection id "0HNBCT91F307G" received FIN.
2025-03-27 00:46:45.522 -04:00 [DBG] Connection id "0HNBCT91F307G" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-27 00:46:45.535 -04:00 [DBG] Connection id "0HNBCT91F307G" disconnecting.
2025-03-27 00:46:45.558 -04:00 [DBG] Connection id "0HNBCT91F307G" stopped.
2025-03-27 00:47:43.931 -04:00 [DBG] Connection id "0HNBCT91F307H" accepted.
2025-03-27 00:47:43.942 -04:00 [DBG] Connection id "0HNBCT91F307H" started.
2025-03-27 00:47:43.979 -04:00 [DBG] Connection id "0HNBCT91F307H" bad request data: "Detected a TLS handshake to an endpoint that does not have TLS enabled."
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Detected a TLS handshake to an endpoint that does not have TLS enabled.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.GetUnknownMethodLength(ReadOnlySpan`1 span)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, ReadOnlySpan`1 requestLine)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TakeStartLine(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.ParseRequest(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TryParseRequest(ReadResult result, Boolean& endConnection)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync[TContext](IHttpApplication`1 application)
2025-03-27 00:47:44.045 -04:00 [DBG] Connection id "0HNBCT91F307H" disconnecting.
2025-03-27 00:47:44.047 -04:00 [DBG] Connection id "0HNBCT91F307H" stopped.
2025-03-27 00:47:44.048 -04:00 [DBG] Connection id "0HNBCT91F307H" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-27 00:47:44.051 -04:00 [DBG] Connection id "0HNBCT91F307I" accepted.
2025-03-27 00:47:44.060 -04:00 [DBG] Connection id "0HNBCT91F307I" started.
2025-03-27 00:47:44.064 -04:00 [DBG] Connection id "0HNBCT91F307I" bad request data: "Detected a TLS handshake to an endpoint that does not have TLS enabled."
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Detected a TLS handshake to an endpoint that does not have TLS enabled.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.GetUnknownMethodLength(ReadOnlySpan`1 span)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, ReadOnlySpan`1 requestLine)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TakeStartLine(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.ParseRequest(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TryParseRequest(ReadResult result, Boolean& endConnection)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync[TContext](IHttpApplication`1 application)
2025-03-27 00:47:44.085 -04:00 [DBG] Connection id "0HNBCT91F307I" disconnecting.
2025-03-27 00:47:44.093 -04:00 [DBG] Connection id "0HNBCT91F307I" received FIN.
2025-03-27 00:47:44.100 -04:00 [DBG] Connection id "0HNBCT91F307I" stopped.
2025-03-27 00:47:44.109 -04:00 [DBG] Connection id "0HNBCT91F307I" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-27 00:49:17.212 -04:00 [DBG] Connection id "0HNBCT91F307J" accepted.
2025-03-27 00:49:17.214 -04:00 [DBG] Connection id "0HNBCT91F307J" started.
2025-03-27 00:49:17.217 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/register - application/json 143
2025-03-27 00:49:17.226 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/register'
2025-03-27 00:49:17.253 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/register' is valid for the request path '/api/auth/register'
2025-03-27 00:49:17.266 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-27 00:49:17.267 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-27 00:49:17.269 -04:00 [DBG] The request has an origin header: 'http://localhost:5004'.
2025-03-27 00:49:17.271 -04:00 [INF] CORS policy execution failed.
2025-03-27 00:49:17.272 -04:00 [INF] Request origin http://localhost:5004 does not have permission to access the resource.
2025-03-27 00:49:17.379 -04:00 [DBG] Successfully validated the token.
2025-03-27 00:49:17.381 -04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-03-27 00:49:17.383 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-27 00:49:17.393 -04:00 [INF] Route matched with {action = "Register", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RegisterAsync(HotelBookingPlatform.Domain.Helpers.RegisterModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-27 00:49:17.396 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-27 00:49:17.400 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-27 00:49:17.403 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-27 00:49:17.405 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-27 00:49:17.411 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-27 00:49:17.413 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-27 00:49:17.421 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-27 00:49:17.429 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-27 00:49:17.431 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' using the name '' in request data ...
2025-03-27 00:49:17.434 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-27 00:49:17.439 -04:00 [DBG] Connection id "0HNBCT91F307J", Request id "0HNBCT91F307J:00000001": started reading request body.
2025-03-27 00:49:17.447 -04:00 [DBG] Connection id "0HNBCT91F307J", Request id "0HNBCT91F307J:00000001": done reading request body.
2025-03-27 00:49:17.451 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'
2025-03-27 00:49:17.453 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-27 00:49:17.455 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-27 00:49:17.456 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel' ...
2025-03-27 00:49:17.464 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.RegisterModel'.
2025-03-27 00:49:17.552 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-27 00:49:17.556 -04:00 [DBG] Creating DbConnection.
2025-03-27 00:49:17.559 -04:00 [DBG] Created DbConnection. (3ms).
2025-03-27 00:49:17.561 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:17.563 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:17.565 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:49:17.566 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:49:17.569 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-27 00:49:17.570 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 00:49:17.583 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 00:49:17.589 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:17.592 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-27 00:49:17.595 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:17.597 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 00:49:17.723 -04:00 [DBG] Compiling query expression: 
'DbSet<LocalUser>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-03-27 00:49:17.726 -04:00 [DBG] Including navigation: 'LocalUser.RefreshTokens'.
2025-03-27 00:49:17.760 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<LocalUser>(
    asyncEnumerable: SingleQueryingEnumerable.Create<LocalUser>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: LocalUser.Id (string) Required PK AfterSave:Throw, 0], [Property: LocalUser.AccessFailedCount (int) Required, 1], [Property: LocalUser.ConcurrencyStamp (string) Concurrency, 2], [Property: LocalUser.Email (string) MaxLength(256), 3], [Property: LocalUser.EmailConfirmed (bool) Required, 4], [Property: LocalUser.FirstName (string) Required, 5], [Property: LocalUser.LastName (string) Required, 6], [Property: LocalUser.LockoutEnabled (bool) Required, 7], [Property: LocalUser.LockoutEnd (DateTimeOffset?), 8], [Property: LocalUser.NormalizedEmail (string) Index MaxLength(256), 9], [Property: LocalUser.NormalizedUserName (string) Index MaxLength(256), 10], [Property: LocalUser.PasswordHash (string), 11], [Property: LocalUser.PhoneNumber (string), 12], [Property: LocalUser.PhoneNumberConfirmed (bool) Required, 13], [Property: LocalUser.SecurityStamp (string), 14], [Property: LocalUser.TwoFactorEnabled (bool) Required, 15], [Property: LocalUser.UserName (string) MaxLength(256), 16] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: RefreshToken.LocalUserId (no field, string) Shadow Required PK FK AfterSave:Throw, 17], [Property: RefreshToken.Id (no field, int) Shadow Required PK AfterSave:Throw ValueGenerated.OnAdd, 18], [Property: RefreshToken.CreatedOn (DateTime) Required, 19], [Property: RefreshToken.ExpiresOn (DateTime) Required, 20], [Property: RefreshToken.RevokedOn (DateTime?), 21], [Property: RefreshToken.Token (string) Required, 22] }
                3 -> 17
                4 -> 18
            SELECT a0.Id, a0.AccessFailedCount, a0.ConcurrencyStamp, a0.Email, a0.EmailConfirmed, a0.FirstName, a0.LastName, a0.LockoutEnabled, a0.LockoutEnd, a0.NormalizedEmail, a0.NormalizedUserName, a0.PasswordHash, a0.PhoneNumber, a0.PhoneNumberConfirmed, a0.SecurityStamp, a0.TwoFactorEnabled, a0.UserName, r.LocalUserId, r.Id, r.CreatedOn, r.ExpiresOn, r.RevokedOn, r.Token
            FROM 
            (
                SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.Email, a.EmailConfirmed, a.FirstName, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
                FROM AspNetUsers AS a
                WHERE a.NormalizedUserName == @__normalizedUserName_0
            ) AS a0
            LEFT JOIN RefreshToken AS r ON a0.Id == r.LocalUserId
            ORDER BY a0.Id ASC, r.LocalUserId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                LocalUser entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    LocalUser instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(LocalUser);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: LocalUser.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (LocalUser)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]: 
                                {
                                    return 
                                    {
                                        LocalUser instance;
                                        instance = new LocalUser();
                                        instance.<Id>k__BackingField = dataReader.GetString(0);
                                        instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                        instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                        instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(4);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(5);
                                        instance.<LastName>k__BackingField = dataReader.GetString(6);
                                        instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(7);
                                        instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(8) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(8);
                                        instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                        instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                        instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                        instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                        instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(13);
                                        instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                        instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(15);
                                        instance.<UserName>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: LocalUser | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(LocalUser)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<LocalUser, LocalUser>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (LocalUser)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: LocalUser.RefreshTokens (List<RefreshToken>) Collection ToDependent RefreshToken | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<LocalUser, RefreshToken>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ dataReader.GetString(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                    (object)dataReader.IsDBNull(18) ? default(int?) : (int?)dataReader.GetInt32(18) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (string)left == (string)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (string)left == (string)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    RefreshToken entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        RefreshToken instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(RefreshToken);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: RefreshToken.LocalUserId, RefreshToken.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken").FindPrimaryKey()], 
                            keyValues: new object[]
                            { 
                                dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetString(17), 
                                dataReader.IsDBNull(18) ? default(object) : (object)dataReader.GetInt32(18) 
                            }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (RefreshToken)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<string, int>(
                                            dataReader.IsDBNull(17) ? default(string) : dataReader.GetString(17), 
                                            dataReader.IsDBNull(18) ? default(int) : dataReader.GetInt32(18)
                                        );
                                        return 
                                        {
                                            RefreshToken instance;
                                            instance = new RefreshToken();
                                            instance.<CreatedOn>k__BackingField = dataReader.IsDBNull(19) ? default(DateTime) : dataReader.GetDateTime(19);
                                            instance.<ExpiresOn>k__BackingField = dataReader.IsDBNull(20) ? default(DateTime) : dataReader.GetDateTime(20);
                                            instance.<RevokedOn>k__BackingField = dataReader.IsDBNull(21) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(21);
                                            instance.<Token>k__BackingField = dataReader.IsDBNull(22) ? default(string) : dataReader.GetString(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: RefreshToken Owned | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Helpers.RefreshToken")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(RefreshToken)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<LocalUser, List<RefreshToken>, RefreshToken> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("HotelBookingPlatform.Domain.Entities.LocalUser").FindNavigation("RefreshTokens").GetCollectionAccessor()].Add(
                        entity: namelessParameter{8}, 
                        value: namelessParameter{9}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (LocalUser)(resultContext.Values[0]) : default(LocalUser);
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-27 00:49:17.910 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.032 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.086 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:49:18.088 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:49:18.099 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (13ms).
2025-03-27 00:49:18.102 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 00:49:18.121 -04:00 [INF] Executed DbCommand (19ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 00:49:18.130 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.132 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-03-27 00:49:18.134 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.136 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 00:49:18.184 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:49:18.189 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-27 00:49:18.198 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-27 00:49:18.230 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-27 00:49:18.334 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.336 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.340 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:49:18.342 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:49:18.345 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-27 00:49:18.347 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-03-27 00:49:18.385 -04:00 [INF] Executed DbCommand (39ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?', @p6='?', @p7='?' (DbType = Boolean), @p8='?' (DbType = DateTime), @p9='?', @p10='?', @p11='?', @p12='?', @p13='?' (DbType = Boolean), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2025-03-27 00:49:18.396 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.398 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-03-27 00:49:18.401 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.403 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 00:49:18.420 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:49:18.431 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 1 entities written to the database.
2025-03-27 00:49:18.438 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-03-27 00:49:18.455 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-27 00:49:18.469 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.473 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.488 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:49:18.511 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (23ms).
2025-03-27 00:49:18.513 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (24ms).
2025-03-27 00:49:18.537 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-27 00:49:18.593 -04:00 [INF] Executed DbCommand (55ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2025-03-27 00:49:18.622 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:49:18.661 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.663 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 48ms reading results.
2025-03-27 00:49:18.667 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.670 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-27 00:49:18.684 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-03-27 00:49:18.695 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole.Id (string) Required PK AfterSave:Throw, 0], [Property: IdentityRole.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole.Name (string) MaxLength(256), 2], [Property: IdentityRole.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetString(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]: 
                            {
                                return 
                                {
                                    IdentityRole instance;
                                    instance = new IdentityRole();
                                    instance.<Id>k__BackingField = dataReader.GetString(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-27 00:49:18.704 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.708 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.711 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:49:18.712 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:49:18.714 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-27 00:49:18.716 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-27 00:49:18.722 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-27 00:49:18.727 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.731 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-03-27 00:49:18.735 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.737 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 00:49:18.766 -04:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<string>>()
    .FirstOrDefault(e => EF.Property<string>(e, "UserId") == __p_0 && EF.Property<string>(e, "RoleId") == __p_1)'
2025-03-27 00:49:18.782 -04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<string>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<string>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<string>.UserId (string) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<string>.RoleId (string) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<string> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<string> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<string>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<string>.UserId, IdentityUserRole<string>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetString(0), 
                        (object)dataReader.GetString(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<string>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]: 
                            {
                                return 
                                {
                                    IdentityUserRole<string> instance;
                                    instance = new IdentityUserRole<string>();
                                    instance.<UserId>k__BackingField = dataReader.GetString(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetString(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<string> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityUserRole<string>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: HotelBookingPlatform.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-27 00:49:18.800 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.803 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.804 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:49:18.806 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:49:18.812 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-27 00:49:18.814 -04:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-03-27 00:49:18.819 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?', @__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."UserId", a."RoleId"
FROM "AspNetUserRoles" AS a
WHERE a."UserId" = @__p_0 AND a."RoleId" = @__p_1
LIMIT 1
2025-03-27 00:49:18.823 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.826 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-27 00:49:18.829 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.833 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-27 00:49:18.845 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.847 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.849 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:49:18.850 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:49:18.852 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-27 00:49:18.854 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-27 00:49:18.865 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__normalizedRoleName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedRoleName_0
LIMIT 2
2025-03-27 00:49:18.869 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.871 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-27 00:49:18.874 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.878 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-27 00:49:18.895 -04:00 [DBG] Context 'AppDbContext' started tracking 'IdentityUserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:49:18.903 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:18.906 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.017 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:49:19.019 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:49:19.021 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-27 00:49:19.049 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 00:49:19.065 -04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 00:49:19.073 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.079 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-03-27 00:49:19.082 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.084 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 00:49:19.098 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:49:19.101 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-27 00:49:19.103 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-27 00:49:19.112 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-27 00:49:19.135 -04:00 [DBG] Executing 2 update commands as a batch.
2025-03-27 00:49:19.138 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.142 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.147 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-27 00:49:19.152 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-27 00:49:19.155 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:49:19.159 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-03-27 00:49:19.162 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-27 00:49:19.164 -04:00 [DBG] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-03-27 00:49:19.195 -04:00 [INF] Executed DbCommand (31ms) [Parameters=[@p0='?', @p1='?', @p18='?', @p2='?' (DbType = Int32), @p3='?', @p19='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?', @p7='?', @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime), @p10='?', @p11='?', @p12='?', @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (@p0, @p1);
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p2, "ConcurrencyStamp" = @p3, "Email" = @p4, "EmailConfirmed" = @p5, "FirstName" = @p6, "LastName" = @p7, "LockoutEnabled" = @p8, "LockoutEnd" = @p9, "NormalizedEmail" = @p10, "NormalizedUserName" = @p11, "PasswordHash" = @p12, "PhoneNumber" = @p13, "PhoneNumberConfirmed" = @p14, "SecurityStamp" = @p15, "TwoFactorEnabled" = @p16, "UserName" = @p17
WHERE "Id" = @p18 AND "ConcurrencyStamp" = @p19;
2025-03-27 00:49:19.199 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.201 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-27 00:49:19.211 -04:00 [DBG] Committing transaction.
2025-03-27 00:49:19.222 -04:00 [DBG] Committed transaction.
2025-03-27 00:49:19.230 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.233 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-27 00:49:19.239 -04:00 [DBG] Disposing transaction.
2025-03-27 00:49:19.242 -04:00 [DBG] An entity of type 'IdentityUserRole' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:49:19.246 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:49:19.249 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-03-27 00:49:19.253 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.255 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.260 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:49:19.262 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:49:19.264 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-27 00:49:19.267 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-27 00:49:19.273 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-27 00:49:19.281 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.283 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-27 00:49:19.285 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.288 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 00:49:19.294 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.297 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.298 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:49:19.300 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:49:19.303 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-27 00:49:19.304 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:49:19.314 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:49:19.318 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.319 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-03-27 00:49:19.322 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.329 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (7ms).
2025-03-27 00:49:19.332 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.334 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.336 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:49:19.338 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:49:19.339 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-27 00:49:19.345 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 00:49:19.352 -04:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedUserName" = @__normalizedUserName_0
    LIMIT 1
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 00:49:19.360 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.362 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-03-27 00:49:19.365 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.367 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 00:49:19.370 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:49:19.372 -04:00 [DBG] SaveChanges starting for 'AppDbContext'.
2025-03-27 00:49:19.376 -04:00 [DBG] DetectChanges starting for 'AppDbContext'.
2025-03-27 00:49:19.385 -04:00 [DBG] 1 entities were added and 0 entities were removed from navigation 'LocalUser.RefreshTokens'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:49:19.413 -04:00 [DBG] 'AppDbContext' generated a temporary value for the property 'RefreshToken.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:49:19.419 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:49:19.421 -04:00 [DBG] DetectChanges completed for 'AppDbContext'.
2025-03-27 00:49:19.435 -04:00 [DBG] Executing 2 update commands as a batch.
2025-03-27 00:49:19.437 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.439 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.443 -04:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-27 00:49:19.445 -04:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-27 00:49:19.446 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:49:19.448 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:49:19.450 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-27 00:49:19.454 -04:00 [DBG] Executing DbCommand [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-03-27 00:49:19.476 -04:00 [INF] Executed DbCommand (23ms) [Parameters=[@p16='?', @p0='?' (DbType = Int32), @p1='?', @p17='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Boolean), @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = Boolean), @p15='?', @p18='?', @p19='?' (DbType = DateTime), @p20='?' (DbType = DateTime), @p21='?' (DbType = DateTime), @p22='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "FirstName" = @p4, "LastName" = @p5, "LockoutEnabled" = @p6, "LockoutEnd" = @p7, "NormalizedEmail" = @p8, "NormalizedUserName" = @p9, "PasswordHash" = @p10, "PhoneNumber" = @p11, "PhoneNumberConfirmed" = @p12, "SecurityStamp" = @p13, "TwoFactorEnabled" = @p14, "UserName" = @p15
WHERE "Id" = @p16 AND "ConcurrencyStamp" = @p17;
INSERT INTO "RefreshToken" ("LocalUserId", "CreatedOn", "ExpiresOn", "RevokedOn", "Token")
VALUES (@p18, @p19, @p20, @p21, @p22)
RETURNING "Id";
2025-03-27 00:49:19.488 -04:00 [DBG] The foreign key property 'RefreshToken.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-03-27 00:49:19.501 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.503 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 22ms reading results.
2025-03-27 00:49:19.505 -04:00 [DBG] Committing transaction.
2025-03-27 00:49:19.513 -04:00 [DBG] Committed transaction.
2025-03-27 00:49:19.515 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.517 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 00:49:19.520 -04:00 [DBG] Disposing transaction.
2025-03-27 00:49:19.522 -04:00 [DBG] An entity of type 'RefreshToken' tracked by 'AppDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:49:19.528 -04:00 [DBG] An entity of type 'LocalUser' tracked by 'AppDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:49:19.531 -04:00 [DBG] SaveChanges completed for 'AppDbContext' with 2 entities written to the database.
2025-03-27 00:49:19.538 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-27 00:49:19.544 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-27 00:49:19.545 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-27 00:49:19.547 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-27 00:49:19.548 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-27 00:49:19.552 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType7`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-27 00:49:19.555 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API) in 2142.3937ms
2025-03-27 00:49:19.560 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.RegisterAsync (HotelBookingPlatform.API)'
2025-03-27 00:49:19.562 -04:00 [DBG] Connection id "0HNBCT91F307J" completed keep alive response.
2025-03-27 00:49:19.564 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-27 00:49:19.567 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:49:19.570 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 00:49:19.580 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/register - 200 null application/json; charset=utf-8 2363.0342ms
2025-03-27 00:50:13.003 -04:00 [DBG] Connection id "0HNBCT91F307K" accepted.
2025-03-27 00:50:13.016 -04:00 [DBG] Connection id "0HNBCT91F307K" started.
2025-03-27 00:50:13.019 -04:00 [DBG] Connection id "0HNBCT91F307K" bad request data: "Detected a TLS handshake to an endpoint that does not have TLS enabled."
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Detected a TLS handshake to an endpoint that does not have TLS enabled.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.GetUnknownMethodLength(ReadOnlySpan`1 span)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, ReadOnlySpan`1 requestLine)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TakeStartLine(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.ParseRequest(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TryParseRequest(ReadResult result, Boolean& endConnection)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync[TContext](IHttpApplication`1 application)
2025-03-27 00:50:13.037 -04:00 [DBG] Connection id "0HNBCT91F307K" disconnecting.
2025-03-27 00:50:13.037 -04:00 [DBG] Connection id "0HNBCT91F307K" received FIN.
2025-03-27 00:50:13.041 -04:00 [DBG] Connection id "0HNBCT91F307L" accepted.
2025-03-27 00:50:13.042 -04:00 [DBG] Connection id "0HNBCT91F307K" stopped.
2025-03-27 00:50:13.050 -04:00 [DBG] Connection id "0HNBCT91F307L" started.
2025-03-27 00:50:13.051 -04:00 [DBG] Connection id "0HNBCT91F307K" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-27 00:50:13.053 -04:00 [DBG] Connection id "0HNBCT91F307L" bad request data: "Detected a TLS handshake to an endpoint that does not have TLS enabled."
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Detected a TLS handshake to an endpoint that does not have TLS enabled.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.GetUnknownMethodLength(ReadOnlySpan`1 span)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, ReadOnlySpan`1 requestLine)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TakeStartLine(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.ParseRequest(SequenceReader`1& reader)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.TryParseRequest(ReadResult result, Boolean& endConnection)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync[TContext](IHttpApplication`1 application)
2025-03-27 00:50:13.071 -04:00 [DBG] Connection id "0HNBCT91F307L" disconnecting.
2025-03-27 00:50:13.073 -04:00 [DBG] Connection id "0HNBCT91F307L" stopped.
2025-03-27 00:50:13.103 -04:00 [DBG] Connection id "0HNBCT91F307L" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-27 00:51:30.249 -04:00 [DBG] Connection id "0HNBCT91F307J" disconnecting.
2025-03-27 00:51:30.257 -04:00 [DBG] Connection id "0HNBCT91F307J" stopped.
2025-03-27 00:51:30.270 -04:00 [DBG] Connection id "0HNBCT91F307J" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-27 00:56:40.975 -04:00 [DBG] Connection id "0HNBCT91F307M" accepted.
2025-03-27 00:56:40.999 -04:00 [DBG] Connection id "0HNBCT91F307M" started.
2025-03-27 00:56:41.004 -04:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - null null
2025-03-27 00:56:41.009 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-27 00:56:41.016 -04:00 [DBG] Request matched endpoint '405 HTTP Method Not Supported'
2025-03-27 00:56:41.019 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-27 00:56:41.023 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-03-27 00:56:41.026 -04:00 [INF] CORS policy execution successful.
2025-03-27 00:56:41.032 -04:00 [DBG] The request is a preflight request.
2025-03-27 00:56:41.042 -04:00 [DBG] Connection id "0HNBCT91F307M" completed keep alive response.
2025-03-27 00:56:41.052 -04:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - 204 null null 47.9107ms
2025-03-27 00:56:41.057 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 65
2025-03-27 00:56:41.062 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-27 00:56:41.065 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-27 00:56:41.068 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 00:56:41.072 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-27 00:56:41.076 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-03-27 00:56:41.080 -04:00 [INF] CORS policy execution successful.
2025-03-27 00:56:41.087 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-27 00:56:41.090 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 00:56:41.098 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-27 00:56:41.101 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-27 00:56:41.104 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-27 00:56:41.107 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-27 00:56:41.109 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-27 00:56:41.115 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-27 00:56:41.118 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-27 00:56:41.147 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-27 00:56:41.150 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-27 00:56:41.152 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-27 00:56:41.157 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-27 00:56:41.159 -04:00 [DBG] Connection id "0HNBCT91F307M", Request id "0HNBCT91F307M:00000002": started reading request body.
2025-03-27 00:56:41.162 -04:00 [DBG] Connection id "0HNBCT91F307M", Request id "0HNBCT91F307M:00000002": done reading request body.
2025-03-27 00:56:41.165 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-27 00:56:41.167 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 00:56:41.169 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 00:56:41.171 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-27 00:56:41.175 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 00:56:41.239 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-27 00:56:41.248 -04:00 [DBG] Creating DbConnection.
2025-03-27 00:56:41.249 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-27 00:56:41.251 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:56:41.305 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:56:41.308 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:56:41.309 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:56:41.312 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-27 00:56:41.314 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 00:56:41.352 -04:00 [INF] Executed DbCommand (38ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 00:56:41.357 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:56:41.363 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:56:41.368 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:56:41.371 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 14ms reading results.
2025-03-27 00:56:41.374 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:56:41.376 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 00:56:41.529 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:56:41.532 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:56:41.534 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:56:41.536 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:56:41.539 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-27 00:56:41.541 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-27 00:56:41.555 -04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-27 00:56:41.560 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:56:41.562 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-27 00:56:41.566 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:56:41.568 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-27 00:56:41.571 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:56:41.572 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:56:41.582 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:56:41.586 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-27 00:56:41.588 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-27 00:56:41.590 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:56:41.602 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:56:41.608 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:56:41.610 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-27 00:56:41.614 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:56:41.616 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-27 00:56:41.619 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:56:41.621 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:56:41.624 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:56:41.625 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:56:41.628 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-27 00:56:41.630 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:56:41.637 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:56:41.641 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:56:41.645 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-27 00:56:41.648 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:56:41.651 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 00:56:41.654 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-27 00:56:41.663 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-27 00:56:41.665 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-27 00:56:41.666 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-27 00:56:41.667 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-27 00:56:41.669 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType7`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-27 00:56:41.673 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 555.39ms
2025-03-27 00:56:41.704 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 00:56:41.708 -04:00 [DBG] Connection id "0HNBCT91F307M" completed keep alive response.
2025-03-27 00:56:41.713 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-27 00:56:41.715 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:56:41.718 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-27 00:56:41.726 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 669.6865ms
2025-03-27 00:57:22.955 -04:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - null null
2025-03-27 00:57:23.043 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-27 00:57:23.045 -04:00 [DBG] Request matched endpoint '405 HTTP Method Not Supported'
2025-03-27 00:57:23.050 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-27 00:57:23.051 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-03-27 00:57:23.052 -04:00 [INF] CORS policy execution successful.
2025-03-27 00:57:23.053 -04:00 [DBG] The request is a preflight request.
2025-03-27 00:57:23.055 -04:00 [DBG] Connection id "0HNBCT91F307M" completed keep alive response.
2025-03-27 00:57:23.058 -04:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - 204 null null 103.7956ms
2025-03-27 00:57:23.068 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 65
2025-03-27 00:57:23.075 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-27 00:57:23.077 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-27 00:57:23.081 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 00:57:23.082 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-27 00:57:23.084 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-03-27 00:57:23.085 -04:00 [INF] CORS policy execution successful.
2025-03-27 00:57:23.087 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-27 00:57:23.089 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 00:57:23.091 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-27 00:57:23.100 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-27 00:57:23.105 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-27 00:57:23.110 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-27 00:57:23.116 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-27 00:57:23.118 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-27 00:57:23.121 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-27 00:57:23.125 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-27 00:57:23.127 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-27 00:57:23.133 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-27 00:57:23.136 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-27 00:57:23.139 -04:00 [DBG] Connection id "0HNBCT91F307M", Request id "0HNBCT91F307M:00000004": started reading request body.
2025-03-27 00:57:23.141 -04:00 [DBG] Connection id "0HNBCT91F307M", Request id "0HNBCT91F307M:00000004": done reading request body.
2025-03-27 00:57:23.145 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-27 00:57:23.147 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 00:57:23.152 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 00:57:23.154 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-27 00:57:23.157 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 00:57:23.160 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-27 00:57:23.164 -04:00 [DBG] Creating DbConnection.
2025-03-27 00:57:23.165 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-27 00:57:23.166 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:57:23.170 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:57:23.172 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:57:23.173 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:57:23.175 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-03-27 00:57:23.177 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 00:57:23.198 -04:00 [INF] Executed DbCommand (21ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 00:57:23.321 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:57:23.337 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 00:57:23.357 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:57:23.359 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 37ms reading results.
2025-03-27 00:57:23.370 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:57:23.375 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-27 00:57:23.503 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:57:23.505 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:57:23.507 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:57:23.508 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:57:23.511 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-27 00:57:23.513 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-27 00:57:23.519 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-27 00:57:23.524 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:57:23.527 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-27 00:57:23.529 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:57:23.532 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 00:57:23.538 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:57:23.556 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:57:23.559 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:57:23.561 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:57:23.563 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-27 00:57:23.565 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:57:23.570 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:57:23.577 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:57:23.579 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-27 00:57:23.583 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:57:23.585 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 00:57:23.589 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:57:23.595 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:57:23.597 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 00:57:23.599 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 00:57:23.601 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-27 00:57:23.604 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:57:23.613 -04:00 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 00:57:23.617 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:57:23.620 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-27 00:57:23.622 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:57:23.624 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 00:57:23.630 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-27 00:57:23.636 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-27 00:57:23.637 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-27 00:57:23.639 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-27 00:57:23.640 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-27 00:57:23.646 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType7`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-27 00:57:23.650 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 528.1378ms
2025-03-27 00:57:23.654 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 00:57:23.656 -04:00 [DBG] Connection id "0HNBCT91F307M" completed keep alive response.
2025-03-27 00:57:23.840 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-27 00:57:23.841 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 00:57:23.843 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (1ms).
2025-03-27 00:57:23.850 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 781.8114ms
2025-03-27 00:59:16.781 -04:00 [DBG] Connection id "0HNBCT91F307M" received FIN.
2025-03-27 00:59:16.799 -04:00 [DBG] Connection id "0HNBCT91F307M" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-27 00:59:16.803 -04:00 [DBG] Connection id "0HNBCT91F307M" disconnecting.
2025-03-27 00:59:16.806 -04:00 [DBG] Connection id "0HNBCT91F307M" stopped.
2025-03-27 01:29:30.064 -04:00 [DBG] Connection id "0HNBCT91F307N" accepted.
2025-03-27 01:29:30.085 -04:00 [DBG] Connection id "0HNBCT91F307N" started.
2025-03-27 01:29:30.123 -04:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - null null
2025-03-27 01:29:30.138 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-27 01:29:30.141 -04:00 [DBG] Request matched endpoint '405 HTTP Method Not Supported'
2025-03-27 01:29:30.151 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-27 01:29:30.156 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-03-27 01:29:30.159 -04:00 [INF] CORS policy execution successful.
2025-03-27 01:29:30.161 -04:00 [DBG] The request is a preflight request.
2025-03-27 01:29:30.167 -04:00 [DBG] Connection id "0HNBCT91F307N" completed keep alive response.
2025-03-27 01:29:30.170 -04:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - 204 null null 48.0935ms
2025-03-27 01:29:30.179 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 65
2025-03-27 01:29:30.185 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-27 01:29:30.189 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-27 01:29:30.192 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 01:29:30.194 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-27 01:29:30.195 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-03-27 01:29:30.196 -04:00 [INF] CORS policy execution successful.
2025-03-27 01:29:30.207 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-27 01:29:30.210 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 01:29:30.233 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-27 01:29:30.238 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-27 01:29:30.241 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-27 01:29:30.246 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-27 01:29:30.251 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-27 01:29:30.254 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-27 01:29:30.258 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-27 01:29:30.351 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-27 01:29:30.381 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-27 01:29:30.417 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-27 01:29:30.425 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-27 01:29:30.441 -04:00 [DBG] Connection id "0HNBCT91F307N", Request id "0HNBCT91F307N:00000002": started reading request body.
2025-03-27 01:29:30.443 -04:00 [DBG] Connection id "0HNBCT91F307N", Request id "0HNBCT91F307N:00000002": done reading request body.
2025-03-27 01:29:30.453 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-27 01:29:30.456 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 01:29:30.458 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 01:29:30.460 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-27 01:29:30.479 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 01:29:30.551 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-27 01:29:30.618 -04:00 [DBG] Creating DbConnection.
2025-03-27 01:29:30.622 -04:00 [DBG] Created DbConnection. (3ms).
2025-03-27 01:29:30.626 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 01:29:30.844 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 01:29:30.852 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 01:29:30.855 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-03-27 01:29:30.857 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-03-27 01:29:30.861 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 01:29:30.997 -04:00 [INF] Executed DbCommand (137ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 01:29:31.013 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 01:29:31.027 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 01:29:31.031 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 01:29:31.038 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 35ms reading results.
2025-03-27 01:29:31.044 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 01:29:31.047 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-27 01:29:31.209 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 01:29:31.211 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 01:29:31.213 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 01:29:31.214 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 01:29:31.220 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-03-27 01:29:31.222 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-27 01:29:31.238 -04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-27 01:29:31.242 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 01:29:31.251 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-03-27 01:29:31.254 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 01:29:31.257 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-27 01:29:31.268 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 01:29:31.270 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 01:29:31.272 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 01:29:31.274 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 01:29:31.276 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-27 01:29:31.279 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 01:29:31.302 -04:00 [INF] Executed DbCommand (23ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 01:29:31.311 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 01:29:31.314 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-27 01:29:31.321 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 01:29:31.328 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-27 01:29:31.335 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 01:29:31.339 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 01:29:31.346 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 01:29:31.350 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-27 01:29:31.351 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-27 01:29:31.352 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 01:29:31.357 -04:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 01:29:31.369 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 01:29:31.371 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-03-27 01:29:31.375 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 01:29:31.377 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 01:29:31.405 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-27 01:29:31.408 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-27 01:29:31.409 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-27 01:29:31.410 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-27 01:29:31.411 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-27 01:29:31.414 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType7`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-27 01:29:31.420 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 1163.7082ms
2025-03-27 01:29:31.425 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 01:29:31.428 -04:00 [DBG] Connection id "0HNBCT91F307N" completed keep alive response.
2025-03-27 01:29:31.430 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-27 01:29:31.433 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 01:29:31.442 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (8ms).
2025-03-27 01:29:31.475 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 1295.7819ms
2025-03-27 01:29:34.720 -04:00 [DBG] Connection id "0HNBCT91F307N" received FIN.
2025-03-27 01:29:34.723 -04:00 [DBG] Connection id "0HNBCT91F307N" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-27 01:29:34.726 -04:00 [DBG] Connection id "0HNBCT91F307N" disconnecting.
2025-03-27 01:29:34.727 -04:00 [DBG] Connection id "0HNBCT91F307N" stopped.
2025-03-27 08:58:23.862 -04:00 [DBG] Connection id "0HNBCT91F307O" accepted.
2025-03-27 08:58:23.887 -04:00 [DBG] Connection id "0HNBCT91F307O" started.
2025-03-27 08:58:23.948 -04:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - null null
2025-03-27 08:58:23.972 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-27 08:58:23.977 -04:00 [DBG] Request matched endpoint '405 HTTP Method Not Supported'
2025-03-27 08:58:23.986 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-27 08:58:23.995 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-03-27 08:58:24.001 -04:00 [INF] CORS policy execution successful.
2025-03-27 08:58:24.005 -04:00 [DBG] The request is a preflight request.
2025-03-27 08:58:24.028 -04:00 [DBG] Connection id "0HNBCT91F307O" completed keep alive response.
2025-03-27 08:58:24.037 -04:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - 204 null null 89.6523ms
2025-03-27 08:58:24.054 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 46
2025-03-27 08:58:24.061 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-27 08:58:24.068 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-27 08:58:24.073 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 08:58:24.076 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-27 08:58:24.077 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-03-27 08:58:24.079 -04:00 [INF] CORS policy execution successful.
2025-03-27 08:58:24.113 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-27 08:58:24.121 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 08:58:24.143 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-27 08:58:24.148 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-27 08:58:24.151 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-27 08:58:24.159 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-27 08:58:24.163 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-27 08:58:24.166 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-27 08:58:24.169 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-27 08:58:24.236 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-27 08:58:24.247 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-27 08:58:24.254 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-27 08:58:24.263 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-27 08:58:24.271 -04:00 [DBG] Connection id "0HNBCT91F307O", Request id "0HNBCT91F307O:00000002": started reading request body.
2025-03-27 08:58:24.278 -04:00 [DBG] Connection id "0HNBCT91F307O", Request id "0HNBCT91F307O:00000002": done reading request body.
2025-03-27 08:58:24.290 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-27 08:58:24.291 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 08:58:24.293 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 08:58:24.296 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-27 08:58:24.309 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 08:58:24.372 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-27 08:58:24.470 -04:00 [DBG] Creating DbConnection.
2025-03-27 08:58:24.478 -04:00 [DBG] Created DbConnection. (7ms).
2025-03-27 08:58:24.482 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 08:58:24.852 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 08:58:24.857 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 08:58:24.862 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-03-27 08:58:24.865 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-03-27 08:58:24.868 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 08:58:24.965 -04:00 [INF] Executed DbCommand (97ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 08:58:24.970 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 08:58:24.973 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-27 08:58:24.976 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 08:58:24.980 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-27 08:58:25.005 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 835.8313ms
2025-03-27 08:58:25.011 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 08:58:25.189 -04:00 [DBG] Connection id "0HNBCT91F307O" completed keep alive response.
2025-03-27 08:58:25.191 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-27 08:58:25.193 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 08:58:25.195 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 08:58:25.199 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 500 null application/json 1147.9592ms
2025-03-27 09:00:00.144 -04:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - null null
2025-03-27 09:00:00.150 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-27 09:00:00.152 -04:00 [DBG] Request matched endpoint '405 HTTP Method Not Supported'
2025-03-27 09:00:00.159 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-27 09:00:00.162 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-03-27 09:00:00.169 -04:00 [INF] CORS policy execution successful.
2025-03-27 09:00:00.171 -04:00 [DBG] The request is a preflight request.
2025-03-27 09:00:00.173 -04:00 [DBG] Connection id "0HNBCT91F307O" completed keep alive response.
2025-03-27 09:00:00.175 -04:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5004/api/auth/login - 204 null null 30.2519ms
2025-03-27 09:00:00.187 -04:00 [INF] Request starting HTTP/1.1 POST http://localhost:5004/api/auth/login - application/json 53
2025-03-27 09:00:00.192 -04:00 [DBG] 1 candidate(s) found for the request path '/api/auth/login'
2025-03-27 09:00:00.200 -04:00 [DBG] Endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)' with route pattern 'api/auth/login' is valid for the request path '/api/auth/login'
2025-03-27 09:00:00.203 -04:00 [DBG] Request matched endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 09:00:00.206 -04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-03-27 09:00:00.207 -04:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-03-27 09:00:00.215 -04:00 [INF] CORS policy execution successful.
2025-03-27 09:00:00.220 -04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-03-27 09:00:00.227 -04:00 [INF] Executing endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 09:00:00.253 -04:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginAsync(HotelBookingPlatform.Domain.Helpers.LoginModel) on controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API).
2025-03-27 09:00:00.274 -04:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-27 09:00:00.291 -04:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-27 09:00:00.297 -04:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-27 09:00:00.319 -04:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-27 09:00:00.321 -04:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-27 09:00:00.329 -04:00 [DBG] Executing controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-27 09:00:00.336 -04:00 [DBG] Executed controller factory for controller HotelBookingPlatform.API.Controllers.UserController (HotelBookingPlatform.API)
2025-03-27 09:00:00.340 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-27 09:00:00.342 -04:00 [DBG] Attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' using the name '' in request data ...
2025-03-27 09:00:00.363 -04:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-27 09:00:00.388 -04:00 [DBG] Connection id "0HNBCT91F307O", Request id "0HNBCT91F307O:00000004": started reading request body.
2025-03-27 09:00:00.435 -04:00 [DBG] Connection id "0HNBCT91F307O", Request id "0HNBCT91F307O:00000004": done reading request body.
2025-03-27 09:00:00.450 -04:00 [DBG] JSON input formatter succeeded, deserializing to type 'HotelBookingPlatform.Domain.Helpers.LoginModel'
2025-03-27 09:00:00.451 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 09:00:00.454 -04:00 [DBG] Done attempting to bind parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 09:00:00.455 -04:00 [DBG] Attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel' ...
2025-03-27 09:00:00.457 -04:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'HotelBookingPlatform.Domain.Helpers.LoginModel'.
2025-03-27 09:00:00.463 -04:00 [DBG] Entity Framework Core 9.0.2 initialized 'AppDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.3+74b858ae63efc603ffa74874e49c82eb58d43b09' with options: None
2025-03-27 09:00:00.468 -04:00 [DBG] Creating DbConnection.
2025-03-27 09:00:00.469 -04:00 [DBG] Created DbConnection. (1ms).
2025-03-27 09:00:00.474 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 09:00:00.477 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 09:00:00.481 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 09:00:00.482 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 09:00:00.486 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-03-27 09:00:00.489 -04:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 09:00:00.502 -04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Id", a0."AccessFailedCount", a0."ConcurrencyStamp", a0."Email", a0."EmailConfirmed", a0."FirstName", a0."LastName", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."SecurityStamp", a0."TwoFactorEnabled", a0."UserName", r."LocalUserId", r."Id", r."CreatedOn", r."ExpiresOn", r."RevokedOn", r."Token"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."NormalizedEmail" = @__normalizedEmail_0
    LIMIT 2
) AS a0
LEFT JOIN "RefreshToken" AS r ON a0."Id" = r."LocalUserId"
ORDER BY a0."Id", r."LocalUserId"
2025-03-27 09:00:00.518 -04:00 [DBG] Context 'AppDbContext' started tracking 'LocalUser' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 09:00:00.525 -04:00 [DBG] Context 'AppDbContext' started tracking 'RefreshToken' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-03-27 09:00:00.530 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 09:00:00.532 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 19ms reading results.
2025-03-27 09:00:00.535 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 09:00:00.538 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 09:00:00.721 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 09:00:00.724 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 09:00:00.726 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 09:00:00.728 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 09:00:00.730 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-03-27 09:00:00.733 -04:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-27 09:00:00.755 -04:00 [INF] Executed DbCommand (22ms) [Parameters=[@__user_Id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2025-03-27 09:00:00.778 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 09:00:00.783 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-03-27 09:00:00.789 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 09:00:00.792 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (4ms).
2025-03-27 09:00:00.799 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 09:00:00.801 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 09:00:00.803 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 09:00:00.805 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 09:00:00.806 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-03-27 09:00:00.810 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 09:00:00.821 -04:00 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 09:00:00.828 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 09:00:00.836 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-03-27 09:00:00.838 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 09:00:00.841 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (2ms).
2025-03-27 09:00:00.851 -04:00 [DBG] Opening connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 09:00:00.870 -04:00 [DBG] Opened connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 09:00:00.873 -04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-27 09:00:00.875 -04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-27 09:00:00.885 -04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (12ms).
2025-03-27 09:00:00.889 -04:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 09:00:00.901 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2025-03-27 09:00:00.910 -04:00 [DBG] Closing data reader to 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 09:00:00.912 -04:00 [DBG] A data reader for 'lepointdb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-03-27 09:00:00.922 -04:00 [DBG] Closing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 09:00:00.928 -04:00 [DBG] Closed connection to database 'lepointdb' on server 'tcp://localhost:5432' (6ms).
2025-03-27 09:00:00.959 -04:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-27 09:00:00.966 -04:00 [DBG] No information found on request to perform content negotiation.
2025-03-27 09:00:00.967 -04:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-27 09:00:00.970 -04:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-27 09:00:00.972 -04:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-27 09:00:00.975 -04:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType7`4[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[HotelBookingPlatform.Domain.Helpers.AuthModel, HotelBookingPlatform.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-03-27 09:00:00.988 -04:00 [INF] Executed action HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API) in 658.7331ms
2025-03-27 09:00:00.991 -04:00 [INF] Executed endpoint 'HotelBookingPlatform.API.Controllers.UserController.LoginAsync (HotelBookingPlatform.API)'
2025-03-27 09:00:00.992 -04:00 [DBG] Connection id "0HNBCT91F307O" completed keep alive response.
2025-03-27 09:00:00.993 -04:00 [DBG] 'AppDbContext' disposed.
2025-03-27 09:00:00.995 -04:00 [DBG] Disposing connection to database 'lepointdb' on server 'tcp://localhost:5432'.
2025-03-27 09:00:00.999 -04:00 [DBG] Disposed connection to database 'lepointdb' on server 'tcp://localhost:5432' (3ms).
2025-03-27 09:00:01.104 -04:00 [INF] Request finished HTTP/1.1 POST http://localhost:5004/api/auth/login - 200 null application/json; charset=utf-8 916.4263ms
2025-03-27 09:01:50.370 -04:00 [DBG] Connection id "0HNBCT91F307O" received FIN.
2025-03-27 09:01:50.374 -04:00 [DBG] Connection id "0HNBCT91F307O" disconnecting.
2025-03-27 09:01:50.376 -04:00 [DBG] Connection id "0HNBCT91F307O" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-27 09:01:50.382 -04:00 [DBG] Connection id "0HNBCT91F307O" stopped.
